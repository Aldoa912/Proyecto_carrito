

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 04:19:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     008F                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0094                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     0105                     	;# 
   155     0107                     	;# 
   156     0108                     	;# 
   157     0109                     	;# 
   158     010C                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0185                     	;# 
   164     0187                     	;# 
   165     0188                     	;# 
   166     0189                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     008F                     	;# 
   214     0090                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     0105                     	;# 
   233     0107                     	;# 
   234     0108                     	;# 
   235     0109                     	;# 
   236     010C                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     0185                     	;# 
   242     0187                     	;# 
   243     0188                     	;# 
   244     0189                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000D                     	;# 
   261     000E                     	;# 
   262     000E                     	;# 
   263     000F                     	;# 
   264     0010                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001D                     	;# 
   280     001E                     	;# 
   281     001F                     	;# 
   282     0081                     	;# 
   283     0085                     	;# 
   284     0086                     	;# 
   285     0087                     	;# 
   286     0088                     	;# 
   287     0089                     	;# 
   288     008C                     	;# 
   289     008D                     	;# 
   290     008E                     	;# 
   291     008F                     	;# 
   292     0090                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     0105                     	;# 
   311     0107                     	;# 
   312     0108                     	;# 
   313     0109                     	;# 
   314     010C                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0185                     	;# 
   320     0187                     	;# 
   321     0188                     	;# 
   322     0189                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325     0000                     	;# 
   326     0001                     	;# 
   327     0002                     	;# 
   328     0003                     	;# 
   329     0004                     	;# 
   330     0005                     	;# 
   331     0006                     	;# 
   332     0007                     	;# 
   333     0008                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000D                     	;# 
   339     000E                     	;# 
   340     000E                     	;# 
   341     000F                     	;# 
   342     0010                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0013                     	;# 
   346     0014                     	;# 
   347     0015                     	;# 
   348     0015                     	;# 
   349     0016                     	;# 
   350     0017                     	;# 
   351     0018                     	;# 
   352     0019                     	;# 
   353     001A                     	;# 
   354     001B                     	;# 
   355     001B                     	;# 
   356     001C                     	;# 
   357     001D                     	;# 
   358     001E                     	;# 
   359     001F                     	;# 
   360     0081                     	;# 
   361     0085                     	;# 
   362     0086                     	;# 
   363     0087                     	;# 
   364     0088                     	;# 
   365     0089                     	;# 
   366     008C                     	;# 
   367     008D                     	;# 
   368     008E                     	;# 
   369     008F                     	;# 
   370     0090                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0093                     	;# 
   376     0094                     	;# 
   377     0095                     	;# 
   378     0096                     	;# 
   379     0097                     	;# 
   380     0098                     	;# 
   381     0099                     	;# 
   382     009A                     	;# 
   383     009B                     	;# 
   384     009C                     	;# 
   385     009D                     	;# 
   386     009E                     	;# 
   387     009F                     	;# 
   388     0105                     	;# 
   389     0107                     	;# 
   390     0108                     	;# 
   391     0109                     	;# 
   392     010C                     	;# 
   393     010C                     	;# 
   394     010D                     	;# 
   395     010E                     	;# 
   396     010F                     	;# 
   397     0185                     	;# 
   398     0187                     	;# 
   399     0188                     	;# 
   400     0189                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0000                     	;# 
   404     0001                     	;# 
   405     0002                     	;# 
   406     0003                     	;# 
   407     0004                     	;# 
   408     0005                     	;# 
   409     0006                     	;# 
   410     0007                     	;# 
   411     0008                     	;# 
   412     0009                     	;# 
   413     000A                     	;# 
   414     000B                     	;# 
   415     000C                     	;# 
   416     000D                     	;# 
   417     000E                     	;# 
   418     000E                     	;# 
   419     000F                     	;# 
   420     0010                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0015                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001B                     	;# 
   434     001C                     	;# 
   435     001D                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     0081                     	;# 
   439     0085                     	;# 
   440     0086                     	;# 
   441     0087                     	;# 
   442     0088                     	;# 
   443     0089                     	;# 
   444     008C                     	;# 
   445     008D                     	;# 
   446     008E                     	;# 
   447     008F                     	;# 
   448     0090                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0093                     	;# 
   454     0094                     	;# 
   455     0095                     	;# 
   456     0096                     	;# 
   457     0097                     	;# 
   458     0098                     	;# 
   459     0099                     	;# 
   460     009A                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     009F                     	;# 
   466     0105                     	;# 
   467     0107                     	;# 
   468     0108                     	;# 
   469     0109                     	;# 
   470     010C                     	;# 
   471     010C                     	;# 
   472     010D                     	;# 
   473     010E                     	;# 
   474     010F                     	;# 
   475     0185                     	;# 
   476     0187                     	;# 
   477     0188                     	;# 
   478     0189                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0000                     	;# 
   482     0001                     	;# 
   483     0002                     	;# 
   484     0003                     	;# 
   485     0004                     	;# 
   486     0005                     	;# 
   487     0006                     	;# 
   488     0007                     	;# 
   489     0008                     	;# 
   490     0009                     	;# 
   491     000A                     	;# 
   492     000B                     	;# 
   493     000C                     	;# 
   494     000D                     	;# 
   495     000E                     	;# 
   496     000E                     	;# 
   497     000F                     	;# 
   498     0010                     	;# 
   499     0011                     	;# 
   500     0012                     	;# 
   501     0013                     	;# 
   502     0014                     	;# 
   503     0015                     	;# 
   504     0015                     	;# 
   505     0016                     	;# 
   506     0017                     	;# 
   507     0018                     	;# 
   508     0019                     	;# 
   509     001A                     	;# 
   510     001B                     	;# 
   511     001B                     	;# 
   512     001C                     	;# 
   513     001D                     	;# 
   514     001E                     	;# 
   515     001F                     	;# 
   516     0081                     	;# 
   517     0085                     	;# 
   518     0086                     	;# 
   519     0087                     	;# 
   520     0088                     	;# 
   521     0089                     	;# 
   522     008C                     	;# 
   523     008D                     	;# 
   524     008E                     	;# 
   525     008F                     	;# 
   526     0090                     	;# 
   527     0091                     	;# 
   528     0092                     	;# 
   529     0093                     	;# 
   530     0093                     	;# 
   531     0093                     	;# 
   532     0094                     	;# 
   533     0095                     	;# 
   534     0096                     	;# 
   535     0097                     	;# 
   536     0098                     	;# 
   537     0099                     	;# 
   538     009A                     	;# 
   539     009B                     	;# 
   540     009C                     	;# 
   541     009D                     	;# 
   542     009E                     	;# 
   543     009F                     	;# 
   544     0105                     	;# 
   545     0107                     	;# 
   546     0108                     	;# 
   547     0109                     	;# 
   548     010C                     	;# 
   549     010C                     	;# 
   550     010D                     	;# 
   551     010E                     	;# 
   552     010F                     	;# 
   553     0185                     	;# 
   554     0187                     	;# 
   555     0188                     	;# 
   556     0189                     	;# 
   557     018C                     	;# 
   558     018D                     	;# 
   559     0000                     	;# 
   560     0001                     	;# 
   561     0002                     	;# 
   562     0003                     	;# 
   563     0004                     	;# 
   564     0005                     	;# 
   565     0006                     	;# 
   566     0007                     	;# 
   567     0008                     	;# 
   568     0009                     	;# 
   569     000A                     	;# 
   570     000B                     	;# 
   571     000C                     	;# 
   572     000D                     	;# 
   573     000E                     	;# 
   574     000E                     	;# 
   575     000F                     	;# 
   576     0010                     	;# 
   577     0011                     	;# 
   578     0012                     	;# 
   579     0013                     	;# 
   580     0014                     	;# 
   581     0015                     	;# 
   582     0015                     	;# 
   583     0016                     	;# 
   584     0017                     	;# 
   585     0018                     	;# 
   586     0019                     	;# 
   587     001A                     	;# 
   588     001B                     	;# 
   589     001B                     	;# 
   590     001C                     	;# 
   591     001D                     	;# 
   592     001E                     	;# 
   593     001F                     	;# 
   594     0081                     	;# 
   595     0085                     	;# 
   596     0086                     	;# 
   597     0087                     	;# 
   598     0088                     	;# 
   599     0089                     	;# 
   600     008C                     	;# 
   601     008D                     	;# 
   602     008E                     	;# 
   603     008F                     	;# 
   604     0090                     	;# 
   605     0091                     	;# 
   606     0092                     	;# 
   607     0093                     	;# 
   608     0093                     	;# 
   609     0093                     	;# 
   610     0094                     	;# 
   611     0095                     	;# 
   612     0096                     	;# 
   613     0097                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009C                     	;# 
   619     009D                     	;# 
   620     009E                     	;# 
   621     009F                     	;# 
   622     0105                     	;# 
   623     0107                     	;# 
   624     0108                     	;# 
   625     0109                     	;# 
   626     010C                     	;# 
   627     010C                     	;# 
   628     010D                     	;# 
   629     010E                     	;# 
   630     010F                     	;# 
   631     0185                     	;# 
   632     0187                     	;# 
   633     0188                     	;# 
   634     0189                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637                           
   638                           	psect	strings
   639     0003                     __pstrings:
   640     0003                     stringtab:
   641     0003                     __stringtab:
   642                           
   643                           ;	String table - string pointers are 1 byte each
   644     0003  1BFF               	btfsc	btemp+1,7
   645     0004  280D               	ljmp	stringcode
   646     0005  1383               	bcf	3,7
   647     0006  187F               	btfsc	btemp+1,0
   648     0007  1783               	bsf	3,7
   649     0008  0800               	movf	0,w
   650     0009  0A84               	incf	4,f
   651     000A  1903               	skipnz
   652     000B  0AFF               	incf	btemp+1,f
   653     000C  0008               	return
   654     000D                     stringcode:
   655     000D                     stringdir:
   656     000D  3000               	movlw	high stringdir
   657     000E  008A               	movwf	10
   658     000F  0804               	movf	4,w
   659     0010  0A84               	incf	4,f
   660     0011  0782               	addwf	2,f
   661     0012                     __stringbase:
   662     0012  3400               	retlw	0
   663     0013                     __end_of__stringtab:
   664     0013                     __powers_:
   665     0013  3400               	retlw	0
   666     0014  3400               	retlw	0
   667     0015  3480               	retlw	128
   668     0016  343F               	retlw	63
   669     0017  3400               	retlw	0
   670     0018  3400               	retlw	0
   671     0019  3420               	retlw	32
   672     001A  3441               	retlw	65
   673     001B  3400               	retlw	0
   674     001C  3400               	retlw	0
   675     001D  34C8               	retlw	200
   676     001E  3442               	retlw	66
   677     001F  3400               	retlw	0
   678     0020  3400               	retlw	0
   679     0021  347A               	retlw	122
   680     0022  3444               	retlw	68
   681     0023  3400               	retlw	0
   682     0024  3440               	retlw	64
   683     0025  341C               	retlw	28
   684     0026  3446               	retlw	70
   685     0027  3400               	retlw	0
   686     0028  3450               	retlw	80
   687     0029  34C3               	retlw	195
   688     002A  3447               	retlw	71
   689     002B  3400               	retlw	0
   690     002C  3424               	retlw	36
   691     002D  3474               	retlw	116
   692     002E  3449               	retlw	73
   693     002F  3480               	retlw	128
   694     0030  3496               	retlw	150
   695     0031  3418               	retlw	24
   696     0032  344B               	retlw	75
   697     0033  3420               	retlw	32
   698     0034  34BC               	retlw	188
   699     0035  34BE               	retlw	190
   700     0036  344C               	retlw	76
   701     0037  3428               	retlw	40
   702     0038  346B               	retlw	107
   703     0039  346E               	retlw	110
   704     003A  344E               	retlw	78
   705     003B  34F9               	retlw	249
   706     003C  3402               	retlw	2
   707     003D  3415               	retlw	21
   708     003E  3450               	retlw	80
   709     003F  34EC               	retlw	236
   710     0040  3478               	retlw	120
   711     0041  34AD               	retlw	173
   712     0042  3460               	retlw	96
   713     0043  34CA               	retlw	202
   714     0044  34F2               	retlw	242
   715     0045  3449               	retlw	73
   716     0046  3471               	retlw	113
   717     0047                     __end_of__powers_:
   718     0047                     __npowers_:
   719     0047  3400               	retlw	0
   720     0048  3400               	retlw	0
   721     0049  3480               	retlw	128
   722     004A  343F               	retlw	63
   723     004B  34CD               	retlw	205
   724     004C  34CC               	retlw	204
   725     004D  34CC               	retlw	204
   726     004E  343D               	retlw	61
   727     004F  340A               	retlw	10
   728     0050  34D7               	retlw	215
   729     0051  3423               	retlw	35
   730     0052  343C               	retlw	60
   731     0053  346F               	retlw	111
   732     0054  3412               	retlw	18
   733     0055  3483               	retlw	131
   734     0056  343A               	retlw	58
   735     0057  3417               	retlw	23
   736     0058  34B7               	retlw	183
   737     0059  34D1               	retlw	209
   738     005A  3438               	retlw	56
   739     005B  34AC               	retlw	172
   740     005C  34C5               	retlw	197
   741     005D  3427               	retlw	39
   742     005E  3437               	retlw	55
   743     005F  34BD               	retlw	189
   744     0060  3437               	retlw	55
   745     0061  3486               	retlw	134
   746     0062  3435               	retlw	53
   747     0063  3495               	retlw	149
   748     0064  34BF               	retlw	191
   749     0065  34D6               	retlw	214
   750     0066  3433               	retlw	51
   751     0067  3477               	retlw	119
   752     0068  34CC               	retlw	204
   753     0069  342B               	retlw	43
   754     006A  3432               	retlw	50
   755     006B  345F               	retlw	95
   756     006C  3470               	retlw	112
   757     006D  3489               	retlw	137
   758     006E  3430               	retlw	48
   759     006F  34FF               	retlw	255
   760     0070  34E6               	retlw	230
   761     0071  34DB               	retlw	219
   762     0072  342E               	retlw	46
   763     0073  3408               	retlw	8
   764     0074  34E5               	retlw	229
   765     0075  343C               	retlw	60
   766     0076  341E               	retlw	30
   767     0077  3460               	retlw	96
   768     0078  3442               	retlw	66
   769     0079  34A2               	retlw	162
   770     007A  340D               	retlw	13
   771     007B                     __end_of__npowers_:
   772     007B                     _dpowers:
   773     007B  3401               	retlw	1
   774     007C  3400               	retlw	0
   775     007D  3400               	retlw	0
   776     007E  3400               	retlw	0
   777     007F  340A               	retlw	10
   778     0080  3400               	retlw	0
   779     0081  3400               	retlw	0
   780     0082  3400               	retlw	0
   781     0083  3464               	retlw	100
   782     0084  3400               	retlw	0
   783     0085  3400               	retlw	0
   784     0086  3400               	retlw	0
   785     0087  34E8               	retlw	232
   786     0088  3403               	retlw	3
   787     0089  3400               	retlw	0
   788     008A  3400               	retlw	0
   789     008B  3410               	retlw	16
   790     008C  3427               	retlw	39
   791     008D  3400               	retlw	0
   792     008E  3400               	retlw	0
   793     008F  34A0               	retlw	160
   794     0090  3486               	retlw	134
   795     0091  3401               	retlw	1
   796     0092  3400               	retlw	0
   797     0093  3440               	retlw	64
   798     0094  3442               	retlw	66
   799     0095  340F               	retlw	15
   800     0096  3400               	retlw	0
   801     0097  3480               	retlw	128
   802     0098  3496               	retlw	150
   803     0099  3498               	retlw	152
   804     009A  3400               	retlw	0
   805     009B  3400               	retlw	0
   806     009C  34E1               	retlw	225
   807     009D  34F5               	retlw	245
   808     009E  3405               	retlw	5
   809     009F  3400               	retlw	0
   810     00A0  34CA               	retlw	202
   811     00A1  349A               	retlw	154
   812     00A2  343B               	retlw	59
   813     00A3                     __end_of_dpowers:
   814     000E                     _TMR1	set	14
   815     0012                     _T2CONbits	set	18
   816     000C                     _PIR1bits	set	12
   817     001D                     _CCP2CONbits	set	29
   818     0017                     _CCP1CONbits	set	23
   819     0005                     _PORTAbits	set	5
   820     0010                     _T1CONbits	set	16
   821     0008                     _PORTD	set	8
   822     0006                     _PORTB	set	6
   823     0005                     _PORTA	set	5
   824     001B                     _CCPR2L	set	27
   825     0015                     _CCPR1L	set	21
   826     0008                     _PORTDbits	set	8
   827     0013                     _SSPBUF	set	19
   828     0014                     _SSPCON	set	20
   829     0063                     _SSPIF	set	99
   830     005E                     _PEIE	set	94
   831     005F                     _GIE	set	95
   832     0092                     _PR2	set	146
   833     0096                     _IOCB	set	150
   834     0095                     _WPUBbits	set	149
   835     0081                     _OPTION_REGbits	set	129
   836     0085                     _TRISAbits	set	133
   837     0088                     _TRISD	set	136
   838     0086                     _TRISB	set	134
   839     0085                     _TRISA	set	133
   840     008F                     _OSCCONbits	set	143
   841     0091                     _SSPCON2bits	set	145
   842     0087                     _TRISCbits	set	135
   843     0094                     _SSPSTAT	set	148
   844     0093                     _SSPADD	set	147
   845     0091                     _SSPCON2	set	145
   846     0463                     _SSPIE	set	1123
   847     043C                     _TRISC4	set	1084
   848     043B                     _TRISC3	set	1083
   849     0189                     _ANSELH	set	393
   850     0188                     _ANSEL	set	392
   851     00A3                     STR_1:
   852     00A3  3444               	retlw	68	;'D'
   853     00A4  3469               	retlw	105	;'i'
   854     00A5  3473               	retlw	115	;'s'
   855     00A6  3474               	retlw	116	;'t'
   856     00A7  3461               	retlw	97	;'a'
   857     00A8  346E               	retlw	110	;'n'
   858     00A9  3463               	retlw	99	;'c'
   859     00AA  3469               	retlw	105	;'i'
   860     00AB  3461               	retlw	97	;'a'
   861     00AC  343A               	retlw	58	;':'
   862     00AD  3420               	retlw	32	;' '
   863     00AE  3425               	retlw	37	;'%'
   864     00AF  342E               	retlw	46	;'.'
   865     00B0  3431               	retlw	49	;'1'
   866     00B1  3466               	retlw	102	;'f'
   867     00B2  3420               	retlw	32	;' '
   868     00B3  3463               	retlw	99	;'c'
   869     00B4  346D               	retlw	109	;'m'
   870     00B5  3400               	retlw	0
   871     00B6                     STR_7:
   872     00B6  344C               	retlw	76	;'L'
   873     00B7  3449               	retlw	73	;'I'
   874     00B8  344E               	retlw	78	;'N'
   875     00B9  3445               	retlw	69	;'E'
   876     00BA  3441               	retlw	65	;'A'
   877     00BB  3400               	retlw	0
   878     00BC                     STR_3:
   879     00BC  3456               	retlw	86	;'V'
   880     00BD  3445               	retlw	69	;'E'
   881     00BE  3452               	retlw	82	;'R'
   882     00BF  3444               	retlw	68	;'D'
   883     00C0  3445               	retlw	69	;'E'
   884     00C1  3400               	retlw	0
   885     00C2                     STR_6:
   886     00C2  344C               	retlw	76	;'L'
   887     00C3  3449               	retlw	73	;'I'
   888     00C4  3442               	retlw	66	;'B'
   889     00C5  3452               	retlw	82	;'R'
   890     00C6  3445               	retlw	69	;'E'
   891     00C7  3400               	retlw	0
   892     00C8                     STR_2:
   893     00C8  344E               	retlw	78	;'N'
   894     00C9  3441               	retlw	65	;'A'
   895     00CA  3444               	retlw	68	;'D'
   896     00CB  3441               	retlw	65	;'A'
   897     00CC  3400               	retlw	0
   898     00CD                     STR_4:
   899     00CD  3441               	retlw	65	;'A'
   900     00CE  345A               	retlw	90	;'Z'
   901     00CF  3455               	retlw	85	;'U'
   902     00D0  344C               	retlw	76	;'L'
   903     00D1  3400               	retlw	0
   904     00D2                     STR_5:
   905     00D2  3452               	retlw	82	;'R'
   906     00D3  344F               	retlw	79	;'O'
   907     00D4  344A               	retlw	74	;'J'
   908     00D5  344F               	retlw	79	;'O'
   909     00D6  3400               	retlw	0
   910     00B6                     
   911                           	psect	cinit
   912     07EF                     start_initialization:	
   913                           ; #config settings
   914                           
   915     07EF                     __initialization:
   916                           
   917                           ; Clear objects allocated to BANK0
   918     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   919     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   920     07F1  01EE               	clrf	__pbssBANK0& (0+127)
   921     07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   922                           
   923                           ; Clear objects allocated to BANK1
   924     07F3  1383               	bcf	3,7	;select IRP bank0
   925     07F4  30C7               	movlw	low __pbssBANK1
   926     07F5  0084               	movwf	4
   927     07F6  30DE               	movlw	low (__pbssBANK1+23)
   928     07F7  160A  158A  237A  120A  118A  	fcall	clear_ram0
   929     07FC                     end_of_initialization:	
   930                           ;End of C runtime variable initialization code
   931                           
   932     07FC                     __end_of__initialization:
   933     07FC  0183               	clrf	3
   934     07FD  160A  118A  29D2   	ljmp	_main	;jump to C main() function
   935                           
   936                           	psect	bssBANK0
   937     006E                     __pbssBANK0:
   938     006E                     _velocidad:
   939     006E                     	ds	2
   940                           
   941                           	psect	bssBANK1
   942     00C7                     __pbssBANK1:
   943     00C7                     _distancia:
   944     00C7                     	ds	4
   945     00CB                     _linea:
   946     00CB                     	ds	1
   947     00CC                     _color:
   948     00CC                     	ds	1
   949     00CD                     _dis:
   950     00CD                     	ds	1
   951     00CE                     _distanciaLCD:
   952     00CE                     	ds	16
   953                           
   954                           	psect	clrtext
   955     1B7A                     clear_ram0:	
   956                           ;	Called with FSR containing the base address, and
   957                           ;	W with the last address+1
   958                           
   959     1B7A  0064               	clrwdt	;clear the watchdog before getting into this loop
   960     1B7B                     clrloop0:
   961     1B7B  0180               	clrf	0	;clear RAM location pointed to by FSR
   962     1B7C  0A84               	incf	4,f	;increment pointer
   963     1B7D  0604               	xorwf	4,w	;XOR with final address
   964     1B7E  1903               	btfsc	3,2	;have we reached the end yet?
   965     1B7F  3400               	retlw	0	;all done for this memory range, return
   966     1B80  0604               	xorwf	4,w	;XOR again to restore value
   967     1B81  2B7B               	goto	clrloop0	;do the next byte
   968                           
   969                           	psect	cstackBANK1
   970     00A0                     __pcstackBANK1:
   971     00A0                     ?_sprintf:
   972     00A0                     sprintf@f:	
   973                           ; 2 bytes @ 0x0
   974                           
   975                           
   976                           ; 1 bytes @ 0x0
   977     00A0                     	ds	5
   978     00A5                     ??_sprintf:
   979                           
   980                           ; 1 bytes @ 0x5
   981     00A5                     	ds	5
   982     00AA                     _sprintf$1366:
   983                           
   984                           ; 4 bytes @ 0xA
   985     00AA                     	ds	4
   986     00AE                     sprintf@ap:
   987                           
   988                           ; 1 bytes @ 0xE
   989     00AE                     	ds	1
   990     00AF                     sprintf@flag:
   991                           
   992                           ; 2 bytes @ 0xF
   993     00AF                     	ds	2
   994     00B1                     sprintf@val:
   995                           
   996                           ; 4 bytes @ 0x11
   997     00B1                     	ds	4
   998     00B5                     sprintf@eexp:
   999                           
  1000                           ; 2 bytes @ 0x15
  1001     00B5                     	ds	2
  1002     00B7                     sprintf@tmpval:
  1003                           
  1004                           ; 4 bytes @ 0x17
  1005     00B7                     	ds	4
  1006     00BB                     sprintf@sp:
  1007                           
  1008                           ; 1 bytes @ 0x1B
  1009     00BB                     	ds	1
  1010     00BC                     sprintf@prec:
  1011                           
  1012                           ; 2 bytes @ 0x1C
  1013     00BC                     	ds	2
  1014     00BE                     sprintf@fval:
  1015                           
  1016                           ; 4 bytes @ 0x1E
  1017     00BE                     	ds	4
  1018     00C2                     sprintf@c:
  1019                           
  1020                           ; 1 bytes @ 0x22
  1021     00C2                     	ds	1
  1022     00C3                     ??_main:
  1023                           
  1024                           ; 1 bytes @ 0x23
  1025     00C3                     	ds	4
  1026                           
  1027                           	psect	cstackCOMMON
  1028     0070                     __pcstackCOMMON:
  1029     0070                     ?_isdigit:
  1030     0070                     ?___fleq:	
  1031                           ; 1 bit 
  1032                           
  1033     0070                     ?___flge:	
  1034                           ; 1 bit 
  1035                           
  1036     0070                     ?_setup:	
  1037                           ; 1 bit 
  1038                           
  1039     0070                     ?_setupMotores:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042     0070                     ??_setupMotores:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ?_setupPWM:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ??_setupPWM:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ??_isdigit:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ?_I2C_Master_Wait:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057     0070                     ??_I2C_Master_Wait:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ?_I2C_Master_Start:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ??_I2C_Master_Start:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ?_I2C_Master_Stop:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ??_I2C_Master_Stop:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ?_I2C_Master_Write:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ?_setupINTOSC:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     ??_setupINTOSC:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ?_Lcd_Port_4bits:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ??_Lcd_Port_4bits:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ?_Lcd_Cmd_4bits:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ?_Lcd_Clear_4bits:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093     0070                     ?_Lcd_Init_4bits:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096     0070                     ?_Lcd_Write_Char_4bits:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099     0070                     ?_main:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102     0070                     ?__Umul8_16:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105     0070                     ?_I2C_Master_Read:	
  1106                           ; 2 bytes @ 0x0
  1107                           
  1108     0070                     ?___wmul:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111     0070                     ?___awmod:	
  1112                           ; 2 bytes @ 0x0
  1113                           
  1114     0070                     ?___lwmod:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117     0070                     ?__tdiv_to_l_:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120     0070                     ?__div_to_l_:	
  1121                           ; 4 bytes @ 0x0
  1122                           
  1123     0070                     ?___lldiv:	
  1124                           ; 4 bytes @ 0x0
  1125                           
  1126     0070                     ?___flneg:	
  1127                           ; 4 bytes @ 0x0
  1128                           
  1129     0070                     ?___llmod:	
  1130                           ; 4 bytes @ 0x0
  1131                           
  1132     0070                     Lcd_Port_4bits@a:	
  1133                           ; 4 bytes @ 0x0
  1134                           
  1135     0070                     __Umul8_16@multiplicand:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0070                     _isdigit$1152:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0070                     I2C_Master_Write@d:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0070                     I2C_Master_Read@a:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147     0070                     ___wmul@multiplier:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150     0070                     ___awmod@divisor:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153     0070                     ___lwmod@divisor:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156     0070                     ___lldiv@divisor:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159     0070                     __div_to_l_@f1:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162     0070                     ___fleq@ff1:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165     0070                     ___flge@ff1:	
  1166                           ; 4 bytes @ 0x0
  1167                           
  1168     0070                     ___flneg@f1:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171     0070                     __tdiv_to_l_@f1:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174     0070                     ___llmod@divisor:	
  1175                           ; 4 bytes @ 0x0
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x0
  1179     0070                     	ds	1
  1180     0071                     ??_Lcd_Cmd_4bits:
  1181     0071                     ??_Lcd_Write_Char_4bits:	
  1182                           ; 1 bytes @ 0x1
  1183                           
  1184     0071                     setupINTOSC@F:	
  1185                           ; 1 bytes @ 0x1
  1186                           
  1187     0071                     isdigit@c:	
  1188                           ; 1 bytes @ 0x1
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x1
  1192     0071                     	ds	1
  1193     0072                     ??__Umul8_16:
  1194     0072                     ??_I2C_Master_Write:	
  1195                           ; 1 bytes @ 0x2
  1196                           
  1197     0072                     ??_I2C_Master_Read:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200     0072                     Lcd_Write_Char_4bits@temp:	
  1201                           ; 1 bytes @ 0x2
  1202                           
  1203     0072                     ___wmul@multiplicand:	
  1204                           ; 1 bytes @ 0x2
  1205                           
  1206     0072                     ___awmod@dividend:	
  1207                           ; 2 bytes @ 0x2
  1208                           
  1209     0072                     ___lwmod@dividend:	
  1210                           ; 2 bytes @ 0x2
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x2
  1214     0072                     	ds	1
  1215     0073                     Lcd_Cmd_4bits@a:
  1216     0073                     Lcd_Write_Char_4bits@y:	
  1217                           ; 1 bytes @ 0x3
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x3
  1221     0073                     	ds	1
  1222     0074                     ??_Lcd_Clear_4bits:
  1223     0074                     ?_Lcd_Set_Cursor_4bits:	
  1224                           ; 1 bytes @ 0x4
  1225                           
  1226     0074                     ??_Lcd_Init_4bits:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229     0074                     ??___wmul:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232     0074                     ??___awmod:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235     0074                     ??___flneg:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238     0074                     ??___lwmod:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241     0074                     Lcd_Set_Cursor_4bits@b:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244     0074                     Lcd_Write_Char_4bits@a:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247     0074                     I2C_Master_Read@temp:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250     0074                     ___wmul@product:	
  1251                           ; 2 bytes @ 0x4
  1252                           
  1253     0074                     __Umul8_16@product:	
  1254                           ; 2 bytes @ 0x4
  1255                           
  1256     0074                     ___lldiv@dividend:	
  1257                           ; 2 bytes @ 0x4
  1258                           
  1259     0074                     __div_to_l_@f2:	
  1260                           ; 4 bytes @ 0x4
  1261                           
  1262     0074                     ___fleq@ff2:	
  1263                           ; 4 bytes @ 0x4
  1264                           
  1265     0074                     ___flge@ff2:	
  1266                           ; 4 bytes @ 0x4
  1267                           
  1268     0074                     __tdiv_to_l_@f2:	
  1269                           ; 4 bytes @ 0x4
  1270                           
  1271     0074                     ___llmod@dividend:	
  1272                           ; 4 bytes @ 0x4
  1273                           
  1274                           
  1275                           ; 4 bytes @ 0x4
  1276     0074                     	ds	1
  1277     0075                     ??_Lcd_Set_Cursor_4bits:
  1278     0075                     ?_Lcd_Write_String_4bits:	
  1279                           ; 1 bytes @ 0x5
  1280                           
  1281     0075                     ___awmod@counter:	
  1282                           ; 1 bytes @ 0x5
  1283                           
  1284     0075                     ___lwmod@counter:	
  1285                           ; 1 bytes @ 0x5
  1286                           
  1287     0075                     Lcd_Write_String_4bits@a:	
  1288                           ; 1 bytes @ 0x5
  1289                           
  1290                           
  1291                           ; 2 bytes @ 0x5
  1292     0075                     	ds	1
  1293     0076                     ?___lwdiv:
  1294     0076                     ?___xxtofl:	
  1295                           ; 2 bytes @ 0x6
  1296                           
  1297     0076                     Lcd_Set_Cursor_4bits@a:	
  1298                           ; 4 bytes @ 0x6
  1299                           
  1300     0076                     ___awmod@sign:	
  1301                           ; 1 bytes @ 0x6
  1302                           
  1303     0076                     ___lwdiv@divisor:	
  1304                           ; 1 bytes @ 0x6
  1305                           
  1306     0076                     __Umul8_16@word_mpld:	
  1307                           ; 2 bytes @ 0x6
  1308                           
  1309     0076                     ___xxtofl@val:	
  1310                           ; 2 bytes @ 0x6
  1311                           
  1312                           
  1313                           ; 4 bytes @ 0x6
  1314     0076                     	ds	1
  1315     0077                     ??_Lcd_Write_String_4bits:
  1316     0077                     ?___awdiv:	
  1317                           ; 1 bytes @ 0x7
  1318                           
  1319     0077                     Lcd_Set_Cursor_4bits@z:	
  1320                           ; 2 bytes @ 0x7
  1321                           
  1322     0077                     ___awdiv@divisor:	
  1323                           ; 1 bytes @ 0x7
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0x7
  1327     0077                     	ds	1
  1328     0078                     ??__tdiv_to_l_:
  1329     0078                     ??__div_to_l_:	
  1330                           ; 1 bytes @ 0x8
  1331                           
  1332     0078                     ??___lldiv:	
  1333                           ; 1 bytes @ 0x8
  1334                           
  1335     0078                     ??___fleq:	
  1336                           ; 1 bytes @ 0x8
  1337                           
  1338     0078                     ??___flge:	
  1339                           ; 1 bytes @ 0x8
  1340                           
  1341     0078                     ??___llmod:	
  1342                           ; 1 bytes @ 0x8
  1343                           
  1344     0078                     Lcd_Set_Cursor_4bits@y:	
  1345                           ; 1 bytes @ 0x8
  1346                           
  1347     0078                     __Umul8_16@multiplier:	
  1348                           ; 1 bytes @ 0x8
  1349                           
  1350     0078                     ___lwdiv@dividend:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353                           
  1354                           ; 2 bytes @ 0x8
  1355     0078                     	ds	1
  1356     0079                     Lcd_Set_Cursor_4bits@temp:
  1357     0079                     ___llmod@counter:	
  1358                           ; 1 bytes @ 0x9
  1359                           
  1360     0079                     ___awdiv@dividend:	
  1361                           ; 1 bytes @ 0x9
  1362                           
  1363     0079                     ___lldiv@quotient:	
  1364                           ; 2 bytes @ 0x9
  1365                           
  1366                           
  1367                           ; 4 bytes @ 0x9
  1368     0079                     	ds	1
  1369     007A                     ??___lwdiv:
  1370     007A                     ??___xxtofl:	
  1371                           ; 1 bytes @ 0xA
  1372                           
  1373     007A                     Lcd_Write_String_4bits@i:	
  1374                           ; 1 bytes @ 0xA
  1375                           
  1376                           
  1377                           ; 2 bytes @ 0xA
  1378     007A                     	ds	1
  1379     007B                     ??___awdiv:
  1380     007B                     ___lwdiv@quotient:	
  1381                           ; 1 bytes @ 0xB
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0xB
  1385     007B                     	ds	2
  1386     007D                     ___lldiv@counter:
  1387     007D                     ___lwdiv@counter:	
  1388                           ; 1 bytes @ 0xD
  1389                           
  1390                           
  1391                           ; 1 bytes @ 0xD
  1392     007D                     	ds	1
  1393     007E                     ??_setup:
  1394     007E                     ??___flsub:	
  1395                           ; 1 bytes @ 0xE
  1396                           
  1397                           
  1398                           	psect	cstackBANK0
  1399     0020                     __pcstackBANK0:	
  1400                           ; 1 bytes @ 0xE
  1401                           
  1402     0020                     ?_I2C_Master_Init:
  1403     0020                     ___awdiv@counter:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406     0020                     ___xxtofl@sign:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409     0020                     I2C_Master_Init@c:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412     0020                     __div_to_l_@quot:	
  1413                           ; 4 bytes @ 0x0
  1414                           
  1415     0020                     __tdiv_to_l_@quot:	
  1416                           ; 4 bytes @ 0x0
  1417                           
  1418                           
  1419                           ; 4 bytes @ 0x0
  1420     0020                     	ds	1
  1421     0021                     ___awdiv@sign:
  1422     0021                     ___xxtofl@exp:	
  1423                           ; 1 bytes @ 0x1
  1424                           
  1425                           
  1426                           ; 1 bytes @ 0x1
  1427     0021                     	ds	1
  1428     0022                     ___awdiv@quotient:
  1429     0022                     ___xxtofl@arg:	
  1430                           ; 2 bytes @ 0x2
  1431                           
  1432                           
  1433                           ; 4 bytes @ 0x2
  1434     0022                     	ds	2
  1435     0024                     ??_I2C_Master_Init:
  1436     0024                     ?___flmul:	
  1437                           ; 1 bytes @ 0x4
  1438                           
  1439     0024                     __div_to_l_@cntr:	
  1440                           ; 4 bytes @ 0x4
  1441                           
  1442     0024                     __tdiv_to_l_@cntr:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445     0024                     ___flmul@b:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448                           
  1449                           ; 4 bytes @ 0x4
  1450     0024                     	ds	1
  1451     0025                     __div_to_l_@exp1:
  1452     0025                     __tdiv_to_l_@exp1:	
  1453                           ; 1 bytes @ 0x5
  1454                           
  1455                           
  1456                           ; 1 bytes @ 0x5
  1457     0025                     	ds	3
  1458     0028                     ___flmul@a:
  1459                           
  1460                           ; 4 bytes @ 0x8
  1461     0028                     	ds	4
  1462     002C                     ??___flmul:
  1463                           
  1464                           ; 1 bytes @ 0xC
  1465     002C                     	ds	5
  1466     0031                     ___flmul@sign:
  1467                           
  1468                           ; 1 bytes @ 0x11
  1469     0031                     	ds	1
  1470     0032                     ___flmul@grs:
  1471                           
  1472                           ; 4 bytes @ 0x12
  1473     0032                     	ds	4
  1474     0036                     ___flmul@aexp:
  1475                           
  1476                           ; 1 bytes @ 0x16
  1477     0036                     	ds	1
  1478     0037                     ___flmul@bexp:
  1479                           
  1480                           ; 1 bytes @ 0x17
  1481     0037                     	ds	1
  1482     0038                     ___flmul@prod:
  1483                           
  1484                           ; 4 bytes @ 0x18
  1485     0038                     	ds	4
  1486     003C                     ___flmul@temp:
  1487                           
  1488                           ; 2 bytes @ 0x1C
  1489     003C                     	ds	2
  1490     003E                     ?_fround:
  1491     003E                     ?_scale:	
  1492                           ; 4 bytes @ 0x1E
  1493                           
  1494                           
  1495                           ; 4 bytes @ 0x1E
  1496     003E                     	ds	4
  1497     0042                     ??_fround:
  1498     0042                     ??_scale:	
  1499                           ; 1 bytes @ 0x22
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x22
  1503     0042                     	ds	7
  1504     0049                     _fround$1364:
  1505                           
  1506                           ; 4 bytes @ 0x29
  1507     0049                     	ds	3
  1508     004C                     _scale$1365:
  1509                           
  1510                           ; 4 bytes @ 0x2C
  1511     004C                     	ds	1
  1512     004D                     _fround$1363:
  1513                           
  1514                           ; 4 bytes @ 0x2D
  1515     004D                     	ds	3
  1516     0050                     scale@scl:
  1517                           
  1518                           ; 1 bytes @ 0x30
  1519     0050                     	ds	1
  1520     0051                     ?___fltol:
  1521     0051                     fround@prec:	
  1522                           ; 4 bytes @ 0x31
  1523                           
  1524     0051                     ___fltol@f1:	
  1525                           ; 1 bytes @ 0x31
  1526                           
  1527                           
  1528                           ; 4 bytes @ 0x31
  1529     0051                     	ds	1
  1530     0052                     ?___fladd:
  1531     0052                     ___fladd@b:	
  1532                           ; 4 bytes @ 0x32
  1533                           
  1534                           
  1535                           ; 4 bytes @ 0x32
  1536     0052                     	ds	3
  1537     0055                     ??___fltol:
  1538                           
  1539                           ; 1 bytes @ 0x35
  1540     0055                     	ds	1
  1541     0056                     ___fladd@a:
  1542                           
  1543                           ; 4 bytes @ 0x36
  1544     0056                     	ds	3
  1545     0059                     ___fltol@sign1:
  1546                           
  1547                           ; 1 bytes @ 0x39
  1548     0059                     	ds	1
  1549     005A                     ??___fladd:
  1550     005A                     ___fltol@exp1:	
  1551                           ; 1 bytes @ 0x3A
  1552                           
  1553                           
  1554                           ; 1 bytes @ 0x3A
  1555     005A                     	ds	8
  1556     0062                     ___fladd@signs:
  1557                           
  1558                           ; 1 bytes @ 0x42
  1559     0062                     	ds	1
  1560     0063                     ___fladd@aexp:
  1561                           
  1562                           ; 1 bytes @ 0x43
  1563     0063                     	ds	1
  1564     0064                     ___fladd@bexp:
  1565                           
  1566                           ; 1 bytes @ 0x44
  1567     0064                     	ds	1
  1568     0065                     ___fladd@grs:
  1569                           
  1570                           ; 1 bytes @ 0x45
  1571     0065                     	ds	1
  1572     0066                     ?___flsub:
  1573     0066                     ___flsub@a:	
  1574                           ; 4 bytes @ 0x46
  1575                           
  1576                           
  1577                           ; 4 bytes @ 0x46
  1578     0066                     	ds	4
  1579     006A                     ___flsub@b:
  1580                           
  1581                           ; 4 bytes @ 0x4A
  1582     006A                     	ds	4
  1583                           
  1584                           	psect	maintext
  1585     11D2                     __pmaintext:	
  1586 ;;
  1587 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1588 ;;
  1589 ;; *************** function _main *****************
  1590 ;; Defined at:
  1591 ;;		line 69 in file "main_M.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : B00/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0
  1607 ;;      Temps:          0       0       4       0       0
  1608 ;;      Totals:         0       0       4       0       0
  1609 ;;Total ram usage:        4 bytes
  1610 ;; Hardware stack levels required when called: 4
  1611 ;; This function calls:
  1612 ;;		_I2C_Master_Read
  1613 ;;		_I2C_Master_Start
  1614 ;;		_I2C_Master_Stop
  1615 ;;		_I2C_Master_Write
  1616 ;;		_Lcd_Clear_4bits
  1617 ;;		_Lcd_Set_Cursor_4bits
  1618 ;;		_Lcd_Write_String_4bits
  1619 ;;		___flge
  1620 ;;		___fltol
  1621 ;;		___xxtofl
  1622 ;;		_setup
  1623 ;;		_setupMotores
  1624 ;;		_setupPWM
  1625 ;;		_sprintf
  1626 ;; This function is called by:
  1627 ;;		Startup code after reset
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631     11D2                     _main:	
  1632                           ;psect for function _main
  1633                           
  1634     11D2                     l3702:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1637                           
  1638                           
  1639                           ;main_M.c: 71:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1640     11D2  3006               	movlw	6
  1641     11D3  1683               	bsf	3,5	;RP0=1, select bank1
  1642     11D4  1303               	bcf	3,6	;RP1=0, select bank1
  1643     11D5  00C5               	movwf	(??_main^(0+128)+2)
  1644     11D6  3013               	movlw	19
  1645     11D7  00C4               	movwf	(??_main^(0+128)+1)
  1646     11D8  30AD               	movlw	173
  1647     11D9  00C3               	movwf	??_main^(0+128)
  1648     11DA                     u5657:
  1649     11DA  0BC3               	decfsz	??_main^(0+128),f
  1650     11DB  29DA               	goto	u5657
  1651     11DC  0BC4               	decfsz	(??_main^(0+128)+1),f
  1652     11DD  29DA               	goto	u5657
  1653     11DE  0BC5               	decfsz	(??_main^(0+128)+2),f
  1654     11DF  29DA               	goto	u5657
  1655     11E0                     l3704:
  1656                           
  1657                           ;main_M.c: 72:     setup();
  1658     11E0  160A  158A  24B3  160A  118A  	fcall	_setup
  1659     11E5                     l3706:
  1660                           
  1661                           ;main_M.c: 73:     Lcd_Clear_4bits();
  1662     11E5  160A  158A  23B6  160A  118A  	fcall	_Lcd_Clear_4bits
  1663     11EA                     l3708:
  1664                           
  1665                           ;main_M.c: 75:     setupMotores();
  1666     11EA  120A  118A  20DA  160A  118A  	fcall	_setupMotores
  1667     11EF                     l3710:
  1668                           
  1669                           ;main_M.c: 76:     setupPWM();
  1670     11EF  160A  158A  2442  160A  118A  	fcall	_setupPWM
  1671                           
  1672                           ;main_M.c: 77:     CCPR1L = 125;
  1673     11F4  307D               	movlw	125
  1674     11F5  1283               	bcf	3,5	;RP0=0, select bank0
  1675     11F6  1303               	bcf	3,6	;RP1=0, select bank0
  1676     11F7  0095               	movwf	21	;volatile
  1677                           
  1678                           ;main_M.c: 78:     CCPR2L = 125;
  1679     11F8  307D               	movlw	125
  1680     11F9  009B               	movwf	27	;volatile
  1681     11FA                     l3712:
  1682                           
  1683                           ;main_M.c: 81:     {;main_M.c: 83:         I2C_Master_Start();
  1684     11FA  160A  158A  2382  160A  118A  	fcall	_I2C_Master_Start
  1685     11FF                     l3714:
  1686                           
  1687                           ;main_M.c: 84:         I2C_Master_Write(0x11);
  1688     11FF  3011               	movlw	17
  1689     1200  00F0               	movwf	I2C_Master_Write@d
  1690     1201  3000               	movlw	0
  1691     1202  00F1               	movwf	I2C_Master_Write@d+1
  1692     1203  160A  158A  2394  160A  118A  	fcall	_I2C_Master_Write
  1693     1208                     l3716:
  1694                           
  1695                           ;main_M.c: 85:         distancia = I2C_Master_Read(0);
  1696     1208  3000               	movlw	0
  1697     1209  00F0               	movwf	I2C_Master_Read@a
  1698     120A  00F1               	movwf	I2C_Master_Read@a+1
  1699     120B  160A  158A  24DB  160A  118A  	fcall	_I2C_Master_Read
  1700     1210  0870               	movf	?_I2C_Master_Read,w
  1701     1211  1683               	bsf	3,5	;RP0=1, select bank1
  1702     1212  1303               	bcf	3,6	;RP1=0, select bank1
  1703     1213  00C3               	movwf	??_main^(0+128)
  1704     1214  0871               	movf	?_I2C_Master_Read+1,w
  1705     1215  00C4               	movwf	(??_main^(0+128)+1)
  1706     1216  01C5               	clrf	(??_main^(0+128)+2)
  1707     1217  01C6               	clrf	(??_main^(0+128)+3)
  1708     1218  0846               	movf	(??_main+3)^(0+128),w
  1709     1219  00F9               	movwf	___xxtofl@val+3
  1710     121A  0845               	movf	(??_main+2)^(0+128),w
  1711     121B  00F8               	movwf	___xxtofl@val+2
  1712     121C  0844               	movf	(??_main+1)^(0+128),w
  1713     121D  00F7               	movwf	___xxtofl@val+1
  1714     121E  0843               	movf	??_main^(0+128),w
  1715     121F  00F6               	movwf	___xxtofl@val
  1716     1220  3000               	movlw	0
  1717     1221  120A  118A  20F5  160A  118A  	fcall	___xxtofl
  1718     1226  0879               	movf	?___xxtofl+3,w
  1719     1227  1683               	bsf	3,5	;RP0=1, select bank1
  1720     1228  1303               	bcf	3,6	;RP1=0, select bank1
  1721     1229  00CA               	movwf	(_distancia+3)^(0+128)
  1722     122A  0878               	movf	?___xxtofl+2,w
  1723     122B  00C9               	movwf	(_distancia+2)^(0+128)
  1724     122C  0877               	movf	?___xxtofl+1,w
  1725     122D  00C8               	movwf	(_distancia+1)^(0+128)
  1726     122E  0876               	movf	?___xxtofl,w
  1727     122F  00C7               	movwf	_distancia^(0+128)
  1728     1230                     l3718:
  1729                           
  1730                           ;main_M.c: 86:         I2C_Master_Stop();
  1731     1230  160A  158A  238B  160A  118A  	fcall	_I2C_Master_Stop
  1732                           
  1733                           ;main_M.c: 87:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1734     1235  3003               	movlw	3
  1735     1236  1683               	bsf	3,5	;RP0=1, select bank1
  1736     1237  1303               	bcf	3,6	;RP1=0, select bank1
  1737     1238  00C5               	movwf	(??_main^(0+128)+2)
  1738     1239  3008               	movlw	8
  1739     123A  00C4               	movwf	(??_main^(0+128)+1)
  1740     123B  3076               	movlw	118
  1741     123C  00C3               	movwf	??_main^(0+128)
  1742     123D                     u5667:
  1743     123D  0BC3               	decfsz	??_main^(0+128),f
  1744     123E  2A3D               	goto	u5667
  1745     123F  0BC4               	decfsz	(??_main^(0+128)+1),f
  1746     1240  2A3D               	goto	u5667
  1747     1241  0BC5               	decfsz	(??_main^(0+128)+2),f
  1748     1242  2A3D               	goto	u5667
  1749     1243  0000               	nop
  1750     1244                     l3720:
  1751                           
  1752                           ;main_M.c: 88:         I2C_Master_Start();
  1753     1244  160A  158A  2382  160A  118A  	fcall	_I2C_Master_Start
  1754     1249                     l3722:
  1755                           
  1756                           ;main_M.c: 89:         I2C_Master_Write(0x31);
  1757     1249  3031               	movlw	49
  1758     124A  00F0               	movwf	I2C_Master_Write@d
  1759     124B  3000               	movlw	0
  1760     124C  00F1               	movwf	I2C_Master_Write@d+1
  1761     124D  160A  158A  2394  160A  118A  	fcall	_I2C_Master_Write
  1762     1252                     l3724:
  1763                           
  1764                           ;main_M.c: 90:         color = I2C_Master_Read(0);
  1765     1252  3000               	movlw	0
  1766     1253  00F0               	movwf	I2C_Master_Read@a
  1767     1254  00F1               	movwf	I2C_Master_Read@a+1
  1768     1255  160A  158A  24DB  160A  118A  	fcall	_I2C_Master_Read
  1769     125A  0870               	movf	?_I2C_Master_Read,w
  1770     125B  1683               	bsf	3,5	;RP0=1, select bank1
  1771     125C  1303               	bcf	3,6	;RP1=0, select bank1
  1772     125D  00CC               	movwf	_color^(0+128)
  1773     125E                     l3726:
  1774                           
  1775                           ;main_M.c: 91:         I2C_Master_Stop();
  1776     125E  160A  158A  238B  160A  118A  	fcall	_I2C_Master_Stop
  1777                           
  1778                           ;main_M.c: 92:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1779     1263  3003               	movlw	3
  1780     1264  1683               	bsf	3,5	;RP0=1, select bank1
  1781     1265  1303               	bcf	3,6	;RP1=0, select bank1
  1782     1266  00C5               	movwf	(??_main^(0+128)+2)
  1783     1267  3008               	movlw	8
  1784     1268  00C4               	movwf	(??_main^(0+128)+1)
  1785     1269  3076               	movlw	118
  1786     126A  00C3               	movwf	??_main^(0+128)
  1787     126B                     u5677:
  1788     126B  0BC3               	decfsz	??_main^(0+128),f
  1789     126C  2A6B               	goto	u5677
  1790     126D  0BC4               	decfsz	(??_main^(0+128)+1),f
  1791     126E  2A6B               	goto	u5677
  1792     126F  0BC5               	decfsz	(??_main^(0+128)+2),f
  1793     1270  2A6B               	goto	u5677
  1794     1271  0000               	nop
  1795     1272                     l3728:
  1796                           
  1797                           ;main_M.c: 93:         I2C_Master_Start();
  1798     1272  160A  158A  2382  160A  118A  	fcall	_I2C_Master_Start
  1799     1277                     l3730:
  1800                           
  1801                           ;main_M.c: 94:         I2C_Master_Write(0x21);
  1802     1277  3021               	movlw	33
  1803     1278  00F0               	movwf	I2C_Master_Write@d
  1804     1279  3000               	movlw	0
  1805     127A  00F1               	movwf	I2C_Master_Write@d+1
  1806     127B  160A  158A  2394  160A  118A  	fcall	_I2C_Master_Write
  1807     1280                     l3732:
  1808                           
  1809                           ;main_M.c: 95:         linea = I2C_Master_Read(0);
  1810     1280  3000               	movlw	0
  1811     1281  00F0               	movwf	I2C_Master_Read@a
  1812     1282  00F1               	movwf	I2C_Master_Read@a+1
  1813     1283  160A  158A  24DB  160A  118A  	fcall	_I2C_Master_Read
  1814     1288  0870               	movf	?_I2C_Master_Read,w
  1815     1289  1683               	bsf	3,5	;RP0=1, select bank1
  1816     128A  1303               	bcf	3,6	;RP1=0, select bank1
  1817     128B  00CB               	movwf	_linea^(0+128)
  1818     128C                     l3734:
  1819                           
  1820                           ;main_M.c: 96:         I2C_Master_Stop();
  1821     128C  160A  158A  238B  160A  118A  	fcall	_I2C_Master_Stop
  1822                           
  1823                           ;main_M.c: 97:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1824     1291  3003               	movlw	3
  1825     1292  1683               	bsf	3,5	;RP0=1, select bank1
  1826     1293  1303               	bcf	3,6	;RP1=0, select bank1
  1827     1294  00C5               	movwf	(??_main^(0+128)+2)
  1828     1295  3008               	movlw	8
  1829     1296  00C4               	movwf	(??_main^(0+128)+1)
  1830     1297  3076               	movlw	118
  1831     1298  00C3               	movwf	??_main^(0+128)
  1832     1299                     u5687:
  1833     1299  0BC3               	decfsz	??_main^(0+128),f
  1834     129A  2A99               	goto	u5687
  1835     129B  0BC4               	decfsz	(??_main^(0+128)+1),f
  1836     129C  2A99               	goto	u5687
  1837     129D  0BC5               	decfsz	(??_main^(0+128)+2),f
  1838     129E  2A99               	goto	u5687
  1839     129F  0000               	nop
  1840     12A0                     l3736:
  1841                           
  1842                           ;main_M.c: 99:         sprintf(distanciaLCD, "Distancia: %.1f cm", distancia);
  1843     12A0  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1844     12A1  1683               	bsf	3,5	;RP0=1, select bank1
  1845     12A2  1303               	bcf	3,6	;RP1=0, select bank1
  1846     12A3  00A0               	movwf	sprintf@f^(0+128)
  1847     12A4  084A               	movf	(_distancia+3)^(0+128),w
  1848     12A5  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1849     12A6  0849               	movf	(_distancia+2)^(0+128),w
  1850     12A7  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1851     12A8  0848               	movf	(_distancia+1)^(0+128),w
  1852     12A9  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1853     12AA  0847               	movf	_distancia^(0+128),w
  1854     12AB  00A1               	movwf	(?_sprintf^(0+128)+1)
  1855     12AC  30CE               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1856     12AD  120A  118A  21AF  160A  118A  	fcall	_sprintf
  1857     12B2                     l3738:
  1858                           
  1859                           ;main_M.c: 101:         Lcd_Set_Cursor_4bits(1,1);
  1860     12B2  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1861     12B3  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1862     12B4  3001               	movlw	1
  1863     12B5  160A  158A  25FC  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1864     12BA                     l3740:
  1865                           
  1866                           ;main_M.c: 102:         Lcd_Write_String_4bits(distanciaLCD);
  1867     12BA  30CE               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1868     12BB  00F5               	movwf	Lcd_Write_String_4bits@a
  1869     12BC  3000               	movlw	0
  1870     12BD  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1871     12BE  160A  158A  2576  160A  118A  	fcall	_Lcd_Write_String_4bits
  1872     12C3                     l3742:
  1873                           
  1874                           ;main_M.c: 104:         dis = distancia;
  1875     12C3  1683               	bsf	3,5	;RP0=1, select bank1
  1876     12C4  1303               	bcf	3,6	;RP1=0, select bank1
  1877     12C5  084A               	movf	(_distancia+3)^(0+128),w
  1878     12C6  1283               	bcf	3,5	;RP0=0, select bank0
  1879     12C7  1303               	bcf	3,6	;RP1=0, select bank0
  1880     12C8  00D4               	movwf	___fltol@f1+3
  1881     12C9  1683               	bsf	3,5	;RP0=1, select bank1
  1882     12CA  1303               	bcf	3,6	;RP1=0, select bank1
  1883     12CB  0849               	movf	(_distancia+2)^(0+128),w
  1884     12CC  1283               	bcf	3,5	;RP0=0, select bank0
  1885     12CD  1303               	bcf	3,6	;RP1=0, select bank0
  1886     12CE  00D3               	movwf	___fltol@f1+2
  1887     12CF  1683               	bsf	3,5	;RP0=1, select bank1
  1888     12D0  1303               	bcf	3,6	;RP1=0, select bank1
  1889     12D1  0848               	movf	(_distancia+1)^(0+128),w
  1890     12D2  1283               	bcf	3,5	;RP0=0, select bank0
  1891     12D3  1303               	bcf	3,6	;RP1=0, select bank0
  1892     12D4  00D2               	movwf	___fltol@f1+1
  1893     12D5  1683               	bsf	3,5	;RP0=1, select bank1
  1894     12D6  1303               	bcf	3,6	;RP1=0, select bank1
  1895     12D7  0847               	movf	_distancia^(0+128),w
  1896     12D8  1283               	bcf	3,5	;RP0=0, select bank0
  1897     12D9  1303               	bcf	3,6	;RP1=0, select bank0
  1898     12DA  00D1               	movwf	___fltol@f1
  1899     12DB  160A  118A  20A3  160A  118A  	fcall	___fltol
  1900     12E0  1283               	bcf	3,5	;RP0=0, select bank0
  1901     12E1  1303               	bcf	3,6	;RP1=0, select bank0
  1902     12E2  0851               	movf	?___fltol,w
  1903     12E3  1683               	bsf	3,5	;RP0=1, select bank1
  1904     12E4  1303               	bcf	3,6	;RP1=0, select bank1
  1905     12E5  00CD               	movwf	_dis^(0+128)
  1906                           
  1907                           ;main_M.c: 105:         linea = 2;
  1908     12E6  3002               	movlw	2
  1909     12E7  00CB               	movwf	_linea^(0+128)
  1910     12E8                     l3744:
  1911                           
  1912                           ;main_M.c: 107:         if (color == 0){
  1913     12E8  084C               	movf	_color^(0+128),w
  1914     12E9  1D03               	btfss	3,2
  1915     12EA  2AEC               	goto	u5581
  1916     12EB  2AED               	goto	u5580
  1917     12EC                     u5581:
  1918     12EC  2AFF               	goto	l3750
  1919     12ED                     u5580:
  1920     12ED                     l3746:
  1921                           
  1922                           ;main_M.c: 108:             Lcd_Set_Cursor_4bits(2,1);
  1923     12ED  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1924     12EE  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1925     12EF  3002               	movlw	2
  1926     12F0  160A  158A  25FC  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1927     12F5                     l3748:
  1928                           
  1929                           ;main_M.c: 109:             Lcd_Write_String_4bits("NADA");
  1930     12F5  30B6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1931     12F6  00F5               	movwf	Lcd_Write_String_4bits@a
  1932     12F7  3080               	movlw	128
  1933     12F8  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1934     12F9  160A  158A  2576  160A  118A  	fcall	_Lcd_Write_String_4bits
  1935                           
  1936                           ;main_M.c: 111:         }
  1937     12FE  2B8F               	goto	l3802
  1938     12FF                     l3750:
  1939     12FF  034C               	decf	_color^(0+128),w
  1940     1300  1D03               	btfss	3,2
  1941     1301  2B03               	goto	u5591
  1942     1302  2B04               	goto	u5590
  1943     1303                     u5591:
  1944     1303  2B1C               	goto	l3758
  1945     1304                     u5590:
  1946     1304                     l3752:
  1947                           
  1948                           ;main_M.c: 115:             CCPR1L = 62;
  1949     1304  303E               	movlw	62
  1950     1305  1283               	bcf	3,5	;RP0=0, select bank0
  1951     1306  1303               	bcf	3,6	;RP1=0, select bank0
  1952     1307  0095               	movwf	21	;volatile
  1953                           
  1954                           ;main_M.c: 116:             CCPR2L = 62;
  1955     1308  303E               	movlw	62
  1956     1309  009B               	movwf	27	;volatile
  1957     130A                     l3754:
  1958                           
  1959                           ;main_M.c: 117:             Lcd_Set_Cursor_4bits(2,1);
  1960     130A  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1961     130B  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1962     130C  3002               	movlw	2
  1963     130D  160A  158A  25FC  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1964     1312                     l3756:
  1965                           
  1966                           ;main_M.c: 118:             Lcd_Write_String_4bits("VERDE");
  1967     1312  30AA               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1968     1313  00F5               	movwf	Lcd_Write_String_4bits@a
  1969     1314  3080               	movlw	128
  1970     1315  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1971     1316  160A  158A  2576  160A  118A  	fcall	_Lcd_Write_String_4bits
  1972                           
  1973                           ;main_M.c: 119:         }
  1974     131B  2B8F               	goto	l3802
  1975     131C                     l3758:
  1976     131C  3002               	movlw	2
  1977     131D  064C               	xorwf	_color^(0+128),w
  1978     131E  1D03               	btfss	3,2
  1979     131F  2B21               	goto	u5601
  1980     1320  2B22               	goto	u5600
  1981     1321                     u5601:
  1982     1321  2B3A               	goto	l3766
  1983     1322                     u5600:
  1984     1322                     l3760:
  1985                           
  1986                           ;main_M.c: 123:             CCPR1L = 125;
  1987     1322  307D               	movlw	125
  1988     1323  1283               	bcf	3,5	;RP0=0, select bank0
  1989     1324  1303               	bcf	3,6	;RP1=0, select bank0
  1990     1325  0095               	movwf	21	;volatile
  1991                           
  1992                           ;main_M.c: 124:             CCPR2L = 125;
  1993     1326  307D               	movlw	125
  1994     1327  009B               	movwf	27	;volatile
  1995     1328                     l3762:
  1996                           
  1997                           ;main_M.c: 125:             Lcd_Set_Cursor_4bits(2,1);
  1998     1328  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1999     1329  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  2000     132A  3002               	movlw	2
  2001     132B  160A  158A  25FC  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2002     1330                     l3764:
  2003                           
  2004                           ;main_M.c: 126:             Lcd_Write_String_4bits("AZUL");
  2005     1330  30BB               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2006     1331  00F5               	movwf	Lcd_Write_String_4bits@a
  2007     1332  3080               	movlw	128
  2008     1333  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2009     1334  160A  158A  2576  160A  118A  	fcall	_Lcd_Write_String_4bits
  2010                           
  2011                           ;main_M.c: 128:         }
  2012     1339  2B8F               	goto	l3802
  2013     133A                     l3766:
  2014     133A  3003               	movlw	3
  2015     133B  064C               	xorwf	_color^(0+128),w
  2016     133C  1D03               	btfss	3,2
  2017     133D  2B3F               	goto	u5611
  2018     133E  2B40               	goto	u5610
  2019     133F                     u5611:
  2020     133F  2B58               	goto	l3774
  2021     1340                     u5610:
  2022     1340                     l3768:
  2023                           
  2024                           ;main_M.c: 132:             CCPR1L = 187;
  2025     1340  30BB               	movlw	187
  2026     1341  1283               	bcf	3,5	;RP0=0, select bank0
  2027     1342  1303               	bcf	3,6	;RP1=0, select bank0
  2028     1343  0095               	movwf	21	;volatile
  2029                           
  2030                           ;main_M.c: 133:             CCPR2L = 187;
  2031     1344  30BB               	movlw	187
  2032     1345  009B               	movwf	27	;volatile
  2033     1346                     l3770:
  2034                           
  2035                           ;main_M.c: 134:             Lcd_Set_Cursor_4bits(2,1);
  2036     1346  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  2037     1347  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  2038     1348  3002               	movlw	2
  2039     1349  160A  158A  25FC  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2040     134E                     l3772:
  2041                           
  2042                           ;main_M.c: 135:             Lcd_Write_String_4bits("ROJO");
  2043     134E  30C0               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2044     134F  00F5               	movwf	Lcd_Write_String_4bits@a
  2045     1350  3080               	movlw	128
  2046     1351  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2047     1352  160A  158A  2576  160A  118A  	fcall	_Lcd_Write_String_4bits
  2048                           
  2049                           ;main_M.c: 137:         }
  2050     1357  2B8F               	goto	l3802
  2051     1358                     l3774:
  2052     1358  084A               	movf	(_distancia+3)^(0+128),w
  2053     1359  00F3               	movwf	___flge@ff1+3
  2054     135A  0849               	movf	(_distancia+2)^(0+128),w
  2055     135B  00F2               	movwf	___flge@ff1+2
  2056     135C  0848               	movf	(_distancia+1)^(0+128),w
  2057     135D  00F1               	movwf	___flge@ff1+1
  2058     135E  0847               	movf	_distancia^(0+128),w
  2059     135F  00F0               	movwf	___flge@ff1
  2060     1360  3040               	movlw	64
  2061     1361  00F7               	movwf	___flge@ff2+3
  2062     1362  30A0               	movlw	160
  2063     1363  00F6               	movwf	___flge@ff2+2
  2064     1364  3000               	movlw	0
  2065     1365  00F5               	movwf	___flge@ff2+1
  2066     1366  3000               	movlw	0
  2067     1367  00F4               	movwf	___flge@ff2
  2068     1368  120A  158A  2002  160A  118A  	fcall	___flge
  2069     136D  1803               	btfsc	3,0
  2070     136E  2B70               	goto	u5621
  2071     136F  2B71               	goto	u5620
  2072     1370                     u5621:
  2073     1370  2B78               	goto	l3778
  2074     1371                     u5620:
  2075     1371                     l3776:
  2076                           
  2077                           ;main_M.c: 141:             PORTDbits.RD0 = 0;
  2078     1371  1283               	bcf	3,5	;RP0=0, select bank0
  2079     1372  1303               	bcf	3,6	;RP1=0, select bank0
  2080     1373  1008               	bcf	8,0	;volatile
  2081                           
  2082                           ;main_M.c: 142:             PORTDbits.RD1 = 0;
  2083     1374  1088               	bcf	8,1	;volatile
  2084                           
  2085                           ;main_M.c: 143:             PORTDbits.RD2 = 0;
  2086     1375  1108               	bcf	8,2	;volatile
  2087                           
  2088                           ;main_M.c: 144:             PORTDbits.RD3 = 0;
  2089     1376  1188               	bcf	8,3	;volatile
  2090                           
  2091                           ;main_M.c: 146:         }
  2092     1377  2B8F               	goto	l3802
  2093     1378                     l3778:
  2094     1378                     l3794:
  2095     1378                     l3796:
  2096                           
  2097                           ;main_M.c: 171:             PORTDbits.RD0 = 0;
  2098     1378  1283               	bcf	3,5	;RP0=0, select bank0
  2099     1379  1303               	bcf	3,6	;RP1=0, select bank0
  2100     137A  1008               	bcf	8,0	;volatile
  2101                           
  2102                           ;main_M.c: 172:             PORTDbits.RD1 = 0;
  2103     137B  1088               	bcf	8,1	;volatile
  2104                           
  2105                           ;main_M.c: 173:             PORTDbits.RD2 = 1;
  2106     137C  1508               	bsf	8,2	;volatile
  2107                           
  2108                           ;main_M.c: 174:             PORTDbits.RD3 = 0;
  2109     137D  1188               	bcf	8,3	;volatile
  2110     137E                     l3798:
  2111                           
  2112                           ;main_M.c: 175:             Lcd_Set_Cursor_4bits(2,7);
  2113     137E  3007               	movlw	7
  2114     137F  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2115     1380  3002               	movlw	2
  2116     1381  160A  158A  25FC  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2117     1386                     l3800:
  2118                           
  2119                           ;main_M.c: 176:             Lcd_Write_String_4bits("LINEA");
  2120     1386  30A4               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2121     1387  00F5               	movwf	Lcd_Write_String_4bits@a
  2122     1388  3080               	movlw	128
  2123     1389  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2124     138A  160A  158A  2576  160A  118A  	fcall	_Lcd_Write_String_4bits
  2125     138F                     l3802:
  2126                           
  2127                           ;main_M.c: 180:         _delay((unsigned long)((50)*(8000000/4000.0)));
  2128     138F  3082               	movlw	130
  2129     1390  1683               	bsf	3,5	;RP0=1, select bank1
  2130     1391  1303               	bcf	3,6	;RP1=0, select bank1
  2131     1392  00C4               	movwf	(??_main^(0+128)+1)
  2132     1393  30DD               	movlw	221
  2133     1394  00C3               	movwf	??_main^(0+128)
  2134     1395                     u5697:
  2135     1395  0BC3               	decfsz	??_main^(0+128),f
  2136     1396  2B95               	goto	u5697
  2137     1397  0BC4               	decfsz	(??_main^(0+128)+1),f
  2138     1398  2B95               	goto	u5697
  2139     1399  29FA               	goto	l3712
  2140     139A  120A  118A  2800   	ljmp	start
  2141     139D                     __end_of_main:
  2142                           
  2143                           	psect	text1
  2144     01AF                     __ptext1:	
  2145 ;; *************** function _sprintf *****************
  2146 ;; Defined at:
  2147 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  sp              1    wreg     PTR unsigned char 
  2150 ;;		 -> distanciaLCD(16), 
  2151 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2152 ;;		 -> STR_1(19), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2155 ;;		 -> distanciaLCD(16), 
  2156 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2157 ;;  tmpval          4   23[BANK1 ] struct .
  2158 ;;  val             4   17[BANK1 ] unsigned long 
  2159 ;;  prec            2   28[BANK1 ] int 
  2160 ;;  eexp            2   21[BANK1 ] int 
  2161 ;;  flag            2   15[BANK1 ] unsigned short 
  2162 ;;  cp              2    0        PTR const unsigned char 
  2163 ;;  len             2    0        unsigned int 
  2164 ;;  width           2    0        int 
  2165 ;;  c               1   34[BANK1 ] unsigned char 
  2166 ;;  ap              1   14[BANK1 ] PTR void [1]
  2167 ;;		 -> ?_sprintf(2), 
  2168 ;;  d               1    0        unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2    0[BANK1 ] int 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         0       0       5       0       0
  2179 ;;      Locals:         0       0      25       0       0
  2180 ;;      Temps:          0       0       5       0       0
  2181 ;;      Totals:         0       0      35       0       0
  2182 ;;Total ram usage:       35 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 3
  2185 ;; This function calls:
  2186 ;;		___awdiv
  2187 ;;		___fladd
  2188 ;;		___fleq
  2189 ;;		___flge
  2190 ;;		___flmul
  2191 ;;		___flneg
  2192 ;;		___flsub
  2193 ;;		___fltol
  2194 ;;		___lldiv
  2195 ;;		___llmod
  2196 ;;		___wmul
  2197 ;;		___xxtofl
  2198 ;;		__div_to_l_
  2199 ;;		__tdiv_to_l_
  2200 ;;		_fround
  2201 ;;		_isdigit
  2202 ;;		_scale
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208     01AF                     _sprintf:	
  2209                           ;psect for function _sprintf
  2210                           
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2214                           ;sprintf@sp stored from wreg
  2215     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  2216     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  2217     01B1  00BB               	movwf	sprintf@sp^(0+128)
  2218     01B2                     l3488:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2221     01B2  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2222     01B3  00AE               	movwf	sprintf@ap^(0+128)
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2225     01B4  2FDA               	goto	l3682
  2226     01B5                     l3490:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2229     01B5  3025               	movlw	37
  2230     01B6  0642               	xorwf	sprintf@c^(0+128),w
  2231     01B7  1903               	btfsc	3,2
  2232     01B8  29BA               	goto	u5231
  2233     01B9  29BB               	goto	u5230
  2234     01BA                     u5231:
  2235     01BA  29C5               	goto	l3496
  2236     01BB                     u5230:
  2237     01BB                     l3492:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2240     01BB  083B               	movf	sprintf@sp^(0+128),w
  2241     01BC  0084               	movwf	4
  2242     01BD  0842               	movf	sprintf@c^(0+128),w
  2243     01BE  1383               	bcf	3,7	;select IRP bank0
  2244     01BF  0080               	movwf	0
  2245     01C0                     l3494:
  2246     01C0  3001               	movlw	1
  2247     01C1  00A5               	movwf	??_sprintf^(0+128)
  2248     01C2  0825               	movf	??_sprintf^(0+128),w
  2249     01C3  07BB               	addwf	sprintf@sp^(0+128),f
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2252     01C4  2FDA               	goto	l3682
  2253     01C5                     l3496:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2256     01C5  01AF               	clrf	sprintf@flag^(0+128)
  2257     01C6  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2258     01C7                     l3498:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2261     01C7  0820               	movf	sprintf@f^(0+128),w
  2262     01C8  0084               	movwf	4
  2263     01C9  120A  118A  200D  120A  118A  	fcall	stringdir
  2264     01CE  3A2E               	xorlw	46
  2265     01CF  1D03               	skipz
  2266     01D0  29D2               	goto	u5241
  2267     01D1  29D3               	goto	u5240
  2268     01D2                     u5241:
  2269     01D2  2A18               	goto	l3514
  2270     01D3                     u5240:
  2271     01D3                     l3500:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2274     01D3  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2275     01D4                     l3502:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2278     01D4  3001               	movlw	1
  2279     01D5  00A5               	movwf	??_sprintf^(0+128)
  2280     01D6  0825               	movf	??_sprintf^(0+128),w
  2281     01D7  07A0               	addwf	sprintf@f^(0+128),f
  2282     01D8                     l3504:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2285     01D8  01BC               	clrf	sprintf@prec^(0+128)
  2286     01D9  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2289     01DA  2A07               	goto	l3512
  2290     01DB                     l3506:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2293     01DB  300A               	movlw	10
  2294     01DC  00F0               	movwf	___wmul@multiplier
  2295     01DD  3000               	movlw	0
  2296     01DE  00F1               	movwf	___wmul@multiplier+1
  2297     01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2298     01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2299     01E1  083D               	movf	(sprintf@prec+1)^(0+128),w
  2300     01E2  00F3               	movwf	___wmul@multiplicand+1
  2301     01E3  083C               	movf	sprintf@prec^(0+128),w
  2302     01E4  00F2               	movwf	___wmul@multiplicand
  2303     01E5  160A  158A  2467  120A  118A  	fcall	___wmul
  2304     01EA  0871               	movf	?___wmul+1,w
  2305     01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2306     01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2307     01ED  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2308     01EE  0870               	movf	?___wmul,w
  2309     01EF  00BC               	movwf	sprintf@prec^(0+128)
  2310     01F0                     l3508:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2313     01F0  0820               	movf	sprintf@f^(0+128),w
  2314     01F1  0084               	movwf	4
  2315     01F2  120A  118A  200D  120A  118A  	fcall	stringdir
  2316     01F7  3ED0               	addlw	208
  2317     01F8  00A5               	movwf	??_sprintf^(0+128)
  2318     01F9  30FF               	movlw	255
  2319     01FA  1803               	skipnc
  2320     01FB  3000               	movlw	0
  2321     01FC  00A6               	movwf	(??_sprintf^(0+128)+1)
  2322     01FD  0825               	movf	??_sprintf^(0+128),w
  2323     01FE  07BC               	addwf	sprintf@prec^(0+128),f
  2324     01FF  1803               	skipnc
  2325     0200  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2326     0201  0826               	movf	(??_sprintf+1)^(0+128),w
  2327     0202  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2328     0203                     l3510:
  2329     0203  3001               	movlw	1
  2330     0204  00A5               	movwf	??_sprintf^(0+128)
  2331     0205  0825               	movf	??_sprintf^(0+128),w
  2332     0206  07A0               	addwf	sprintf@f^(0+128),f
  2333     0207                     l3512:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2336     0207  0820               	movf	sprintf@f^(0+128),w
  2337     0208  0084               	movwf	4
  2338     0209  120A  118A  200D  120A  118A  	fcall	stringdir
  2339     020E  160A  158A  23D0  120A  118A  	fcall	_isdigit
  2340     0213  1803               	btfsc	3,0
  2341     0214  2A16               	goto	u5251
  2342     0215  2A17               	goto	u5250
  2343     0216                     u5251:
  2344     0216  29DB               	goto	l3506
  2345     0217                     u5250:
  2346     0217  2A1E               	goto	l3520
  2347     0218                     l3514:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2350     0218  01BC               	clrf	sprintf@prec^(0+128)
  2351     0219  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2352     021A                     l3516:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2355     021A  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2356     021B  2A1E               	goto	l3520
  2357     021C                     l392:	
  2358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2359                           
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2362     021C  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2365     021D  2A3A               	goto	l3522
  2366     021E                     l3520:
  2367     021E  3001               	movlw	1
  2368     021F  1683               	bsf	3,5	;RP0=1, select bank1
  2369     0220  1303               	bcf	3,6	;RP1=0, select bank1
  2370     0221  07A0               	addwf	sprintf@f^(0+128),f
  2371     0222  30FF               	movlw	-1
  2372     0223  0720               	addwf	sprintf@f^(0+128),w
  2373     0224  0084               	movwf	4
  2374     0225  120A  118A  200D  120A  118A  	fcall	stringdir
  2375     022A  00C2               	movwf	sprintf@c^(0+128)
  2376     022B  00A5               	movwf	??_sprintf^(0+128)
  2377     022C  01A6               	clrf	(??_sprintf^(0+128)+1)
  2378                           
  2379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2380                           ; Switch size 1, requested type "simple"
  2381                           ; Number of cases is 1, Range of values is 0 to 0
  2382                           ; switch strategies available:
  2383                           ; Name         Instructions Cycles
  2384                           ; simple_byte            4     3 (average)
  2385                           ; direct_byte           11     8 (fixed)
  2386                           ; jumptable            260     6 (fixed)
  2387                           ;	Chosen strategy is simple_byte
  2388     022D  0826               	movf	(??_sprintf+1)^(0+128),w
  2389     022E  3A00               	xorlw	0	; case 0
  2390     022F  1903               	skipnz
  2391     0230  2A32               	goto	l3854
  2392     0231  2FDA               	goto	l3682
  2393     0232                     l3854:
  2394                           
  2395                           ; Switch size 1, requested type "simple"
  2396                           ; Number of cases is 2, Range of values is 0 to 102
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte            7     4 (average)
  2400                           ; jumptable            260     6 (fixed)
  2401                           ;	Chosen strategy is simple_byte
  2402     0232  0825               	movf	??_sprintf^(0+128),w
  2403     0233  3A00               	xorlw	0	; case 0
  2404     0234  1903               	skipnz
  2405     0235  2FEA               	goto	l3684
  2406     0236  3A66               	xorlw	102	; case 102
  2407     0237  1903               	skipnz
  2408     0238  2A1C               	goto	l392
  2409     0239  2FDA               	goto	l3682
  2410     023A                     l3522:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2413     023A  3000               	movlw	0
  2414     023B  052F               	andwf	sprintf@flag^(0+128),w
  2415     023C  00A5               	movwf	??_sprintf^(0+128)
  2416     023D  3007               	movlw	7
  2417     023E  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2418     023F  00A6               	movwf	(??_sprintf+1)^(0+128)
  2419     0240  0825               	movf	??_sprintf^(0+128),w
  2420     0241  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2421     0242  1903               	btfsc	3,2
  2422     0243  2A45               	goto	u5261
  2423     0244  2A46               	goto	u5260
  2424     0245                     u5261:
  2425     0245  2F97               	goto	l3664
  2426     0246                     u5260:
  2427     0246                     l3524:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2430     0246  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2431     0247  2A49               	goto	u5271
  2432     0248  2A4A               	goto	u5270
  2433     0249                     u5271:
  2434     0249  2A4E               	goto	l3528
  2435     024A                     u5270:
  2436     024A                     l3526:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2439     024A  3006               	movlw	6
  2440     024B  00BC               	movwf	sprintf@prec^(0+128)
  2441     024C  3000               	movlw	0
  2442     024D  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2443     024E                     l3528:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2446     024E  082E               	movf	sprintf@ap^(0+128),w
  2447     024F  0084               	movwf	4
  2448     0250  1383               	bcf	3,7	;select IRP bank0
  2449     0251  0800               	movf	0,w
  2450     0252  00BE               	movwf	sprintf@fval^(0+128)
  2451     0253  0A84               	incf	4,f
  2452     0254  0800               	movf	0,w
  2453     0255  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2454     0256  0A84               	incf	4,f
  2455     0257  0800               	movf	0,w
  2456     0258  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2457     0259  0A84               	incf	4,f
  2458     025A  0800               	movf	0,w
  2459     025B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2460     025C                     l3530:
  2461     025C  3004               	movlw	4
  2462     025D  00A5               	movwf	??_sprintf^(0+128)
  2463     025E  0825               	movf	??_sprintf^(0+128),w
  2464     025F  07AE               	addwf	sprintf@ap^(0+128),f
  2465     0260                     l3532:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2468     0260  0841               	movf	(sprintf@fval+3)^(0+128),w
  2469     0261  00F3               	movwf	___flge@ff1+3
  2470     0262  0840               	movf	(sprintf@fval+2)^(0+128),w
  2471     0263  00F2               	movwf	___flge@ff1+2
  2472     0264  083F               	movf	(sprintf@fval+1)^(0+128),w
  2473     0265  00F1               	movwf	___flge@ff1+1
  2474     0266  083E               	movf	sprintf@fval^(0+128),w
  2475     0267  00F0               	movwf	___flge@ff1
  2476     0268  3000               	movlw	0
  2477     0269  00F7               	movwf	___flge@ff2+3
  2478     026A  3000               	movlw	0
  2479     026B  00F6               	movwf	___flge@ff2+2
  2480     026C  3000               	movlw	0
  2481     026D  00F5               	movwf	___flge@ff2+1
  2482     026E  3000               	movlw	0
  2483     026F  00F4               	movwf	___flge@ff2
  2484     0270  120A  158A  2002  120A  118A  	fcall	___flge
  2485     0275  1803               	btfsc	3,0
  2486     0276  2A78               	goto	u5281
  2487     0277  2A79               	goto	u5280
  2488     0278                     u5281:
  2489     0278  2A96               	goto	l3538
  2490     0279                     u5280:
  2491     0279                     l3534:
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2494     0279  1683               	bsf	3,5	;RP0=1, select bank1
  2495     027A  1303               	bcf	3,6	;RP1=0, select bank1
  2496     027B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2497     027C  00F3               	movwf	___flneg@f1+3
  2498     027D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2499     027E  00F2               	movwf	___flneg@f1+2
  2500     027F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2501     0280  00F1               	movwf	___flneg@f1+1
  2502     0281  083E               	movf	sprintf@fval^(0+128),w
  2503     0282  00F0               	movwf	___flneg@f1
  2504     0283  160A  158A  239E  120A  118A  	fcall	___flneg
  2505     0288  0873               	movf	?___flneg+3,w
  2506     0289  1683               	bsf	3,5	;RP0=1, select bank1
  2507     028A  1303               	bcf	3,6	;RP1=0, select bank1
  2508     028B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2509     028C  0872               	movf	?___flneg+2,w
  2510     028D  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2511     028E  0871               	movf	?___flneg+1,w
  2512     028F  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2513     0290  0870               	movf	?___flneg,w
  2514     0291  00BE               	movwf	sprintf@fval^(0+128)
  2515     0292                     l3536:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2518     0292  3003               	movlw	3
  2519     0293  04AF               	iorwf	sprintf@flag^(0+128),f
  2520     0294  3000               	movlw	0
  2521     0295  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2522     0296                     l3538:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2525     0296  1683               	bsf	3,5	;RP0=1, select bank1
  2526     0297  1303               	bcf	3,6	;RP1=0, select bank1
  2527     0298  01B5               	clrf	sprintf@eexp^(0+128)
  2528     0299  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2529     029A                     l3540:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2532     029A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2533     029B  00F3               	movwf	___fleq@ff1+3
  2534     029C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2535     029D  00F2               	movwf	___fleq@ff1+2
  2536     029E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2537     029F  00F1               	movwf	___fleq@ff1+1
  2538     02A0  083E               	movf	sprintf@fval^(0+128),w
  2539     02A1  00F0               	movwf	___fleq@ff1
  2540     02A2  3000               	movlw	0
  2541     02A3  00F7               	movwf	___fleq@ff2+3
  2542     02A4  3000               	movlw	0
  2543     02A5  00F6               	movwf	___fleq@ff2+2
  2544     02A6  3000               	movlw	0
  2545     02A7  00F5               	movwf	___fleq@ff2+1
  2546     02A8  3000               	movlw	0
  2547     02A9  00F4               	movwf	___fleq@ff2
  2548     02AA  160A  158A  2642  120A  118A  	fcall	___fleq
  2549     02AF  1803               	btfsc	3,0
  2550     02B0  2AB2               	goto	u5291
  2551     02B1  2AB3               	goto	u5290
  2552     02B2                     u5291:
  2553     02B2  2BA3               	goto	l3566
  2554     02B3                     u5290:
  2555     02B3                     l3542:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2558     02B3  1003               	clrc
  2559     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2560     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  2561     02B6  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2562     02B7  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2563     02B8  3E82               	addlw	130
  2564     02B9  00B5               	movwf	sprintf@eexp^(0+128)
  2565     02BA  30FF               	movlw	255
  2566     02BB  1803               	skipnc
  2567     02BC  3000               	movlw	0
  2568     02BD  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2569     02BE                     l3544:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2572     02BE  30FF               	movlw	255
  2573     02BF  07B5               	addwf	sprintf@eexp^(0+128),f
  2574     02C0  1803               	skipnc
  2575     02C1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2576     02C2  30FF               	movlw	255
  2577     02C3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2578     02C4                     l3546:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2581     02C4  3003               	movlw	3
  2582     02C5  00F0               	movwf	___wmul@multiplier
  2583     02C6  3000               	movlw	0
  2584     02C7  00F1               	movwf	___wmul@multiplier+1
  2585     02C8  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2586     02C9  00F3               	movwf	___wmul@multiplicand+1
  2587     02CA  0835               	movf	sprintf@eexp^(0+128),w
  2588     02CB  00F2               	movwf	___wmul@multiplicand
  2589     02CC  160A  158A  2467  120A  118A  	fcall	___wmul
  2590     02D1  0871               	movf	?___wmul+1,w
  2591     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2592     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2593     02D4  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2594     02D5  0870               	movf	?___wmul,w
  2595     02D6  00B5               	movwf	sprintf@eexp^(0+128)
  2596     02D7                     l3548:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2599     02D7  300A               	movlw	10
  2600     02D8  00F7               	movwf	___awdiv@divisor
  2601     02D9  3000               	movlw	0
  2602     02DA  00F8               	movwf	___awdiv@divisor+1
  2603     02DB  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2604     02DC  00FA               	movwf	___awdiv@dividend+1
  2605     02DD  0835               	movf	sprintf@eexp^(0+128),w
  2606     02DE  00F9               	movwf	___awdiv@dividend
  2607     02DF  160A  118A  203A  120A  118A  	fcall	___awdiv
  2608     02E4  0878               	movf	?___awdiv+1,w
  2609     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2610     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2611     02E7  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2612     02E8  0877               	movf	?___awdiv,w
  2613     02E9  00B5               	movwf	sprintf@eexp^(0+128)
  2614     02EA                     l3550:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2617     02EA  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2618     02EB  2AED               	goto	u5301
  2619     02EC  2AEE               	goto	u5300
  2620     02ED                     u5301:
  2621     02ED  2AF4               	goto	l3554
  2622     02EE                     u5300:
  2623     02EE                     l3552:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2626     02EE  30FF               	movlw	255
  2627     02EF  07B5               	addwf	sprintf@eexp^(0+128),f
  2628     02F0  1803               	skipnc
  2629     02F1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2630     02F2  30FF               	movlw	255
  2631     02F3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2632     02F4                     l3554:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2635     02F4  0335               	decf	sprintf@eexp^(0+128),w
  2636     02F5  3AFF               	xorlw	255
  2637     02F6  120A  158A  24A1  120A  118A  	fcall	_scale
  2638     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2639     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2640     02FD  0841               	movf	?_scale+3,w
  2641     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2642     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2643     0300  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2644     0301  1283               	bcf	3,5	;RP0=0, select bank0
  2645     0302  1303               	bcf	3,6	;RP1=0, select bank0
  2646     0303  0840               	movf	?_scale+2,w
  2647     0304  1683               	bsf	3,5	;RP0=1, select bank1
  2648     0305  1303               	bcf	3,6	;RP1=0, select bank1
  2649     0306  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2650     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2651     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2652     0309  083F               	movf	?_scale+1,w
  2653     030A  1683               	bsf	3,5	;RP0=1, select bank1
  2654     030B  1303               	bcf	3,6	;RP1=0, select bank1
  2655     030C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2656     030D  1283               	bcf	3,5	;RP0=0, select bank0
  2657     030E  1303               	bcf	3,6	;RP1=0, select bank0
  2658     030F  083E               	movf	?_scale,w
  2659     0310  1683               	bsf	3,5	;RP0=1, select bank1
  2660     0311  1303               	bcf	3,6	;RP1=0, select bank1
  2661     0312  00B7               	movwf	sprintf@tmpval^(0+128)
  2662     0313                     l3556:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2665     0313  0841               	movf	(sprintf@fval+3)^(0+128),w
  2666     0314  1283               	bcf	3,5	;RP0=0, select bank0
  2667     0315  1303               	bcf	3,6	;RP1=0, select bank0
  2668     0316  00A7               	movwf	___flmul@b+3
  2669     0317  1683               	bsf	3,5	;RP0=1, select bank1
  2670     0318  1303               	bcf	3,6	;RP1=0, select bank1
  2671     0319  0840               	movf	(sprintf@fval+2)^(0+128),w
  2672     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2673     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2674     031C  00A6               	movwf	___flmul@b+2
  2675     031D  1683               	bsf	3,5	;RP0=1, select bank1
  2676     031E  1303               	bcf	3,6	;RP1=0, select bank1
  2677     031F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2678     0320  1283               	bcf	3,5	;RP0=0, select bank0
  2679     0321  1303               	bcf	3,6	;RP1=0, select bank0
  2680     0322  00A5               	movwf	___flmul@b+1
  2681     0323  1683               	bsf	3,5	;RP0=1, select bank1
  2682     0324  1303               	bcf	3,6	;RP1=0, select bank1
  2683     0325  083E               	movf	sprintf@fval^(0+128),w
  2684     0326  1283               	bcf	3,5	;RP0=0, select bank0
  2685     0327  1303               	bcf	3,6	;RP1=0, select bank0
  2686     0328  00A4               	movwf	___flmul@b
  2687     0329  1683               	bsf	3,5	;RP0=1, select bank1
  2688     032A  1303               	bcf	3,6	;RP1=0, select bank1
  2689     032B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2690     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2691     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2692     032E  00AB               	movwf	___flmul@a+3
  2693     032F  1683               	bsf	3,5	;RP0=1, select bank1
  2694     0330  1303               	bcf	3,6	;RP1=0, select bank1
  2695     0331  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2696     0332  1283               	bcf	3,5	;RP0=0, select bank0
  2697     0333  1303               	bcf	3,6	;RP1=0, select bank0
  2698     0334  00AA               	movwf	___flmul@a+2
  2699     0335  1683               	bsf	3,5	;RP0=1, select bank1
  2700     0336  1303               	bcf	3,6	;RP1=0, select bank1
  2701     0337  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2702     0338  1283               	bcf	3,5	;RP0=0, select bank0
  2703     0339  1303               	bcf	3,6	;RP1=0, select bank0
  2704     033A  00A9               	movwf	___flmul@a+1
  2705     033B  1683               	bsf	3,5	;RP0=1, select bank1
  2706     033C  1303               	bcf	3,6	;RP1=0, select bank1
  2707     033D  0837               	movf	sprintf@tmpval^(0+128),w
  2708     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2709     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2710     0340  00A8               	movwf	___flmul@a
  2711     0341  120A  158A  215C  120A  118A  	fcall	___flmul
  2712     0346  1283               	bcf	3,5	;RP0=0, select bank0
  2713     0347  1303               	bcf	3,6	;RP1=0, select bank0
  2714     0348  0827               	movf	?___flmul+3,w
  2715     0349  1683               	bsf	3,5	;RP0=1, select bank1
  2716     034A  1303               	bcf	3,6	;RP1=0, select bank1
  2717     034B  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2718     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2719     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2720     034E  0826               	movf	?___flmul+2,w
  2721     034F  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0350  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0351  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2724     0352  1283               	bcf	3,5	;RP0=0, select bank0
  2725     0353  1303               	bcf	3,6	;RP1=0, select bank0
  2726     0354  0825               	movf	?___flmul+1,w
  2727     0355  1683               	bsf	3,5	;RP0=1, select bank1
  2728     0356  1303               	bcf	3,6	;RP1=0, select bank1
  2729     0357  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2730     0358  1283               	bcf	3,5	;RP0=0, select bank0
  2731     0359  1303               	bcf	3,6	;RP1=0, select bank0
  2732     035A  0824               	movf	?___flmul,w
  2733     035B  1683               	bsf	3,5	;RP0=1, select bank1
  2734     035C  1303               	bcf	3,6	;RP1=0, select bank1
  2735     035D  00B7               	movwf	sprintf@tmpval^(0+128)
  2736     035E                     l3558:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2739     035E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2740     035F  00F3               	movwf	___flge@ff1+3
  2741     0360  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2742     0361  00F2               	movwf	___flge@ff1+2
  2743     0362  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2744     0363  00F1               	movwf	___flge@ff1+1
  2745     0364  0837               	movf	sprintf@tmpval^(0+128),w
  2746     0365  00F0               	movwf	___flge@ff1
  2747     0366  303F               	movlw	63
  2748     0367  00F7               	movwf	___flge@ff2+3
  2749     0368  3080               	movlw	128
  2750     0369  00F6               	movwf	___flge@ff2+2
  2751     036A  3000               	movlw	0
  2752     036B  00F5               	movwf	___flge@ff2+1
  2753     036C  3000               	movlw	0
  2754     036D  00F4               	movwf	___flge@ff2
  2755     036E  120A  158A  2002  120A  118A  	fcall	___flge
  2756     0373  1803               	btfsc	3,0
  2757     0374  2B76               	goto	u5311
  2758     0375  2B77               	goto	u5310
  2759     0376                     u5311:
  2760     0376  2B80               	goto	l3562
  2761     0377                     u5310:
  2762     0377                     l3560:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2765     0377  30FF               	movlw	255
  2766     0378  1683               	bsf	3,5	;RP0=1, select bank1
  2767     0379  1303               	bcf	3,6	;RP1=0, select bank1
  2768     037A  07B5               	addwf	sprintf@eexp^(0+128),f
  2769     037B  1803               	skipnc
  2770     037C  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2771     037D  30FF               	movlw	255
  2772     037E  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2773     037F  2BA3               	goto	l3566
  2774     0380                     l3562:
  2775     0380  1683               	bsf	3,5	;RP0=1, select bank1
  2776     0381  1303               	bcf	3,6	;RP1=0, select bank1
  2777     0382  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2778     0383  00F3               	movwf	___flge@ff1+3
  2779     0384  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2780     0385  00F2               	movwf	___flge@ff1+2
  2781     0386  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2782     0387  00F1               	movwf	___flge@ff1+1
  2783     0388  0837               	movf	sprintf@tmpval^(0+128),w
  2784     0389  00F0               	movwf	___flge@ff1
  2785     038A  3041               	movlw	65
  2786     038B  00F7               	movwf	___flge@ff2+3
  2787     038C  3020               	movlw	32
  2788     038D  00F6               	movwf	___flge@ff2+2
  2789     038E  3000               	movlw	0
  2790     038F  00F5               	movwf	___flge@ff2+1
  2791     0390  3000               	movlw	0
  2792     0391  00F4               	movwf	___flge@ff2
  2793     0392  120A  158A  2002  120A  118A  	fcall	___flge
  2794     0397  1C03               	btfss	3,0
  2795     0398  2B9A               	goto	u5321
  2796     0399  2B9B               	goto	u5320
  2797     039A                     u5321:
  2798     039A  2BA3               	goto	l3566
  2799     039B                     u5320:
  2800     039B                     l3564:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2803     039B  3001               	movlw	1
  2804     039C  1683               	bsf	3,5	;RP0=1, select bank1
  2805     039D  1303               	bcf	3,6	;RP1=0, select bank1
  2806     039E  07B5               	addwf	sprintf@eexp^(0+128),f
  2807     039F  1803               	skipnc
  2808     03A0  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2809     03A1  3000               	movlw	0
  2810     03A2  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2811     03A3                     l3566:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2814     03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2815     03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2816     03A5  083D               	movf	(sprintf@prec+1)^(0+128),w
  2817     03A6  3A80               	xorlw	128
  2818     03A7  00FF               	movwf	btemp+1
  2819     03A8  3080               	movlw	128
  2820     03A9  027F               	subwf	btemp+1,w
  2821     03AA  1D03               	skipz
  2822     03AB  2BAE               	goto	u5335
  2823     03AC  300D               	movlw	13
  2824     03AD  023C               	subwf	sprintf@prec^(0+128),w
  2825     03AE                     u5335:
  2826     03AE  1803               	skipnc
  2827     03AF  2BB1               	goto	u5331
  2828     03B0  2BB2               	goto	u5330
  2829     03B1                     u5331:
  2830     03B1  2BF9               	goto	l3570
  2831     03B2                     u5330:
  2832     03B2                     l3568:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2835     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2836     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2837     03B4  083C               	movf	sprintf@prec^(0+128),w
  2838     03B5  160A  118A  239D  120A  118A  	fcall	_fround
  2839     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2840     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2841     03BC  0841               	movf	?_fround+3,w
  2842     03BD  00D5               	movwf	___fladd@b+3
  2843     03BE  0840               	movf	?_fround+2,w
  2844     03BF  00D4               	movwf	___fladd@b+2
  2845     03C0  083F               	movf	?_fround+1,w
  2846     03C1  00D3               	movwf	___fladd@b+1
  2847     03C2  083E               	movf	?_fround,w
  2848     03C3  00D2               	movwf	___fladd@b
  2849     03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2850     03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2851     03C6  0841               	movf	(sprintf@fval+3)^(0+128),w
  2852     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2853     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2854     03C9  00D9               	movwf	___fladd@a+3
  2855     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2856     03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2857     03CC  0840               	movf	(sprintf@fval+2)^(0+128),w
  2858     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2859     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2860     03CF  00D8               	movwf	___fladd@a+2
  2861     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2862     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2863     03D2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2864     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2865     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2866     03D5  00D7               	movwf	___fladd@a+1
  2867     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2868     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2869     03D8  083E               	movf	sprintf@fval^(0+128),w
  2870     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2871     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2872     03DB  00D6               	movwf	___fladd@a
  2873     03DC  160A  118A  25A8  120A  118A  	fcall	___fladd
  2874     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2875     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2876     03E3  0855               	movf	?___fladd+3,w
  2877     03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2878     03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2879     03E6  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2880     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2881     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2882     03E9  0854               	movf	?___fladd+2,w
  2883     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2884     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2885     03EC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2886     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2887     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2888     03EF  0853               	movf	?___fladd+1,w
  2889     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2890     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2891     03F2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2892     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2893     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2894     03F5  0852               	movf	?___fladd,w
  2895     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2896     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2897     03F8  00BE               	movwf	sprintf@fval^(0+128)
  2898     03F9                     l3570:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2901     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2902     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2903     03FB  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2904     03FC  3A80               	xorlw	128
  2905     03FD  00FF               	movwf	btemp+1
  2906     03FE  3080               	movlw	128
  2907     03FF  027F               	subwf	btemp+1,w
  2908     0400  1D03               	skipz
  2909     0401  2C04               	goto	u5345
  2910     0402  300A               	movlw	10
  2911     0403  0235               	subwf	sprintf@eexp^(0+128),w
  2912     0404                     u5345:
  2913     0404  1803               	skipnc
  2914     0405  2C07               	goto	u5341
  2915     0406  2C08               	goto	u5340
  2916     0407                     u5341:
  2917     0407  2C59               	goto	l3578
  2918     0408                     u5340:
  2919     0408                     l3572:
  2920     0408  1683               	bsf	3,5	;RP0=1, select bank1
  2921     0409  1303               	bcf	3,6	;RP1=0, select bank1
  2922     040A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2923     040B  00F3               	movwf	___fleq@ff1+3
  2924     040C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2925     040D  00F2               	movwf	___fleq@ff1+2
  2926     040E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2927     040F  00F1               	movwf	___fleq@ff1+1
  2928     0410  083E               	movf	sprintf@fval^(0+128),w
  2929     0411  00F0               	movwf	___fleq@ff1
  2930     0412  3000               	movlw	0
  2931     0413  00F7               	movwf	___fleq@ff2+3
  2932     0414  3000               	movlw	0
  2933     0415  00F6               	movwf	___fleq@ff2+2
  2934     0416  3000               	movlw	0
  2935     0417  00F5               	movwf	___fleq@ff2+1
  2936     0418  3000               	movlw	0
  2937     0419  00F4               	movwf	___fleq@ff2
  2938     041A  160A  158A  2642  120A  118A  	fcall	___fleq
  2939     041F  1803               	btfsc	3,0
  2940     0420  2C22               	goto	u5351
  2941     0421  2C23               	goto	u5350
  2942     0422                     u5351:
  2943     0422  2CCB               	goto	l3592
  2944     0423                     u5350:
  2945     0423                     l3574:
  2946     0423  1683               	bsf	3,5	;RP0=1, select bank1
  2947     0424  1303               	bcf	3,6	;RP1=0, select bank1
  2948     0425  0841               	movf	(sprintf@fval+3)^(0+128),w
  2949     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2950     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2951     0428  00D4               	movwf	___fltol@f1+3
  2952     0429  1683               	bsf	3,5	;RP0=1, select bank1
  2953     042A  1303               	bcf	3,6	;RP1=0, select bank1
  2954     042B  0840               	movf	(sprintf@fval+2)^(0+128),w
  2955     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2956     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2957     042E  00D3               	movwf	___fltol@f1+2
  2958     042F  1683               	bsf	3,5	;RP0=1, select bank1
  2959     0430  1303               	bcf	3,6	;RP1=0, select bank1
  2960     0431  083F               	movf	(sprintf@fval+1)^(0+128),w
  2961     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2962     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2963     0434  00D2               	movwf	___fltol@f1+1
  2964     0435  1683               	bsf	3,5	;RP0=1, select bank1
  2965     0436  1303               	bcf	3,6	;RP1=0, select bank1
  2966     0437  083E               	movf	sprintf@fval^(0+128),w
  2967     0438  1283               	bcf	3,5	;RP0=0, select bank0
  2968     0439  1303               	bcf	3,6	;RP1=0, select bank0
  2969     043A  00D1               	movwf	___fltol@f1
  2970     043B  160A  118A  20A3  120A  118A  	fcall	___fltol
  2971     0440  1283               	bcf	3,5	;RP0=0, select bank0
  2972     0441  1303               	bcf	3,6	;RP1=0, select bank0
  2973     0442  0854               	movf	?___fltol+3,w
  2974     0443  0453               	iorwf	?___fltol+2,w
  2975     0444  0452               	iorwf	?___fltol+1,w
  2976     0445  0451               	iorwf	?___fltol,w
  2977     0446  1D03               	skipz
  2978     0447  2C49               	goto	u5361
  2979     0448  2C4A               	goto	u5360
  2980     0449                     u5361:
  2981     0449  2CCB               	goto	l3592
  2982     044A                     u5360:
  2983     044A                     l3576:
  2984     044A  1683               	bsf	3,5	;RP0=1, select bank1
  2985     044B  1303               	bcf	3,6	;RP1=0, select bank1
  2986     044C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2987     044D  3A80               	xorlw	128
  2988     044E  00FF               	movwf	btemp+1
  2989     044F  3080               	movlw	128
  2990     0450  027F               	subwf	btemp+1,w
  2991     0451  1D03               	skipz
  2992     0452  2C55               	goto	u5375
  2993     0453  3002               	movlw	2
  2994     0454  0235               	subwf	sprintf@eexp^(0+128),w
  2995     0455                     u5375:
  2996     0455  1C03               	skipc
  2997     0456  2C58               	goto	u5371
  2998     0457  2C59               	goto	u5370
  2999     0458                     u5371:
  3000     0458  2CCB               	goto	l3592
  3001     0459                     u5370:
  3002     0459                     l3578:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3005     0459  1683               	bsf	3,5	;RP0=1, select bank1
  3006     045A  1303               	bcf	3,6	;RP1=0, select bank1
  3007     045B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3008     045C  00F3               	movwf	___flge@ff1+3
  3009     045D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3010     045E  00F2               	movwf	___flge@ff1+2
  3011     045F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3012     0460  00F1               	movwf	___flge@ff1+1
  3013     0461  0837               	movf	sprintf@tmpval^(0+128),w
  3014     0462  00F0               	movwf	___flge@ff1
  3015     0463  3040               	movlw	64
  3016     0464  00F7               	movwf	___flge@ff2+3
  3017     0465  3089               	movlw	137
  3018     0466  00F6               	movwf	___flge@ff2+2
  3019     0467  3070               	movlw	112
  3020     0468  00F5               	movwf	___flge@ff2+1
  3021     0469  305F               	movlw	95
  3022     046A  00F4               	movwf	___flge@ff2
  3023     046B  120A  158A  2002  120A  118A  	fcall	___flge
  3024     0470  1803               	btfsc	3,0
  3025     0471  2C73               	goto	u5381
  3026     0472  2C74               	goto	u5380
  3027     0473                     u5381:
  3028     0473  2C7D               	goto	l3582
  3029     0474                     u5380:
  3030     0474                     l3580:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3033     0474  30F7               	movlw	247
  3034     0475  1683               	bsf	3,5	;RP0=1, select bank1
  3035     0476  1303               	bcf	3,6	;RP1=0, select bank1
  3036     0477  07B5               	addwf	sprintf@eexp^(0+128),f
  3037     0478  1803               	skipnc
  3038     0479  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3039     047A  30FF               	movlw	255
  3040     047B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3043     047C  2C85               	goto	l3584
  3044     047D                     l3582:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3047     047D  30F8               	movlw	248
  3048     047E  1683               	bsf	3,5	;RP0=1, select bank1
  3049     047F  1303               	bcf	3,6	;RP1=0, select bank1
  3050     0480  07B5               	addwf	sprintf@eexp^(0+128),f
  3051     0481  1803               	skipnc
  3052     0482  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3053     0483  30FF               	movlw	255
  3054     0484  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3055     0485                     l3584:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3058     0485  0835               	movf	sprintf@eexp^(0+128),w
  3059     0486  120A  158A  24A1  120A  118A  	fcall	_scale
  3060     048B  1283               	bcf	3,5	;RP0=0, select bank0
  3061     048C  1303               	bcf	3,6	;RP1=0, select bank0
  3062     048D  0841               	movf	?_scale+3,w
  3063     048E  1683               	bsf	3,5	;RP0=1, select bank1
  3064     048F  1303               	bcf	3,6	;RP1=0, select bank1
  3065     0490  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3066     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3068     0493  0840               	movf	?_scale+2,w
  3069     0494  1683               	bsf	3,5	;RP0=1, select bank1
  3070     0495  1303               	bcf	3,6	;RP1=0, select bank1
  3071     0496  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3072     0497  1283               	bcf	3,5	;RP0=0, select bank0
  3073     0498  1303               	bcf	3,6	;RP1=0, select bank0
  3074     0499  083F               	movf	?_scale+1,w
  3075     049A  1683               	bsf	3,5	;RP0=1, select bank1
  3076     049B  1303               	bcf	3,6	;RP1=0, select bank1
  3077     049C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3078     049D  1283               	bcf	3,5	;RP0=0, select bank0
  3079     049E  1303               	bcf	3,6	;RP1=0, select bank0
  3080     049F  083E               	movf	?_scale,w
  3081     04A0  1683               	bsf	3,5	;RP0=1, select bank1
  3082     04A1  1303               	bcf	3,6	;RP1=0, select bank1
  3083     04A2  00B7               	movwf	sprintf@tmpval^(0+128)
  3084     04A3                     l3586:
  3085     04A3  0841               	movf	(sprintf@fval+3)^(0+128),w
  3086     04A4  00F3               	movwf	__div_to_l_@f1+3
  3087     04A5  0840               	movf	(sprintf@fval+2)^(0+128),w
  3088     04A6  00F2               	movwf	__div_to_l_@f1+2
  3089     04A7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3090     04A8  00F1               	movwf	__div_to_l_@f1+1
  3091     04A9  083E               	movf	sprintf@fval^(0+128),w
  3092     04AA  00F0               	movwf	__div_to_l_@f1
  3093     04AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3094     04AC  00F7               	movwf	__div_to_l_@f2+3
  3095     04AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3096     04AE  00F6               	movwf	__div_to_l_@f2+2
  3097     04AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3098     04B0  00F5               	movwf	__div_to_l_@f2+1
  3099     04B1  0837               	movf	sprintf@tmpval^(0+128),w
  3100     04B2  00F4               	movwf	__div_to_l_@f2
  3101     04B3  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  3102     04B8  0873               	movf	?__div_to_l_+3,w
  3103     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3104     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3105     04BB  00B4               	movwf	(sprintf@val+3)^(0+128)
  3106     04BC  0872               	movf	?__div_to_l_+2,w
  3107     04BD  00B3               	movwf	(sprintf@val+2)^(0+128)
  3108     04BE  0871               	movf	?__div_to_l_+1,w
  3109     04BF  00B2               	movwf	(sprintf@val+1)^(0+128)
  3110     04C0  0870               	movf	?__div_to_l_,w
  3111     04C1  00B1               	movwf	sprintf@val^(0+128)
  3112     04C2                     l3590:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3115     04C2  3000               	movlw	0
  3116     04C3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3117     04C4  3000               	movlw	0
  3118     04C5  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3119     04C6  3000               	movlw	0
  3120     04C7  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3121     04C8  3000               	movlw	0
  3122     04C9  00BE               	movwf	sprintf@fval^(0+128)
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3125     04CA  2D4F               	goto	l3598
  3126     04CB                     l3592:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3129     04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3130     04CC  1303               	bcf	3,6	;RP1=0, select bank1
  3131     04CD  0841               	movf	(sprintf@fval+3)^(0+128),w
  3132     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  3133     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  3134     04D0  00D4               	movwf	___fltol@f1+3
  3135     04D1  1683               	bsf	3,5	;RP0=1, select bank1
  3136     04D2  1303               	bcf	3,6	;RP1=0, select bank1
  3137     04D3  0840               	movf	(sprintf@fval+2)^(0+128),w
  3138     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  3139     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  3140     04D6  00D3               	movwf	___fltol@f1+2
  3141     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  3142     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  3143     04D9  083F               	movf	(sprintf@fval+1)^(0+128),w
  3144     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3145     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3146     04DC  00D2               	movwf	___fltol@f1+1
  3147     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  3148     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  3149     04DF  083E               	movf	sprintf@fval^(0+128),w
  3150     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3151     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3152     04E2  00D1               	movwf	___fltol@f1
  3153     04E3  160A  118A  20A3  120A  118A  	fcall	___fltol
  3154     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3155     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  3156     04EA  0854               	movf	?___fltol+3,w
  3157     04EB  1683               	bsf	3,5	;RP0=1, select bank1
  3158     04EC  1303               	bcf	3,6	;RP1=0, select bank1
  3159     04ED  00B4               	movwf	(sprintf@val+3)^(0+128)
  3160     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3161     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3162     04F0  0853               	movf	?___fltol+2,w
  3163     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  3164     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  3165     04F3  00B3               	movwf	(sprintf@val+2)^(0+128)
  3166     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3167     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3168     04F6  0852               	movf	?___fltol+1,w
  3169     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3170     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  3171     04F9  00B2               	movwf	(sprintf@val+1)^(0+128)
  3172     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3173     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3174     04FC  0851               	movf	?___fltol,w
  3175     04FD  1683               	bsf	3,5	;RP0=1, select bank1
  3176     04FE  1303               	bcf	3,6	;RP1=0, select bank1
  3177     04FF  00B1               	movwf	sprintf@val^(0+128)
  3178     0500                     l3594:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3181     0500  0834               	movf	(sprintf@val+3)^(0+128),w
  3182     0501  00F9               	movwf	___xxtofl@val+3
  3183     0502  0833               	movf	(sprintf@val+2)^(0+128),w
  3184     0503  00F8               	movwf	___xxtofl@val+2
  3185     0504  0832               	movf	(sprintf@val+1)^(0+128),w
  3186     0505  00F7               	movwf	___xxtofl@val+1
  3187     0506  0831               	movf	sprintf@val^(0+128),w
  3188     0507  00F6               	movwf	___xxtofl@val
  3189     0508  3000               	movlw	0
  3190     0509  120A  118A  20F5  120A  118A  	fcall	___xxtofl
  3191     050E  0879               	movf	?___xxtofl+3,w
  3192     050F  1283               	bcf	3,5	;RP0=0, select bank0
  3193     0510  1303               	bcf	3,6	;RP1=0, select bank0
  3194     0511  00E9               	movwf	___flsub@a+3
  3195     0512  0878               	movf	?___xxtofl+2,w
  3196     0513  00E8               	movwf	___flsub@a+2
  3197     0514  0877               	movf	?___xxtofl+1,w
  3198     0515  00E7               	movwf	___flsub@a+1
  3199     0516  0876               	movf	?___xxtofl,w
  3200     0517  00E6               	movwf	___flsub@a
  3201     0518  1683               	bsf	3,5	;RP0=1, select bank1
  3202     0519  1303               	bcf	3,6	;RP1=0, select bank1
  3203     051A  0841               	movf	(sprintf@fval+3)^(0+128),w
  3204     051B  1283               	bcf	3,5	;RP0=0, select bank0
  3205     051C  1303               	bcf	3,6	;RP1=0, select bank0
  3206     051D  00ED               	movwf	___flsub@b+3
  3207     051E  1683               	bsf	3,5	;RP0=1, select bank1
  3208     051F  1303               	bcf	3,6	;RP1=0, select bank1
  3209     0520  0840               	movf	(sprintf@fval+2)^(0+128),w
  3210     0521  1283               	bcf	3,5	;RP0=0, select bank0
  3211     0522  1303               	bcf	3,6	;RP1=0, select bank0
  3212     0523  00EC               	movwf	___flsub@b+2
  3213     0524  1683               	bsf	3,5	;RP0=1, select bank1
  3214     0525  1303               	bcf	3,6	;RP1=0, select bank1
  3215     0526  083F               	movf	(sprintf@fval+1)^(0+128),w
  3216     0527  1283               	bcf	3,5	;RP0=0, select bank0
  3217     0528  1303               	bcf	3,6	;RP1=0, select bank0
  3218     0529  00EB               	movwf	___flsub@b+1
  3219     052A  1683               	bsf	3,5	;RP0=1, select bank1
  3220     052B  1303               	bcf	3,6	;RP1=0, select bank1
  3221     052C  083E               	movf	sprintf@fval^(0+128),w
  3222     052D  1283               	bcf	3,5	;RP0=0, select bank0
  3223     052E  1303               	bcf	3,6	;RP1=0, select bank0
  3224     052F  00EA               	movwf	___flsub@b
  3225     0530  160A  158A  241E  120A  118A  	fcall	___flsub
  3226     0535  1283               	bcf	3,5	;RP0=0, select bank0
  3227     0536  1303               	bcf	3,6	;RP1=0, select bank0
  3228     0537  0869               	movf	?___flsub+3,w
  3229     0538  1683               	bsf	3,5	;RP0=1, select bank1
  3230     0539  1303               	bcf	3,6	;RP1=0, select bank1
  3231     053A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3232     053B  1283               	bcf	3,5	;RP0=0, select bank0
  3233     053C  1303               	bcf	3,6	;RP1=0, select bank0
  3234     053D  0868               	movf	?___flsub+2,w
  3235     053E  1683               	bsf	3,5	;RP0=1, select bank1
  3236     053F  1303               	bcf	3,6	;RP1=0, select bank1
  3237     0540  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3238     0541  1283               	bcf	3,5	;RP0=0, select bank0
  3239     0542  1303               	bcf	3,6	;RP1=0, select bank0
  3240     0543  0867               	movf	?___flsub+1,w
  3241     0544  1683               	bsf	3,5	;RP0=1, select bank1
  3242     0545  1303               	bcf	3,6	;RP1=0, select bank1
  3243     0546  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3244     0547  1283               	bcf	3,5	;RP0=0, select bank0
  3245     0548  1303               	bcf	3,6	;RP1=0, select bank0
  3246     0549  0866               	movf	?___flsub,w
  3247     054A  1683               	bsf	3,5	;RP0=1, select bank1
  3248     054B  1303               	bcf	3,6	;RP1=0, select bank1
  3249     054C  00BE               	movwf	sprintf@fval^(0+128)
  3250     054D                     l3596:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3253     054D  01B5               	clrf	sprintf@eexp^(0+128)
  3254     054E  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3255     054F                     l3598:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3258     054F  01C2               	clrf	sprintf@c^(0+128)
  3259     0550  0AC2               	incf	sprintf@c^(0+128),f
  3260     0551                     l3604:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3263     0551  0842               	movf	sprintf@c^(0+128),w
  3264     0552  00A5               	movwf	??_sprintf^(0+128)
  3265     0553  3001               	movlw	1
  3266     0554                     u5395:
  3267     0554  1003               	clrc
  3268     0555  0DA5               	rlf	??_sprintf^(0+128),f
  3269     0556  3EFF               	addlw	-1
  3270     0557  1D03               	skipz
  3271     0558  2D54               	goto	u5395
  3272     0559  1003               	clrc
  3273     055A  0D25               	rlf	??_sprintf^(0+128),w
  3274     055B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3275     055C  0084               	movwf	4
  3276     055D  120A  118A  200D  120A  118A  	fcall	stringdir
  3277     0562  00A6               	movwf	(??_sprintf+1)^(0+128)
  3278     0563  120A  118A  200D  120A  118A  	fcall	stringdir
  3279     0568  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3280     0569  120A  118A  200D  120A  118A  	fcall	stringdir
  3281     056E  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3282     056F  120A  118A  200D  120A  118A  	fcall	stringdir
  3283     0574  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3284     0575  0829               	movf	(??_sprintf+4)^(0+128),w
  3285     0576  0234               	subwf	(sprintf@val+3)^(0+128),w
  3286     0577  1D03               	skipz
  3287     0578  2D83               	goto	u5405
  3288     0579  0828               	movf	(??_sprintf+3)^(0+128),w
  3289     057A  0233               	subwf	(sprintf@val+2)^(0+128),w
  3290     057B  1D03               	skipz
  3291     057C  2D83               	goto	u5405
  3292     057D  0827               	movf	(??_sprintf+2)^(0+128),w
  3293     057E  0232               	subwf	(sprintf@val+1)^(0+128),w
  3294     057F  1D03               	skipz
  3295     0580  2D83               	goto	u5405
  3296     0581  0826               	movf	(??_sprintf+1)^(0+128),w
  3297     0582  0231               	subwf	sprintf@val^(0+128),w
  3298     0583                     u5405:
  3299     0583  1803               	skipnc
  3300     0584  2D86               	goto	u5401
  3301     0585  2D87               	goto	u5400
  3302     0586                     u5401:
  3303     0586  2D88               	goto	l3608
  3304     0587                     u5400:
  3305     0587  2D92               	goto	l3610
  3306     0588                     l3608:
  3307     0588  3001               	movlw	1
  3308     0589  00A5               	movwf	??_sprintf^(0+128)
  3309     058A  0825               	movf	??_sprintf^(0+128),w
  3310     058B  07C2               	addwf	sprintf@c^(0+128),f
  3311     058C  300A               	movlw	10
  3312     058D  0642               	xorwf	sprintf@c^(0+128),w
  3313     058E  1D03               	btfss	3,2
  3314     058F  2D91               	goto	u5411
  3315     0590  2D92               	goto	u5410
  3316     0591                     u5411:
  3317     0591  2D51               	goto	l3604
  3318     0592                     u5410:
  3319     0592                     l3610:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3322     0592  3003               	movlw	3
  3323     0593  052F               	andwf	sprintf@flag^(0+128),w
  3324     0594  00A5               	movwf	??_sprintf^(0+128)
  3325     0595  3000               	movlw	0
  3326     0596  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3327     0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  3328     0598  0825               	movf	??_sprintf^(0+128),w
  3329     0599  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3330     059A  1903               	btfsc	3,2
  3331     059B  2D9D               	goto	u5421
  3332     059C  2D9E               	goto	u5420
  3333     059D                     u5421:
  3334     059D  2E0C               	goto	l418
  3335     059E                     u5420:
  3336     059E                     l3612:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3339     059E  083B               	movf	sprintf@sp^(0+128),w
  3340     059F  0084               	movwf	4
  3341     05A0  302D               	movlw	45
  3342     05A1  1383               	bcf	3,7	;select IRP bank0
  3343     05A2  0080               	movwf	0
  3344     05A3                     l3614:
  3345     05A3  3001               	movlw	1
  3346     05A4  00A5               	movwf	??_sprintf^(0+128)
  3347     05A5  0825               	movf	??_sprintf^(0+128),w
  3348     05A6  07BB               	addwf	sprintf@sp^(0+128),f
  3349     05A7  2E0C               	goto	l418
  3350     05A8                     l3616:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3353     05A8  0842               	movf	sprintf@c^(0+128),w
  3354     05A9  00A5               	movwf	??_sprintf^(0+128)
  3355     05AA  3001               	movlw	1
  3356     05AB                     u5435:
  3357     05AB  1003               	clrc
  3358     05AC  0DA5               	rlf	??_sprintf^(0+128),f
  3359     05AD  3EFF               	addlw	-1
  3360     05AE  1D03               	skipz
  3361     05AF  2DAB               	goto	u5435
  3362     05B0  1003               	clrc
  3363     05B1  0D25               	rlf	??_sprintf^(0+128),w
  3364     05B2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3365     05B3  0084               	movwf	4
  3366     05B4  120A  118A  200D  120A  118A  	fcall	stringdir
  3367     05B9  00F0               	movwf	___lldiv@divisor
  3368     05BA  120A  118A  200D  120A  118A  	fcall	stringdir
  3369     05BF  00F1               	movwf	___lldiv@divisor+1
  3370     05C0  120A  118A  200D  120A  118A  	fcall	stringdir
  3371     05C5  00F2               	movwf	___lldiv@divisor+2
  3372     05C6  120A  118A  200D  120A  118A  	fcall	stringdir
  3373     05CB  00F3               	movwf	___lldiv@divisor+3
  3374     05CC  0834               	movf	(sprintf@val+3)^(0+128),w
  3375     05CD  00F7               	movwf	___lldiv@dividend+3
  3376     05CE  0833               	movf	(sprintf@val+2)^(0+128),w
  3377     05CF  00F6               	movwf	___lldiv@dividend+2
  3378     05D0  0832               	movf	(sprintf@val+1)^(0+128),w
  3379     05D1  00F5               	movwf	___lldiv@dividend+1
  3380     05D2  0831               	movf	sprintf@val^(0+128),w
  3381     05D3  00F4               	movwf	___lldiv@dividend
  3382     05D4  160A  158A  279A  120A  118A  	fcall	___lldiv
  3383     05D9  0873               	movf	?___lldiv+3,w
  3384     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3385     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3386     05DC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3387     05DD  0872               	movf	?___lldiv+2,w
  3388     05DE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3389     05DF  0871               	movf	?___lldiv+1,w
  3390     05E0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3391     05E1  0870               	movf	?___lldiv,w
  3392     05E2  00B7               	movwf	sprintf@tmpval^(0+128)
  3393     05E3                     l3618:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3396     05E3  3000               	movlw	0
  3397     05E4  00F3               	movwf	___llmod@divisor+3
  3398     05E5  3000               	movlw	0
  3399     05E6  00F2               	movwf	___llmod@divisor+2
  3400     05E7  3000               	movlw	0
  3401     05E8  00F1               	movwf	___llmod@divisor+1
  3402     05E9  300A               	movlw	10
  3403     05EA  00F0               	movwf	___llmod@divisor
  3404     05EB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3405     05EC  00F7               	movwf	___llmod@dividend+3
  3406     05ED  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3407     05EE  00F6               	movwf	___llmod@dividend+2
  3408     05EF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3409     05F0  00F5               	movwf	___llmod@dividend+1
  3410     05F1  0837               	movf	sprintf@tmpval^(0+128),w
  3411     05F2  00F4               	movwf	___llmod@dividend
  3412     05F3  160A  158A  2690  120A  118A  	fcall	___llmod
  3413     05F8  0873               	movf	?___llmod+3,w
  3414     05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3415     05FA  1303               	bcf	3,6	;RP1=0, select bank1
  3416     05FB  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3417     05FC  0872               	movf	?___llmod+2,w
  3418     05FD  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3419     05FE  0871               	movf	?___llmod+1,w
  3420     05FF  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3421     0600  0870               	movf	?___llmod,w
  3422     0601  00B7               	movwf	sprintf@tmpval^(0+128)
  3423     0602                     l3620:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3426     0602  083B               	movf	sprintf@sp^(0+128),w
  3427     0603  0084               	movwf	4
  3428     0604  0837               	movf	sprintf@tmpval^(0+128),w
  3429     0605  3E30               	addlw	48
  3430     0606  1383               	bcf	3,7	;select IRP bank0
  3431     0607  0080               	movwf	0
  3432     0608  3001               	movlw	1
  3433     0609  00A5               	movwf	??_sprintf^(0+128)
  3434     060A  0825               	movf	??_sprintf^(0+128),w
  3435     060B  07BB               	addwf	sprintf@sp^(0+128),f
  3436     060C                     l418:	
  3437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3438                           
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3441     060C  3001               	movlw	1
  3442     060D  02C2               	subwf	sprintf@c^(0+128),f
  3443     060E  0A42               	incf	sprintf@c^(0+128),w
  3444     060F  1D03               	btfss	3,2
  3445     0610  2E12               	goto	u5441
  3446     0611  2E13               	goto	u5440
  3447     0612                     u5441:
  3448     0612  2DA8               	goto	l3616
  3449     0613                     u5440:
  3450     0613  2E25               	goto	l3628
  3451     0614                     l3622:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3454     0614  1683               	bsf	3,5	;RP0=1, select bank1
  3455     0615  1303               	bcf	3,6	;RP1=0, select bank1
  3456     0616  083B               	movf	sprintf@sp^(0+128),w
  3457     0617  0084               	movwf	4
  3458     0618  3030               	movlw	48
  3459     0619  1383               	bcf	3,7	;select IRP bank0
  3460     061A  0080               	movwf	0
  3461     061B                     l3624:
  3462     061B  3001               	movlw	1
  3463     061C  00A5               	movwf	??_sprintf^(0+128)
  3464     061D  0825               	movf	??_sprintf^(0+128),w
  3465     061E  07BB               	addwf	sprintf@sp^(0+128),f
  3466     061F                     l3626:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3469     061F  30FF               	movlw	255
  3470     0620  07B5               	addwf	sprintf@eexp^(0+128),f
  3471     0621  1803               	skipnc
  3472     0622  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3473     0623  30FF               	movlw	255
  3474     0624  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3475     0625                     l3628:
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3478     0625  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3479     0626  3A80               	xorlw	128
  3480     0627  00FF               	movwf	btemp+1
  3481     0628  3080               	movlw	128
  3482     0629  027F               	subwf	btemp+1,w
  3483     062A  1D03               	skipz
  3484     062B  2E2E               	goto	u5455
  3485     062C  3001               	movlw	1
  3486     062D  0235               	subwf	sprintf@eexp^(0+128),w
  3487     062E                     u5455:
  3488     062E  1803               	skipnc
  3489     062F  2E31               	goto	u5451
  3490     0630  2E32               	goto	u5450
  3491     0631                     u5451:
  3492     0631  2E14               	goto	l3622
  3493     0632                     u5450:
  3494     0632                     l3630:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3497     0632  1683               	bsf	3,5	;RP0=1, select bank1
  3498     0633  1303               	bcf	3,6	;RP1=0, select bank1
  3499     0634  083D               	movf	(sprintf@prec+1)^(0+128),w
  3500     0635  3A80               	xorlw	128
  3501     0636  00FF               	movwf	btemp+1
  3502     0637  3080               	movlw	128
  3503     0638  027F               	subwf	btemp+1,w
  3504     0639  1D03               	skipz
  3505     063A  2E3D               	goto	u5465
  3506     063B  3009               	movlw	9
  3507     063C  023C               	subwf	sprintf@prec^(0+128),w
  3508     063D                     u5465:
  3509     063D  1C03               	skipc
  3510     063E  2E40               	goto	u5461
  3511     063F  2E41               	goto	u5460
  3512     0640                     u5461:
  3513     0640  2E46               	goto	l3634
  3514     0641                     u5460:
  3515     0641                     l3632:
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3518     0641  3008               	movlw	8
  3519     0642  1683               	bsf	3,5	;RP0=1, select bank1
  3520     0643  1303               	bcf	3,6	;RP1=0, select bank1
  3521     0644  00C2               	movwf	sprintf@c^(0+128)
  3522     0645  2E4A               	goto	l425
  3523     0646                     l3634:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3526     0646  1683               	bsf	3,5	;RP0=1, select bank1
  3527     0647  1303               	bcf	3,6	;RP1=0, select bank1
  3528     0648  083C               	movf	sprintf@prec^(0+128),w
  3529     0649  00C2               	movwf	sprintf@c^(0+128)
  3530     064A                     l425:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3533     064A  0842               	movf	sprintf@c^(0+128),w
  3534     064B  00A5               	movwf	??_sprintf^(0+128)
  3535     064C  01A6               	clrf	(??_sprintf^(0+128)+1)
  3536     064D  0825               	movf	??_sprintf^(0+128),w
  3537     064E  02BC               	subwf	sprintf@prec^(0+128),f
  3538     064F  0826               	movf	(??_sprintf+1)^(0+128),w
  3539     0650  1C03               	skipc
  3540     0651  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3541     0652  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3542     0653                     l3636:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3545     0653  0842               	movf	sprintf@c^(0+128),w
  3546     0654  1903               	btfsc	3,2
  3547     0655  2E57               	goto	u5471
  3548     0656  2E58               	goto	u5470
  3549     0657                     u5471:
  3550     0657  2E61               	goto	l3642
  3551     0658                     u5470:
  3552     0658                     l3638:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3555     0658  083B               	movf	sprintf@sp^(0+128),w
  3556     0659  0084               	movwf	4
  3557     065A  302E               	movlw	46
  3558     065B  1383               	bcf	3,7	;select IRP bank0
  3559     065C  0080               	movwf	0
  3560     065D                     l3640:
  3561     065D  3001               	movlw	1
  3562     065E  00A5               	movwf	??_sprintf^(0+128)
  3563     065F  0825               	movf	??_sprintf^(0+128),w
  3564     0660  07BB               	addwf	sprintf@sp^(0+128),f
  3565     0661                     l3642:
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3568     0661  0842               	movf	sprintf@c^(0+128),w
  3569     0662  120A  158A  24A1  120A  118A  	fcall	_scale
  3570     0667  1283               	bcf	3,5	;RP0=0, select bank0
  3571     0668  1303               	bcf	3,6	;RP1=0, select bank0
  3572     0669  0841               	movf	?_scale+3,w
  3573     066A  1683               	bsf	3,5	;RP0=1, select bank1
  3574     066B  1303               	bcf	3,6	;RP1=0, select bank1
  3575     066C  00AD               	movwf	(_sprintf$1366+3)^(0+128)
  3576     066D  1283               	bcf	3,5	;RP0=0, select bank0
  3577     066E  1303               	bcf	3,6	;RP1=0, select bank0
  3578     066F  0840               	movf	?_scale+2,w
  3579     0670  1683               	bsf	3,5	;RP0=1, select bank1
  3580     0671  1303               	bcf	3,6	;RP1=0, select bank1
  3581     0672  00AC               	movwf	(_sprintf$1366+2)^(0+128)
  3582     0673  1283               	bcf	3,5	;RP0=0, select bank0
  3583     0674  1303               	bcf	3,6	;RP1=0, select bank0
  3584     0675  083F               	movf	?_scale+1,w
  3585     0676  1683               	bsf	3,5	;RP0=1, select bank1
  3586     0677  1303               	bcf	3,6	;RP1=0, select bank1
  3587     0678  00AB               	movwf	(_sprintf$1366+1)^(0+128)
  3588     0679  1283               	bcf	3,5	;RP0=0, select bank0
  3589     067A  1303               	bcf	3,6	;RP1=0, select bank0
  3590     067B  083E               	movf	?_scale,w
  3591     067C  1683               	bsf	3,5	;RP0=1, select bank1
  3592     067D  1303               	bcf	3,6	;RP1=0, select bank1
  3593     067E  00AA               	movwf	_sprintf$1366^(0+128)
  3594     067F                     l3644:
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3597     067F  082D               	movf	(_sprintf$1366+3)^(0+128),w
  3598     0680  1283               	bcf	3,5	;RP0=0, select bank0
  3599     0681  1303               	bcf	3,6	;RP1=0, select bank0
  3600     0682  00AB               	movwf	___flmul@a+3
  3601     0683  1683               	bsf	3,5	;RP0=1, select bank1
  3602     0684  1303               	bcf	3,6	;RP1=0, select bank1
  3603     0685  082C               	movf	(_sprintf$1366+2)^(0+128),w
  3604     0686  1283               	bcf	3,5	;RP0=0, select bank0
  3605     0687  1303               	bcf	3,6	;RP1=0, select bank0
  3606     0688  00AA               	movwf	___flmul@a+2
  3607     0689  1683               	bsf	3,5	;RP0=1, select bank1
  3608     068A  1303               	bcf	3,6	;RP1=0, select bank1
  3609     068B  082B               	movf	(_sprintf$1366+1)^(0+128),w
  3610     068C  1283               	bcf	3,5	;RP0=0, select bank0
  3611     068D  1303               	bcf	3,6	;RP1=0, select bank0
  3612     068E  00A9               	movwf	___flmul@a+1
  3613     068F  1683               	bsf	3,5	;RP0=1, select bank1
  3614     0690  1303               	bcf	3,6	;RP1=0, select bank1
  3615     0691  082A               	movf	_sprintf$1366^(0+128),w
  3616     0692  1283               	bcf	3,5	;RP0=0, select bank0
  3617     0693  1303               	bcf	3,6	;RP1=0, select bank0
  3618     0694  00A8               	movwf	___flmul@a
  3619     0695  1683               	bsf	3,5	;RP0=1, select bank1
  3620     0696  1303               	bcf	3,6	;RP1=0, select bank1
  3621     0697  0841               	movf	(sprintf@fval+3)^(0+128),w
  3622     0698  1283               	bcf	3,5	;RP0=0, select bank0
  3623     0699  1303               	bcf	3,6	;RP1=0, select bank0
  3624     069A  00A7               	movwf	___flmul@b+3
  3625     069B  1683               	bsf	3,5	;RP0=1, select bank1
  3626     069C  1303               	bcf	3,6	;RP1=0, select bank1
  3627     069D  0840               	movf	(sprintf@fval+2)^(0+128),w
  3628     069E  1283               	bcf	3,5	;RP0=0, select bank0
  3629     069F  1303               	bcf	3,6	;RP1=0, select bank0
  3630     06A0  00A6               	movwf	___flmul@b+2
  3631     06A1  1683               	bsf	3,5	;RP0=1, select bank1
  3632     06A2  1303               	bcf	3,6	;RP1=0, select bank1
  3633     06A3  083F               	movf	(sprintf@fval+1)^(0+128),w
  3634     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3635     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3636     06A6  00A5               	movwf	___flmul@b+1
  3637     06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3638     06A8  1303               	bcf	3,6	;RP1=0, select bank1
  3639     06A9  083E               	movf	sprintf@fval^(0+128),w
  3640     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3641     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3642     06AC  00A4               	movwf	___flmul@b
  3643     06AD  120A  158A  215C  120A  118A  	fcall	___flmul
  3644     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3645     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3646     06B4  0827               	movf	?___flmul+3,w
  3647     06B5  00D4               	movwf	___fltol@f1+3
  3648     06B6  0826               	movf	?___flmul+2,w
  3649     06B7  00D3               	movwf	___fltol@f1+2
  3650     06B8  0825               	movf	?___flmul+1,w
  3651     06B9  00D2               	movwf	___fltol@f1+1
  3652     06BA  0824               	movf	?___flmul,w
  3653     06BB  00D1               	movwf	___fltol@f1
  3654     06BC  160A  118A  20A3  120A  118A  	fcall	___fltol
  3655     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3656     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3657     06C3  0854               	movf	?___fltol+3,w
  3658     06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3659     06C5  1303               	bcf	3,6	;RP1=0, select bank1
  3660     06C6  00B4               	movwf	(sprintf@val+3)^(0+128)
  3661     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3662     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3663     06C9  0853               	movf	?___fltol+2,w
  3664     06CA  1683               	bsf	3,5	;RP0=1, select bank1
  3665     06CB  1303               	bcf	3,6	;RP1=0, select bank1
  3666     06CC  00B3               	movwf	(sprintf@val+2)^(0+128)
  3667     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3668     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3669     06CF  0852               	movf	?___fltol+1,w
  3670     06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3671     06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3672     06D2  00B2               	movwf	(sprintf@val+1)^(0+128)
  3673     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3674     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3675     06D5  0851               	movf	?___fltol,w
  3676     06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3677     06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3678     06D8  00B1               	movwf	sprintf@val^(0+128)
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3681     06D9  2F79               	goto	l3654
  3682     06DA                     l3646:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3685     06DA  0842               	movf	sprintf@c^(0+128),w
  3686     06DB  00A5               	movwf	??_sprintf^(0+128)
  3687     06DC  3001               	movlw	1
  3688     06DD                     u5485:
  3689     06DD  1003               	clrc
  3690     06DE  0DA5               	rlf	??_sprintf^(0+128),f
  3691     06DF  3EFF               	addlw	-1
  3692     06E0  1D03               	skipz
  3693     06E1  2EDD               	goto	u5485
  3694     06E2  1003               	clrc
  3695     06E3  0D25               	rlf	??_sprintf^(0+128),w
  3696     06E4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3697     06E5  0084               	movwf	4
  3698     06E6  120A  118A  200D  120A  118A  	fcall	stringdir
  3699     06EB  00F0               	movwf	___lldiv@divisor
  3700     06EC  120A  118A  200D  120A  118A  	fcall	stringdir
  3701     06F1  00F1               	movwf	___lldiv@divisor+1
  3702     06F2  120A  118A  200D  120A  118A  	fcall	stringdir
  3703     06F7  00F2               	movwf	___lldiv@divisor+2
  3704     06F8  120A  118A  200D  120A  118A  	fcall	stringdir
  3705     06FD  00F3               	movwf	___lldiv@divisor+3
  3706     06FE  0834               	movf	(sprintf@val+3)^(0+128),w
  3707     06FF  00F7               	movwf	___lldiv@dividend+3
  3708     0700  0833               	movf	(sprintf@val+2)^(0+128),w
  3709     0701  00F6               	movwf	___lldiv@dividend+2
  3710     0702  0832               	movf	(sprintf@val+1)^(0+128),w
  3711     0703  00F5               	movwf	___lldiv@dividend+1
  3712     0704  0831               	movf	sprintf@val^(0+128),w
  3713     0705  00F4               	movwf	___lldiv@dividend
  3714     0706  160A  158A  279A  120A  118A  	fcall	___lldiv
  3715     070B  0873               	movf	?___lldiv+3,w
  3716     070C  1683               	bsf	3,5	;RP0=1, select bank1
  3717     070D  1303               	bcf	3,6	;RP1=0, select bank1
  3718     070E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3719     070F  0872               	movf	?___lldiv+2,w
  3720     0710  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3721     0711  0871               	movf	?___lldiv+1,w
  3722     0712  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3723     0713  0870               	movf	?___lldiv,w
  3724     0714  00B7               	movwf	sprintf@tmpval^(0+128)
  3725     0715                     l3648:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3728     0715  3000               	movlw	0
  3729     0716  00F3               	movwf	___llmod@divisor+3
  3730     0717  3000               	movlw	0
  3731     0718  00F2               	movwf	___llmod@divisor+2
  3732     0719  3000               	movlw	0
  3733     071A  00F1               	movwf	___llmod@divisor+1
  3734     071B  300A               	movlw	10
  3735     071C  00F0               	movwf	___llmod@divisor
  3736     071D  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3737     071E  00F7               	movwf	___llmod@dividend+3
  3738     071F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3739     0720  00F6               	movwf	___llmod@dividend+2
  3740     0721  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3741     0722  00F5               	movwf	___llmod@dividend+1
  3742     0723  0837               	movf	sprintf@tmpval^(0+128),w
  3743     0724  00F4               	movwf	___llmod@dividend
  3744     0725  160A  158A  2690  120A  118A  	fcall	___llmod
  3745     072A  0873               	movf	?___llmod+3,w
  3746     072B  1683               	bsf	3,5	;RP0=1, select bank1
  3747     072C  1303               	bcf	3,6	;RP1=0, select bank1
  3748     072D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3749     072E  0872               	movf	?___llmod+2,w
  3750     072F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3751     0730  0871               	movf	?___llmod+1,w
  3752     0731  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3753     0732  0870               	movf	?___llmod,w
  3754     0733  00B7               	movwf	sprintf@tmpval^(0+128)
  3755     0734                     l3650:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3758     0734  083B               	movf	sprintf@sp^(0+128),w
  3759     0735  0084               	movwf	4
  3760     0736  0837               	movf	sprintf@tmpval^(0+128),w
  3761     0737  3E30               	addlw	48
  3762     0738  1383               	bcf	3,7	;select IRP bank0
  3763     0739  0080               	movwf	0
  3764     073A  3001               	movlw	1
  3765     073B  00A5               	movwf	??_sprintf^(0+128)
  3766     073C  0825               	movf	??_sprintf^(0+128),w
  3767     073D  07BB               	addwf	sprintf@sp^(0+128),f
  3768     073E                     l3652:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3771     073E  0842               	movf	sprintf@c^(0+128),w
  3772     073F  00A5               	movwf	??_sprintf^(0+128)
  3773     0740  3001               	movlw	1
  3774     0741                     u5495:
  3775     0741  1003               	clrc
  3776     0742  0DA5               	rlf	??_sprintf^(0+128),f
  3777     0743  3EFF               	addlw	-1
  3778     0744  1D03               	skipz
  3779     0745  2F41               	goto	u5495
  3780     0746  1003               	clrc
  3781     0747  0D25               	rlf	??_sprintf^(0+128),w
  3782     0748  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3783     0749  0084               	movwf	4
  3784     074A  120A  118A  200D  120A  118A  	fcall	stringdir
  3785     074F  00F0               	movwf	___llmod@divisor
  3786     0750  120A  118A  200D  120A  118A  	fcall	stringdir
  3787     0755  00F1               	movwf	___llmod@divisor+1
  3788     0756  120A  118A  200D  120A  118A  	fcall	stringdir
  3789     075B  00F2               	movwf	___llmod@divisor+2
  3790     075C  120A  118A  200D  120A  118A  	fcall	stringdir
  3791     0761  00F3               	movwf	___llmod@divisor+3
  3792     0762  0834               	movf	(sprintf@val+3)^(0+128),w
  3793     0763  00F7               	movwf	___llmod@dividend+3
  3794     0764  0833               	movf	(sprintf@val+2)^(0+128),w
  3795     0765  00F6               	movwf	___llmod@dividend+2
  3796     0766  0832               	movf	(sprintf@val+1)^(0+128),w
  3797     0767  00F5               	movwf	___llmod@dividend+1
  3798     0768  0831               	movf	sprintf@val^(0+128),w
  3799     0769  00F4               	movwf	___llmod@dividend
  3800     076A  160A  158A  2690  120A  118A  	fcall	___llmod
  3801     076F  0873               	movf	?___llmod+3,w
  3802     0770  1683               	bsf	3,5	;RP0=1, select bank1
  3803     0771  1303               	bcf	3,6	;RP1=0, select bank1
  3804     0772  00B4               	movwf	(sprintf@val+3)^(0+128)
  3805     0773  0872               	movf	?___llmod+2,w
  3806     0774  00B3               	movwf	(sprintf@val+2)^(0+128)
  3807     0775  0871               	movf	?___llmod+1,w
  3808     0776  00B2               	movwf	(sprintf@val+1)^(0+128)
  3809     0777  0870               	movf	?___llmod,w
  3810     0778  00B1               	movwf	sprintf@val^(0+128)
  3811     0779                     l3654:
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3814     0779  3001               	movlw	1
  3815     077A  02C2               	subwf	sprintf@c^(0+128),f
  3816     077B  0A42               	incf	sprintf@c^(0+128),w
  3817     077C  1D03               	btfss	3,2
  3818     077D  2F7F               	goto	u5501
  3819     077E  2F80               	goto	u5500
  3820     077F                     u5501:
  3821     077F  2EDA               	goto	l3646
  3822     0780                     u5500:
  3823     0780  2F90               	goto	l3662
  3824     0781                     l3656:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3827     0781  083B               	movf	sprintf@sp^(0+128),w
  3828     0782  0084               	movwf	4
  3829     0783  3030               	movlw	48
  3830     0784  1383               	bcf	3,7	;select IRP bank0
  3831     0785  0080               	movwf	0
  3832     0786                     l3658:
  3833     0786  3001               	movlw	1
  3834     0787  00A5               	movwf	??_sprintf^(0+128)
  3835     0788  0825               	movf	??_sprintf^(0+128),w
  3836     0789  07BB               	addwf	sprintf@sp^(0+128),f
  3837     078A                     l3660:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3840     078A  30FF               	movlw	255
  3841     078B  07BC               	addwf	sprintf@prec^(0+128),f
  3842     078C  1803               	skipnc
  3843     078D  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3844     078E  30FF               	movlw	255
  3845     078F  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3846     0790                     l3662:
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3849     0790  083C               	movf	sprintf@prec^(0+128),w
  3850     0791  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3851     0792  1D03               	btfss	3,2
  3852     0793  2F95               	goto	u5511
  3853     0794  2F96               	goto	u5510
  3854     0795                     u5511:
  3855     0795  2F81               	goto	l3656
  3856     0796                     u5510:
  3857     0796  2FDA               	goto	l3682
  3858     0797                     l3664:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3861     0797  083C               	movf	sprintf@prec^(0+128),w
  3862     0798  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3863     0799  1D03               	btfss	3,2
  3864     079A  2F9C               	goto	u5521
  3865     079B  2F9D               	goto	u5520
  3866     079C                     u5521:
  3867     079C  2FAB               	goto	l433
  3868     079D                     u5520:
  3869     079D                     l3666:
  3870     079D  0834               	movf	(sprintf@val+3)^(0+128),w
  3871     079E  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3872     079F  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3873     07A0  0431               	iorwf	sprintf@val^(0+128),w
  3874     07A1  1D03               	skipz
  3875     07A2  2FA4               	goto	u5531
  3876     07A3  2FA5               	goto	u5530
  3877     07A4                     u5531:
  3878     07A4  2FAB               	goto	l433
  3879     07A5                     u5530:
  3880     07A5                     l3668:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3883     07A5  3001               	movlw	1
  3884     07A6  07BC               	addwf	sprintf@prec^(0+128),f
  3885     07A7  1803               	skipnc
  3886     07A8  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3887     07A9  3000               	movlw	0
  3888     07AA  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3889     07AB                     l433:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3892     07AB  083D               	movf	(sprintf@prec+1)^(0+128),w
  3893     07AC  3A80               	xorlw	128
  3894     07AD  3C80               	sublw	128
  3895     07AE  1D03               	skipz
  3896     07AF  2FB2               	goto	u5545
  3897     07B0  083C               	movf	sprintf@prec^(0+128),w
  3898     07B1  0242               	subwf	sprintf@c^(0+128),w
  3899     07B2                     u5545:
  3900     07B2  1803               	skipnc
  3901     07B3  2FB5               	goto	u5541
  3902     07B4  2FB6               	goto	u5540
  3903     07B5                     u5541:
  3904     07B5  2FB7               	goto	l3672
  3905     07B6                     u5540:
  3906     07B6                     l3670:
  3907     07B6  2FC6               	goto	l3676
  3908     07B7                     l3672:
  3909     07B7  1683               	bsf	3,5	;RP0=1, select bank1
  3910     07B8  1303               	bcf	3,6	;RP1=0, select bank1
  3911     07B9  083D               	movf	(sprintf@prec+1)^(0+128),w
  3912     07BA  3A80               	xorlw	128
  3913     07BB  00A5               	movwf	??_sprintf^(0+128)
  3914     07BC  3080               	movlw	128
  3915     07BD  0225               	subwf	??_sprintf^(0+128),w
  3916     07BE  1D03               	skipz
  3917     07BF  2FC2               	goto	u5555
  3918     07C0  0842               	movf	sprintf@c^(0+128),w
  3919     07C1  023C               	subwf	sprintf@prec^(0+128),w
  3920     07C2                     u5555:
  3921     07C2  1803               	skipnc
  3922     07C3  2FC5               	goto	u5551
  3923     07C4  2FC6               	goto	u5550
  3924     07C5                     u5551:
  3925     07C5  2FC6               	goto	l3676
  3926     07C6                     u5550:
  3927     07C6                     l3674:
  3928     07C6                     l3676:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3931     07C6  3003               	movlw	3
  3932     07C7  1683               	bsf	3,5	;RP0=1, select bank1
  3933     07C8  1303               	bcf	3,6	;RP1=0, select bank1
  3934     07C9  052F               	andwf	sprintf@flag^(0+128),w
  3935     07CA  00A5               	movwf	??_sprintf^(0+128)
  3936     07CB  3000               	movlw	0
  3937     07CC  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3938     07CD  00A6               	movwf	(??_sprintf+1)^(0+128)
  3939     07CE  0825               	movf	??_sprintf^(0+128),w
  3940     07CF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3941     07D0  1903               	btfsc	3,2
  3942     07D1  2FD3               	goto	u5561
  3943     07D2  2FD4               	goto	u5560
  3944     07D3                     u5561:
  3945     07D3  2FDA               	goto	l3682
  3946     07D4                     u5560:
  3947     07D4                     l3678:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3950     07D4  083B               	movf	sprintf@sp^(0+128),w
  3951     07D5  0084               	movwf	4
  3952     07D6  302D               	movlw	45
  3953     07D7  1383               	bcf	3,7	;select IRP bank0
  3954     07D8  0080               	movwf	0
  3955     07D9  29C0               	goto	l3494
  3956     07DA                     l3682:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3959     07DA  3001               	movlw	1
  3960     07DB  07A0               	addwf	sprintf@f^(0+128),f
  3961     07DC  30FF               	movlw	-1
  3962     07DD  0720               	addwf	sprintf@f^(0+128),w
  3963     07DE  0084               	movwf	4
  3964     07DF  120A  118A  200D  120A  118A  	fcall	stringdir
  3965     07E4  00C2               	movwf	sprintf@c^(0+128)
  3966     07E5  0842               	movf	sprintf@c^(0+128),w
  3967     07E6  1D03               	btfss	3,2
  3968     07E7  2FE9               	goto	u5571
  3969     07E8  2FEA               	goto	u5570
  3970     07E9                     u5571:
  3971     07E9  29B5               	goto	l3490
  3972     07EA                     u5570:
  3973     07EA                     l3684:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3976     07EA  083B               	movf	sprintf@sp^(0+128),w
  3977     07EB  0084               	movwf	4
  3978     07EC  1383               	bcf	3,7	;select IRP bank0
  3979     07ED  0180               	clrf	0
  3980     07EE                     l439:
  3981     07EE  0008               	return
  3982     07EF                     __end_of_sprintf:
  3983                           
  3984                           	psect	text2
  3985     0CA1                     __ptext2:	
  3986 ;; *************** function _scale *****************
  3987 ;; Defined at:
  3988 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  scl             1    wreg     char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  scl             1   48[BANK0 ] char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  4   30[BANK0 ] char 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         0       4       0       0       0
  4003 ;;      Locals:         0       5       0       0       0
  4004 ;;      Temps:          0      10       0       0       0
  4005 ;;      Totals:         0      19       0       0       0
  4006 ;;Total ram usage:       19 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 2
  4009 ;; This function calls:
  4010 ;;		___awdiv
  4011 ;;		___awmod
  4012 ;;		___flmul
  4013 ;; This function is called by:
  4014 ;;		_sprintf
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018     0CA1                     _scale:	
  4019                           ;psect for function _scale
  4020                           
  4021                           
  4022                           ;incstack = 0
  4023                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4024                           ;scale@scl stored from wreg
  4025     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4026     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4027     0CA3  00D0               	movwf	scale@scl
  4028     0CA4                     l3040:
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4031     0CA4  1FD0               	btfss	scale@scl,7
  4032     0CA5  2CA7               	goto	u4241
  4033     0CA6  2CA8               	goto	u4240
  4034     0CA7                     u4241:
  4035     0CA7  2E55               	goto	l3062
  4036     0CA8                     u4240:
  4037     0CA8                     l3042:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4040     0CA8  09D0               	comf	scale@scl,f
  4041     0CA9  0AD0               	incf	scale@scl,f
  4042     0CAA                     l3044:
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4045     0CAA  0850               	movf	scale@scl,w
  4046     0CAB  3A80               	xorlw	128
  4047     0CAC  3E12               	addlw	-238
  4048     0CAD  1C03               	skipc
  4049     0CAE  2CB0               	goto	u4251
  4050     0CAF  2CB1               	goto	u4250
  4051     0CB0                     u4251:
  4052     0CB0  2D99               	goto	l3052
  4053     0CB1                     u4250:
  4054     0CB1                     l3046:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4057     0CB1  300A               	movlw	10
  4058     0CB2  00F7               	movwf	___awdiv@divisor
  4059     0CB3  3000               	movlw	0
  4060     0CB4  00F8               	movwf	___awdiv@divisor+1
  4061     0CB5  0850               	movf	scale@scl,w
  4062     0CB6  00F2               	movwf	___awmod@dividend
  4063     0CB7  01F3               	clrf	___awmod@dividend+1
  4064     0CB8  1BF2               	btfsc	___awmod@dividend,7
  4065     0CB9  03F3               	decf	___awmod@dividend+1,f
  4066     0CBA  3064               	movlw	100
  4067     0CBB  00F0               	movwf	___awmod@divisor
  4068     0CBC  3000               	movlw	0
  4069     0CBD  00F1               	movwf	___awmod@divisor+1
  4070     0CBE  160A  158A  26E4  120A  158A  	fcall	___awmod
  4071     0CC3  0871               	movf	?___awmod+1,w
  4072     0CC4  00FA               	movwf	___awdiv@dividend+1
  4073     0CC5  0870               	movf	?___awmod,w
  4074     0CC6  00F9               	movwf	___awdiv@dividend
  4075     0CC7  160A  118A  203A  120A  158A  	fcall	___awdiv
  4076     0CCC  0877               	movf	?___awdiv,w
  4077     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4078     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4079     0CCF  00C2               	movwf	??_scale
  4080     0CD0  3001               	movlw	1
  4081     0CD1                     u4265:
  4082     0CD1  1003               	clrc
  4083     0CD2  0DC2               	rlf	??_scale,f
  4084     0CD3  3EFF               	addlw	-1
  4085     0CD4  1D03               	skipz
  4086     0CD5  2CD1               	goto	u4265
  4087     0CD6  1003               	clrc
  4088     0CD7  0D42               	rlf	??_scale,w
  4089     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4090     0CD9  0084               	movwf	4
  4091     0CDA  120A  118A  200D  120A  158A  	fcall	stringdir
  4092     0CDF  00C3               	movwf	??_scale+1
  4093     0CE0  120A  118A  200D  120A  158A  	fcall	stringdir
  4094     0CE5  00C4               	movwf	??_scale+2
  4095     0CE6  120A  118A  200D  120A  158A  	fcall	stringdir
  4096     0CEB  00C5               	movwf	??_scale+3
  4097     0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  4098     0CF1  00C6               	movwf	??_scale+4
  4099     0CF2  0846               	movf	??_scale+4,w
  4100     0CF3  00A7               	movwf	___flmul@b+3
  4101     0CF4  0845               	movf	??_scale+3,w
  4102     0CF5  00A6               	movwf	___flmul@b+2
  4103     0CF6  0844               	movf	??_scale+2,w
  4104     0CF7  00A5               	movwf	___flmul@b+1
  4105     0CF8  0843               	movf	??_scale+1,w
  4106     0CF9  00A4               	movwf	___flmul@b
  4107     0CFA  3064               	movlw	100
  4108     0CFB  00F7               	movwf	___awdiv@divisor
  4109     0CFC  3000               	movlw	0
  4110     0CFD  00F8               	movwf	___awdiv@divisor+1
  4111     0CFE  0850               	movf	scale@scl,w
  4112     0CFF  00F9               	movwf	___awdiv@dividend
  4113     0D00  01FA               	clrf	___awdiv@dividend+1
  4114     0D01  1BF9               	btfsc	___awdiv@dividend,7
  4115     0D02  03FA               	decf	___awdiv@dividend+1,f
  4116     0D03  160A  118A  203A  120A  158A  	fcall	___awdiv
  4117     0D08  0877               	movf	?___awdiv,w
  4118     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4119     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4120     0D0B  00C7               	movwf	??_scale+5
  4121     0D0C  3001               	movlw	1
  4122     0D0D                     u4275:
  4123     0D0D  1003               	clrc
  4124     0D0E  0DC7               	rlf	??_scale+5,f
  4125     0D0F  3EFF               	addlw	-1
  4126     0D10  1D03               	skipz
  4127     0D11  2D0D               	goto	u4275
  4128     0D12  1003               	clrc
  4129     0D13  0D47               	rlf	??_scale+5,w
  4130     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4131     0D15  0084               	movwf	4
  4132     0D16  120A  118A  200D  120A  158A  	fcall	stringdir
  4133     0D1B  00C8               	movwf	??_scale+6
  4134     0D1C  120A  118A  200D  120A  158A  	fcall	stringdir
  4135     0D21  00C9               	movwf	??_scale+7
  4136     0D22  120A  118A  200D  120A  158A  	fcall	stringdir
  4137     0D27  00CA               	movwf	??_scale+8
  4138     0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  4139     0D2D  00CB               	movwf	??_scale+9
  4140     0D2E  084B               	movf	??_scale+9,w
  4141     0D2F  00AB               	movwf	___flmul@a+3
  4142     0D30  084A               	movf	??_scale+8,w
  4143     0D31  00AA               	movwf	___flmul@a+2
  4144     0D32  0849               	movf	??_scale+7,w
  4145     0D33  00A9               	movwf	___flmul@a+1
  4146     0D34  0848               	movf	??_scale+6,w
  4147     0D35  00A8               	movwf	___flmul@a
  4148     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4149     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4150     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4151     0D3D  0827               	movf	?___flmul+3,w
  4152     0D3E  00CF               	movwf	_scale$1365+3
  4153     0D3F  0826               	movf	?___flmul+2,w
  4154     0D40  00CE               	movwf	_scale$1365+2
  4155     0D41  0825               	movf	?___flmul+1,w
  4156     0D42  00CD               	movwf	_scale$1365+1
  4157     0D43  0824               	movf	?___flmul,w
  4158     0D44  00CC               	movwf	_scale$1365
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4161     0D45  300A               	movlw	10
  4162     0D46  00F0               	movwf	___awmod@divisor
  4163     0D47  3000               	movlw	0
  4164     0D48  00F1               	movwf	___awmod@divisor+1
  4165     0D49  0850               	movf	scale@scl,w
  4166     0D4A  00F2               	movwf	___awmod@dividend
  4167     0D4B  01F3               	clrf	___awmod@dividend+1
  4168     0D4C  1BF2               	btfsc	___awmod@dividend,7
  4169     0D4D  03F3               	decf	___awmod@dividend+1,f
  4170     0D4E  160A  158A  26E4  120A  158A  	fcall	___awmod
  4171     0D53  0870               	movf	?___awmod,w
  4172     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4173     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4174     0D56  00C2               	movwf	??_scale
  4175     0D57  3001               	movlw	1
  4176     0D58                     u4285:
  4177     0D58  1003               	clrc
  4178     0D59  0DC2               	rlf	??_scale,f
  4179     0D5A  3EFF               	addlw	-1
  4180     0D5B  1D03               	skipz
  4181     0D5C  2D58               	goto	u4285
  4182     0D5D  1003               	clrc
  4183     0D5E  0D42               	rlf	??_scale,w
  4184     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4185     0D60  0084               	movwf	4
  4186     0D61  120A  118A  200D  120A  158A  	fcall	stringdir
  4187     0D66  00C3               	movwf	??_scale+1
  4188     0D67  120A  118A  200D  120A  158A  	fcall	stringdir
  4189     0D6C  00C4               	movwf	??_scale+2
  4190     0D6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4191     0D72  00C5               	movwf	??_scale+3
  4192     0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  4193     0D78  00C6               	movwf	??_scale+4
  4194     0D79  0846               	movf	??_scale+4,w
  4195     0D7A  00A7               	movwf	___flmul@b+3
  4196     0D7B  0845               	movf	??_scale+3,w
  4197     0D7C  00A6               	movwf	___flmul@b+2
  4198     0D7D  0844               	movf	??_scale+2,w
  4199     0D7E  00A5               	movwf	___flmul@b+1
  4200     0D7F  0843               	movf	??_scale+1,w
  4201     0D80  00A4               	movwf	___flmul@b
  4202     0D81  084F               	movf	_scale$1365+3,w
  4203     0D82  00AB               	movwf	___flmul@a+3
  4204     0D83  084E               	movf	_scale$1365+2,w
  4205     0D84  00AA               	movwf	___flmul@a+2
  4206     0D85  084D               	movf	_scale$1365+1,w
  4207     0D86  00A9               	movwf	___flmul@a+1
  4208     0D87  084C               	movf	_scale$1365,w
  4209     0D88  00A8               	movwf	___flmul@a
  4210     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4211     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4212     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4213     0D90  0827               	movf	?___flmul+3,w
  4214     0D91  00C1               	movwf	?_scale+3
  4215     0D92  0826               	movf	?___flmul+2,w
  4216     0D93  00C0               	movwf	?_scale+2
  4217     0D94  0825               	movf	?___flmul+1,w
  4218     0D95  00BF               	movwf	?_scale+1
  4219     0D96  0824               	movf	?___flmul,w
  4220     0D97  00BE               	movwf	?_scale
  4221     0D98  2FFF               	goto	l373
  4222     0D99                     l3052:
  4223     0D99  0850               	movf	scale@scl,w
  4224     0D9A  3A80               	xorlw	128
  4225     0D9B  3E75               	addlw	-139
  4226     0D9C  1C03               	skipc
  4227     0D9D  2D9F               	goto	u4291
  4228     0D9E  2DA0               	goto	u4290
  4229     0D9F                     u4291:
  4230     0D9F  2E28               	goto	l3058
  4231     0DA0                     u4290:
  4232     0DA0                     l3054:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4235     0DA0  300A               	movlw	10
  4236     0DA1  00F0               	movwf	___awmod@divisor
  4237     0DA2  3000               	movlw	0
  4238     0DA3  00F1               	movwf	___awmod@divisor+1
  4239     0DA4  0850               	movf	scale@scl,w
  4240     0DA5  00F2               	movwf	___awmod@dividend
  4241     0DA6  01F3               	clrf	___awmod@dividend+1
  4242     0DA7  1BF2               	btfsc	___awmod@dividend,7
  4243     0DA8  03F3               	decf	___awmod@dividend+1,f
  4244     0DA9  160A  158A  26E4  120A  158A  	fcall	___awmod
  4245     0DAE  0870               	movf	?___awmod,w
  4246     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4247     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4248     0DB1  00C2               	movwf	??_scale
  4249     0DB2  3001               	movlw	1
  4250     0DB3                     u4305:
  4251     0DB3  1003               	clrc
  4252     0DB4  0DC2               	rlf	??_scale,f
  4253     0DB5  3EFF               	addlw	-1
  4254     0DB6  1D03               	skipz
  4255     0DB7  2DB3               	goto	u4305
  4256     0DB8  1003               	clrc
  4257     0DB9  0D42               	rlf	??_scale,w
  4258     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4259     0DBB  0084               	movwf	4
  4260     0DBC  120A  118A  200D  120A  158A  	fcall	stringdir
  4261     0DC1  00C3               	movwf	??_scale+1
  4262     0DC2  120A  118A  200D  120A  158A  	fcall	stringdir
  4263     0DC7  00C4               	movwf	??_scale+2
  4264     0DC8  120A  118A  200D  120A  158A  	fcall	stringdir
  4265     0DCD  00C5               	movwf	??_scale+3
  4266     0DCE  120A  118A  200D  120A  158A  	fcall	stringdir
  4267     0DD3  00C6               	movwf	??_scale+4
  4268     0DD4  0846               	movf	??_scale+4,w
  4269     0DD5  00A7               	movwf	___flmul@b+3
  4270     0DD6  0845               	movf	??_scale+3,w
  4271     0DD7  00A6               	movwf	___flmul@b+2
  4272     0DD8  0844               	movf	??_scale+2,w
  4273     0DD9  00A5               	movwf	___flmul@b+1
  4274     0DDA  0843               	movf	??_scale+1,w
  4275     0DDB  00A4               	movwf	___flmul@b
  4276     0DDC  300A               	movlw	10
  4277     0DDD  00F7               	movwf	___awdiv@divisor
  4278     0DDE  3000               	movlw	0
  4279     0DDF  00F8               	movwf	___awdiv@divisor+1
  4280     0DE0  0850               	movf	scale@scl,w
  4281     0DE1  00F9               	movwf	___awdiv@dividend
  4282     0DE2  01FA               	clrf	___awdiv@dividend+1
  4283     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  4284     0DE4  03FA               	decf	___awdiv@dividend+1,f
  4285     0DE5  160A  118A  203A  120A  158A  	fcall	___awdiv
  4286     0DEA  0877               	movf	?___awdiv,w
  4287     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4288     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4289     0DED  00C7               	movwf	??_scale+5
  4290     0DEE  3001               	movlw	1
  4291     0DEF                     u4315:
  4292     0DEF  1003               	clrc
  4293     0DF0  0DC7               	rlf	??_scale+5,f
  4294     0DF1  3EFF               	addlw	-1
  4295     0DF2  1D03               	skipz
  4296     0DF3  2DEF               	goto	u4315
  4297     0DF4  1003               	clrc
  4298     0DF5  0D47               	rlf	??_scale+5,w
  4299     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4300     0DF7  0084               	movwf	4
  4301     0DF8  120A  118A  200D  120A  158A  	fcall	stringdir
  4302     0DFD  00C8               	movwf	??_scale+6
  4303     0DFE  120A  118A  200D  120A  158A  	fcall	stringdir
  4304     0E03  00C9               	movwf	??_scale+7
  4305     0E04  120A  118A  200D  120A  158A  	fcall	stringdir
  4306     0E09  00CA               	movwf	??_scale+8
  4307     0E0A  120A  118A  200D  120A  158A  	fcall	stringdir
  4308     0E0F  00CB               	movwf	??_scale+9
  4309     0E10  084B               	movf	??_scale+9,w
  4310     0E11  00AB               	movwf	___flmul@a+3
  4311     0E12  084A               	movf	??_scale+8,w
  4312     0E13  00AA               	movwf	___flmul@a+2
  4313     0E14  0849               	movf	??_scale+7,w
  4314     0E15  00A9               	movwf	___flmul@a+1
  4315     0E16  0848               	movf	??_scale+6,w
  4316     0E17  00A8               	movwf	___flmul@a
  4317     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4318     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4319     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4320     0E1F  0827               	movf	?___flmul+3,w
  4321     0E20  00C1               	movwf	?_scale+3
  4322     0E21  0826               	movf	?___flmul+2,w
  4323     0E22  00C0               	movwf	?_scale+2
  4324     0E23  0825               	movf	?___flmul+1,w
  4325     0E24  00BF               	movwf	?_scale+1
  4326     0E25  0824               	movf	?___flmul,w
  4327     0E26  00BE               	movwf	?_scale
  4328     0E27  2FFF               	goto	l373
  4329     0E28                     l3058:
  4330                           
  4331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4332     0E28  0850               	movf	scale@scl,w
  4333     0E29  00C2               	movwf	??_scale
  4334     0E2A  3001               	movlw	1
  4335     0E2B                     u4325:
  4336     0E2B  1003               	clrc
  4337     0E2C  0DC2               	rlf	??_scale,f
  4338     0E2D  3EFF               	addlw	-1
  4339     0E2E  1D03               	skipz
  4340     0E2F  2E2B               	goto	u4325
  4341     0E30  1003               	clrc
  4342     0E31  0D42               	rlf	??_scale,w
  4343     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4344     0E33  0084               	movwf	4
  4345     0E34  120A  118A  200D  120A  158A  	fcall	stringdir
  4346     0E39  00C3               	movwf	??_scale+1
  4347     0E3A  120A  118A  200D  120A  158A  	fcall	stringdir
  4348     0E3F  00C4               	movwf	??_scale+2
  4349     0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  4350     0E45  00C5               	movwf	??_scale+3
  4351     0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  4352     0E4B  00C6               	movwf	??_scale+4
  4353     0E4C  0846               	movf	??_scale+4,w
  4354     0E4D  00C1               	movwf	?_scale+3
  4355     0E4E  0845               	movf	??_scale+3,w
  4356     0E4F  00C0               	movwf	?_scale+2
  4357     0E50  0844               	movf	??_scale+2,w
  4358     0E51  00BF               	movwf	?_scale+1
  4359     0E52  0843               	movf	??_scale+1,w
  4360     0E53  00BE               	movwf	?_scale
  4361     0E54  2FFF               	goto	l373
  4362     0E55                     l3062:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4365     0E55  0850               	movf	scale@scl,w
  4366     0E56  3A80               	xorlw	128
  4367     0E57  3E12               	addlw	-238
  4368     0E58  1C03               	skipc
  4369     0E59  2E5B               	goto	u4331
  4370     0E5A  2E5C               	goto	u4330
  4371     0E5B                     u4331:
  4372     0E5B  2F44               	goto	l3070
  4373     0E5C                     u4330:
  4374     0E5C                     l3064:
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4377     0E5C  300A               	movlw	10
  4378     0E5D  00F7               	movwf	___awdiv@divisor
  4379     0E5E  3000               	movlw	0
  4380     0E5F  00F8               	movwf	___awdiv@divisor+1
  4381     0E60  0850               	movf	scale@scl,w
  4382     0E61  00F2               	movwf	___awmod@dividend
  4383     0E62  01F3               	clrf	___awmod@dividend+1
  4384     0E63  1BF2               	btfsc	___awmod@dividend,7
  4385     0E64  03F3               	decf	___awmod@dividend+1,f
  4386     0E65  3064               	movlw	100
  4387     0E66  00F0               	movwf	___awmod@divisor
  4388     0E67  3000               	movlw	0
  4389     0E68  00F1               	movwf	___awmod@divisor+1
  4390     0E69  160A  158A  26E4  120A  158A  	fcall	___awmod
  4391     0E6E  0871               	movf	?___awmod+1,w
  4392     0E6F  00FA               	movwf	___awdiv@dividend+1
  4393     0E70  0870               	movf	?___awmod,w
  4394     0E71  00F9               	movwf	___awdiv@dividend
  4395     0E72  160A  118A  203A  120A  158A  	fcall	___awdiv
  4396     0E77  0877               	movf	?___awdiv,w
  4397     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4398     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4399     0E7A  00C2               	movwf	??_scale
  4400     0E7B  3001               	movlw	1
  4401     0E7C                     u4345:
  4402     0E7C  1003               	clrc
  4403     0E7D  0DC2               	rlf	??_scale,f
  4404     0E7E  3EFF               	addlw	-1
  4405     0E7F  1D03               	skipz
  4406     0E80  2E7C               	goto	u4345
  4407     0E81  1003               	clrc
  4408     0E82  0D42               	rlf	??_scale,w
  4409     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4410     0E84  0084               	movwf	4
  4411     0E85  120A  118A  200D  120A  158A  	fcall	stringdir
  4412     0E8A  00C3               	movwf	??_scale+1
  4413     0E8B  120A  118A  200D  120A  158A  	fcall	stringdir
  4414     0E90  00C4               	movwf	??_scale+2
  4415     0E91  120A  118A  200D  120A  158A  	fcall	stringdir
  4416     0E96  00C5               	movwf	??_scale+3
  4417     0E97  120A  118A  200D  120A  158A  	fcall	stringdir
  4418     0E9C  00C6               	movwf	??_scale+4
  4419     0E9D  0846               	movf	??_scale+4,w
  4420     0E9E  00A7               	movwf	___flmul@b+3
  4421     0E9F  0845               	movf	??_scale+3,w
  4422     0EA0  00A6               	movwf	___flmul@b+2
  4423     0EA1  0844               	movf	??_scale+2,w
  4424     0EA2  00A5               	movwf	___flmul@b+1
  4425     0EA3  0843               	movf	??_scale+1,w
  4426     0EA4  00A4               	movwf	___flmul@b
  4427     0EA5  3064               	movlw	100
  4428     0EA6  00F7               	movwf	___awdiv@divisor
  4429     0EA7  3000               	movlw	0
  4430     0EA8  00F8               	movwf	___awdiv@divisor+1
  4431     0EA9  0850               	movf	scale@scl,w
  4432     0EAA  00F9               	movwf	___awdiv@dividend
  4433     0EAB  01FA               	clrf	___awdiv@dividend+1
  4434     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4435     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4436     0EAE  160A  118A  203A  120A  158A  	fcall	___awdiv
  4437     0EB3  0877               	movf	?___awdiv,w
  4438     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4439     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4440     0EB6  00C7               	movwf	??_scale+5
  4441     0EB7  3001               	movlw	1
  4442     0EB8                     u4355:
  4443     0EB8  1003               	clrc
  4444     0EB9  0DC7               	rlf	??_scale+5,f
  4445     0EBA  3EFF               	addlw	-1
  4446     0EBB  1D03               	skipz
  4447     0EBC  2EB8               	goto	u4355
  4448     0EBD  1003               	clrc
  4449     0EBE  0D47               	rlf	??_scale+5,w
  4450     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4451     0EC0  0084               	movwf	4
  4452     0EC1  120A  118A  200D  120A  158A  	fcall	stringdir
  4453     0EC6  00C8               	movwf	??_scale+6
  4454     0EC7  120A  118A  200D  120A  158A  	fcall	stringdir
  4455     0ECC  00C9               	movwf	??_scale+7
  4456     0ECD  120A  118A  200D  120A  158A  	fcall	stringdir
  4457     0ED2  00CA               	movwf	??_scale+8
  4458     0ED3  120A  118A  200D  120A  158A  	fcall	stringdir
  4459     0ED8  00CB               	movwf	??_scale+9
  4460     0ED9  084B               	movf	??_scale+9,w
  4461     0EDA  00AB               	movwf	___flmul@a+3
  4462     0EDB  084A               	movf	??_scale+8,w
  4463     0EDC  00AA               	movwf	___flmul@a+2
  4464     0EDD  0849               	movf	??_scale+7,w
  4465     0EDE  00A9               	movwf	___flmul@a+1
  4466     0EDF  0848               	movf	??_scale+6,w
  4467     0EE0  00A8               	movwf	___flmul@a
  4468     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4469     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0EE8  0827               	movf	?___flmul+3,w
  4472     0EE9  00CF               	movwf	_scale$1365+3
  4473     0EEA  0826               	movf	?___flmul+2,w
  4474     0EEB  00CE               	movwf	_scale$1365+2
  4475     0EEC  0825               	movf	?___flmul+1,w
  4476     0EED  00CD               	movwf	_scale$1365+1
  4477     0EEE  0824               	movf	?___flmul,w
  4478     0EEF  00CC               	movwf	_scale$1365
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4481     0EF0  300A               	movlw	10
  4482     0EF1  00F0               	movwf	___awmod@divisor
  4483     0EF2  3000               	movlw	0
  4484     0EF3  00F1               	movwf	___awmod@divisor+1
  4485     0EF4  0850               	movf	scale@scl,w
  4486     0EF5  00F2               	movwf	___awmod@dividend
  4487     0EF6  01F3               	clrf	___awmod@dividend+1
  4488     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4489     0EF8  03F3               	decf	___awmod@dividend+1,f
  4490     0EF9  160A  158A  26E4  120A  158A  	fcall	___awmod
  4491     0EFE  0870               	movf	?___awmod,w
  4492     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4493     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4494     0F01  00C2               	movwf	??_scale
  4495     0F02  3001               	movlw	1
  4496     0F03                     u4365:
  4497     0F03  1003               	clrc
  4498     0F04  0DC2               	rlf	??_scale,f
  4499     0F05  3EFF               	addlw	-1
  4500     0F06  1D03               	skipz
  4501     0F07  2F03               	goto	u4365
  4502     0F08  1003               	clrc
  4503     0F09  0D42               	rlf	??_scale,w
  4504     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4505     0F0B  0084               	movwf	4
  4506     0F0C  120A  118A  200D  120A  158A  	fcall	stringdir
  4507     0F11  00C3               	movwf	??_scale+1
  4508     0F12  120A  118A  200D  120A  158A  	fcall	stringdir
  4509     0F17  00C4               	movwf	??_scale+2
  4510     0F18  120A  118A  200D  120A  158A  	fcall	stringdir
  4511     0F1D  00C5               	movwf	??_scale+3
  4512     0F1E  120A  118A  200D  120A  158A  	fcall	stringdir
  4513     0F23  00C6               	movwf	??_scale+4
  4514     0F24  0846               	movf	??_scale+4,w
  4515     0F25  00A7               	movwf	___flmul@b+3
  4516     0F26  0845               	movf	??_scale+3,w
  4517     0F27  00A6               	movwf	___flmul@b+2
  4518     0F28  0844               	movf	??_scale+2,w
  4519     0F29  00A5               	movwf	___flmul@b+1
  4520     0F2A  0843               	movf	??_scale+1,w
  4521     0F2B  00A4               	movwf	___flmul@b
  4522     0F2C  084F               	movf	_scale$1365+3,w
  4523     0F2D  00AB               	movwf	___flmul@a+3
  4524     0F2E  084E               	movf	_scale$1365+2,w
  4525     0F2F  00AA               	movwf	___flmul@a+2
  4526     0F30  084D               	movf	_scale$1365+1,w
  4527     0F31  00A9               	movwf	___flmul@a+1
  4528     0F32  084C               	movf	_scale$1365,w
  4529     0F33  00A8               	movwf	___flmul@a
  4530     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4531     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4532     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4533     0F3B  0827               	movf	?___flmul+3,w
  4534     0F3C  00C1               	movwf	?_scale+3
  4535     0F3D  0826               	movf	?___flmul+2,w
  4536     0F3E  00C0               	movwf	?_scale+2
  4537     0F3F  0825               	movf	?___flmul+1,w
  4538     0F40  00BF               	movwf	?_scale+1
  4539     0F41  0824               	movf	?___flmul,w
  4540     0F42  00BE               	movwf	?_scale
  4541     0F43  2FFF               	goto	l373
  4542     0F44                     l3070:
  4543     0F44  0850               	movf	scale@scl,w
  4544     0F45  3A80               	xorlw	128
  4545     0F46  3E75               	addlw	-139
  4546     0F47  1C03               	skipc
  4547     0F48  2F4A               	goto	u4371
  4548     0F49  2F4B               	goto	u4370
  4549     0F4A                     u4371:
  4550     0F4A  2FD3               	goto	l3076
  4551     0F4B                     u4370:
  4552     0F4B                     l3072:
  4553                           
  4554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4555     0F4B  300A               	movlw	10
  4556     0F4C  00F0               	movwf	___awmod@divisor
  4557     0F4D  3000               	movlw	0
  4558     0F4E  00F1               	movwf	___awmod@divisor+1
  4559     0F4F  0850               	movf	scale@scl,w
  4560     0F50  00F2               	movwf	___awmod@dividend
  4561     0F51  01F3               	clrf	___awmod@dividend+1
  4562     0F52  1BF2               	btfsc	___awmod@dividend,7
  4563     0F53  03F3               	decf	___awmod@dividend+1,f
  4564     0F54  160A  158A  26E4  120A  158A  	fcall	___awmod
  4565     0F59  0870               	movf	?___awmod,w
  4566     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4567     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4568     0F5C  00C2               	movwf	??_scale
  4569     0F5D  3001               	movlw	1
  4570     0F5E                     u4385:
  4571     0F5E  1003               	clrc
  4572     0F5F  0DC2               	rlf	??_scale,f
  4573     0F60  3EFF               	addlw	-1
  4574     0F61  1D03               	skipz
  4575     0F62  2F5E               	goto	u4385
  4576     0F63  1003               	clrc
  4577     0F64  0D42               	rlf	??_scale,w
  4578     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4579     0F66  0084               	movwf	4
  4580     0F67  120A  118A  200D  120A  158A  	fcall	stringdir
  4581     0F6C  00C3               	movwf	??_scale+1
  4582     0F6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4583     0F72  00C4               	movwf	??_scale+2
  4584     0F73  120A  118A  200D  120A  158A  	fcall	stringdir
  4585     0F78  00C5               	movwf	??_scale+3
  4586     0F79  120A  118A  200D  120A  158A  	fcall	stringdir
  4587     0F7E  00C6               	movwf	??_scale+4
  4588     0F7F  0846               	movf	??_scale+4,w
  4589     0F80  00A7               	movwf	___flmul@b+3
  4590     0F81  0845               	movf	??_scale+3,w
  4591     0F82  00A6               	movwf	___flmul@b+2
  4592     0F83  0844               	movf	??_scale+2,w
  4593     0F84  00A5               	movwf	___flmul@b+1
  4594     0F85  0843               	movf	??_scale+1,w
  4595     0F86  00A4               	movwf	___flmul@b
  4596     0F87  300A               	movlw	10
  4597     0F88  00F7               	movwf	___awdiv@divisor
  4598     0F89  3000               	movlw	0
  4599     0F8A  00F8               	movwf	___awdiv@divisor+1
  4600     0F8B  0850               	movf	scale@scl,w
  4601     0F8C  00F9               	movwf	___awdiv@dividend
  4602     0F8D  01FA               	clrf	___awdiv@dividend+1
  4603     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4604     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4605     0F90  160A  118A  203A  120A  158A  	fcall	___awdiv
  4606     0F95  0877               	movf	?___awdiv,w
  4607     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4608     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4609     0F98  00C7               	movwf	??_scale+5
  4610     0F99  3001               	movlw	1
  4611     0F9A                     u4395:
  4612     0F9A  1003               	clrc
  4613     0F9B  0DC7               	rlf	??_scale+5,f
  4614     0F9C  3EFF               	addlw	-1
  4615     0F9D  1D03               	skipz
  4616     0F9E  2F9A               	goto	u4395
  4617     0F9F  1003               	clrc
  4618     0FA0  0D47               	rlf	??_scale+5,w
  4619     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4620     0FA2  0084               	movwf	4
  4621     0FA3  120A  118A  200D  120A  158A  	fcall	stringdir
  4622     0FA8  00C8               	movwf	??_scale+6
  4623     0FA9  120A  118A  200D  120A  158A  	fcall	stringdir
  4624     0FAE  00C9               	movwf	??_scale+7
  4625     0FAF  120A  118A  200D  120A  158A  	fcall	stringdir
  4626     0FB4  00CA               	movwf	??_scale+8
  4627     0FB5  120A  118A  200D  120A  158A  	fcall	stringdir
  4628     0FBA  00CB               	movwf	??_scale+9
  4629     0FBB  084B               	movf	??_scale+9,w
  4630     0FBC  00AB               	movwf	___flmul@a+3
  4631     0FBD  084A               	movf	??_scale+8,w
  4632     0FBE  00AA               	movwf	___flmul@a+2
  4633     0FBF  0849               	movf	??_scale+7,w
  4634     0FC0  00A9               	movwf	___flmul@a+1
  4635     0FC1  0848               	movf	??_scale+6,w
  4636     0FC2  00A8               	movwf	___flmul@a
  4637     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4638     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4639     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4640     0FCA  0827               	movf	?___flmul+3,w
  4641     0FCB  00C1               	movwf	?_scale+3
  4642     0FCC  0826               	movf	?___flmul+2,w
  4643     0FCD  00C0               	movwf	?_scale+2
  4644     0FCE  0825               	movf	?___flmul+1,w
  4645     0FCF  00BF               	movwf	?_scale+1
  4646     0FD0  0824               	movf	?___flmul,w
  4647     0FD1  00BE               	movwf	?_scale
  4648     0FD2  2FFF               	goto	l373
  4649     0FD3                     l3076:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4652     0FD3  0850               	movf	scale@scl,w
  4653     0FD4  00C2               	movwf	??_scale
  4654     0FD5  3001               	movlw	1
  4655     0FD6                     u4405:
  4656     0FD6  1003               	clrc
  4657     0FD7  0DC2               	rlf	??_scale,f
  4658     0FD8  3EFF               	addlw	-1
  4659     0FD9  1D03               	skipz
  4660     0FDA  2FD6               	goto	u4405
  4661     0FDB  1003               	clrc
  4662     0FDC  0D42               	rlf	??_scale,w
  4663     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4664     0FDE  0084               	movwf	4
  4665     0FDF  120A  118A  200D  120A  158A  	fcall	stringdir
  4666     0FE4  00C3               	movwf	??_scale+1
  4667     0FE5  120A  118A  200D  120A  158A  	fcall	stringdir
  4668     0FEA  00C4               	movwf	??_scale+2
  4669     0FEB  120A  118A  200D  120A  158A  	fcall	stringdir
  4670     0FF0  00C5               	movwf	??_scale+3
  4671     0FF1  120A  118A  200D  120A  158A  	fcall	stringdir
  4672     0FF6  00C6               	movwf	??_scale+4
  4673     0FF7  0846               	movf	??_scale+4,w
  4674     0FF8  00C1               	movwf	?_scale+3
  4675     0FF9  0845               	movf	??_scale+3,w
  4676     0FFA  00C0               	movwf	?_scale+2
  4677     0FFB  0844               	movf	??_scale+2,w
  4678     0FFC  00BF               	movwf	?_scale+1
  4679     0FFD  0843               	movf	??_scale+1,w
  4680     0FFE  00BE               	movwf	?_scale
  4681     0FFF                     l373:
  4682     0FFF  0008               	return
  4683     1000                     __end_of_scale:
  4684                           
  4685                           	psect	text3
  4686     1EE4                     __ptext3:	
  4687 ;; *************** function ___awmod *****************
  4688 ;; Defined at:
  4689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  divisor         2    0[COMMON] int 
  4692 ;;  dividend        2    2[COMMON] int 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  sign            1    6[COMMON] unsigned char 
  4695 ;;  counter         1    5[COMMON] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  2    0[COMMON] int 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         4       0       0       0       0
  4706 ;;      Locals:         2       0       0       0       0
  4707 ;;      Temps:          1       0       0       0       0
  4708 ;;      Totals:         7       0       0       0       0
  4709 ;;Total ram usage:        7 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_scale
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718     1EE4                     ___awmod:	
  4719                           ;psect for function ___awmod
  4720                           
  4721     1EE4                     l2552:	
  4722                           ;incstack = 0
  4723                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4724                           
  4725     1EE4  01F6               	clrf	___awmod@sign
  4726     1EE5                     l2554:
  4727     1EE5  1FF3               	btfss	___awmod@dividend+1,7
  4728     1EE6  2EE8               	goto	u3071
  4729     1EE7  2EE9               	goto	u3070
  4730     1EE8                     u3071:
  4731     1EE8  2EF0               	goto	l2560
  4732     1EE9                     u3070:
  4733     1EE9                     l2556:
  4734     1EE9  09F2               	comf	___awmod@dividend,f
  4735     1EEA  09F3               	comf	___awmod@dividend+1,f
  4736     1EEB  0AF2               	incf	___awmod@dividend,f
  4737     1EEC  1903               	skipnz
  4738     1EED  0AF3               	incf	___awmod@dividend+1,f
  4739     1EEE                     l2558:
  4740     1EEE  01F6               	clrf	___awmod@sign
  4741     1EEF  0AF6               	incf	___awmod@sign,f
  4742     1EF0                     l2560:
  4743     1EF0  1FF1               	btfss	___awmod@divisor+1,7
  4744     1EF1  2EF3               	goto	u3081
  4745     1EF2  2EF4               	goto	u3080
  4746     1EF3                     u3081:
  4747     1EF3  2EF9               	goto	l2564
  4748     1EF4                     u3080:
  4749     1EF4                     l2562:
  4750     1EF4  09F0               	comf	___awmod@divisor,f
  4751     1EF5  09F1               	comf	___awmod@divisor+1,f
  4752     1EF6  0AF0               	incf	___awmod@divisor,f
  4753     1EF7  1903               	skipnz
  4754     1EF8  0AF1               	incf	___awmod@divisor+1,f
  4755     1EF9                     l2564:
  4756     1EF9  0870               	movf	___awmod@divisor,w
  4757     1EFA  0471               	iorwf	___awmod@divisor+1,w
  4758     1EFB  1903               	btfsc	3,2
  4759     1EFC  2EFE               	goto	u3091
  4760     1EFD  2EFF               	goto	u3090
  4761     1EFE                     u3091:
  4762     1EFE  2F2E               	goto	l2582
  4763     1EFF                     u3090:
  4764     1EFF                     l2566:
  4765     1EFF  01F5               	clrf	___awmod@counter
  4766     1F00  0AF5               	incf	___awmod@counter,f
  4767     1F01  2F0D               	goto	l2572
  4768     1F02                     l2568:
  4769     1F02  3001               	movlw	1
  4770     1F03                     u3105:
  4771     1F03  1003               	clrc
  4772     1F04  0DF0               	rlf	___awmod@divisor,f
  4773     1F05  0DF1               	rlf	___awmod@divisor+1,f
  4774     1F06  3EFF               	addlw	-1
  4775     1F07  1D03               	skipz
  4776     1F08  2F03               	goto	u3105
  4777     1F09                     l2570:
  4778     1F09  3001               	movlw	1
  4779     1F0A  00F4               	movwf	??___awmod
  4780     1F0B  0874               	movf	??___awmod,w
  4781     1F0C  07F5               	addwf	___awmod@counter,f
  4782     1F0D                     l2572:
  4783     1F0D  1FF1               	btfss	___awmod@divisor+1,7
  4784     1F0E  2F10               	goto	u3111
  4785     1F0F  2F11               	goto	u3110
  4786     1F10                     u3111:
  4787     1F10  2F02               	goto	l2568
  4788     1F11                     u3110:
  4789     1F11                     l2574:
  4790     1F11  0871               	movf	___awmod@divisor+1,w
  4791     1F12  0273               	subwf	___awmod@dividend+1,w
  4792     1F13  1D03               	skipz
  4793     1F14  2F17               	goto	u3125
  4794     1F15  0870               	movf	___awmod@divisor,w
  4795     1F16  0272               	subwf	___awmod@dividend,w
  4796     1F17                     u3125:
  4797     1F17  1C03               	skipc
  4798     1F18  2F1A               	goto	u3121
  4799     1F19  2F1B               	goto	u3120
  4800     1F1A                     u3121:
  4801     1F1A  2F21               	goto	l2578
  4802     1F1B                     u3120:
  4803     1F1B                     l2576:
  4804     1F1B  0870               	movf	___awmod@divisor,w
  4805     1F1C  02F2               	subwf	___awmod@dividend,f
  4806     1F1D  0871               	movf	___awmod@divisor+1,w
  4807     1F1E  1C03               	skipc
  4808     1F1F  03F3               	decf	___awmod@dividend+1,f
  4809     1F20  02F3               	subwf	___awmod@dividend+1,f
  4810     1F21                     l2578:
  4811     1F21  3001               	movlw	1
  4812     1F22                     u3135:
  4813     1F22  1003               	clrc
  4814     1F23  0CF1               	rrf	___awmod@divisor+1,f
  4815     1F24  0CF0               	rrf	___awmod@divisor,f
  4816     1F25  3EFF               	addlw	-1
  4817     1F26  1D03               	skipz
  4818     1F27  2F22               	goto	u3135
  4819     1F28                     l2580:
  4820     1F28  3001               	movlw	1
  4821     1F29  02F5               	subwf	___awmod@counter,f
  4822     1F2A  1D03               	btfss	3,2
  4823     1F2B  2F2D               	goto	u3141
  4824     1F2C  2F2E               	goto	u3140
  4825     1F2D                     u3141:
  4826     1F2D  2F11               	goto	l2574
  4827     1F2E                     u3140:
  4828     1F2E                     l2582:
  4829     1F2E  0876               	movf	___awmod@sign,w
  4830     1F2F  1903               	btfsc	3,2
  4831     1F30  2F32               	goto	u3151
  4832     1F31  2F33               	goto	u3150
  4833     1F32                     u3151:
  4834     1F32  2F38               	goto	l2586
  4835     1F33                     u3150:
  4836     1F33                     l2584:
  4837     1F33  09F2               	comf	___awmod@dividend,f
  4838     1F34  09F3               	comf	___awmod@dividend+1,f
  4839     1F35  0AF2               	incf	___awmod@dividend,f
  4840     1F36  1903               	skipnz
  4841     1F37  0AF3               	incf	___awmod@dividend+1,f
  4842     1F38                     l2586:
  4843     1F38  0873               	movf	___awmod@dividend+1,w
  4844     1F39  00F1               	movwf	?___awmod+1
  4845     1F3A  0872               	movf	___awmod@dividend,w
  4846     1F3B  00F0               	movwf	?___awmod
  4847     1F3C                     l609:
  4848     1F3C  0008               	return
  4849     1F3D                     __end_of___awmod:
  4850                           
  4851                           	psect	text4
  4852     103A                     __ptext4:	
  4853 ;; *************** function ___awdiv *****************
  4854 ;; Defined at:
  4855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  divisor         2    7[COMMON] int 
  4858 ;;  dividend        2    9[COMMON] int 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  quotient        2    2[BANK0 ] int 
  4861 ;;  sign            1    1[BANK0 ] unsigned char 
  4862 ;;  counter         1    0[BANK0 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2    7[COMMON] int 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         4       0       0       0       0
  4873 ;;      Locals:         0       4       0       0       0
  4874 ;;      Temps:          1       0       0       0       0
  4875 ;;      Totals:         5       4       0       0       0
  4876 ;;Total ram usage:        9 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_scale
  4882 ;;		_sprintf
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886     103A                     ___awdiv:	
  4887                           ;psect for function ___awdiv
  4888                           
  4889     103A                     l2508:	
  4890                           ;incstack = 0
  4891                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4892                           
  4893     103A  1283               	bcf	3,5	;RP0=0, select bank0
  4894     103B  1303               	bcf	3,6	;RP1=0, select bank0
  4895     103C  01A1               	clrf	___awdiv@sign
  4896     103D                     l2510:
  4897     103D  1FF8               	btfss	___awdiv@divisor+1,7
  4898     103E  2840               	goto	u2971
  4899     103F  2841               	goto	u2970
  4900     1040                     u2971:
  4901     1040  2848               	goto	l2516
  4902     1041                     u2970:
  4903     1041                     l2512:
  4904     1041  09F7               	comf	___awdiv@divisor,f
  4905     1042  09F8               	comf	___awdiv@divisor+1,f
  4906     1043  0AF7               	incf	___awdiv@divisor,f
  4907     1044  1903               	skipnz
  4908     1045  0AF8               	incf	___awdiv@divisor+1,f
  4909     1046                     l2514:
  4910     1046  01A1               	clrf	___awdiv@sign
  4911     1047  0AA1               	incf	___awdiv@sign,f
  4912     1048                     l2516:
  4913     1048  1FFA               	btfss	___awdiv@dividend+1,7
  4914     1049  284B               	goto	u2981
  4915     104A  284C               	goto	u2980
  4916     104B                     u2981:
  4917     104B  2855               	goto	l2522
  4918     104C                     u2980:
  4919     104C                     l2518:
  4920     104C  09F9               	comf	___awdiv@dividend,f
  4921     104D  09FA               	comf	___awdiv@dividend+1,f
  4922     104E  0AF9               	incf	___awdiv@dividend,f
  4923     104F  1903               	skipnz
  4924     1050  0AFA               	incf	___awdiv@dividend+1,f
  4925     1051                     l2520:
  4926     1051  3001               	movlw	1
  4927     1052  00FB               	movwf	??___awdiv
  4928     1053  087B               	movf	??___awdiv,w
  4929     1054  06A1               	xorwf	___awdiv@sign,f
  4930     1055                     l2522:
  4931     1055  01A2               	clrf	___awdiv@quotient
  4932     1056  01A3               	clrf	___awdiv@quotient+1
  4933     1057                     l2524:
  4934     1057  0877               	movf	___awdiv@divisor,w
  4935     1058  0478               	iorwf	___awdiv@divisor+1,w
  4936     1059  1903               	btfsc	3,2
  4937     105A  285C               	goto	u2991
  4938     105B  285D               	goto	u2990
  4939     105C                     u2991:
  4940     105C  2894               	goto	l2544
  4941     105D                     u2990:
  4942     105D                     l2526:
  4943     105D  01A0               	clrf	___awdiv@counter
  4944     105E  0AA0               	incf	___awdiv@counter,f
  4945     105F  286B               	goto	l2532
  4946     1060                     l2528:
  4947     1060  3001               	movlw	1
  4948     1061                     u3005:
  4949     1061  1003               	clrc
  4950     1062  0DF7               	rlf	___awdiv@divisor,f
  4951     1063  0DF8               	rlf	___awdiv@divisor+1,f
  4952     1064  3EFF               	addlw	-1
  4953     1065  1D03               	skipz
  4954     1066  2861               	goto	u3005
  4955     1067                     l2530:
  4956     1067  3001               	movlw	1
  4957     1068  00FB               	movwf	??___awdiv
  4958     1069  087B               	movf	??___awdiv,w
  4959     106A  07A0               	addwf	___awdiv@counter,f
  4960     106B                     l2532:
  4961     106B  1FF8               	btfss	___awdiv@divisor+1,7
  4962     106C  286E               	goto	u3011
  4963     106D  286F               	goto	u3010
  4964     106E                     u3011:
  4965     106E  2860               	goto	l2528
  4966     106F                     u3010:
  4967     106F                     l2534:
  4968     106F  3001               	movlw	1
  4969     1070                     u3025:
  4970     1070  1003               	clrc
  4971     1071  0DA2               	rlf	___awdiv@quotient,f
  4972     1072  0DA3               	rlf	___awdiv@quotient+1,f
  4973     1073  3EFF               	addlw	-1
  4974     1074  1D03               	skipz
  4975     1075  2870               	goto	u3025
  4976     1076  0878               	movf	___awdiv@divisor+1,w
  4977     1077  027A               	subwf	___awdiv@dividend+1,w
  4978     1078  1D03               	skipz
  4979     1079  287C               	goto	u3035
  4980     107A  0877               	movf	___awdiv@divisor,w
  4981     107B  0279               	subwf	___awdiv@dividend,w
  4982     107C                     u3035:
  4983     107C  1C03               	skipc
  4984     107D  287F               	goto	u3031
  4985     107E  2880               	goto	u3030
  4986     107F                     u3031:
  4987     107F  2887               	goto	l2540
  4988     1080                     u3030:
  4989     1080                     l2536:
  4990     1080  0877               	movf	___awdiv@divisor,w
  4991     1081  02F9               	subwf	___awdiv@dividend,f
  4992     1082  0878               	movf	___awdiv@divisor+1,w
  4993     1083  1C03               	skipc
  4994     1084  03FA               	decf	___awdiv@dividend+1,f
  4995     1085  02FA               	subwf	___awdiv@dividend+1,f
  4996     1086                     l2538:
  4997     1086  1422               	bsf	___awdiv@quotient,0
  4998     1087                     l2540:
  4999     1087  3001               	movlw	1
  5000     1088                     u3045:
  5001     1088  1003               	clrc
  5002     1089  0CF8               	rrf	___awdiv@divisor+1,f
  5003     108A  0CF7               	rrf	___awdiv@divisor,f
  5004     108B  3EFF               	addlw	-1
  5005     108C  1D03               	skipz
  5006     108D  2888               	goto	u3045
  5007     108E                     l2542:
  5008     108E  3001               	movlw	1
  5009     108F  02A0               	subwf	___awdiv@counter,f
  5010     1090  1D03               	btfss	3,2
  5011     1091  2893               	goto	u3051
  5012     1092  2894               	goto	u3050
  5013     1093                     u3051:
  5014     1093  286F               	goto	l2534
  5015     1094                     u3050:
  5016     1094                     l2544:
  5017     1094  0821               	movf	___awdiv@sign,w
  5018     1095  1903               	btfsc	3,2
  5019     1096  2898               	goto	u3061
  5020     1097  2899               	goto	u3060
  5021     1098                     u3061:
  5022     1098  289E               	goto	l2548
  5023     1099                     u3060:
  5024     1099                     l2546:
  5025     1099  09A2               	comf	___awdiv@quotient,f
  5026     109A  09A3               	comf	___awdiv@quotient+1,f
  5027     109B  0AA2               	incf	___awdiv@quotient,f
  5028     109C  1903               	skipnz
  5029     109D  0AA3               	incf	___awdiv@quotient+1,f
  5030     109E                     l2548:
  5031     109E  0823               	movf	___awdiv@quotient+1,w
  5032     109F  00F8               	movwf	?___awdiv+1
  5033     10A0  0822               	movf	___awdiv@quotient,w
  5034     10A1  00F7               	movwf	?___awdiv
  5035     10A2                     l596:
  5036     10A2  0008               	return
  5037     10A3                     __end_of___awdiv:
  5038                           
  5039                           	psect	text5
  5040     1BD0                     __ptext5:	
  5041 ;; *************** function _isdigit *****************
  5042 ;; Defined at:
  5043 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  c               1    wreg     unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  c               1    1[COMMON] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;		None               void
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         0       0       0       0       0
  5058 ;;      Locals:         2       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0
  5060 ;;      Totals:         2       0       0       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_sprintf
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070     1BD0                     _isdigit:	
  5071                           ;psect for function _isdigit
  5072                           
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5076                           ;isdigit@c stored from wreg
  5077     1BD0  00F1               	movwf	isdigit@c
  5078     1BD1                     l3080:
  5079     1BD1  01F0               	clrf	_isdigit$1152
  5080     1BD2                     l3082:
  5081     1BD2  303A               	movlw	58
  5082     1BD3  0271               	subwf	isdigit@c,w
  5083     1BD4  1803               	skipnc
  5084     1BD5  2BD7               	goto	u4411
  5085     1BD6  2BD8               	goto	u4410
  5086     1BD7                     u4411:
  5087     1BD7  2BE0               	goto	l3088
  5088     1BD8                     u4410:
  5089     1BD8                     l3084:
  5090     1BD8  3030               	movlw	48
  5091     1BD9  0271               	subwf	isdigit@c,w
  5092     1BDA  1C03               	skipc
  5093     1BDB  2BDD               	goto	u4421
  5094     1BDC  2BDE               	goto	u4420
  5095     1BDD                     u4421:
  5096     1BDD  2BE0               	goto	l3088
  5097     1BDE                     u4420:
  5098     1BDE                     l3086:
  5099     1BDE  01F0               	clrf	_isdigit$1152
  5100     1BDF  0AF0               	incf	_isdigit$1152,f
  5101     1BE0                     l3088:
  5102     1BE0  0C70               	rrf	_isdigit$1152,w
  5103     1BE1                     l930:
  5104     1BE1  0008               	return
  5105     1BE2                     __end_of_isdigit:
  5106                           
  5107                           	psect	text6
  5108     139D                     __ptext6:	
  5109 ;; *************** function _fround *****************
  5110 ;; Defined at:
  5111 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  prec            1    wreg     unsigned char 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  prec            1   49[BANK0 ] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  4   30[BANK0 ] unsigned char 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5125 ;;      Params:         0       4       0       0       0
  5126 ;;      Locals:         0       9       0       0       0
  5127 ;;      Temps:          0       7       0       0       0
  5128 ;;      Totals:         0      20       0       0       0
  5129 ;;Total ram usage:       20 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 2
  5132 ;; This function calls:
  5133 ;;		___flmul
  5134 ;;		___lwdiv
  5135 ;;		___lwmod
  5136 ;; This function is called by:
  5137 ;;		_sprintf
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141     139D                     _fround:	
  5142                           ;psect for function _fround
  5143                           
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5147                           ;fround@prec stored from wreg
  5148     139D  1283               	bcf	3,5	;RP0=0, select bank0
  5149     139E  1303               	bcf	3,6	;RP1=0, select bank0
  5150     139F  00D1               	movwf	fround@prec
  5151     13A0                     l3022:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5154     13A0  306E               	movlw	110
  5155     13A1  0251               	subwf	fround@prec,w
  5156     13A2  1C03               	skipc
  5157     13A3  2BA5               	goto	u4161
  5158     13A4  2BA6               	goto	u4160
  5159     13A5                     u4161:
  5160     13A5  2CB3               	goto	l3030
  5161     13A6                     u4160:
  5162     13A6                     l3024:
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5165     13A6  303F               	movlw	63
  5166     13A7  00A7               	movwf	___flmul@b+3
  5167     13A8  3000               	movlw	0
  5168     13A9  00A6               	movwf	___flmul@b+2
  5169     13AA  3000               	movlw	0
  5170     13AB  00A5               	movwf	___flmul@b+1
  5171     13AC  3000               	movlw	0
  5172     13AD  00A4               	movwf	___flmul@b
  5173     13AE  3064               	movlw	100
  5174     13AF  00F6               	movwf	___lwdiv@divisor
  5175     13B0  3000               	movlw	0
  5176     13B1  00F7               	movwf	___lwdiv@divisor+1
  5177     13B2  0851               	movf	fround@prec,w
  5178     13B3  00C2               	movwf	??_fround
  5179     13B4  01C3               	clrf	??_fround+1
  5180     13B5  0842               	movf	??_fround,w
  5181     13B6  00F8               	movwf	___lwdiv@dividend
  5182     13B7  0843               	movf	??_fround+1,w
  5183     13B8  00F9               	movwf	___lwdiv@dividend+1
  5184     13B9  160A  158A  25B8  160A  118A  	fcall	___lwdiv
  5185     13BE  0876               	movf	?___lwdiv,w
  5186     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5187     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5188     13C1  00C4               	movwf	??_fround+2
  5189     13C2  3001               	movlw	1
  5190     13C3                     u4175:
  5191     13C3  1003               	clrc
  5192     13C4  0DC4               	rlf	??_fround+2,f
  5193     13C5  3EFF               	addlw	-1
  5194     13C6  1D03               	skipz
  5195     13C7  2BC3               	goto	u4175
  5196     13C8  1003               	clrc
  5197     13C9  0D44               	rlf	??_fround+2,w
  5198     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5199     13CB  0084               	movwf	4
  5200     13CC  120A  118A  200D  160A  118A  	fcall	stringdir
  5201     13D1  00C5               	movwf	??_fround+3
  5202     13D2  120A  118A  200D  160A  118A  	fcall	stringdir
  5203     13D7  00C6               	movwf	??_fround+4
  5204     13D8  120A  118A  200D  160A  118A  	fcall	stringdir
  5205     13DD  00C7               	movwf	??_fround+5
  5206     13DE  120A  118A  200D  160A  118A  	fcall	stringdir
  5207     13E3  00C8               	movwf	??_fround+6
  5208     13E4  0848               	movf	??_fround+6,w
  5209     13E5  00AB               	movwf	___flmul@a+3
  5210     13E6  0847               	movf	??_fround+5,w
  5211     13E7  00AA               	movwf	___flmul@a+2
  5212     13E8  0846               	movf	??_fround+4,w
  5213     13E9  00A9               	movwf	___flmul@a+1
  5214     13EA  0845               	movf	??_fround+3,w
  5215     13EB  00A8               	movwf	___flmul@a
  5216     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  5217     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  5218     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  5219     13F3  0827               	movf	?___flmul+3,w
  5220     13F4  00D0               	movwf	_fround$1363+3
  5221     13F5  0826               	movf	?___flmul+2,w
  5222     13F6  00CF               	movwf	_fround$1363+2
  5223     13F7  0825               	movf	?___flmul+1,w
  5224     13F8  00CE               	movwf	_fround$1363+1
  5225     13F9  0824               	movf	?___flmul,w
  5226     13FA  00CD               	movwf	_fround$1363
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5229     13FB  300A               	movlw	10
  5230     13FC  00F6               	movwf	___lwdiv@divisor
  5231     13FD  3000               	movlw	0
  5232     13FE  00F7               	movwf	___lwdiv@divisor+1
  5233     13FF  0851               	movf	fround@prec,w
  5234     1400  00C2               	movwf	??_fround
  5235     1401  01C3               	clrf	??_fround+1
  5236     1402  0842               	movf	??_fround,w
  5237     1403  00F2               	movwf	___lwmod@dividend
  5238     1404  0843               	movf	??_fround+1,w
  5239     1405  00F3               	movwf	___lwmod@dividend+1
  5240     1406  3064               	movlw	100
  5241     1407  00F0               	movwf	___lwmod@divisor
  5242     1408  3000               	movlw	0
  5243     1409  00F1               	movwf	___lwmod@divisor+1
  5244     140A  160A  118A  2000  160A  118A  	fcall	___lwmod
  5245     140F  0871               	movf	?___lwmod+1,w
  5246     1410  00F9               	movwf	___lwdiv@dividend+1
  5247     1411  0870               	movf	?___lwmod,w
  5248     1412  00F8               	movwf	___lwdiv@dividend
  5249     1413  160A  158A  25B8  160A  118A  	fcall	___lwdiv
  5250     1418  0876               	movf	?___lwdiv,w
  5251     1419  1283               	bcf	3,5	;RP0=0, select bank0
  5252     141A  1303               	bcf	3,6	;RP1=0, select bank0
  5253     141B  00C4               	movwf	??_fround+2
  5254     141C  3001               	movlw	1
  5255     141D                     u4185:
  5256     141D  1003               	clrc
  5257     141E  0DC4               	rlf	??_fround+2,f
  5258     141F  3EFF               	addlw	-1
  5259     1420  1D03               	skipz
  5260     1421  2C1D               	goto	u4185
  5261     1422  1003               	clrc
  5262     1423  0D44               	rlf	??_fround+2,w
  5263     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5264     1425  0084               	movwf	4
  5265     1426  120A  118A  200D  160A  118A  	fcall	stringdir
  5266     142B  00C5               	movwf	??_fround+3
  5267     142C  120A  118A  200D  160A  118A  	fcall	stringdir
  5268     1431  00C6               	movwf	??_fround+4
  5269     1432  120A  118A  200D  160A  118A  	fcall	stringdir
  5270     1437  00C7               	movwf	??_fround+5
  5271     1438  120A  118A  200D  160A  118A  	fcall	stringdir
  5272     143D  00C8               	movwf	??_fround+6
  5273     143E  0848               	movf	??_fround+6,w
  5274     143F  00A7               	movwf	___flmul@b+3
  5275     1440  0847               	movf	??_fround+5,w
  5276     1441  00A6               	movwf	___flmul@b+2
  5277     1442  0846               	movf	??_fround+4,w
  5278     1443  00A5               	movwf	___flmul@b+1
  5279     1444  0845               	movf	??_fround+3,w
  5280     1445  00A4               	movwf	___flmul@b
  5281     1446  0850               	movf	_fround$1363+3,w
  5282     1447  00AB               	movwf	___flmul@a+3
  5283     1448  084F               	movf	_fround$1363+2,w
  5284     1449  00AA               	movwf	___flmul@a+2
  5285     144A  084E               	movf	_fround$1363+1,w
  5286     144B  00A9               	movwf	___flmul@a+1
  5287     144C  084D               	movf	_fround$1363,w
  5288     144D  00A8               	movwf	___flmul@a
  5289     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  5290     1453  1283               	bcf	3,5	;RP0=0, select bank0
  5291     1454  1303               	bcf	3,6	;RP1=0, select bank0
  5292     1455  0827               	movf	?___flmul+3,w
  5293     1456  00CC               	movwf	_fround$1364+3
  5294     1457  0826               	movf	?___flmul+2,w
  5295     1458  00CB               	movwf	_fround$1364+2
  5296     1459  0825               	movf	?___flmul+1,w
  5297     145A  00CA               	movwf	_fround$1364+1
  5298     145B  0824               	movf	?___flmul,w
  5299     145C  00C9               	movwf	_fround$1364
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5302     145D  300A               	movlw	10
  5303     145E  00F0               	movwf	___lwmod@divisor
  5304     145F  3000               	movlw	0
  5305     1460  00F1               	movwf	___lwmod@divisor+1
  5306     1461  0851               	movf	fround@prec,w
  5307     1462  00C2               	movwf	??_fround
  5308     1463  01C3               	clrf	??_fround+1
  5309     1464  0842               	movf	??_fround,w
  5310     1465  00F2               	movwf	___lwmod@dividend
  5311     1466  0843               	movf	??_fround+1,w
  5312     1467  00F3               	movwf	___lwmod@dividend+1
  5313     1468  160A  118A  2000  160A  118A  	fcall	___lwmod
  5314     146D  0870               	movf	?___lwmod,w
  5315     146E  1283               	bcf	3,5	;RP0=0, select bank0
  5316     146F  1303               	bcf	3,6	;RP1=0, select bank0
  5317     1470  00C4               	movwf	??_fround+2
  5318     1471  3001               	movlw	1
  5319     1472                     u4195:
  5320     1472  1003               	clrc
  5321     1473  0DC4               	rlf	??_fround+2,f
  5322     1474  3EFF               	addlw	-1
  5323     1475  1D03               	skipz
  5324     1476  2C72               	goto	u4195
  5325     1477  1003               	clrc
  5326     1478  0D44               	rlf	??_fround+2,w
  5327     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5328     147A  0084               	movwf	4
  5329     147B  120A  118A  200D  160A  118A  	fcall	stringdir
  5330     1480  00C5               	movwf	??_fround+3
  5331     1481  120A  118A  200D  160A  118A  	fcall	stringdir
  5332     1486  00C6               	movwf	??_fround+4
  5333     1487  120A  118A  200D  160A  118A  	fcall	stringdir
  5334     148C  00C7               	movwf	??_fround+5
  5335     148D  120A  118A  200D  160A  118A  	fcall	stringdir
  5336     1492  00C8               	movwf	??_fround+6
  5337     1493  0848               	movf	??_fround+6,w
  5338     1494  00A7               	movwf	___flmul@b+3
  5339     1495  0847               	movf	??_fround+5,w
  5340     1496  00A6               	movwf	___flmul@b+2
  5341     1497  0846               	movf	??_fround+4,w
  5342     1498  00A5               	movwf	___flmul@b+1
  5343     1499  0845               	movf	??_fround+3,w
  5344     149A  00A4               	movwf	___flmul@b
  5345     149B  084C               	movf	_fround$1364+3,w
  5346     149C  00AB               	movwf	___flmul@a+3
  5347     149D  084B               	movf	_fround$1364+2,w
  5348     149E  00AA               	movwf	___flmul@a+2
  5349     149F  084A               	movf	_fround$1364+1,w
  5350     14A0  00A9               	movwf	___flmul@a+1
  5351     14A1  0849               	movf	_fround$1364,w
  5352     14A2  00A8               	movwf	___flmul@a
  5353     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  5354     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  5355     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  5356     14AA  0827               	movf	?___flmul+3,w
  5357     14AB  00C1               	movwf	?_fround+3
  5358     14AC  0826               	movf	?___flmul+2,w
  5359     14AD  00C0               	movwf	?_fround+2
  5360     14AE  0825               	movf	?___flmul+1,w
  5361     14AF  00BF               	movwf	?_fround+1
  5362     14B0  0824               	movf	?___flmul,w
  5363     14B1  00BE               	movwf	?_fround
  5364     14B2  2DA7               	goto	l366
  5365     14B3                     l3030:
  5366     14B3  300B               	movlw	11
  5367     14B4  0251               	subwf	fround@prec,w
  5368     14B5  1C03               	skipc
  5369     14B6  2CB8               	goto	u4201
  5370     14B7  2CB9               	goto	u4200
  5371     14B8                     u4201:
  5372     14B8  2D64               	goto	l3036
  5373     14B9                     u4200:
  5374     14B9                     l3032:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5377     14B9  303F               	movlw	63
  5378     14BA  00A7               	movwf	___flmul@b+3
  5379     14BB  3000               	movlw	0
  5380     14BC  00A6               	movwf	___flmul@b+2
  5381     14BD  3000               	movlw	0
  5382     14BE  00A5               	movwf	___flmul@b+1
  5383     14BF  3000               	movlw	0
  5384     14C0  00A4               	movwf	___flmul@b
  5385     14C1  300A               	movlw	10
  5386     14C2  00F6               	movwf	___lwdiv@divisor
  5387     14C3  3000               	movlw	0
  5388     14C4  00F7               	movwf	___lwdiv@divisor+1
  5389     14C5  0851               	movf	fround@prec,w
  5390     14C6  00C2               	movwf	??_fround
  5391     14C7  01C3               	clrf	??_fround+1
  5392     14C8  0842               	movf	??_fround,w
  5393     14C9  00F8               	movwf	___lwdiv@dividend
  5394     14CA  0843               	movf	??_fround+1,w
  5395     14CB  00F9               	movwf	___lwdiv@dividend+1
  5396     14CC  160A  158A  25B8  160A  118A  	fcall	___lwdiv
  5397     14D1  0876               	movf	?___lwdiv,w
  5398     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  5399     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  5400     14D4  00C4               	movwf	??_fround+2
  5401     14D5  3001               	movlw	1
  5402     14D6                     u4215:
  5403     14D6  1003               	clrc
  5404     14D7  0DC4               	rlf	??_fround+2,f
  5405     14D8  3EFF               	addlw	-1
  5406     14D9  1D03               	skipz
  5407     14DA  2CD6               	goto	u4215
  5408     14DB  1003               	clrc
  5409     14DC  0D44               	rlf	??_fround+2,w
  5410     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5411     14DE  0084               	movwf	4
  5412     14DF  120A  118A  200D  160A  118A  	fcall	stringdir
  5413     14E4  00C5               	movwf	??_fround+3
  5414     14E5  120A  118A  200D  160A  118A  	fcall	stringdir
  5415     14EA  00C6               	movwf	??_fround+4
  5416     14EB  120A  118A  200D  160A  118A  	fcall	stringdir
  5417     14F0  00C7               	movwf	??_fround+5
  5418     14F1  120A  118A  200D  160A  118A  	fcall	stringdir
  5419     14F6  00C8               	movwf	??_fround+6
  5420     14F7  0848               	movf	??_fround+6,w
  5421     14F8  00AB               	movwf	___flmul@a+3
  5422     14F9  0847               	movf	??_fround+5,w
  5423     14FA  00AA               	movwf	___flmul@a+2
  5424     14FB  0846               	movf	??_fround+4,w
  5425     14FC  00A9               	movwf	___flmul@a+1
  5426     14FD  0845               	movf	??_fround+3,w
  5427     14FE  00A8               	movwf	___flmul@a
  5428     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  5429     1504  1283               	bcf	3,5	;RP0=0, select bank0
  5430     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5431     1506  0827               	movf	?___flmul+3,w
  5432     1507  00D0               	movwf	_fround$1363+3
  5433     1508  0826               	movf	?___flmul+2,w
  5434     1509  00CF               	movwf	_fround$1363+2
  5435     150A  0825               	movf	?___flmul+1,w
  5436     150B  00CE               	movwf	_fround$1363+1
  5437     150C  0824               	movf	?___flmul,w
  5438     150D  00CD               	movwf	_fround$1363
  5439                           
  5440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5441     150E  300A               	movlw	10
  5442     150F  00F0               	movwf	___lwmod@divisor
  5443     1510  3000               	movlw	0
  5444     1511  00F1               	movwf	___lwmod@divisor+1
  5445     1512  0851               	movf	fround@prec,w
  5446     1513  00C2               	movwf	??_fround
  5447     1514  01C3               	clrf	??_fround+1
  5448     1515  0842               	movf	??_fround,w
  5449     1516  00F2               	movwf	___lwmod@dividend
  5450     1517  0843               	movf	??_fround+1,w
  5451     1518  00F3               	movwf	___lwmod@dividend+1
  5452     1519  160A  118A  2000  160A  118A  	fcall	___lwmod
  5453     151E  0870               	movf	?___lwmod,w
  5454     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5455     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5456     1521  00C4               	movwf	??_fround+2
  5457     1522  3001               	movlw	1
  5458     1523                     u4225:
  5459     1523  1003               	clrc
  5460     1524  0DC4               	rlf	??_fround+2,f
  5461     1525  3EFF               	addlw	-1
  5462     1526  1D03               	skipz
  5463     1527  2D23               	goto	u4225
  5464     1528  1003               	clrc
  5465     1529  0D44               	rlf	??_fround+2,w
  5466     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5467     152B  0084               	movwf	4
  5468     152C  120A  118A  200D  160A  118A  	fcall	stringdir
  5469     1531  00C5               	movwf	??_fround+3
  5470     1532  120A  118A  200D  160A  118A  	fcall	stringdir
  5471     1537  00C6               	movwf	??_fround+4
  5472     1538  120A  118A  200D  160A  118A  	fcall	stringdir
  5473     153D  00C7               	movwf	??_fround+5
  5474     153E  120A  118A  200D  160A  118A  	fcall	stringdir
  5475     1543  00C8               	movwf	??_fround+6
  5476     1544  0848               	movf	??_fround+6,w
  5477     1545  00A7               	movwf	___flmul@b+3
  5478     1546  0847               	movf	??_fround+5,w
  5479     1547  00A6               	movwf	___flmul@b+2
  5480     1548  0846               	movf	??_fround+4,w
  5481     1549  00A5               	movwf	___flmul@b+1
  5482     154A  0845               	movf	??_fround+3,w
  5483     154B  00A4               	movwf	___flmul@b
  5484     154C  0850               	movf	_fround$1363+3,w
  5485     154D  00AB               	movwf	___flmul@a+3
  5486     154E  084F               	movf	_fround$1363+2,w
  5487     154F  00AA               	movwf	___flmul@a+2
  5488     1550  084E               	movf	_fround$1363+1,w
  5489     1551  00A9               	movwf	___flmul@a+1
  5490     1552  084D               	movf	_fround$1363,w
  5491     1553  00A8               	movwf	___flmul@a
  5492     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5493     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5494     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5495     155B  0827               	movf	?___flmul+3,w
  5496     155C  00C1               	movwf	?_fround+3
  5497     155D  0826               	movf	?___flmul+2,w
  5498     155E  00C0               	movwf	?_fround+2
  5499     155F  0825               	movf	?___flmul+1,w
  5500     1560  00BF               	movwf	?_fround+1
  5501     1561  0824               	movf	?___flmul,w
  5502     1562  00BE               	movwf	?_fround
  5503     1563  2DA7               	goto	l366
  5504     1564                     l3036:
  5505                           
  5506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5507     1564  303F               	movlw	63
  5508     1565  00A7               	movwf	___flmul@b+3
  5509     1566  3000               	movlw	0
  5510     1567  00A6               	movwf	___flmul@b+2
  5511     1568  3000               	movlw	0
  5512     1569  00A5               	movwf	___flmul@b+1
  5513     156A  3000               	movlw	0
  5514     156B  00A4               	movwf	___flmul@b
  5515     156C  0851               	movf	fround@prec,w
  5516     156D  00C2               	movwf	??_fround
  5517     156E  3001               	movlw	1
  5518     156F                     u4235:
  5519     156F  1003               	clrc
  5520     1570  0DC2               	rlf	??_fround,f
  5521     1571  3EFF               	addlw	-1
  5522     1572  1D03               	skipz
  5523     1573  2D6F               	goto	u4235
  5524     1574  1003               	clrc
  5525     1575  0D42               	rlf	??_fround,w
  5526     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5527     1577  0084               	movwf	4
  5528     1578  120A  118A  200D  160A  118A  	fcall	stringdir
  5529     157D  00C3               	movwf	??_fround+1
  5530     157E  120A  118A  200D  160A  118A  	fcall	stringdir
  5531     1583  00C4               	movwf	??_fround+2
  5532     1584  120A  118A  200D  160A  118A  	fcall	stringdir
  5533     1589  00C5               	movwf	??_fround+3
  5534     158A  120A  118A  200D  160A  118A  	fcall	stringdir
  5535     158F  00C6               	movwf	??_fround+4
  5536     1590  0846               	movf	??_fround+4,w
  5537     1591  00AB               	movwf	___flmul@a+3
  5538     1592  0845               	movf	??_fround+3,w
  5539     1593  00AA               	movwf	___flmul@a+2
  5540     1594  0844               	movf	??_fround+2,w
  5541     1595  00A9               	movwf	___flmul@a+1
  5542     1596  0843               	movf	??_fround+1,w
  5543     1597  00A8               	movwf	___flmul@a
  5544     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5545     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5546     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5547     159F  0827               	movf	?___flmul+3,w
  5548     15A0  00C1               	movwf	?_fround+3
  5549     15A1  0826               	movf	?___flmul+2,w
  5550     15A2  00C0               	movwf	?_fround+2
  5551     15A3  0825               	movf	?___flmul+1,w
  5552     15A4  00BF               	movwf	?_fround+1
  5553     15A5  0824               	movf	?___flmul,w
  5554     15A6  00BE               	movwf	?_fround
  5555     15A7                     l366:
  5556     15A7  0008               	return
  5557     15A8                     __end_of_fround:
  5558                           
  5559                           	psect	text7
  5560     1000                     __ptext7:	
  5561 ;; *************** function ___lwmod *****************
  5562 ;; Defined at:
  5563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  divisor         2    0[COMMON] unsigned int 
  5566 ;;  dividend        2    2[COMMON] unsigned int 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  counter         1    5[COMMON] unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  2    0[COMMON] unsigned int 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5578 ;;      Params:         4       0       0       0       0
  5579 ;;      Locals:         1       0       0       0       0
  5580 ;;      Temps:          1       0       0       0       0
  5581 ;;      Totals:         6       0       0       0       0
  5582 ;;Total ram usage:        6 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_fround
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591     1000                     ___lwmod:	
  5592                           ;psect for function ___lwmod
  5593                           
  5594     1000                     l2616:	
  5595                           ;incstack = 0
  5596                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5597                           
  5598     1000  0870               	movf	___lwmod@divisor,w
  5599     1001  0471               	iorwf	___lwmod@divisor+1,w
  5600     1002  1903               	btfsc	3,2
  5601     1003  2805               	goto	u3231
  5602     1004  2806               	goto	u3230
  5603     1005                     u3231:
  5604     1005  2835               	goto	l2634
  5605     1006                     u3230:
  5606     1006                     l2618:
  5607     1006  01F5               	clrf	___lwmod@counter
  5608     1007  0AF5               	incf	___lwmod@counter,f
  5609     1008  2814               	goto	l2624
  5610     1009                     l2620:
  5611     1009  3001               	movlw	1
  5612     100A                     u3245:
  5613     100A  1003               	clrc
  5614     100B  0DF0               	rlf	___lwmod@divisor,f
  5615     100C  0DF1               	rlf	___lwmod@divisor+1,f
  5616     100D  3EFF               	addlw	-1
  5617     100E  1D03               	skipz
  5618     100F  280A               	goto	u3245
  5619     1010                     l2622:
  5620     1010  3001               	movlw	1
  5621     1011  00F4               	movwf	??___lwmod
  5622     1012  0874               	movf	??___lwmod,w
  5623     1013  07F5               	addwf	___lwmod@counter,f
  5624     1014                     l2624:
  5625     1014  1FF1               	btfss	___lwmod@divisor+1,7
  5626     1015  2817               	goto	u3251
  5627     1016  2818               	goto	u3250
  5628     1017                     u3251:
  5629     1017  2809               	goto	l2620
  5630     1018                     u3250:
  5631     1018                     l2626:
  5632     1018  0871               	movf	___lwmod@divisor+1,w
  5633     1019  0273               	subwf	___lwmod@dividend+1,w
  5634     101A  1D03               	skipz
  5635     101B  281E               	goto	u3265
  5636     101C  0870               	movf	___lwmod@divisor,w
  5637     101D  0272               	subwf	___lwmod@dividend,w
  5638     101E                     u3265:
  5639     101E  1C03               	skipc
  5640     101F  2821               	goto	u3261
  5641     1020  2822               	goto	u3260
  5642     1021                     u3261:
  5643     1021  2828               	goto	l2630
  5644     1022                     u3260:
  5645     1022                     l2628:
  5646     1022  0870               	movf	___lwmod@divisor,w
  5647     1023  02F2               	subwf	___lwmod@dividend,f
  5648     1024  0871               	movf	___lwmod@divisor+1,w
  5649     1025  1C03               	skipc
  5650     1026  03F3               	decf	___lwmod@dividend+1,f
  5651     1027  02F3               	subwf	___lwmod@dividend+1,f
  5652     1028                     l2630:
  5653     1028  3001               	movlw	1
  5654     1029                     u3275:
  5655     1029  1003               	clrc
  5656     102A  0CF1               	rrf	___lwmod@divisor+1,f
  5657     102B  0CF0               	rrf	___lwmod@divisor,f
  5658     102C  3EFF               	addlw	-1
  5659     102D  1D03               	skipz
  5660     102E  2829               	goto	u3275
  5661     102F                     l2632:
  5662     102F  3001               	movlw	1
  5663     1030  02F5               	subwf	___lwmod@counter,f
  5664     1031  1D03               	btfss	3,2
  5665     1032  2834               	goto	u3281
  5666     1033  2835               	goto	u3280
  5667     1034                     u3281:
  5668     1034  2818               	goto	l2626
  5669     1035                     u3280:
  5670     1035                     l2634:
  5671     1035  0873               	movf	___lwmod@dividend+1,w
  5672     1036  00F1               	movwf	?___lwmod+1
  5673     1037  0872               	movf	___lwmod@dividend,w
  5674     1038  00F0               	movwf	?___lwmod
  5675     1039                     l759:
  5676     1039  0008               	return
  5677     103A                     __end_of___lwmod:
  5678                           
  5679                           	psect	text8
  5680     1DB8                     __ptext8:	
  5681 ;; *************** function ___lwdiv *****************
  5682 ;; Defined at:
  5683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  divisor         2    6[COMMON] unsigned int 
  5686 ;;  dividend        2    8[COMMON] unsigned int 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  quotient        2   11[COMMON] unsigned int 
  5689 ;;  counter         1   13[COMMON] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  2    6[COMMON] unsigned int 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5699 ;;      Params:         4       0       0       0       0
  5700 ;;      Locals:         3       0       0       0       0
  5701 ;;      Temps:          1       0       0       0       0
  5702 ;;      Totals:         8       0       0       0       0
  5703 ;;Total ram usage:        8 bytes
  5704 ;; Hardware stack levels used: 1
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_fround
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712     1DB8                     ___lwdiv:	
  5713                           ;psect for function ___lwdiv
  5714                           
  5715     1DB8                     l2590:	
  5716                           ;incstack = 0
  5717                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5718                           
  5719     1DB8  01FB               	clrf	___lwdiv@quotient
  5720     1DB9  01FC               	clrf	___lwdiv@quotient+1
  5721     1DBA                     l2592:
  5722     1DBA  0876               	movf	___lwdiv@divisor,w
  5723     1DBB  0477               	iorwf	___lwdiv@divisor+1,w
  5724     1DBC  1903               	btfsc	3,2
  5725     1DBD  2DBF               	goto	u3161
  5726     1DBE  2DC0               	goto	u3160
  5727     1DBF                     u3161:
  5728     1DBF  2DF7               	goto	l2612
  5729     1DC0                     u3160:
  5730     1DC0                     l2594:
  5731     1DC0  01FD               	clrf	___lwdiv@counter
  5732     1DC1  0AFD               	incf	___lwdiv@counter,f
  5733     1DC2  2DCE               	goto	l2600
  5734     1DC3                     l2596:
  5735     1DC3  3001               	movlw	1
  5736     1DC4                     u3175:
  5737     1DC4  1003               	clrc
  5738     1DC5  0DF6               	rlf	___lwdiv@divisor,f
  5739     1DC6  0DF7               	rlf	___lwdiv@divisor+1,f
  5740     1DC7  3EFF               	addlw	-1
  5741     1DC8  1D03               	skipz
  5742     1DC9  2DC4               	goto	u3175
  5743     1DCA                     l2598:
  5744     1DCA  3001               	movlw	1
  5745     1DCB  00FA               	movwf	??___lwdiv
  5746     1DCC  087A               	movf	??___lwdiv,w
  5747     1DCD  07FD               	addwf	___lwdiv@counter,f
  5748     1DCE                     l2600:
  5749     1DCE  1FF7               	btfss	___lwdiv@divisor+1,7
  5750     1DCF  2DD1               	goto	u3181
  5751     1DD0  2DD2               	goto	u3180
  5752     1DD1                     u3181:
  5753     1DD1  2DC3               	goto	l2596
  5754     1DD2                     u3180:
  5755     1DD2                     l2602:
  5756     1DD2  3001               	movlw	1
  5757     1DD3                     u3195:
  5758     1DD3  1003               	clrc
  5759     1DD4  0DFB               	rlf	___lwdiv@quotient,f
  5760     1DD5  0DFC               	rlf	___lwdiv@quotient+1,f
  5761     1DD6  3EFF               	addlw	-1
  5762     1DD7  1D03               	skipz
  5763     1DD8  2DD3               	goto	u3195
  5764     1DD9  0877               	movf	___lwdiv@divisor+1,w
  5765     1DDA  0279               	subwf	___lwdiv@dividend+1,w
  5766     1DDB  1D03               	skipz
  5767     1DDC  2DDF               	goto	u3205
  5768     1DDD  0876               	movf	___lwdiv@divisor,w
  5769     1DDE  0278               	subwf	___lwdiv@dividend,w
  5770     1DDF                     u3205:
  5771     1DDF  1C03               	skipc
  5772     1DE0  2DE2               	goto	u3201
  5773     1DE1  2DE3               	goto	u3200
  5774     1DE2                     u3201:
  5775     1DE2  2DEA               	goto	l2608
  5776     1DE3                     u3200:
  5777     1DE3                     l2604:
  5778     1DE3  0876               	movf	___lwdiv@divisor,w
  5779     1DE4  02F8               	subwf	___lwdiv@dividend,f
  5780     1DE5  0877               	movf	___lwdiv@divisor+1,w
  5781     1DE6  1C03               	skipc
  5782     1DE7  03F9               	decf	___lwdiv@dividend+1,f
  5783     1DE8  02F9               	subwf	___lwdiv@dividend+1,f
  5784     1DE9                     l2606:
  5785     1DE9  147B               	bsf	___lwdiv@quotient,0
  5786     1DEA                     l2608:
  5787     1DEA  3001               	movlw	1
  5788     1DEB                     u3215:
  5789     1DEB  1003               	clrc
  5790     1DEC  0CF7               	rrf	___lwdiv@divisor+1,f
  5791     1DED  0CF6               	rrf	___lwdiv@divisor,f
  5792     1DEE  3EFF               	addlw	-1
  5793     1DEF  1D03               	skipz
  5794     1DF0  2DEB               	goto	u3215
  5795     1DF1                     l2610:
  5796     1DF1  3001               	movlw	1
  5797     1DF2  02FD               	subwf	___lwdiv@counter,f
  5798     1DF3  1D03               	btfss	3,2
  5799     1DF4  2DF6               	goto	u3221
  5800     1DF5  2DF7               	goto	u3220
  5801     1DF6                     u3221:
  5802     1DF6  2DD2               	goto	l2602
  5803     1DF7                     u3220:
  5804     1DF7                     l2612:
  5805     1DF7  087C               	movf	___lwdiv@quotient+1,w
  5806     1DF8  00F7               	movwf	?___lwdiv+1
  5807     1DF9  087B               	movf	___lwdiv@quotient,w
  5808     1DFA  00F6               	movwf	?___lwdiv
  5809     1DFB                     l749:
  5810     1DFB  0008               	return
  5811     1DFC                     __end_of___lwdiv:
  5812                           
  5813                           	psect	text9
  5814     095C                     __ptext9:	
  5815 ;; *************** function ___flmul *****************
  5816 ;; Defined at:
  5817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  b               4    4[BANK0 ] unsigned int 
  5820 ;;  a               4    8[BANK0 ] unsigned int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  prod            4   24[BANK0 ] struct .
  5823 ;;  grs             4   18[BANK0 ] unsigned long 
  5824 ;;  temp            2   28[BANK0 ] struct .
  5825 ;;  bexp            1   23[BANK0 ] unsigned char 
  5826 ;;  aexp            1   22[BANK0 ] unsigned char 
  5827 ;;  sign            1   17[BANK0 ] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  4    4[BANK0 ] unsigned char 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5837 ;;      Params:         0       8       0       0       0
  5838 ;;      Locals:         0      13       0       0       0
  5839 ;;      Temps:          0       5       0       0       0
  5840 ;;      Totals:         0      26       0       0       0
  5841 ;;Total ram usage:       26 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; Hardware stack levels required when called: 1
  5844 ;; This function calls:
  5845 ;;		__Umul8_16
  5846 ;; This function is called by:
  5847 ;;		_fround
  5848 ;;		_scale
  5849 ;;		_sprintf
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853     095C                     ___flmul:	
  5854                           ;psect for function ___flmul
  5855                           
  5856     095C                     l2832:	
  5857                           ;incstack = 0
  5858                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5859                           
  5860     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5861     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5862     095E  0827               	movf	___flmul@b+3,w
  5863     095F  3980               	andlw	128
  5864     0960  00B1               	movwf	___flmul@sign
  5865     0961                     l2834:
  5866     0961  0827               	movf	___flmul@b+3,w
  5867     0962  00AC               	movwf	??___flmul
  5868     0963  072C               	addwf	??___flmul,w
  5869     0964  00B7               	movwf	___flmul@bexp
  5870     0965                     l2836:
  5871     0965  1FA6               	btfss	___flmul@b+2,7
  5872     0966  2968               	goto	u3751
  5873     0967  2969               	goto	u3750
  5874     0968                     u3751:
  5875     0968  296A               	goto	l2840
  5876     0969                     u3750:
  5877     0969                     l2838:
  5878     0969  1437               	bsf	___flmul@bexp,0
  5879     096A                     l2840:
  5880     096A  0837               	movf	___flmul@bexp,w
  5881     096B  1903               	btfsc	3,2
  5882     096C  296E               	goto	u3761
  5883     096D  296F               	goto	u3760
  5884     096E                     u3761:
  5885     096E  297E               	goto	l2848
  5886     096F                     u3760:
  5887     096F                     l2842:
  5888     096F  0A37               	incf	___flmul@bexp,w
  5889     0970  1D03               	btfss	3,2
  5890     0971  2973               	goto	u3771
  5891     0972  2974               	goto	u3770
  5892     0973                     u3771:
  5893     0973  297C               	goto	l2846
  5894     0974                     u3770:
  5895     0974                     l2844:
  5896     0974  3000               	movlw	0
  5897     0975  00A7               	movwf	___flmul@b+3
  5898     0976  3000               	movlw	0
  5899     0977  00A6               	movwf	___flmul@b+2
  5900     0978  3000               	movlw	0
  5901     0979  00A5               	movwf	___flmul@b+1
  5902     097A  3000               	movlw	0
  5903     097B  00A4               	movwf	___flmul@b
  5904     097C                     l2846:
  5905     097C  17A6               	bsf	___flmul@b+2,7
  5906     097D  2986               	goto	l2850
  5907     097E                     l2848:
  5908     097E  3000               	movlw	0
  5909     097F  00A7               	movwf	___flmul@b+3
  5910     0980  3000               	movlw	0
  5911     0981  00A6               	movwf	___flmul@b+2
  5912     0982  3000               	movlw	0
  5913     0983  00A5               	movwf	___flmul@b+1
  5914     0984  3000               	movlw	0
  5915     0985  00A4               	movwf	___flmul@b
  5916     0986                     l2850:
  5917     0986  082B               	movf	___flmul@a+3,w
  5918     0987  3980               	andlw	128
  5919     0988  00AC               	movwf	??___flmul
  5920     0989  082C               	movf	??___flmul,w
  5921     098A  06B1               	xorwf	___flmul@sign,f
  5922     098B                     l2852:
  5923     098B  082B               	movf	___flmul@a+3,w
  5924     098C  00AC               	movwf	??___flmul
  5925     098D  072C               	addwf	??___flmul,w
  5926     098E  00B6               	movwf	___flmul@aexp
  5927     098F                     l2854:
  5928     098F  1FAA               	btfss	___flmul@a+2,7
  5929     0990  2992               	goto	u3781
  5930     0991  2993               	goto	u3780
  5931     0992                     u3781:
  5932     0992  2994               	goto	l2858
  5933     0993                     u3780:
  5934     0993                     l2856:
  5935     0993  1436               	bsf	___flmul@aexp,0
  5936     0994                     l2858:
  5937     0994  0836               	movf	___flmul@aexp,w
  5938     0995  1903               	btfsc	3,2
  5939     0996  2998               	goto	u3791
  5940     0997  2999               	goto	u3790
  5941     0998                     u3791:
  5942     0998  29A8               	goto	l2866
  5943     0999                     u3790:
  5944     0999                     l2860:
  5945     0999  0A36               	incf	___flmul@aexp,w
  5946     099A  1D03               	btfss	3,2
  5947     099B  299D               	goto	u3801
  5948     099C  299E               	goto	u3800
  5949     099D                     u3801:
  5950     099D  29A6               	goto	l2864
  5951     099E                     u3800:
  5952     099E                     l2862:
  5953     099E  3000               	movlw	0
  5954     099F  00AB               	movwf	___flmul@a+3
  5955     09A0  3000               	movlw	0
  5956     09A1  00AA               	movwf	___flmul@a+2
  5957     09A2  3000               	movlw	0
  5958     09A3  00A9               	movwf	___flmul@a+1
  5959     09A4  3000               	movlw	0
  5960     09A5  00A8               	movwf	___flmul@a
  5961     09A6                     l2864:
  5962     09A6  17AA               	bsf	___flmul@a+2,7
  5963     09A7  29B0               	goto	l2868
  5964     09A8                     l2866:
  5965     09A8  3000               	movlw	0
  5966     09A9  00AB               	movwf	___flmul@a+3
  5967     09AA  3000               	movlw	0
  5968     09AB  00AA               	movwf	___flmul@a+2
  5969     09AC  3000               	movlw	0
  5970     09AD  00A9               	movwf	___flmul@a+1
  5971     09AE  3000               	movlw	0
  5972     09AF  00A8               	movwf	___flmul@a
  5973     09B0                     l2868:
  5974     09B0  0836               	movf	___flmul@aexp,w
  5975     09B1  1903               	btfsc	3,2
  5976     09B2  29B4               	goto	u3811
  5977     09B3  29B5               	goto	u3810
  5978     09B4                     u3811:
  5979     09B4  29BA               	goto	l2872
  5980     09B5                     u3810:
  5981     09B5                     l2870:
  5982     09B5  0837               	movf	___flmul@bexp,w
  5983     09B6  1D03               	btfss	3,2
  5984     09B7  29B9               	goto	u3821
  5985     09B8  29BA               	goto	u3820
  5986     09B9                     u3821:
  5987     09B9  29C3               	goto	l2876
  5988     09BA                     u3820:
  5989     09BA                     l2872:
  5990     09BA  3000               	movlw	0
  5991     09BB  00A7               	movwf	?___flmul+3
  5992     09BC  3000               	movlw	0
  5993     09BD  00A6               	movwf	?___flmul+2
  5994     09BE  3000               	movlw	0
  5995     09BF  00A5               	movwf	?___flmul+1
  5996     09C0  3000               	movlw	0
  5997     09C1  00A4               	movwf	?___flmul
  5998     09C2  2CA0               	goto	l866
  5999     09C3                     l2876:
  6000     09C3  0824               	movf	___flmul@b,w
  6001     09C4  00F0               	movwf	__Umul8_16@multiplicand
  6002     09C5  082A               	movf	___flmul@a+2,w
  6003     09C6  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6004     09CB  0871               	movf	?__Umul8_16+1,w
  6005     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6006     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6007     09CE  00BD               	movwf	___flmul@temp+1
  6008     09CF  0870               	movf	?__Umul8_16,w
  6009     09D0  00BC               	movwf	___flmul@temp
  6010     09D1                     l2878:
  6011     09D1  083C               	movf	___flmul@temp,w
  6012     09D2  00AC               	movwf	??___flmul
  6013     09D3  01AD               	clrf	??___flmul+1
  6014     09D4  01AE               	clrf	??___flmul+2
  6015     09D5  01AF               	clrf	??___flmul+3
  6016     09D6  082F               	movf	??___flmul+3,w
  6017     09D7  00B5               	movwf	___flmul@grs+3
  6018     09D8  082E               	movf	??___flmul+2,w
  6019     09D9  00B4               	movwf	___flmul@grs+2
  6020     09DA  082D               	movf	??___flmul+1,w
  6021     09DB  00B3               	movwf	___flmul@grs+1
  6022     09DC  082C               	movf	??___flmul,w
  6023     09DD  00B2               	movwf	___flmul@grs
  6024     09DE                     l2880:
  6025     09DE  083D               	movf	___flmul@temp+1,w
  6026     09DF  00AC               	movwf	??___flmul
  6027     09E0  01AD               	clrf	??___flmul+1
  6028     09E1  01AE               	clrf	??___flmul+2
  6029     09E2  01AF               	clrf	??___flmul+3
  6030     09E3  082F               	movf	??___flmul+3,w
  6031     09E4  00BB               	movwf	___flmul@prod+3
  6032     09E5  082E               	movf	??___flmul+2,w
  6033     09E6  00BA               	movwf	___flmul@prod+2
  6034     09E7  082D               	movf	??___flmul+1,w
  6035     09E8  00B9               	movwf	___flmul@prod+1
  6036     09E9  082C               	movf	??___flmul,w
  6037     09EA  00B8               	movwf	___flmul@prod
  6038     09EB  0825               	movf	___flmul@b+1,w
  6039     09EC  00F0               	movwf	__Umul8_16@multiplicand
  6040     09ED  0829               	movf	___flmul@a+1,w
  6041     09EE  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6042     09F3  0871               	movf	?__Umul8_16+1,w
  6043     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  6044     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  6045     09F6  00BD               	movwf	___flmul@temp+1
  6046     09F7  0870               	movf	?__Umul8_16,w
  6047     09F8  00BC               	movwf	___flmul@temp
  6048     09F9                     l2882:
  6049     09F9  083C               	movf	___flmul@temp,w
  6050     09FA  00AC               	movwf	??___flmul
  6051     09FB  01AD               	clrf	??___flmul+1
  6052     09FC  01AE               	clrf	??___flmul+2
  6053     09FD  01AF               	clrf	??___flmul+3
  6054     09FE  082C               	movf	??___flmul,w
  6055     09FF  07B2               	addwf	___flmul@grs,f
  6056     0A00  082D               	movf	??___flmul+1,w
  6057     0A01  1103               	clrz
  6058     0A02  1803               	skipnc
  6059     0A03  3E01               	addlw	1
  6060     0A04  1903               	skipnz
  6061     0A05  2A07               	goto	u3831
  6062     0A06  07B3               	addwf	___flmul@grs+1,f
  6063     0A07                     u3831:
  6064     0A07  082E               	movf	??___flmul+2,w
  6065     0A08  1103               	clrz
  6066     0A09  1803               	skipnc
  6067     0A0A  3E01               	addlw	1
  6068     0A0B  1903               	skipnz
  6069     0A0C  2A0E               	goto	u3832
  6070     0A0D  07B4               	addwf	___flmul@grs+2,f
  6071     0A0E                     u3832:
  6072     0A0E  082F               	movf	??___flmul+3,w
  6073     0A0F  1103               	clrz
  6074     0A10  1803               	skipnc
  6075     0A11  3E01               	addlw	1
  6076     0A12  1903               	skipnz
  6077     0A13  2A15               	goto	u3833
  6078     0A14  07B5               	addwf	___flmul@grs+3,f
  6079     0A15                     u3833:
  6080     0A15                     l2884:
  6081     0A15  083D               	movf	___flmul@temp+1,w
  6082     0A16  00AC               	movwf	??___flmul
  6083     0A17  01AD               	clrf	??___flmul+1
  6084     0A18  01AE               	clrf	??___flmul+2
  6085     0A19  01AF               	clrf	??___flmul+3
  6086     0A1A  082C               	movf	??___flmul,w
  6087     0A1B  07B8               	addwf	___flmul@prod,f
  6088     0A1C  082D               	movf	??___flmul+1,w
  6089     0A1D  1103               	clrz
  6090     0A1E  1803               	skipnc
  6091     0A1F  3E01               	addlw	1
  6092     0A20  1903               	skipnz
  6093     0A21  2A23               	goto	u3841
  6094     0A22  07B9               	addwf	___flmul@prod+1,f
  6095     0A23                     u3841:
  6096     0A23  082E               	movf	??___flmul+2,w
  6097     0A24  1103               	clrz
  6098     0A25  1803               	skipnc
  6099     0A26  3E01               	addlw	1
  6100     0A27  1903               	skipnz
  6101     0A28  2A2A               	goto	u3842
  6102     0A29  07BA               	addwf	___flmul@prod+2,f
  6103     0A2A                     u3842:
  6104     0A2A  082F               	movf	??___flmul+3,w
  6105     0A2B  1103               	clrz
  6106     0A2C  1803               	skipnc
  6107     0A2D  3E01               	addlw	1
  6108     0A2E  1903               	skipnz
  6109     0A2F  2A31               	goto	u3843
  6110     0A30  07BB               	addwf	___flmul@prod+3,f
  6111     0A31                     u3843:
  6112     0A31  0826               	movf	___flmul@b+2,w
  6113     0A32  00F0               	movwf	__Umul8_16@multiplicand
  6114     0A33  0828               	movf	___flmul@a,w
  6115     0A34  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6116     0A39  0871               	movf	?__Umul8_16+1,w
  6117     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  6118     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  6119     0A3C  00BD               	movwf	___flmul@temp+1
  6120     0A3D  0870               	movf	?__Umul8_16,w
  6121     0A3E  00BC               	movwf	___flmul@temp
  6122     0A3F                     l2886:
  6123     0A3F  083C               	movf	___flmul@temp,w
  6124     0A40  00AC               	movwf	??___flmul
  6125     0A41  01AD               	clrf	??___flmul+1
  6126     0A42  01AE               	clrf	??___flmul+2
  6127     0A43  01AF               	clrf	??___flmul+3
  6128     0A44  082C               	movf	??___flmul,w
  6129     0A45  07B2               	addwf	___flmul@grs,f
  6130     0A46  082D               	movf	??___flmul+1,w
  6131     0A47  1103               	clrz
  6132     0A48  1803               	skipnc
  6133     0A49  3E01               	addlw	1
  6134     0A4A  1903               	skipnz
  6135     0A4B  2A4D               	goto	u3851
  6136     0A4C  07B3               	addwf	___flmul@grs+1,f
  6137     0A4D                     u3851:
  6138     0A4D  082E               	movf	??___flmul+2,w
  6139     0A4E  1103               	clrz
  6140     0A4F  1803               	skipnc
  6141     0A50  3E01               	addlw	1
  6142     0A51  1903               	skipnz
  6143     0A52  2A54               	goto	u3852
  6144     0A53  07B4               	addwf	___flmul@grs+2,f
  6145     0A54                     u3852:
  6146     0A54  082F               	movf	??___flmul+3,w
  6147     0A55  1103               	clrz
  6148     0A56  1803               	skipnc
  6149     0A57  3E01               	addlw	1
  6150     0A58  1903               	skipnz
  6151     0A59  2A5B               	goto	u3853
  6152     0A5A  07B5               	addwf	___flmul@grs+3,f
  6153     0A5B                     u3853:
  6154     0A5B                     l2888:
  6155     0A5B  083D               	movf	___flmul@temp+1,w
  6156     0A5C  00AC               	movwf	??___flmul
  6157     0A5D  01AD               	clrf	??___flmul+1
  6158     0A5E  01AE               	clrf	??___flmul+2
  6159     0A5F  01AF               	clrf	??___flmul+3
  6160     0A60  082C               	movf	??___flmul,w
  6161     0A61  07B8               	addwf	___flmul@prod,f
  6162     0A62  082D               	movf	??___flmul+1,w
  6163     0A63  1103               	clrz
  6164     0A64  1803               	skipnc
  6165     0A65  3E01               	addlw	1
  6166     0A66  1903               	skipnz
  6167     0A67  2A69               	goto	u3861
  6168     0A68  07B9               	addwf	___flmul@prod+1,f
  6169     0A69                     u3861:
  6170     0A69  082E               	movf	??___flmul+2,w
  6171     0A6A  1103               	clrz
  6172     0A6B  1803               	skipnc
  6173     0A6C  3E01               	addlw	1
  6174     0A6D  1903               	skipnz
  6175     0A6E  2A70               	goto	u3862
  6176     0A6F  07BA               	addwf	___flmul@prod+2,f
  6177     0A70                     u3862:
  6178     0A70  082F               	movf	??___flmul+3,w
  6179     0A71  1103               	clrz
  6180     0A72  1803               	skipnc
  6181     0A73  3E01               	addlw	1
  6182     0A74  1903               	skipnz
  6183     0A75  2A77               	goto	u3863
  6184     0A76  07BB               	addwf	___flmul@prod+3,f
  6185     0A77                     u3863:
  6186     0A77                     l2890:
  6187     0A77  3008               	movlw	8
  6188     0A78  00AC               	movwf	??___flmul
  6189     0A79                     u3875:
  6190     0A79  1003               	clrc
  6191     0A7A  0DB2               	rlf	___flmul@grs,f
  6192     0A7B  0DB3               	rlf	___flmul@grs+1,f
  6193     0A7C  0DB4               	rlf	___flmul@grs+2,f
  6194     0A7D  0DB5               	rlf	___flmul@grs+3,f
  6195     0A7E  0BAC               	decfsz	??___flmul,f
  6196     0A7F  2A79               	goto	u3875
  6197     0A80                     l2892:
  6198     0A80  0825               	movf	___flmul@b+1,w
  6199     0A81  00F0               	movwf	__Umul8_16@multiplicand
  6200     0A82  0828               	movf	___flmul@a,w
  6201     0A83  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6202     0A88  0871               	movf	?__Umul8_16+1,w
  6203     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  6204     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  6205     0A8B  00BD               	movwf	___flmul@temp+1
  6206     0A8C  0870               	movf	?__Umul8_16,w
  6207     0A8D  00BC               	movwf	___flmul@temp
  6208     0A8E                     l2894:
  6209     0A8E  083C               	movf	___flmul@temp,w
  6210     0A8F  00AC               	movwf	??___flmul
  6211     0A90  083D               	movf	___flmul@temp+1,w
  6212     0A91  00AD               	movwf	??___flmul+1
  6213     0A92  01AE               	clrf	??___flmul+2
  6214     0A93  01AF               	clrf	??___flmul+3
  6215     0A94  082C               	movf	??___flmul,w
  6216     0A95  07B2               	addwf	___flmul@grs,f
  6217     0A96  082D               	movf	??___flmul+1,w
  6218     0A97  1103               	clrz
  6219     0A98  1803               	skipnc
  6220     0A99  3E01               	addlw	1
  6221     0A9A  1903               	skipnz
  6222     0A9B  2A9D               	goto	u3881
  6223     0A9C  07B3               	addwf	___flmul@grs+1,f
  6224     0A9D                     u3881:
  6225     0A9D  082E               	movf	??___flmul+2,w
  6226     0A9E  1103               	clrz
  6227     0A9F  1803               	skipnc
  6228     0AA0  3E01               	addlw	1
  6229     0AA1  1903               	skipnz
  6230     0AA2  2AA4               	goto	u3882
  6231     0AA3  07B4               	addwf	___flmul@grs+2,f
  6232     0AA4                     u3882:
  6233     0AA4  082F               	movf	??___flmul+3,w
  6234     0AA5  1103               	clrz
  6235     0AA6  1803               	skipnc
  6236     0AA7  3E01               	addlw	1
  6237     0AA8  1903               	skipnz
  6238     0AA9  2AAB               	goto	u3883
  6239     0AAA  07B5               	addwf	___flmul@grs+3,f
  6240     0AAB                     u3883:
  6241     0AAB                     l2896:
  6242     0AAB  0824               	movf	___flmul@b,w
  6243     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  6244     0AAD  0829               	movf	___flmul@a+1,w
  6245     0AAE  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6246     0AB3  0871               	movf	?__Umul8_16+1,w
  6247     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  6248     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  6249     0AB6  00BD               	movwf	___flmul@temp+1
  6250     0AB7  0870               	movf	?__Umul8_16,w
  6251     0AB8  00BC               	movwf	___flmul@temp
  6252     0AB9                     l2898:
  6253     0AB9  083C               	movf	___flmul@temp,w
  6254     0ABA  00AC               	movwf	??___flmul
  6255     0ABB  083D               	movf	___flmul@temp+1,w
  6256     0ABC  00AD               	movwf	??___flmul+1
  6257     0ABD  01AE               	clrf	??___flmul+2
  6258     0ABE  01AF               	clrf	??___flmul+3
  6259     0ABF  082C               	movf	??___flmul,w
  6260     0AC0  07B2               	addwf	___flmul@grs,f
  6261     0AC1  082D               	movf	??___flmul+1,w
  6262     0AC2  1103               	clrz
  6263     0AC3  1803               	skipnc
  6264     0AC4  3E01               	addlw	1
  6265     0AC5  1903               	skipnz
  6266     0AC6  2AC8               	goto	u3891
  6267     0AC7  07B3               	addwf	___flmul@grs+1,f
  6268     0AC8                     u3891:
  6269     0AC8  082E               	movf	??___flmul+2,w
  6270     0AC9  1103               	clrz
  6271     0ACA  1803               	skipnc
  6272     0ACB  3E01               	addlw	1
  6273     0ACC  1903               	skipnz
  6274     0ACD  2ACF               	goto	u3892
  6275     0ACE  07B4               	addwf	___flmul@grs+2,f
  6276     0ACF                     u3892:
  6277     0ACF  082F               	movf	??___flmul+3,w
  6278     0AD0  1103               	clrz
  6279     0AD1  1803               	skipnc
  6280     0AD2  3E01               	addlw	1
  6281     0AD3  1903               	skipnz
  6282     0AD4  2AD6               	goto	u3893
  6283     0AD5  07B5               	addwf	___flmul@grs+3,f
  6284     0AD6                     u3893:
  6285     0AD6                     l2900:
  6286     0AD6  3008               	movlw	8
  6287     0AD7  00AC               	movwf	??___flmul
  6288     0AD8                     u3905:
  6289     0AD8  1003               	clrc
  6290     0AD9  0DB2               	rlf	___flmul@grs,f
  6291     0ADA  0DB3               	rlf	___flmul@grs+1,f
  6292     0ADB  0DB4               	rlf	___flmul@grs+2,f
  6293     0ADC  0DB5               	rlf	___flmul@grs+3,f
  6294     0ADD  0BAC               	decfsz	??___flmul,f
  6295     0ADE  2AD8               	goto	u3905
  6296     0ADF  0824               	movf	___flmul@b,w
  6297     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  6298     0AE1  0828               	movf	___flmul@a,w
  6299     0AE2  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6300     0AE7  0871               	movf	?__Umul8_16+1,w
  6301     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6302     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6303     0AEA  00BD               	movwf	___flmul@temp+1
  6304     0AEB  0870               	movf	?__Umul8_16,w
  6305     0AEC  00BC               	movwf	___flmul@temp
  6306     0AED                     l2902:
  6307     0AED  083C               	movf	___flmul@temp,w
  6308     0AEE  00AC               	movwf	??___flmul
  6309     0AEF  083D               	movf	___flmul@temp+1,w
  6310     0AF0  00AD               	movwf	??___flmul+1
  6311     0AF1  01AE               	clrf	??___flmul+2
  6312     0AF2  01AF               	clrf	??___flmul+3
  6313     0AF3  082C               	movf	??___flmul,w
  6314     0AF4  07B2               	addwf	___flmul@grs,f
  6315     0AF5  082D               	movf	??___flmul+1,w
  6316     0AF6  1103               	clrz
  6317     0AF7  1803               	skipnc
  6318     0AF8  3E01               	addlw	1
  6319     0AF9  1903               	skipnz
  6320     0AFA  2AFC               	goto	u3911
  6321     0AFB  07B3               	addwf	___flmul@grs+1,f
  6322     0AFC                     u3911:
  6323     0AFC  082E               	movf	??___flmul+2,w
  6324     0AFD  1103               	clrz
  6325     0AFE  1803               	skipnc
  6326     0AFF  3E01               	addlw	1
  6327     0B00  1903               	skipnz
  6328     0B01  2B03               	goto	u3912
  6329     0B02  07B4               	addwf	___flmul@grs+2,f
  6330     0B03                     u3912:
  6331     0B03  082F               	movf	??___flmul+3,w
  6332     0B04  1103               	clrz
  6333     0B05  1803               	skipnc
  6334     0B06  3E01               	addlw	1
  6335     0B07  1903               	skipnz
  6336     0B08  2B0A               	goto	u3913
  6337     0B09  07B5               	addwf	___flmul@grs+3,f
  6338     0B0A                     u3913:
  6339     0B0A                     l2904:
  6340     0B0A  0825               	movf	___flmul@b+1,w
  6341     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  6342     0B0C  082A               	movf	___flmul@a+2,w
  6343     0B0D  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6344     0B12  0871               	movf	?__Umul8_16+1,w
  6345     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  6346     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  6347     0B15  00BD               	movwf	___flmul@temp+1
  6348     0B16  0870               	movf	?__Umul8_16,w
  6349     0B17  00BC               	movwf	___flmul@temp
  6350     0B18  083C               	movf	___flmul@temp,w
  6351     0B19  00AC               	movwf	??___flmul
  6352     0B1A  083D               	movf	___flmul@temp+1,w
  6353     0B1B  00AD               	movwf	??___flmul+1
  6354     0B1C  01AE               	clrf	??___flmul+2
  6355     0B1D  01AF               	clrf	??___flmul+3
  6356     0B1E  082C               	movf	??___flmul,w
  6357     0B1F  07B8               	addwf	___flmul@prod,f
  6358     0B20  082D               	movf	??___flmul+1,w
  6359     0B21  1103               	clrz
  6360     0B22  1803               	skipnc
  6361     0B23  3E01               	addlw	1
  6362     0B24  1903               	skipnz
  6363     0B25  2B27               	goto	u3921
  6364     0B26  07B9               	addwf	___flmul@prod+1,f
  6365     0B27                     u3921:
  6366     0B27  082E               	movf	??___flmul+2,w
  6367     0B28  1103               	clrz
  6368     0B29  1803               	skipnc
  6369     0B2A  3E01               	addlw	1
  6370     0B2B  1903               	skipnz
  6371     0B2C  2B2E               	goto	u3922
  6372     0B2D  07BA               	addwf	___flmul@prod+2,f
  6373     0B2E                     u3922:
  6374     0B2E  082F               	movf	??___flmul+3,w
  6375     0B2F  1103               	clrz
  6376     0B30  1803               	skipnc
  6377     0B31  3E01               	addlw	1
  6378     0B32  1903               	skipnz
  6379     0B33  2B35               	goto	u3923
  6380     0B34  07BB               	addwf	___flmul@prod+3,f
  6381     0B35                     u3923:
  6382     0B35                     l2906:
  6383     0B35  0826               	movf	___flmul@b+2,w
  6384     0B36  00F0               	movwf	__Umul8_16@multiplicand
  6385     0B37  0829               	movf	___flmul@a+1,w
  6386     0B38  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6387     0B3D  0871               	movf	?__Umul8_16+1,w
  6388     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6389     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6390     0B40  00BD               	movwf	___flmul@temp+1
  6391     0B41  0870               	movf	?__Umul8_16,w
  6392     0B42  00BC               	movwf	___flmul@temp
  6393     0B43                     l2908:
  6394     0B43  083C               	movf	___flmul@temp,w
  6395     0B44  00AC               	movwf	??___flmul
  6396     0B45  083D               	movf	___flmul@temp+1,w
  6397     0B46  00AD               	movwf	??___flmul+1
  6398     0B47  01AE               	clrf	??___flmul+2
  6399     0B48  01AF               	clrf	??___flmul+3
  6400     0B49  082C               	movf	??___flmul,w
  6401     0B4A  07B8               	addwf	___flmul@prod,f
  6402     0B4B  082D               	movf	??___flmul+1,w
  6403     0B4C  1103               	clrz
  6404     0B4D  1803               	skipnc
  6405     0B4E  3E01               	addlw	1
  6406     0B4F  1903               	skipnz
  6407     0B50  2B52               	goto	u3931
  6408     0B51  07B9               	addwf	___flmul@prod+1,f
  6409     0B52                     u3931:
  6410     0B52  082E               	movf	??___flmul+2,w
  6411     0B53  1103               	clrz
  6412     0B54  1803               	skipnc
  6413     0B55  3E01               	addlw	1
  6414     0B56  1903               	skipnz
  6415     0B57  2B59               	goto	u3932
  6416     0B58  07BA               	addwf	___flmul@prod+2,f
  6417     0B59                     u3932:
  6418     0B59  082F               	movf	??___flmul+3,w
  6419     0B5A  1103               	clrz
  6420     0B5B  1803               	skipnc
  6421     0B5C  3E01               	addlw	1
  6422     0B5D  1903               	skipnz
  6423     0B5E  2B60               	goto	u3933
  6424     0B5F  07BB               	addwf	___flmul@prod+3,f
  6425     0B60                     u3933:
  6426     0B60  0826               	movf	___flmul@b+2,w
  6427     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6428     0B62  082A               	movf	___flmul@a+2,w
  6429     0B63  160A  158A  248C  120A  158A  	fcall	__Umul8_16
  6430     0B68  0871               	movf	?__Umul8_16+1,w
  6431     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6432     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6433     0B6B  00BD               	movwf	___flmul@temp+1
  6434     0B6C  0870               	movf	?__Umul8_16,w
  6435     0B6D  00BC               	movwf	___flmul@temp
  6436     0B6E                     l2910:
  6437     0B6E  083C               	movf	___flmul@temp,w
  6438     0B6F  00AC               	movwf	??___flmul
  6439     0B70  083D               	movf	___flmul@temp+1,w
  6440     0B71  00AD               	movwf	??___flmul+1
  6441     0B72  01AE               	clrf	??___flmul+2
  6442     0B73  01AF               	clrf	??___flmul+3
  6443     0B74  3008               	movlw	8
  6444     0B75                     u3945:
  6445     0B75  1003               	clrc
  6446     0B76  0DAC               	rlf	??___flmul,f
  6447     0B77  0DAD               	rlf	??___flmul+1,f
  6448     0B78  0DAE               	rlf	??___flmul+2,f
  6449     0B79  0DAF               	rlf	??___flmul+3,f
  6450     0B7A                     u3940:
  6451     0B7A  3EFF               	addlw	-1
  6452     0B7B  1D03               	skipz
  6453     0B7C  2B75               	goto	u3945
  6454     0B7D  082C               	movf	??___flmul,w
  6455     0B7E  07B8               	addwf	___flmul@prod,f
  6456     0B7F  082D               	movf	??___flmul+1,w
  6457     0B80  1103               	clrz
  6458     0B81  1803               	skipnc
  6459     0B82  3E01               	addlw	1
  6460     0B83  1903               	skipnz
  6461     0B84  2B86               	goto	u3951
  6462     0B85  07B9               	addwf	___flmul@prod+1,f
  6463     0B86                     u3951:
  6464     0B86  082E               	movf	??___flmul+2,w
  6465     0B87  1103               	clrz
  6466     0B88  1803               	skipnc
  6467     0B89  3E01               	addlw	1
  6468     0B8A  1903               	skipnz
  6469     0B8B  2B8D               	goto	u3952
  6470     0B8C  07BA               	addwf	___flmul@prod+2,f
  6471     0B8D                     u3952:
  6472     0B8D  082F               	movf	??___flmul+3,w
  6473     0B8E  1103               	clrz
  6474     0B8F  1803               	skipnc
  6475     0B90  3E01               	addlw	1
  6476     0B91  1903               	skipnz
  6477     0B92  2B94               	goto	u3953
  6478     0B93  07BB               	addwf	___flmul@prod+3,f
  6479     0B94                     u3953:
  6480     0B94                     l2912:
  6481     0B94  0832               	movf	___flmul@grs,w
  6482     0B95  00AC               	movwf	??___flmul
  6483     0B96  0833               	movf	___flmul@grs+1,w
  6484     0B97  00AD               	movwf	??___flmul+1
  6485     0B98  0834               	movf	___flmul@grs+2,w
  6486     0B99  00AE               	movwf	??___flmul+2
  6487     0B9A  0835               	movf	___flmul@grs+3,w
  6488     0B9B  00AF               	movwf	??___flmul+3
  6489     0B9C  3018               	movlw	24
  6490     0B9D                     u3965:
  6491     0B9D  1003               	clrc
  6492     0B9E  0CAF               	rrf	??___flmul+3,f
  6493     0B9F  0CAE               	rrf	??___flmul+2,f
  6494     0BA0  0CAD               	rrf	??___flmul+1,f
  6495     0BA1  0CAC               	rrf	??___flmul,f
  6496     0BA2                     u3960:
  6497     0BA2  3EFF               	addlw	-1
  6498     0BA3  1D03               	skipz
  6499     0BA4  2B9D               	goto	u3965
  6500     0BA5  082C               	movf	??___flmul,w
  6501     0BA6  07B8               	addwf	___flmul@prod,f
  6502     0BA7  082D               	movf	??___flmul+1,w
  6503     0BA8  1103               	clrz
  6504     0BA9  1803               	skipnc
  6505     0BAA  3E01               	addlw	1
  6506     0BAB  1903               	skipnz
  6507     0BAC  2BAE               	goto	u3971
  6508     0BAD  07B9               	addwf	___flmul@prod+1,f
  6509     0BAE                     u3971:
  6510     0BAE  082E               	movf	??___flmul+2,w
  6511     0BAF  1103               	clrz
  6512     0BB0  1803               	skipnc
  6513     0BB1  3E01               	addlw	1
  6514     0BB2  1903               	skipnz
  6515     0BB3  2BB5               	goto	u3972
  6516     0BB4  07BA               	addwf	___flmul@prod+2,f
  6517     0BB5                     u3972:
  6518     0BB5  082F               	movf	??___flmul+3,w
  6519     0BB6  1103               	clrz
  6520     0BB7  1803               	skipnc
  6521     0BB8  3E01               	addlw	1
  6522     0BB9  1903               	skipnz
  6523     0BBA  2BBC               	goto	u3973
  6524     0BBB  07BB               	addwf	___flmul@prod+3,f
  6525     0BBC                     u3973:
  6526     0BBC                     l2914:
  6527     0BBC  3008               	movlw	8
  6528     0BBD  00AC               	movwf	??___flmul
  6529     0BBE                     u3985:
  6530     0BBE  1003               	clrc
  6531     0BBF  0DB2               	rlf	___flmul@grs,f
  6532     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6533     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6534     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6535     0BC3  0BAC               	decfsz	??___flmul,f
  6536     0BC4  2BBE               	goto	u3985
  6537     0BC5                     l2916:
  6538     0BC5  0837               	movf	___flmul@bexp,w
  6539     0BC6  0736               	addwf	___flmul@aexp,w
  6540     0BC7  00AC               	movwf	??___flmul
  6541     0BC8  01AD               	clrf	??___flmul+1
  6542     0BC9  0DAD               	rlf	??___flmul+1,f
  6543     0BCA  082C               	movf	??___flmul,w
  6544     0BCB  3E82               	addlw	130
  6545     0BCC  00BC               	movwf	___flmul@temp
  6546     0BCD  082D               	movf	??___flmul+1,w
  6547     0BCE  1803               	skipnc
  6548     0BCF  3E01               	addlw	1
  6549     0BD0  3EFF               	addlw	255
  6550     0BD1  00BD               	movwf	___flmul@temp+1
  6551     0BD2  2BF0               	goto	l2928
  6552     0BD3                     l2918:
  6553     0BD3  3001               	movlw	1
  6554     0BD4  00AC               	movwf	??___flmul
  6555     0BD5                     u3995:
  6556     0BD5  1003               	clrc
  6557     0BD6  0DB8               	rlf	___flmul@prod,f
  6558     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6559     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6560     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6561     0BDA  0BAC               	decfsz	??___flmul,f
  6562     0BDB  2BD5               	goto	u3995
  6563     0BDC                     l2920:
  6564     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6565     0BDD  2BDF               	goto	u4001
  6566     0BDE  2BE0               	goto	u4000
  6567     0BDF                     u4001:
  6568     0BDF  2BE1               	goto	l2924
  6569     0BE0                     u4000:
  6570     0BE0                     l2922:
  6571     0BE0  1438               	bsf	___flmul@prod,0
  6572     0BE1                     l2924:
  6573     0BE1  3001               	movlw	1
  6574     0BE2  00AC               	movwf	??___flmul
  6575     0BE3                     u4015:
  6576     0BE3  1003               	clrc
  6577     0BE4  0DB2               	rlf	___flmul@grs,f
  6578     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6579     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6580     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6581     0BE8  0BAC               	decfsz	??___flmul,f
  6582     0BE9  2BE3               	goto	u4015
  6583     0BEA                     l2926:
  6584     0BEA  30FF               	movlw	255
  6585     0BEB  07BC               	addwf	___flmul@temp,f
  6586     0BEC  1803               	skipnc
  6587     0BED  0ABD               	incf	___flmul@temp+1,f
  6588     0BEE  30FF               	movlw	255
  6589     0BEF  07BD               	addwf	___flmul@temp+1,f
  6590     0BF0                     l2928:
  6591     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6592     0BF1  2BF3               	goto	u4021
  6593     0BF2  2BF4               	goto	u4020
  6594     0BF3                     u4021:
  6595     0BF3  2BD3               	goto	l2918
  6596     0BF4                     u4020:
  6597     0BF4                     l2930:
  6598     0BF4  01B6               	clrf	___flmul@aexp
  6599     0BF5                     l2932:
  6600     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6601     0BF6  2BF8               	goto	u4031
  6602     0BF7  2BF9               	goto	u4030
  6603     0BF8                     u4031:
  6604     0BF8  2C15               	goto	l2940
  6605     0BF9                     u4030:
  6606     0BF9                     l2934:
  6607     0BF9  30FF               	movlw	255
  6608     0BFA  0532               	andwf	___flmul@grs,w
  6609     0BFB  00AC               	movwf	??___flmul
  6610     0BFC  30FF               	movlw	255
  6611     0BFD  0533               	andwf	___flmul@grs+1,w
  6612     0BFE  00AD               	movwf	??___flmul+1
  6613     0BFF  30FF               	movlw	255
  6614     0C00  0534               	andwf	___flmul@grs+2,w
  6615     0C01  00AE               	movwf	??___flmul+2
  6616     0C02  307F               	movlw	127
  6617     0C03  0535               	andwf	___flmul@grs+3,w
  6618     0C04  00AF               	movwf	??___flmul+3
  6619     0C05  082F               	movf	??___flmul+3,w
  6620     0C06  042E               	iorwf	??___flmul+2,w
  6621     0C07  042D               	iorwf	??___flmul+1,w
  6622     0C08  042C               	iorwf	??___flmul,w
  6623     0C09  1903               	skipnz
  6624     0C0A  2C0C               	goto	u4041
  6625     0C0B  2C0D               	goto	u4040
  6626     0C0C                     u4041:
  6627     0C0C  2C10               	goto	l872
  6628     0C0D                     u4040:
  6629     0C0D                     l2936:
  6630     0C0D  01B6               	clrf	___flmul@aexp
  6631     0C0E  0AB6               	incf	___flmul@aexp,f
  6632     0C0F  2C15               	goto	l2940
  6633     0C10                     l872:
  6634     0C10  1C38               	btfss	___flmul@prod,0
  6635     0C11  2C13               	goto	u4051
  6636     0C12  2C14               	goto	u4050
  6637     0C13                     u4051:
  6638     0C13  2C15               	goto	l2940
  6639     0C14                     u4050:
  6640     0C14  2C0D               	goto	l2936
  6641     0C15                     l2940:
  6642     0C15  0836               	movf	___flmul@aexp,w
  6643     0C16  1903               	btfsc	3,2
  6644     0C17  2C19               	goto	u4061
  6645     0C18  2C1A               	goto	u4060
  6646     0C19                     u4061:
  6647     0C19  2C4B               	goto	l2950
  6648     0C1A                     u4060:
  6649     0C1A                     l2942:
  6650     0C1A  3001               	movlw	1
  6651     0C1B  07B8               	addwf	___flmul@prod,f
  6652     0C1C  3000               	movlw	0
  6653     0C1D  1803               	skipnc
  6654     0C1E  3001               	movlw	1
  6655     0C1F  07B9               	addwf	___flmul@prod+1,f
  6656     0C20  3000               	movlw	0
  6657     0C21  1803               	skipnc
  6658     0C22  3001               	movlw	1
  6659     0C23  07BA               	addwf	___flmul@prod+2,f
  6660     0C24  3000               	movlw	0
  6661     0C25  1803               	skipnc
  6662     0C26  3001               	movlw	1
  6663     0C27  07BB               	addwf	___flmul@prod+3,f
  6664     0C28                     l2944:
  6665     0C28  1C3B               	btfss	___flmul@prod+3,0
  6666     0C29  2C2B               	goto	u4071
  6667     0C2A  2C2C               	goto	u4070
  6668     0C2B                     u4071:
  6669     0C2B  2C4B               	goto	l2950
  6670     0C2C                     u4070:
  6671     0C2C                     l2946:
  6672     0C2C  0838               	movf	___flmul@prod,w
  6673     0C2D  00AC               	movwf	??___flmul
  6674     0C2E  0839               	movf	___flmul@prod+1,w
  6675     0C2F  00AD               	movwf	??___flmul+1
  6676     0C30  083A               	movf	___flmul@prod+2,w
  6677     0C31  00AE               	movwf	??___flmul+2
  6678     0C32  083B               	movf	___flmul@prod+3,w
  6679     0C33  00AF               	movwf	??___flmul+3
  6680     0C34  3001               	movlw	1
  6681     0C35  00B0               	movwf	??___flmul+4
  6682     0C36                     u4085:
  6683     0C36  0D2F               	rlf	??___flmul+3,w
  6684     0C37  0CAF               	rrf	??___flmul+3,f
  6685     0C38  0CAE               	rrf	??___flmul+2,f
  6686     0C39  0CAD               	rrf	??___flmul+1,f
  6687     0C3A  0CAC               	rrf	??___flmul,f
  6688     0C3B                     u4080:
  6689     0C3B  0BB0               	decfsz	??___flmul+4,f
  6690     0C3C  2C36               	goto	u4085
  6691     0C3D  082F               	movf	??___flmul+3,w
  6692     0C3E  00BB               	movwf	___flmul@prod+3
  6693     0C3F  082E               	movf	??___flmul+2,w
  6694     0C40  00BA               	movwf	___flmul@prod+2
  6695     0C41  082D               	movf	??___flmul+1,w
  6696     0C42  00B9               	movwf	___flmul@prod+1
  6697     0C43  082C               	movf	??___flmul,w
  6698     0C44  00B8               	movwf	___flmul@prod
  6699     0C45                     l2948:
  6700     0C45  3001               	movlw	1
  6701     0C46  07BC               	addwf	___flmul@temp,f
  6702     0C47  1803               	skipnc
  6703     0C48  0ABD               	incf	___flmul@temp+1,f
  6704     0C49  3000               	movlw	0
  6705     0C4A  07BD               	addwf	___flmul@temp+1,f
  6706     0C4B                     l2950:
  6707     0C4B  083D               	movf	___flmul@temp+1,w
  6708     0C4C  3A80               	xorlw	128
  6709     0C4D  00FF               	movwf	btemp+1
  6710     0C4E  3080               	movlw	128
  6711     0C4F  027F               	subwf	btemp+1,w
  6712     0C50  1D03               	skipz
  6713     0C51  2C54               	goto	u4095
  6714     0C52  30FF               	movlw	255
  6715     0C53  023C               	subwf	___flmul@temp,w
  6716     0C54                     u4095:
  6717     0C54  1C03               	skipc
  6718     0C55  2C57               	goto	u4091
  6719     0C56  2C58               	goto	u4090
  6720     0C57                     u4091:
  6721     0C57  2C63               	goto	l2954
  6722     0C58                     u4090:
  6723     0C58                     l2952:
  6724     0C58  307F               	movlw	127
  6725     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6726     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6727     0C5B  00BB               	movwf	___flmul@prod+3
  6728     0C5C  3080               	movlw	128
  6729     0C5D  00BA               	movwf	___flmul@prod+2
  6730     0C5E  3000               	movlw	0
  6731     0C5F  00B9               	movwf	___flmul@prod+1
  6732     0C60  3000               	movlw	0
  6733     0C61  00B8               	movwf	___flmul@prod
  6734     0C62  2C94               	goto	l878
  6735     0C63                     l2954:
  6736     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6737     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6738     0C65  083D               	movf	___flmul@temp+1,w
  6739     0C66  3A80               	xorlw	128
  6740     0C67  00FF               	movwf	btemp+1
  6741     0C68  3080               	movlw	128
  6742     0C69  027F               	subwf	btemp+1,w
  6743     0C6A  1D03               	skipz
  6744     0C6B  2C6E               	goto	u4105
  6745     0C6C  3001               	movlw	1
  6746     0C6D  023C               	subwf	___flmul@temp,w
  6747     0C6E                     u4105:
  6748     0C6E  1803               	skipnc
  6749     0C6F  2C71               	goto	u4101
  6750     0C70  2C72               	goto	u4100
  6751     0C71                     u4101:
  6752     0C71  2C7E               	goto	l2960
  6753     0C72                     u4100:
  6754     0C72                     l2956:
  6755     0C72  3000               	movlw	0
  6756     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6757     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6758     0C75  00BB               	movwf	___flmul@prod+3
  6759     0C76  3000               	movlw	0
  6760     0C77  00BA               	movwf	___flmul@prod+2
  6761     0C78  3000               	movlw	0
  6762     0C79  00B9               	movwf	___flmul@prod+1
  6763     0C7A  3000               	movlw	0
  6764     0C7B  00B8               	movwf	___flmul@prod
  6765     0C7C                     l2958:
  6766     0C7C  01B1               	clrf	___flmul@sign
  6767     0C7D  2C94               	goto	l878
  6768     0C7E                     l2960:
  6769     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6770     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6771     0C80  083C               	movf	___flmul@temp,w
  6772     0C81  00B7               	movwf	___flmul@bexp
  6773     0C82  30FF               	movlw	255
  6774     0C83  05B8               	andwf	___flmul@prod,f
  6775     0C84  30FF               	movlw	255
  6776     0C85  05B9               	andwf	___flmul@prod+1,f
  6777     0C86  307F               	movlw	127
  6778     0C87  05BA               	andwf	___flmul@prod+2,f
  6779     0C88  3000               	movlw	0
  6780     0C89  05BB               	andwf	___flmul@prod+3,f
  6781     0C8A                     l2962:
  6782     0C8A  1C37               	btfss	___flmul@bexp,0
  6783     0C8B  2C8D               	goto	u4111
  6784     0C8C  2C8E               	goto	u4110
  6785     0C8D                     u4111:
  6786     0C8D  2C8F               	goto	l2966
  6787     0C8E                     u4110:
  6788     0C8E                     l2964:
  6789     0C8E  17BA               	bsf	___flmul@prod+2,7
  6790     0C8F                     l2966:
  6791     0C8F  0837               	movf	___flmul@bexp,w
  6792     0C90  00AC               	movwf	??___flmul
  6793     0C91  1003               	clrc
  6794     0C92  0C2C               	rrf	??___flmul,w
  6795     0C93  00BB               	movwf	___flmul@prod+3
  6796     0C94                     l878:
  6797     0C94  0831               	movf	___flmul@sign,w
  6798     0C95  00AC               	movwf	??___flmul
  6799     0C96  082C               	movf	??___flmul,w
  6800     0C97  04BB               	iorwf	___flmul@prod+3,f
  6801     0C98                     l2968:
  6802     0C98  083B               	movf	___flmul@prod+3,w
  6803     0C99  00A7               	movwf	?___flmul+3
  6804     0C9A  083A               	movf	___flmul@prod+2,w
  6805     0C9B  00A6               	movwf	?___flmul+2
  6806     0C9C  0839               	movf	___flmul@prod+1,w
  6807     0C9D  00A5               	movwf	?___flmul+1
  6808     0C9E  0838               	movf	___flmul@prod,w
  6809     0C9F  00A4               	movwf	?___flmul
  6810     0CA0                     l866:
  6811     0CA0  0008               	return
  6812     0CA1                     __end_of___flmul:
  6813                           
  6814                           	psect	text10
  6815     1C8C                     __ptext10:	
  6816 ;; *************** function __Umul8_16 *****************
  6817 ;; Defined at:
  6818 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  multiplier      1    wreg     unsigned char 
  6821 ;;  multiplicand    1    0[COMMON] unsigned char 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  multiplier      1    8[COMMON] unsigned char 
  6824 ;;  word_mpld       2    6[COMMON] unsigned int 
  6825 ;;  product         2    4[COMMON] unsigned int 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  2    0[COMMON] unsigned int 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6835 ;;      Params:         2       0       0       0       0
  6836 ;;      Locals:         5       0       0       0       0
  6837 ;;      Temps:          2       0       0       0       0
  6838 ;;      Totals:         9       0       0       0       0
  6839 ;;Total ram usage:        9 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		___flmul
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848     1C8C                     __Umul8_16:	
  6849                           ;psect for function __Umul8_16
  6850                           
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6854                           ;__Umul8_16@multiplier stored from wreg
  6855     1C8C  00F8               	movwf	__Umul8_16@multiplier
  6856     1C8D                     l2460:
  6857     1C8D  01F4               	clrf	__Umul8_16@product
  6858     1C8E  01F5               	clrf	__Umul8_16@product+1
  6859     1C8F                     l2462:
  6860     1C8F  0870               	movf	__Umul8_16@multiplicand,w
  6861     1C90  00F2               	movwf	??__Umul8_16
  6862     1C91  01F3               	clrf	??__Umul8_16+1
  6863     1C92  0872               	movf	??__Umul8_16,w
  6864     1C93  00F6               	movwf	__Umul8_16@word_mpld
  6865     1C94  0873               	movf	??__Umul8_16+1,w
  6866     1C95  00F7               	movwf	__Umul8_16@word_mpld+1
  6867     1C96                     l2464:
  6868     1C96  1C78               	btfss	__Umul8_16@multiplier,0
  6869     1C97  2C99               	goto	u2871
  6870     1C98  2C9A               	goto	u2870
  6871     1C99                     u2871:
  6872     1C99  2CA0               	goto	l885
  6873     1C9A                     u2870:
  6874     1C9A                     l2466:
  6875     1C9A  0876               	movf	__Umul8_16@word_mpld,w
  6876     1C9B  07F4               	addwf	__Umul8_16@product,f
  6877     1C9C  1803               	skipnc
  6878     1C9D  0AF5               	incf	__Umul8_16@product+1,f
  6879     1C9E  0877               	movf	__Umul8_16@word_mpld+1,w
  6880     1C9F  07F5               	addwf	__Umul8_16@product+1,f
  6881     1CA0                     l885:
  6882     1CA0  3001               	movlw	1
  6883     1CA1                     u2885:
  6884     1CA1  1003               	clrc
  6885     1CA2  0DF6               	rlf	__Umul8_16@word_mpld,f
  6886     1CA3  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6887     1CA4  3EFF               	addlw	-1
  6888     1CA5  1D03               	skipz
  6889     1CA6  2CA1               	goto	u2885
  6890     1CA7  1003               	clrc
  6891     1CA8  0CF8               	rrf	__Umul8_16@multiplier,f
  6892     1CA9                     l2468:
  6893     1CA9  0878               	movf	__Umul8_16@multiplier,w
  6894     1CAA  1D03               	btfss	3,2
  6895     1CAB  2CAD               	goto	u2891
  6896     1CAC  2CAE               	goto	u2890
  6897     1CAD                     u2891:
  6898     1CAD  2C96               	goto	l2464
  6899     1CAE                     u2890:
  6900     1CAE                     l2470:
  6901     1CAE  0875               	movf	__Umul8_16@product+1,w
  6902     1CAF  00F1               	movwf	?__Umul8_16+1
  6903     1CB0  0874               	movf	__Umul8_16@product,w
  6904     1CB1  00F0               	movwf	?__Umul8_16
  6905     1CB2                     l887:
  6906     1CB2  0008               	return
  6907     1CB3                     __end_of__Umul8_16:
  6908                           
  6909                           	psect	text11
  6910     111B                     __ptext11:	
  6911 ;; *************** function __tdiv_to_l_ *****************
  6912 ;; Defined at:
  6913 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  f1              4    0[COMMON] float 
  6916 ;;  f2              4    4[COMMON] float 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  quot            4    0[BANK0 ] unsigned long 
  6919 ;;  exp1            1    5[BANK0 ] unsigned char 
  6920 ;;  cntr            1    4[BANK0 ] unsigned char 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  4    0[COMMON] unsigned long 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6930 ;;      Params:         8       0       0       0       0
  6931 ;;      Locals:         0       6       0       0       0
  6932 ;;      Temps:          3       0       0       0       0
  6933 ;;      Totals:        11       6       0       0       0
  6934 ;;Total ram usage:       17 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_sprintf
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943     111B                     __tdiv_to_l_:	
  6944                           ;psect for function __tdiv_to_l_
  6945                           
  6946     111B                     l3092:	
  6947                           ;incstack = 0
  6948                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6949                           
  6950     111B  0870               	movf	__tdiv_to_l_@f1,w
  6951     111C  00F8               	movwf	??__tdiv_to_l_
  6952     111D  0871               	movf	__tdiv_to_l_@f1+1,w
  6953     111E  00F9               	movwf	??__tdiv_to_l_+1
  6954     111F  0872               	movf	__tdiv_to_l_@f1+2,w
  6955     1120  00FA               	movwf	??__tdiv_to_l_+2
  6956     1121  1003               	clrc
  6957     1122  0D79               	rlf	??__tdiv_to_l_+1,w
  6958     1123  0D7A               	rlf	??__tdiv_to_l_+2,w
  6959     1124  1283               	bcf	3,5	;RP0=0, select bank0
  6960     1125  1303               	bcf	3,6	;RP1=0, select bank0
  6961     1126  00A5               	movwf	__tdiv_to_l_@exp1
  6962     1127  0825               	movf	__tdiv_to_l_@exp1,w
  6963     1128  1D03               	btfss	3,2
  6964     1129  292B               	goto	u4431
  6965     112A  292C               	goto	u4430
  6966     112B                     u4431:
  6967     112B  2935               	goto	l3098
  6968     112C                     u4430:
  6969     112C                     l3094:
  6970     112C  3000               	movlw	0
  6971     112D  00F3               	movwf	?__tdiv_to_l_+3
  6972     112E  3000               	movlw	0
  6973     112F  00F2               	movwf	?__tdiv_to_l_+2
  6974     1130  3000               	movlw	0
  6975     1131  00F1               	movwf	?__tdiv_to_l_+1
  6976     1132  3000               	movlw	0
  6977     1133  00F0               	movwf	?__tdiv_to_l_
  6978     1134  29D1               	goto	l660
  6979     1135                     l3098:
  6980     1135  0874               	movf	__tdiv_to_l_@f2,w
  6981     1136  00F8               	movwf	??__tdiv_to_l_
  6982     1137  0875               	movf	__tdiv_to_l_@f2+1,w
  6983     1138  00F9               	movwf	??__tdiv_to_l_+1
  6984     1139  0876               	movf	__tdiv_to_l_@f2+2,w
  6985     113A  00FA               	movwf	??__tdiv_to_l_+2
  6986     113B  1003               	clrc
  6987     113C  0D79               	rlf	??__tdiv_to_l_+1,w
  6988     113D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6989     113E  00A4               	movwf	__tdiv_to_l_@cntr
  6990     113F  0824               	movf	__tdiv_to_l_@cntr,w
  6991     1140  1D03               	btfss	3,2
  6992     1141  2943               	goto	u4441
  6993     1142  2944               	goto	u4440
  6994     1143                     u4441:
  6995     1143  2945               	goto	l661
  6996     1144                     u4440:
  6997     1144  292C               	goto	l3094
  6998     1145                     l661:
  6999     1145  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7000     1146                     l3104:
  7001     1146  30FF               	movlw	255
  7002     1147  05F0               	andwf	__tdiv_to_l_@f1,f
  7003     1148  30FF               	movlw	255
  7004     1149  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7005     114A  3000               	movlw	0
  7006     114B  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7007     114C                     l3106:
  7008     114C  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7009     114D  30FF               	movlw	255
  7010     114E  05F4               	andwf	__tdiv_to_l_@f2,f
  7011     114F  30FF               	movlw	255
  7012     1150  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7013     1151  3000               	movlw	0
  7014     1152  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7015     1153  3000               	movlw	0
  7016     1154  00A3               	movwf	__tdiv_to_l_@quot+3
  7017     1155  3000               	movlw	0
  7018     1156  00A2               	movwf	__tdiv_to_l_@quot+2
  7019     1157  3000               	movlw	0
  7020     1158  00A1               	movwf	__tdiv_to_l_@quot+1
  7021     1159  3000               	movlw	0
  7022     115A  00A0               	movwf	__tdiv_to_l_@quot
  7023     115B                     l3108:
  7024     115B  307F               	movlw	127
  7025     115C  02A5               	subwf	__tdiv_to_l_@exp1,f
  7026     115D                     l3110:
  7027     115D  3098               	movlw	152
  7028     115E  0724               	addwf	__tdiv_to_l_@cntr,w
  7029     115F  00F8               	movwf	??__tdiv_to_l_
  7030     1160  0878               	movf	??__tdiv_to_l_,w
  7031     1161  02A5               	subwf	__tdiv_to_l_@exp1,f
  7032     1162  3018               	movlw	24
  7033     1163  00A4               	movwf	__tdiv_to_l_@cntr
  7034     1164                     l3112:
  7035     1164  3001               	movlw	1
  7036     1165  00F8               	movwf	??__tdiv_to_l_
  7037     1166                     u4455:
  7038     1166  1003               	clrc
  7039     1167  0DA0               	rlf	__tdiv_to_l_@quot,f
  7040     1168  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7041     1169  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7042     116A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7043     116B  0BF8               	decfsz	??__tdiv_to_l_,f
  7044     116C  2966               	goto	u4455
  7045     116D                     l3114:
  7046     116D  0876               	movf	__tdiv_to_l_@f2+2,w
  7047     116E  0272               	subwf	__tdiv_to_l_@f1+2,w
  7048     116F  1D03               	skipz
  7049     1170  2977               	goto	u4465
  7050     1171  0875               	movf	__tdiv_to_l_@f2+1,w
  7051     1172  0271               	subwf	__tdiv_to_l_@f1+1,w
  7052     1173  1D03               	skipz
  7053     1174  2977               	goto	u4465
  7054     1175  0874               	movf	__tdiv_to_l_@f2,w
  7055     1176  0270               	subwf	__tdiv_to_l_@f1,w
  7056     1177                     u4465:
  7057     1177  1C03               	skipc
  7058     1178  297A               	goto	u4461
  7059     1179  297B               	goto	u4460
  7060     117A                     u4461:
  7061     117A  2986               	goto	l3120
  7062     117B                     u4460:
  7063     117B                     l3116:
  7064     117B  0874               	movf	__tdiv_to_l_@f2,w
  7065     117C  02F0               	subwf	__tdiv_to_l_@f1,f
  7066     117D  0875               	movf	__tdiv_to_l_@f2+1,w
  7067     117E  1C03               	skipc
  7068     117F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7069     1180  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7070     1181  0876               	movf	__tdiv_to_l_@f2+2,w
  7071     1182  1C03               	skipc
  7072     1183  0A76               	incf	__tdiv_to_l_@f2+2,w
  7073     1184  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7074     1185                     l3118:
  7075     1185  1420               	bsf	__tdiv_to_l_@quot,0
  7076     1186                     l3120:
  7077     1186  3001               	movlw	1
  7078     1187                     u4475:
  7079     1187  1003               	clrc
  7080     1188  0DF0               	rlf	__tdiv_to_l_@f1,f
  7081     1189  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7082     118A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7083     118B  3EFF               	addlw	-1
  7084     118C  1D03               	skipz
  7085     118D  2987               	goto	u4475
  7086     118E                     l3122:
  7087     118E  3001               	movlw	1
  7088     118F  02A4               	subwf	__tdiv_to_l_@cntr,f
  7089     1190  1D03               	btfss	3,2
  7090     1191  2993               	goto	u4481
  7091     1192  2994               	goto	u4480
  7092     1193                     u4481:
  7093     1193  2964               	goto	l3112
  7094     1194                     u4480:
  7095     1194                     l664:
  7096     1194  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7097     1195  2997               	goto	u4491
  7098     1196  2998               	goto	u4490
  7099     1197                     u4491:
  7100     1197  29B2               	goto	l3132
  7101     1198                     u4490:
  7102     1198                     l3124:
  7103     1198  0825               	movf	__tdiv_to_l_@exp1,w
  7104     1199  3A80               	xorlw	128
  7105     119A  3E97               	addlw	151
  7106     119B  1803               	skipnc
  7107     119C  299E               	goto	u4501
  7108     119D  299F               	goto	u4500
  7109     119E                     u4501:
  7110     119E  29A0               	goto	l3130
  7111     119F                     u4500:
  7112     119F  292C               	goto	l3094
  7113     11A0                     l3130:
  7114     11A0  3001               	movlw	1
  7115     11A1                     u4515:
  7116     11A1  1003               	clrc
  7117     11A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7118     11A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7119     11A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7120     11A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  7121     11A6  3EFF               	addlw	-1
  7122     11A7  1D03               	skipz
  7123     11A8  29A1               	goto	u4515
  7124     11A9  3001               	movlw	1
  7125     11AA  00F8               	movwf	??__tdiv_to_l_
  7126     11AB  0878               	movf	??__tdiv_to_l_,w
  7127     11AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  7128     11AD  1D03               	btfss	3,2
  7129     11AE  29B0               	goto	u4521
  7130     11AF  29B1               	goto	u4520
  7131     11B0                     u4521:
  7132     11B0  29A0               	goto	l3130
  7133     11B1                     u4520:
  7134     11B1  29C9               	goto	l3140
  7135     11B2                     l3132:
  7136     11B2  3018               	movlw	24
  7137     11B3  0225               	subwf	__tdiv_to_l_@exp1,w
  7138     11B4  1C03               	skipc
  7139     11B5  29B7               	goto	u4531
  7140     11B6  29B8               	goto	u4530
  7141     11B7                     u4531:
  7142     11B7  29C4               	goto	l671
  7143     11B8                     u4530:
  7144     11B8  292C               	goto	l3094
  7145     11B9                     l3138:
  7146     11B9  3001               	movlw	1
  7147     11BA  00F8               	movwf	??__tdiv_to_l_
  7148     11BB                     u4545:
  7149     11BB  1003               	clrc
  7150     11BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  7151     11BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7152     11BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7153     11BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7154     11C0  0BF8               	decfsz	??__tdiv_to_l_,f
  7155     11C1  29BB               	goto	u4545
  7156     11C2  3001               	movlw	1
  7157     11C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  7158     11C4                     l671:
  7159     11C4  0825               	movf	__tdiv_to_l_@exp1,w
  7160     11C5  1D03               	btfss	3,2
  7161     11C6  29C8               	goto	u4551
  7162     11C7  29C9               	goto	u4550
  7163     11C8                     u4551:
  7164     11C8  29B9               	goto	l3138
  7165     11C9                     u4550:
  7166     11C9                     l3140:
  7167     11C9  0823               	movf	__tdiv_to_l_@quot+3,w
  7168     11CA  00F3               	movwf	?__tdiv_to_l_+3
  7169     11CB  0822               	movf	__tdiv_to_l_@quot+2,w
  7170     11CC  00F2               	movwf	?__tdiv_to_l_+2
  7171     11CD  0821               	movf	__tdiv_to_l_@quot+1,w
  7172     11CE  00F1               	movwf	?__tdiv_to_l_+1
  7173     11CF  0820               	movf	__tdiv_to_l_@quot,w
  7174     11D0  00F0               	movwf	?__tdiv_to_l_
  7175     11D1                     l660:
  7176     11D1  0008               	return
  7177     11D2                     __end_of__tdiv_to_l_:
  7178                           
  7179                           	psect	text12
  7180     08A4                     __ptext12:	
  7181 ;; *************** function __div_to_l_ *****************
  7182 ;; Defined at:
  7183 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  f1              4    0[COMMON] unsigned long 
  7186 ;;  f2              4    4[COMMON] unsigned long 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  quot            4    0[BANK0 ] unsigned long 
  7189 ;;  exp1            1    5[BANK0 ] unsigned char 
  7190 ;;  cntr            1    4[BANK0 ] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  4    0[COMMON] unsigned long 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7200 ;;      Params:         8       0       0       0       0
  7201 ;;      Locals:         0       6       0       0       0
  7202 ;;      Temps:          1       0       0       0       0
  7203 ;;      Totals:         9       6       0       0       0
  7204 ;;Total ram usage:       15 bytes
  7205 ;; Hardware stack levels used: 1
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_sprintf
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213     08A4                     __div_to_l_:	
  7214                           ;psect for function __div_to_l_
  7215                           
  7216     08A4                     l3144:	
  7217                           ;incstack = 0
  7218                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7219                           
  7220     08A4  1003               	clrc
  7221     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  7222     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  7223     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  7224     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  7225     08A9  00A5               	movwf	__div_to_l_@exp1
  7226     08AA  0825               	movf	__div_to_l_@exp1,w
  7227     08AB  1D03               	btfss	3,2
  7228     08AC  28AE               	goto	u4561
  7229     08AD  28AF               	goto	u4560
  7230     08AE                     u4561:
  7231     08AE  28B8               	goto	l3150
  7232     08AF                     u4560:
  7233     08AF                     l3146:
  7234     08AF  3000               	movlw	0
  7235     08B0  00F3               	movwf	?__div_to_l_+3
  7236     08B1  3000               	movlw	0
  7237     08B2  00F2               	movwf	?__div_to_l_+2
  7238     08B3  3000               	movlw	0
  7239     08B4  00F1               	movwf	?__div_to_l_+1
  7240     08B5  3000               	movlw	0
  7241     08B6  00F0               	movwf	?__div_to_l_
  7242     08B7  295B               	goto	l613
  7243     08B8                     l3150:
  7244     08B8  1003               	clrc
  7245     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  7246     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  7247     08BB  00A4               	movwf	__div_to_l_@cntr
  7248     08BC  0824               	movf	__div_to_l_@cntr,w
  7249     08BD  1D03               	btfss	3,2
  7250     08BE  28C0               	goto	u4571
  7251     08BF  28C1               	goto	u4570
  7252     08C0                     u4571:
  7253     08C0  28C2               	goto	l614
  7254     08C1                     u4570:
  7255     08C1  28AF               	goto	l3146
  7256     08C2                     l614:
  7257     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  7258     08C3                     l3156:
  7259     08C3  30FF               	movlw	255
  7260     08C4  05F0               	andwf	__div_to_l_@f1,f
  7261     08C5  30FF               	movlw	255
  7262     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  7263     08C7  30FF               	movlw	255
  7264     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  7265     08C9  3000               	movlw	0
  7266     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  7267     08CB                     l3158:
  7268     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  7269     08CC  30FF               	movlw	255
  7270     08CD  05F4               	andwf	__div_to_l_@f2,f
  7271     08CE  30FF               	movlw	255
  7272     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  7273     08D0  30FF               	movlw	255
  7274     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  7275     08D2  3000               	movlw	0
  7276     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  7277     08D4  3000               	movlw	0
  7278     08D5  00A3               	movwf	__div_to_l_@quot+3
  7279     08D6  3000               	movlw	0
  7280     08D7  00A2               	movwf	__div_to_l_@quot+2
  7281     08D8  3000               	movlw	0
  7282     08D9  00A1               	movwf	__div_to_l_@quot+1
  7283     08DA  3000               	movlw	0
  7284     08DB  00A0               	movwf	__div_to_l_@quot
  7285     08DC                     l3160:
  7286     08DC  307F               	movlw	127
  7287     08DD  02A5               	subwf	__div_to_l_@exp1,f
  7288     08DE                     l3162:
  7289     08DE  30A0               	movlw	160
  7290     08DF  0724               	addwf	__div_to_l_@cntr,w
  7291     08E0  00F8               	movwf	??__div_to_l_
  7292     08E1  0878               	movf	??__div_to_l_,w
  7293     08E2  02A5               	subwf	__div_to_l_@exp1,f
  7294     08E3  3020               	movlw	32
  7295     08E4  00A4               	movwf	__div_to_l_@cntr
  7296     08E5                     l3164:
  7297     08E5  3001               	movlw	1
  7298     08E6  00F8               	movwf	??__div_to_l_
  7299     08E7                     u4585:
  7300     08E7  1003               	clrc
  7301     08E8  0DA0               	rlf	__div_to_l_@quot,f
  7302     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  7303     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  7304     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  7305     08EC  0BF8               	decfsz	??__div_to_l_,f
  7306     08ED  28E7               	goto	u4585
  7307     08EE                     l3166:
  7308     08EE  0877               	movf	__div_to_l_@f2+3,w
  7309     08EF  0273               	subwf	__div_to_l_@f1+3,w
  7310     08F0  1D03               	skipz
  7311     08F1  28FC               	goto	u4595
  7312     08F2  0876               	movf	__div_to_l_@f2+2,w
  7313     08F3  0272               	subwf	__div_to_l_@f1+2,w
  7314     08F4  1D03               	skipz
  7315     08F5  28FC               	goto	u4595
  7316     08F6  0875               	movf	__div_to_l_@f2+1,w
  7317     08F7  0271               	subwf	__div_to_l_@f1+1,w
  7318     08F8  1D03               	skipz
  7319     08F9  28FC               	goto	u4595
  7320     08FA  0874               	movf	__div_to_l_@f2,w
  7321     08FB  0270               	subwf	__div_to_l_@f1,w
  7322     08FC                     u4595:
  7323     08FC  1C03               	skipc
  7324     08FD  28FF               	goto	u4591
  7325     08FE  2900               	goto	u4590
  7326     08FF                     u4591:
  7327     08FF  290F               	goto	l3172
  7328     0900                     u4590:
  7329     0900                     l3168:
  7330     0900  0874               	movf	__div_to_l_@f2,w
  7331     0901  02F0               	subwf	__div_to_l_@f1,f
  7332     0902  0875               	movf	__div_to_l_@f2+1,w
  7333     0903  1C03               	skipc
  7334     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  7335     0905  02F1               	subwf	__div_to_l_@f1+1,f
  7336     0906  0876               	movf	__div_to_l_@f2+2,w
  7337     0907  1C03               	skipc
  7338     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  7339     0909  02F2               	subwf	__div_to_l_@f1+2,f
  7340     090A  0877               	movf	__div_to_l_@f2+3,w
  7341     090B  1C03               	skipc
  7342     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  7343     090D  02F3               	subwf	__div_to_l_@f1+3,f
  7344     090E                     l3170:
  7345     090E  1420               	bsf	__div_to_l_@quot,0
  7346     090F                     l3172:
  7347     090F  3001               	movlw	1
  7348     0910  00F8               	movwf	??__div_to_l_
  7349     0911                     u4605:
  7350     0911  1003               	clrc
  7351     0912  0DF0               	rlf	__div_to_l_@f1,f
  7352     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  7353     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  7354     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  7355     0916  0BF8               	decfsz	??__div_to_l_,f
  7356     0917  2911               	goto	u4605
  7357     0918                     l3174:
  7358     0918  3001               	movlw	1
  7359     0919  02A4               	subwf	__div_to_l_@cntr,f
  7360     091A  1D03               	btfss	3,2
  7361     091B  291D               	goto	u4611
  7362     091C  291E               	goto	u4610
  7363     091D                     u4611:
  7364     091D  28E5               	goto	l3164
  7365     091E                     u4610:
  7366     091E                     l617:
  7367     091E  1FA5               	btfss	__div_to_l_@exp1,7
  7368     091F  2921               	goto	u4621
  7369     0920  2922               	goto	u4620
  7370     0921                     u4621:
  7371     0921  293C               	goto	l3184
  7372     0922                     u4620:
  7373     0922                     l3176:
  7374     0922  0825               	movf	__div_to_l_@exp1,w
  7375     0923  3A80               	xorlw	128
  7376     0924  3E9F               	addlw	159
  7377     0925  1803               	skipnc
  7378     0926  2928               	goto	u4631
  7379     0927  2929               	goto	u4630
  7380     0928                     u4631:
  7381     0928  292A               	goto	l3182
  7382     0929                     u4630:
  7383     0929  28AF               	goto	l3146
  7384     092A                     l3182:
  7385     092A  3001               	movlw	1
  7386     092B                     u4645:
  7387     092B  1003               	clrc
  7388     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  7389     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  7390     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  7391     092F  0CA0               	rrf	__div_to_l_@quot,f
  7392     0930  3EFF               	addlw	-1
  7393     0931  1D03               	skipz
  7394     0932  292B               	goto	u4645
  7395     0933  3001               	movlw	1
  7396     0934  00F8               	movwf	??__div_to_l_
  7397     0935  0878               	movf	??__div_to_l_,w
  7398     0936  07A5               	addwf	__div_to_l_@exp1,f
  7399     0937  1D03               	btfss	3,2
  7400     0938  293A               	goto	u4651
  7401     0939  293B               	goto	u4650
  7402     093A                     u4651:
  7403     093A  292A               	goto	l3182
  7404     093B                     u4650:
  7405     093B  2953               	goto	l3192
  7406     093C                     l3184:
  7407     093C  3020               	movlw	32
  7408     093D  0225               	subwf	__div_to_l_@exp1,w
  7409     093E  1C03               	skipc
  7410     093F  2941               	goto	u4661
  7411     0940  2942               	goto	u4660
  7412     0941                     u4661:
  7413     0941  294E               	goto	l624
  7414     0942                     u4660:
  7415     0942  28AF               	goto	l3146
  7416     0943                     l3190:
  7417     0943  3001               	movlw	1
  7418     0944  00F8               	movwf	??__div_to_l_
  7419     0945                     u4675:
  7420     0945  1003               	clrc
  7421     0946  0DA0               	rlf	__div_to_l_@quot,f
  7422     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  7423     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  7424     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  7425     094A  0BF8               	decfsz	??__div_to_l_,f
  7426     094B  2945               	goto	u4675
  7427     094C  3001               	movlw	1
  7428     094D  02A5               	subwf	__div_to_l_@exp1,f
  7429     094E                     l624:
  7430     094E  0825               	movf	__div_to_l_@exp1,w
  7431     094F  1D03               	btfss	3,2
  7432     0950  2952               	goto	u4681
  7433     0951  2953               	goto	u4680
  7434     0952                     u4681:
  7435     0952  2943               	goto	l3190
  7436     0953                     u4680:
  7437     0953                     l3192:
  7438     0953  0823               	movf	__div_to_l_@quot+3,w
  7439     0954  00F3               	movwf	?__div_to_l_+3
  7440     0955  0822               	movf	__div_to_l_@quot+2,w
  7441     0956  00F2               	movwf	?__div_to_l_+2
  7442     0957  0821               	movf	__div_to_l_@quot+1,w
  7443     0958  00F1               	movwf	?__div_to_l_+1
  7444     0959  0820               	movf	__div_to_l_@quot,w
  7445     095A  00F0               	movwf	?__div_to_l_
  7446     095B                     l613:
  7447     095B  0008               	return
  7448     095C                     __end_of__div_to_l_:
  7449                           
  7450                           	psect	text13
  7451     00F5                     __ptext13:	
  7452 ;; *************** function ___xxtofl *****************
  7453 ;; Defined at:
  7454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  sign            1    wreg     unsigned char 
  7457 ;;  val             4    6[COMMON] long 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  sign            1    0[BANK0 ] unsigned char 
  7460 ;;  arg             4    2[BANK0 ] unsigned long 
  7461 ;;  exp             1    1[BANK0 ] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  4    6[COMMON] unsigned char 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7471 ;;      Params:         4       0       0       0       0
  7472 ;;      Locals:         0       6       0       0       0
  7473 ;;      Temps:          4       0       0       0       0
  7474 ;;      Totals:         8       6       0       0       0
  7475 ;;Total ram usage:       14 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_main
  7481 ;;		_sprintf
  7482 ;;		_medir_distancia
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486     00F5                     ___xxtofl:	
  7487                           ;psect for function ___xxtofl
  7488                           
  7489                           
  7490                           ;incstack = 0
  7491                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7492                           ;___xxtofl@sign stored from wreg
  7493     00F5  1283               	bcf	3,5	;RP0=0, select bank0
  7494     00F6  1303               	bcf	3,6	;RP1=0, select bank0
  7495     00F7  00A0               	movwf	___xxtofl@sign
  7496     00F8                     l3312:
  7497     00F8  0820               	movf	___xxtofl@sign,w
  7498     00F9  1903               	btfsc	3,2
  7499     00FA  28FC               	goto	u5001
  7500     00FB  28FD               	goto	u5000
  7501     00FC                     u5001:
  7502     00FC  2911               	goto	l3318
  7503     00FD                     u5000:
  7504     00FD                     l3314:
  7505     00FD  1FF9               	btfss	___xxtofl@val+3,7
  7506     00FE  2900               	goto	u5011
  7507     00FF  2901               	goto	u5010
  7508     0100                     u5011:
  7509     0100  2911               	goto	l3318
  7510     0101                     u5010:
  7511     0101                     l3316:
  7512     0101  0976               	comf	___xxtofl@val,w
  7513     0102  00A2               	movwf	___xxtofl@arg
  7514     0103  0977               	comf	___xxtofl@val+1,w
  7515     0104  00A3               	movwf	___xxtofl@arg+1
  7516     0105  0978               	comf	___xxtofl@val+2,w
  7517     0106  00A4               	movwf	___xxtofl@arg+2
  7518     0107  0979               	comf	___xxtofl@val+3,w
  7519     0108  00A5               	movwf	___xxtofl@arg+3
  7520     0109  0AA2               	incf	___xxtofl@arg,f
  7521     010A  1903               	skipnz
  7522     010B  0AA3               	incf	___xxtofl@arg+1,f
  7523     010C  1903               	skipnz
  7524     010D  0AA4               	incf	___xxtofl@arg+2,f
  7525     010E  1903               	skipnz
  7526     010F  0AA5               	incf	___xxtofl@arg+3,f
  7527     0110  2919               	goto	l910
  7528     0111                     l3318:
  7529     0111  0879               	movf	___xxtofl@val+3,w
  7530     0112  00A5               	movwf	___xxtofl@arg+3
  7531     0113  0878               	movf	___xxtofl@val+2,w
  7532     0114  00A4               	movwf	___xxtofl@arg+2
  7533     0115  0877               	movf	___xxtofl@val+1,w
  7534     0116  00A3               	movwf	___xxtofl@arg+1
  7535     0117  0876               	movf	___xxtofl@val,w
  7536     0118  00A2               	movwf	___xxtofl@arg
  7537     0119                     l910:
  7538     0119  0879               	movf	___xxtofl@val+3,w
  7539     011A  0478               	iorwf	___xxtofl@val+2,w
  7540     011B  0477               	iorwf	___xxtofl@val+1,w
  7541     011C  0476               	iorwf	___xxtofl@val,w
  7542     011D  1D03               	skipz
  7543     011E  2920               	goto	u5021
  7544     011F  2921               	goto	u5020
  7545     0120                     u5021:
  7546     0120  292A               	goto	l3324
  7547     0121                     u5020:
  7548     0121                     l3320:
  7549     0121  3000               	movlw	0
  7550     0122  00F9               	movwf	?___xxtofl+3
  7551     0123  3000               	movlw	0
  7552     0124  00F8               	movwf	?___xxtofl+2
  7553     0125  3000               	movlw	0
  7554     0126  00F7               	movwf	?___xxtofl+1
  7555     0127  3000               	movlw	0
  7556     0128  00F6               	movwf	?___xxtofl
  7557     0129  29AE               	goto	l912
  7558     012A                     l3324:
  7559     012A  3096               	movlw	150
  7560     012B  00A1               	movwf	___xxtofl@exp
  7561     012C  293A               	goto	l3328
  7562     012D                     l3326:
  7563     012D  3001               	movlw	1
  7564     012E  00FA               	movwf	??___xxtofl
  7565     012F  087A               	movf	??___xxtofl,w
  7566     0130  07A1               	addwf	___xxtofl@exp,f
  7567     0131  3001               	movlw	1
  7568     0132                     u5035:
  7569     0132  1003               	clrc
  7570     0133  0CA5               	rrf	___xxtofl@arg+3,f
  7571     0134  0CA4               	rrf	___xxtofl@arg+2,f
  7572     0135  0CA3               	rrf	___xxtofl@arg+1,f
  7573     0136  0CA2               	rrf	___xxtofl@arg,f
  7574     0137  3EFF               	addlw	-1
  7575     0138  1D03               	skipz
  7576     0139  2932               	goto	u5035
  7577     013A                     l3328:
  7578     013A  30FE               	movlw	254
  7579     013B  0525               	andwf	___xxtofl@arg+3,w
  7580     013C  1D03               	btfss	3,2
  7581     013D  293F               	goto	u5041
  7582     013E  2940               	goto	u5040
  7583     013F                     u5041:
  7584     013F  292D               	goto	l3326
  7585     0140                     u5040:
  7586     0140  295C               	goto	l916
  7587     0141                     l3330:
  7588     0141  3001               	movlw	1
  7589     0142  00FA               	movwf	??___xxtofl
  7590     0143  087A               	movf	??___xxtofl,w
  7591     0144  07A1               	addwf	___xxtofl@exp,f
  7592     0145                     l3332:
  7593     0145  3001               	movlw	1
  7594     0146  07A2               	addwf	___xxtofl@arg,f
  7595     0147  3000               	movlw	0
  7596     0148  1803               	skipnc
  7597     0149  3001               	movlw	1
  7598     014A  07A3               	addwf	___xxtofl@arg+1,f
  7599     014B  3000               	movlw	0
  7600     014C  1803               	skipnc
  7601     014D  3001               	movlw	1
  7602     014E  07A4               	addwf	___xxtofl@arg+2,f
  7603     014F  3000               	movlw	0
  7604     0150  1803               	skipnc
  7605     0151  3001               	movlw	1
  7606     0152  07A5               	addwf	___xxtofl@arg+3,f
  7607     0153                     l3334:
  7608     0153  3001               	movlw	1
  7609     0154                     u5055:
  7610     0154  1003               	clrc
  7611     0155  0CA5               	rrf	___xxtofl@arg+3,f
  7612     0156  0CA4               	rrf	___xxtofl@arg+2,f
  7613     0157  0CA3               	rrf	___xxtofl@arg+1,f
  7614     0158  0CA2               	rrf	___xxtofl@arg,f
  7615     0159  3EFF               	addlw	-1
  7616     015A  1D03               	skipz
  7617     015B  2954               	goto	u5055
  7618     015C                     l916:
  7619     015C  30FF               	movlw	255
  7620     015D  0525               	andwf	___xxtofl@arg+3,w
  7621     015E  1D03               	btfss	3,2
  7622     015F  2961               	goto	u5061
  7623     0160  2962               	goto	u5060
  7624     0161                     u5061:
  7625     0161  2941               	goto	l3330
  7626     0162                     u5060:
  7627     0162  296E               	goto	l3338
  7628     0163                     l3336:
  7629     0163  3001               	movlw	1
  7630     0164  02A1               	subwf	___xxtofl@exp,f
  7631     0165  3001               	movlw	1
  7632     0166  00FA               	movwf	??___xxtofl
  7633     0167                     u5075:
  7634     0167  1003               	clrc
  7635     0168  0DA2               	rlf	___xxtofl@arg,f
  7636     0169  0DA3               	rlf	___xxtofl@arg+1,f
  7637     016A  0DA4               	rlf	___xxtofl@arg+2,f
  7638     016B  0DA5               	rlf	___xxtofl@arg+3,f
  7639     016C  0BFA               	decfsz	??___xxtofl,f
  7640     016D  2967               	goto	u5075
  7641     016E                     l3338:
  7642     016E  1BA4               	btfsc	___xxtofl@arg+2,7
  7643     016F  2971               	goto	u5081
  7644     0170  2972               	goto	u5080
  7645     0171                     u5081:
  7646     0171  2978               	goto	l923
  7647     0172                     u5080:
  7648     0172                     l3340:
  7649     0172  3002               	movlw	2
  7650     0173  0221               	subwf	___xxtofl@exp,w
  7651     0174  1803               	skipnc
  7652     0175  2977               	goto	u5091
  7653     0176  2978               	goto	u5090
  7654     0177                     u5091:
  7655     0177  2963               	goto	l3336
  7656     0178                     u5090:
  7657     0178                     l923:
  7658     0178  1821               	btfsc	___xxtofl@exp,0
  7659     0179  297B               	goto	u5101
  7660     017A  297C               	goto	u5100
  7661     017B                     u5101:
  7662     017B  2984               	goto	l924
  7663     017C                     u5100:
  7664     017C                     l3342:
  7665     017C  30FF               	movlw	255
  7666     017D  05A2               	andwf	___xxtofl@arg,f
  7667     017E  30FF               	movlw	255
  7668     017F  05A3               	andwf	___xxtofl@arg+1,f
  7669     0180  307F               	movlw	127
  7670     0181  05A4               	andwf	___xxtofl@arg+2,f
  7671     0182  30FF               	movlw	255
  7672     0183  05A5               	andwf	___xxtofl@arg+3,f
  7673     0184                     l924:
  7674     0184  1003               	clrc
  7675     0185  0CA1               	rrf	___xxtofl@exp,f
  7676     0186                     l3344:
  7677     0186  0821               	movf	___xxtofl@exp,w
  7678     0187  00FA               	movwf	??___xxtofl
  7679     0188  01FB               	clrf	??___xxtofl+1
  7680     0189  01FC               	clrf	??___xxtofl+2
  7681     018A  01FD               	clrf	??___xxtofl+3
  7682     018B  3018               	movlw	24
  7683     018C                     u5115:
  7684     018C  1003               	clrc
  7685     018D  0DFA               	rlf	??___xxtofl,f
  7686     018E  0DFB               	rlf	??___xxtofl+1,f
  7687     018F  0DFC               	rlf	??___xxtofl+2,f
  7688     0190  0DFD               	rlf	??___xxtofl+3,f
  7689     0191                     u5110:
  7690     0191  3EFF               	addlw	-1
  7691     0192  1D03               	skipz
  7692     0193  298C               	goto	u5115
  7693     0194  087A               	movf	??___xxtofl,w
  7694     0195  04A2               	iorwf	___xxtofl@arg,f
  7695     0196  087B               	movf	??___xxtofl+1,w
  7696     0197  04A3               	iorwf	___xxtofl@arg+1,f
  7697     0198  087C               	movf	??___xxtofl+2,w
  7698     0199  04A4               	iorwf	___xxtofl@arg+2,f
  7699     019A  087D               	movf	??___xxtofl+3,w
  7700     019B  04A5               	iorwf	___xxtofl@arg+3,f
  7701     019C                     l3346:
  7702     019C  0820               	movf	___xxtofl@sign,w
  7703     019D  1903               	btfsc	3,2
  7704     019E  29A0               	goto	u5121
  7705     019F  29A1               	goto	u5120
  7706     01A0                     u5121:
  7707     01A0  29A6               	goto	l3352
  7708     01A1                     u5120:
  7709     01A1                     l3348:
  7710     01A1  1FF9               	btfss	___xxtofl@val+3,7
  7711     01A2  29A4               	goto	u5131
  7712     01A3  29A5               	goto	u5130
  7713     01A4                     u5131:
  7714     01A4  29A6               	goto	l3352
  7715     01A5                     u5130:
  7716     01A5                     l3350:
  7717     01A5  17A5               	bsf	___xxtofl@arg+3,7
  7718     01A6                     l3352:
  7719     01A6  0825               	movf	___xxtofl@arg+3,w
  7720     01A7  00F9               	movwf	?___xxtofl+3
  7721     01A8  0824               	movf	___xxtofl@arg+2,w
  7722     01A9  00F8               	movwf	?___xxtofl+2
  7723     01AA  0823               	movf	___xxtofl@arg+1,w
  7724     01AB  00F7               	movwf	?___xxtofl+1
  7725     01AC  0822               	movf	___xxtofl@arg,w
  7726     01AD  00F6               	movwf	?___xxtofl
  7727     01AE                     l912:
  7728     01AE  0008               	return
  7729     01AF                     __end_of___xxtofl:
  7730                           
  7731                           	psect	text14
  7732     1C67                     __ptext14:	
  7733 ;; *************** function ___wmul *****************
  7734 ;; Defined at:
  7735 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  multiplier      2    0[COMMON] unsigned int 
  7738 ;;  multiplicand    2    2[COMMON] unsigned int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  product         2    4[COMMON] unsigned int 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2    0[COMMON] unsigned int 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         4       0       0       0       0
  7751 ;;      Locals:         2       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0
  7753 ;;      Totals:         6       0       0       0       0
  7754 ;;Total ram usage:        6 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_sprintf
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763     1C67                     ___wmul:	
  7764                           ;psect for function ___wmul
  7765                           
  7766     1C67                     l3196:	
  7767                           ;incstack = 0
  7768                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7769                           
  7770     1C67  01F4               	clrf	___wmul@product
  7771     1C68  01F5               	clrf	___wmul@product+1
  7772     1C69                     l3198:
  7773     1C69  1C70               	btfss	___wmul@multiplier,0
  7774     1C6A  2C6C               	goto	u4691
  7775     1C6B  2C6D               	goto	u4690
  7776     1C6C                     u4691:
  7777     1C6C  2C73               	goto	l443
  7778     1C6D                     u4690:
  7779     1C6D                     l3200:
  7780     1C6D  0872               	movf	___wmul@multiplicand,w
  7781     1C6E  07F4               	addwf	___wmul@product,f
  7782     1C6F  1803               	skipnc
  7783     1C70  0AF5               	incf	___wmul@product+1,f
  7784     1C71  0873               	movf	___wmul@multiplicand+1,w
  7785     1C72  07F5               	addwf	___wmul@product+1,f
  7786     1C73                     l443:
  7787     1C73  3001               	movlw	1
  7788     1C74                     u4705:
  7789     1C74  1003               	clrc
  7790     1C75  0DF2               	rlf	___wmul@multiplicand,f
  7791     1C76  0DF3               	rlf	___wmul@multiplicand+1,f
  7792     1C77  3EFF               	addlw	-1
  7793     1C78  1D03               	skipz
  7794     1C79  2C74               	goto	u4705
  7795     1C7A                     l3202:
  7796     1C7A  3001               	movlw	1
  7797     1C7B                     u4715:
  7798     1C7B  1003               	clrc
  7799     1C7C  0CF1               	rrf	___wmul@multiplier+1,f
  7800     1C7D  0CF0               	rrf	___wmul@multiplier,f
  7801     1C7E  3EFF               	addlw	-1
  7802     1C7F  1D03               	skipz
  7803     1C80  2C7B               	goto	u4715
  7804     1C81                     l3204:
  7805     1C81  0870               	movf	___wmul@multiplier,w
  7806     1C82  0471               	iorwf	___wmul@multiplier+1,w
  7807     1C83  1D03               	btfss	3,2
  7808     1C84  2C86               	goto	u4721
  7809     1C85  2C87               	goto	u4720
  7810     1C86                     u4721:
  7811     1C86  2C69               	goto	l3198
  7812     1C87                     u4720:
  7813     1C87                     l3206:
  7814     1C87  0875               	movf	___wmul@product+1,w
  7815     1C88  00F1               	movwf	?___wmul+1
  7816     1C89  0874               	movf	___wmul@product,w
  7817     1C8A  00F0               	movwf	?___wmul
  7818     1C8B                     l445:
  7819     1C8B  0008               	return
  7820     1C8C                     __end_of___wmul:
  7821                           
  7822                           	psect	text15
  7823     1E90                     __ptext15:	
  7824 ;; *************** function ___llmod *****************
  7825 ;; Defined at:
  7826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  divisor         4    0[COMMON] unsigned long 
  7829 ;;  dividend        4    4[COMMON] unsigned long 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  counter         1    9[COMMON] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4    0[COMMON] unsigned long 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         8       0       0       0       0
  7842 ;;      Locals:         1       0       0       0       0
  7843 ;;      Temps:          1       0       0       0       0
  7844 ;;      Totals:        10       0       0       0       0
  7845 ;;Total ram usage:       10 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_sprintf
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854     1E90                     ___llmod:	
  7855                           ;psect for function ___llmod
  7856                           
  7857     1E90                     l3286:	
  7858                           ;incstack = 0
  7859                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7860                           
  7861     1E90  0873               	movf	___llmod@divisor+3,w
  7862     1E91  0472               	iorwf	___llmod@divisor+2,w
  7863     1E92  0471               	iorwf	___llmod@divisor+1,w
  7864     1E93  0470               	iorwf	___llmod@divisor,w
  7865     1E94  1903               	skipnz
  7866     1E95  2E97               	goto	u4941
  7867     1E96  2E98               	goto	u4940
  7868     1E97                     u4941:
  7869     1E97  2EDB               	goto	l3302
  7870     1E98                     u4940:
  7871     1E98                     l3288:
  7872     1E98  01F9               	clrf	___llmod@counter
  7873     1E99  0AF9               	incf	___llmod@counter,f
  7874     1E9A  2EA8               	goto	l3292
  7875     1E9B                     l3290:
  7876     1E9B  3001               	movlw	1
  7877     1E9C  00F8               	movwf	??___llmod
  7878     1E9D                     u4955:
  7879     1E9D  1003               	clrc
  7880     1E9E  0DF0               	rlf	___llmod@divisor,f
  7881     1E9F  0DF1               	rlf	___llmod@divisor+1,f
  7882     1EA0  0DF2               	rlf	___llmod@divisor+2,f
  7883     1EA1  0DF3               	rlf	___llmod@divisor+3,f
  7884     1EA2  0BF8               	decfsz	??___llmod,f
  7885     1EA3  2E9D               	goto	u4955
  7886     1EA4  3001               	movlw	1
  7887     1EA5  00F8               	movwf	??___llmod
  7888     1EA6  0878               	movf	??___llmod,w
  7889     1EA7  07F9               	addwf	___llmod@counter,f
  7890     1EA8                     l3292:
  7891     1EA8  1FF3               	btfss	___llmod@divisor+3,7
  7892     1EA9  2EAB               	goto	u4961
  7893     1EAA  2EAC               	goto	u4960
  7894     1EAB                     u4961:
  7895     1EAB  2E9B               	goto	l3290
  7896     1EAC                     u4960:
  7897     1EAC                     l3294:
  7898     1EAC  0873               	movf	___llmod@divisor+3,w
  7899     1EAD  0277               	subwf	___llmod@dividend+3,w
  7900     1EAE  1D03               	skipz
  7901     1EAF  2EBA               	goto	u4975
  7902     1EB0  0872               	movf	___llmod@divisor+2,w
  7903     1EB1  0276               	subwf	___llmod@dividend+2,w
  7904     1EB2  1D03               	skipz
  7905     1EB3  2EBA               	goto	u4975
  7906     1EB4  0871               	movf	___llmod@divisor+1,w
  7907     1EB5  0275               	subwf	___llmod@dividend+1,w
  7908     1EB6  1D03               	skipz
  7909     1EB7  2EBA               	goto	u4975
  7910     1EB8  0870               	movf	___llmod@divisor,w
  7911     1EB9  0274               	subwf	___llmod@dividend,w
  7912     1EBA                     u4975:
  7913     1EBA  1C03               	skipc
  7914     1EBB  2EBD               	goto	u4971
  7915     1EBC  2EBE               	goto	u4970
  7916     1EBD                     u4971:
  7917     1EBD  2ECC               	goto	l3298
  7918     1EBE                     u4970:
  7919     1EBE                     l3296:
  7920     1EBE  0870               	movf	___llmod@divisor,w
  7921     1EBF  02F4               	subwf	___llmod@dividend,f
  7922     1EC0  0871               	movf	___llmod@divisor+1,w
  7923     1EC1  1C03               	skipc
  7924     1EC2  0F71               	incfsz	___llmod@divisor+1,w
  7925     1EC3  02F5               	subwf	___llmod@dividend+1,f
  7926     1EC4  0872               	movf	___llmod@divisor+2,w
  7927     1EC5  1C03               	skipc
  7928     1EC6  0F72               	incfsz	___llmod@divisor+2,w
  7929     1EC7  02F6               	subwf	___llmod@dividend+2,f
  7930     1EC8  0873               	movf	___llmod@divisor+3,w
  7931     1EC9  1C03               	skipc
  7932     1ECA  0F73               	incfsz	___llmod@divisor+3,w
  7933     1ECB  02F7               	subwf	___llmod@dividend+3,f
  7934     1ECC                     l3298:
  7935     1ECC  3001               	movlw	1
  7936     1ECD                     u4985:
  7937     1ECD  1003               	clrc
  7938     1ECE  0CF3               	rrf	___llmod@divisor+3,f
  7939     1ECF  0CF2               	rrf	___llmod@divisor+2,f
  7940     1ED0  0CF1               	rrf	___llmod@divisor+1,f
  7941     1ED1  0CF0               	rrf	___llmod@divisor,f
  7942     1ED2  3EFF               	addlw	-1
  7943     1ED3  1D03               	skipz
  7944     1ED4  2ECD               	goto	u4985
  7945     1ED5                     l3300:
  7946     1ED5  3001               	movlw	1
  7947     1ED6  02F9               	subwf	___llmod@counter,f
  7948     1ED7  1D03               	btfss	3,2
  7949     1ED8  2EDA               	goto	u4991
  7950     1ED9  2EDB               	goto	u4990
  7951     1EDA                     u4991:
  7952     1EDA  2EAC               	goto	l3294
  7953     1EDB                     u4990:
  7954     1EDB                     l3302:
  7955     1EDB  0877               	movf	___llmod@dividend+3,w
  7956     1EDC  00F3               	movwf	?___llmod+3
  7957     1EDD  0876               	movf	___llmod@dividend+2,w
  7958     1EDE  00F2               	movwf	?___llmod+2
  7959     1EDF  0875               	movf	___llmod@dividend+1,w
  7960     1EE0  00F1               	movwf	?___llmod+1
  7961     1EE1  0874               	movf	___llmod@dividend,w
  7962     1EE2  00F0               	movwf	?___llmod
  7963     1EE3                     l699:
  7964     1EE3  0008               	return
  7965     1EE4                     __end_of___llmod:
  7966                           
  7967                           	psect	text16
  7968     10A3                     __ptext16:	
  7969 ;; *************** function ___fltol *****************
  7970 ;; Defined at:
  7971 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  f1              4   49[BANK0 ] unsigned long 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  exp1            1   58[BANK0 ] unsigned char 
  7976 ;;  sign1           1   57[BANK0 ] unsigned char 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  4   49[BANK0 ] long 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7986 ;;      Params:         0       4       0       0       0
  7987 ;;      Locals:         0       2       0       0       0
  7988 ;;      Temps:          0       4       0       0       0
  7989 ;;      Totals:         0      10       0       0       0
  7990 ;;Total ram usage:       10 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_main
  7996 ;;		_sprintf
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000     10A3                     ___fltol:	
  8001                           ;psect for function ___fltol
  8002                           
  8003     10A3                     l3250:	
  8004                           ;incstack = 0
  8005                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8006                           
  8007     10A3  1003               	clrc
  8008     10A4  1283               	bcf	3,5	;RP0=0, select bank0
  8009     10A5  1303               	bcf	3,6	;RP1=0, select bank0
  8010     10A6  0D53               	rlf	___fltol@f1+2,w
  8011     10A7  0D54               	rlf	___fltol@f1+3,w
  8012     10A8  00DA               	movwf	___fltol@exp1
  8013     10A9  085A               	movf	___fltol@exp1,w
  8014     10AA  1D03               	btfss	3,2
  8015     10AB  28AD               	goto	u4841
  8016     10AC  28AE               	goto	u4840
  8017     10AD                     u4841:
  8018     10AD  28B7               	goto	l3256
  8019     10AE                     u4840:
  8020     10AE                     l3252:
  8021     10AE  3000               	movlw	0
  8022     10AF  00D4               	movwf	?___fltol+3
  8023     10B0  3000               	movlw	0
  8024     10B1  00D3               	movwf	?___fltol+2
  8025     10B2  3000               	movlw	0
  8026     10B3  00D2               	movwf	?___fltol+1
  8027     10B4  3000               	movlw	0
  8028     10B5  00D1               	movwf	?___fltol
  8029     10B6  291A               	goto	l646
  8030     10B7                     l3256:
  8031     10B7  0851               	movf	___fltol@f1,w
  8032     10B8  00D5               	movwf	??___fltol
  8033     10B9  0852               	movf	___fltol@f1+1,w
  8034     10BA  00D6               	movwf	??___fltol+1
  8035     10BB  0853               	movf	___fltol@f1+2,w
  8036     10BC  00D7               	movwf	??___fltol+2
  8037     10BD  0854               	movf	___fltol@f1+3,w
  8038     10BE  00D8               	movwf	??___fltol+3
  8039     10BF  301F               	movlw	31
  8040     10C0                     u4855:
  8041     10C0  1003               	clrc
  8042     10C1  0CD8               	rrf	??___fltol+3,f
  8043     10C2  0CD7               	rrf	??___fltol+2,f
  8044     10C3  0CD6               	rrf	??___fltol+1,f
  8045     10C4  0CD5               	rrf	??___fltol,f
  8046     10C5                     u4850:
  8047     10C5  3EFF               	addlw	-1
  8048     10C6  1D03               	skipz
  8049     10C7  28C0               	goto	u4855
  8050     10C8  0855               	movf	??___fltol,w
  8051     10C9  00D9               	movwf	___fltol@sign1
  8052     10CA                     l3258:
  8053     10CA  17D3               	bsf	___fltol@f1+2,7
  8054     10CB                     l3260:
  8055     10CB  30FF               	movlw	255
  8056     10CC  05D1               	andwf	___fltol@f1,f
  8057     10CD  30FF               	movlw	255
  8058     10CE  05D2               	andwf	___fltol@f1+1,f
  8059     10CF  30FF               	movlw	255
  8060     10D0  05D3               	andwf	___fltol@f1+2,f
  8061     10D1  3000               	movlw	0
  8062     10D2  05D4               	andwf	___fltol@f1+3,f
  8063     10D3                     l3262:
  8064     10D3  3096               	movlw	150
  8065     10D4  02DA               	subwf	___fltol@exp1,f
  8066     10D5                     l3264:
  8067     10D5  1FDA               	btfss	___fltol@exp1,7
  8068     10D6  28D8               	goto	u4861
  8069     10D7  28D9               	goto	u4860
  8070     10D8                     u4861:
  8071     10D8  28F3               	goto	l3274
  8072     10D9                     u4860:
  8073     10D9                     l3266:
  8074     10D9  085A               	movf	___fltol@exp1,w
  8075     10DA  3A80               	xorlw	128
  8076     10DB  3E97               	addlw	151
  8077     10DC  1803               	skipnc
  8078     10DD  28DF               	goto	u4871
  8079     10DE  28E0               	goto	u4870
  8080     10DF                     u4871:
  8081     10DF  28E1               	goto	l3272
  8082     10E0                     u4870:
  8083     10E0  28AE               	goto	l3252
  8084     10E1                     l3272:
  8085     10E1  3001               	movlw	1
  8086     10E2                     u4885:
  8087     10E2  1003               	clrc
  8088     10E3  0CD4               	rrf	___fltol@f1+3,f
  8089     10E4  0CD3               	rrf	___fltol@f1+2,f
  8090     10E5  0CD2               	rrf	___fltol@f1+1,f
  8091     10E6  0CD1               	rrf	___fltol@f1,f
  8092     10E7  3EFF               	addlw	-1
  8093     10E8  1D03               	skipz
  8094     10E9  28E2               	goto	u4885
  8095     10EA  3001               	movlw	1
  8096     10EB  00D5               	movwf	??___fltol
  8097     10EC  0855               	movf	??___fltol,w
  8098     10ED  07DA               	addwf	___fltol@exp1,f
  8099     10EE  1D03               	btfss	3,2
  8100     10EF  28F1               	goto	u4891
  8101     10F0  28F2               	goto	u4890
  8102     10F1                     u4891:
  8103     10F1  28E1               	goto	l3272
  8104     10F2                     u4890:
  8105     10F2  290A               	goto	l3282
  8106     10F3                     l3274:
  8107     10F3  3020               	movlw	32
  8108     10F4  025A               	subwf	___fltol@exp1,w
  8109     10F5  1C03               	skipc
  8110     10F6  28F8               	goto	u4901
  8111     10F7  28F9               	goto	u4900
  8112     10F8                     u4901:
  8113     10F8  2905               	goto	l653
  8114     10F9                     u4900:
  8115     10F9  28AE               	goto	l3252
  8116     10FA                     l3280:
  8117     10FA  3001               	movlw	1
  8118     10FB  00D5               	movwf	??___fltol
  8119     10FC                     u4915:
  8120     10FC  1003               	clrc
  8121     10FD  0DD1               	rlf	___fltol@f1,f
  8122     10FE  0DD2               	rlf	___fltol@f1+1,f
  8123     10FF  0DD3               	rlf	___fltol@f1+2,f
  8124     1100  0DD4               	rlf	___fltol@f1+3,f
  8125     1101  0BD5               	decfsz	??___fltol,f
  8126     1102  28FC               	goto	u4915
  8127     1103  3001               	movlw	1
  8128     1104  02DA               	subwf	___fltol@exp1,f
  8129     1105                     l653:
  8130     1105  085A               	movf	___fltol@exp1,w
  8131     1106  1D03               	btfss	3,2
  8132     1107  2909               	goto	u4921
  8133     1108  290A               	goto	u4920
  8134     1109                     u4921:
  8135     1109  28FA               	goto	l3280
  8136     110A                     u4920:
  8137     110A                     l3282:
  8138     110A  0859               	movf	___fltol@sign1,w
  8139     110B  1903               	btfsc	3,2
  8140     110C  290E               	goto	u4931
  8141     110D  290F               	goto	u4930
  8142     110E                     u4931:
  8143     110E  291A               	goto	l656
  8144     110F                     u4930:
  8145     110F                     l3284:
  8146     110F  09D1               	comf	___fltol@f1,f
  8147     1110  09D2               	comf	___fltol@f1+1,f
  8148     1111  09D3               	comf	___fltol@f1+2,f
  8149     1112  09D4               	comf	___fltol@f1+3,f
  8150     1113  0AD1               	incf	___fltol@f1,f
  8151     1114  1903               	skipnz
  8152     1115  0AD2               	incf	___fltol@f1+1,f
  8153     1116  1903               	skipnz
  8154     1117  0AD3               	incf	___fltol@f1+2,f
  8155     1118  1903               	skipnz
  8156     1119  0AD4               	incf	___fltol@f1+3,f
  8157     111A                     l656:
  8158     111A                     l646:
  8159     111A  0008               	return
  8160     111B                     __end_of___fltol:
  8161                           
  8162                           	psect	text17
  8163     1C1E                     __ptext17:	
  8164 ;; *************** function ___flsub *****************
  8165 ;; Defined at:
  8166 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  a               4   70[BANK0 ] long 
  8169 ;;  b               4   74[BANK0 ] long 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  4   70[BANK0 ] long 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8181 ;;      Params:         0       8       0       0       0
  8182 ;;      Locals:         0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0
  8184 ;;      Totals:         0       8       0       0       0
  8185 ;;Total ram usage:        8 bytes
  8186 ;; Hardware stack levels used: 1
  8187 ;; Hardware stack levels required when called: 1
  8188 ;; This function calls:
  8189 ;;		___fladd
  8190 ;; This function is called by:
  8191 ;;		_sprintf
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195     1C1E                     ___flsub:	
  8196                           ;psect for function ___flsub
  8197                           
  8198     1C1E                     l3306:	
  8199                           ;incstack = 0
  8200                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8201                           
  8202     1C1E  3080               	movlw	128
  8203     1C1F  1283               	bcf	3,5	;RP0=0, select bank0
  8204     1C20  1303               	bcf	3,6	;RP1=0, select bank0
  8205     1C21  06E9               	xorwf	___flsub@a+3,f
  8206     1C22                     l3308:
  8207     1C22  086D               	movf	___flsub@b+3,w
  8208     1C23  00D5               	movwf	___fladd@b+3
  8209     1C24  086C               	movf	___flsub@b+2,w
  8210     1C25  00D4               	movwf	___fladd@b+2
  8211     1C26  086B               	movf	___flsub@b+1,w
  8212     1C27  00D3               	movwf	___fladd@b+1
  8213     1C28  086A               	movf	___flsub@b,w
  8214     1C29  00D2               	movwf	___fladd@b
  8215     1C2A  0869               	movf	___flsub@a+3,w
  8216     1C2B  00D9               	movwf	___fladd@a+3
  8217     1C2C  0868               	movf	___flsub@a+2,w
  8218     1C2D  00D8               	movwf	___fladd@a+2
  8219     1C2E  0867               	movf	___flsub@a+1,w
  8220     1C2F  00D7               	movwf	___fladd@a+1
  8221     1C30  0866               	movf	___flsub@a,w
  8222     1C31  00D6               	movwf	___fladd@a
  8223     1C32  160A  118A  25A8  160A  158A  	fcall	___fladd
  8224     1C37  1283               	bcf	3,5	;RP0=0, select bank0
  8225     1C38  1303               	bcf	3,6	;RP1=0, select bank0
  8226     1C39  0855               	movf	?___fladd+3,w
  8227     1C3A  00E9               	movwf	?___flsub+3
  8228     1C3B  0854               	movf	?___fladd+2,w
  8229     1C3C  00E8               	movwf	?___flsub+2
  8230     1C3D  0853               	movf	?___fladd+1,w
  8231     1C3E  00E7               	movwf	?___flsub+1
  8232     1C3F  0852               	movf	?___fladd,w
  8233     1C40  00E6               	movwf	?___flsub
  8234     1C41                     l816:
  8235     1C41  0008               	return
  8236     1C42                     __end_of___flsub:
  8237                           
  8238                           	psect	text18
  8239     15A8                     __ptext18:	
  8240 ;; *************** function ___fladd *****************
  8241 ;; Defined at:
  8242 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  b               4   50[BANK0 ] long 
  8245 ;;  a               4   54[BANK0 ] long 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  grs             1   69[BANK0 ] unsigned char 
  8248 ;;  bexp            1   68[BANK0 ] unsigned char 
  8249 ;;  aexp            1   67[BANK0 ] unsigned char 
  8250 ;;  signs           1   66[BANK0 ] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  4   50[BANK0 ] unsigned char 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0, btemp+1
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8260 ;;      Params:         0       8       0       0       0
  8261 ;;      Locals:         0       4       0       0       0
  8262 ;;      Temps:          0       8       0       0       0
  8263 ;;      Totals:         0      20       0       0       0
  8264 ;;Total ram usage:       20 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_sprintf
  8270 ;;		___flsub
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274     15A8                     ___fladd:	
  8275                           ;psect for function ___fladd
  8276                           
  8277     15A8                     l2638:	
  8278                           ;incstack = 0
  8279                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8280                           
  8281     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8282     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8283     15AA  0855               	movf	___fladd@b+3,w
  8284     15AB  3980               	andlw	128
  8285     15AC  00E2               	movwf	___fladd@signs
  8286     15AD                     l2640:
  8287     15AD  0855               	movf	___fladd@b+3,w
  8288     15AE  00DA               	movwf	??___fladd
  8289     15AF  075A               	addwf	??___fladd,w
  8290     15B0  00E4               	movwf	___fladd@bexp
  8291     15B1                     l2642:
  8292     15B1  1FD4               	btfss	___fladd@b+2,7
  8293     15B2  2DB4               	goto	u3291
  8294     15B3  2DB5               	goto	u3290
  8295     15B4                     u3291:
  8296     15B4  2DB6               	goto	l2646
  8297     15B5                     u3290:
  8298     15B5                     l2644:
  8299     15B5  1464               	bsf	___fladd@bexp,0
  8300     15B6                     l2646:
  8301     15B6  0864               	movf	___fladd@bexp,w
  8302     15B7  1903               	btfsc	3,2
  8303     15B8  2DBA               	goto	u3301
  8304     15B9  2DBB               	goto	u3300
  8305     15BA                     u3301:
  8306     15BA  2DCB               	goto	l2656
  8307     15BB                     u3300:
  8308     15BB                     l2648:
  8309     15BB  0A64               	incf	___fladd@bexp,w
  8310     15BC  1D03               	btfss	3,2
  8311     15BD  2DBF               	goto	u3311
  8312     15BE  2DC0               	goto	u3310
  8313     15BF                     u3311:
  8314     15BF  2DC8               	goto	l2652
  8315     15C0                     u3310:
  8316     15C0                     l2650:
  8317     15C0  3000               	movlw	0
  8318     15C1  00D5               	movwf	___fladd@b+3
  8319     15C2  3000               	movlw	0
  8320     15C3  00D4               	movwf	___fladd@b+2
  8321     15C4  3000               	movlw	0
  8322     15C5  00D3               	movwf	___fladd@b+1
  8323     15C6  3000               	movlw	0
  8324     15C7  00D2               	movwf	___fladd@b
  8325     15C8                     l2652:
  8326     15C8  17D4               	bsf	___fladd@b+2,7
  8327     15C9                     l2654:
  8328     15C9  01D5               	clrf	___fladd@b+3
  8329     15CA  2DD3               	goto	l2658
  8330     15CB                     l2656:
  8331     15CB  3000               	movlw	0
  8332     15CC  00D5               	movwf	___fladd@b+3
  8333     15CD  3000               	movlw	0
  8334     15CE  00D4               	movwf	___fladd@b+2
  8335     15CF  3000               	movlw	0
  8336     15D0  00D3               	movwf	___fladd@b+1
  8337     15D1  3000               	movlw	0
  8338     15D2  00D2               	movwf	___fladd@b
  8339     15D3                     l2658:
  8340     15D3  0859               	movf	___fladd@a+3,w
  8341     15D4  3980               	andlw	128
  8342     15D5  00E3               	movwf	___fladd@aexp
  8343     15D6                     l2660:
  8344     15D6  0863               	movf	___fladd@aexp,w
  8345     15D7  0662               	xorwf	___fladd@signs,w
  8346     15D8  1903               	skipnz
  8347     15D9  2DDB               	goto	u3321
  8348     15DA  2DDC               	goto	u3320
  8349     15DB                     u3321:
  8350     15DB  2DDD               	goto	l2664
  8351     15DC                     u3320:
  8352     15DC                     l2662:
  8353     15DC  1762               	bsf	___fladd@signs,6
  8354     15DD                     l2664:
  8355     15DD  0859               	movf	___fladd@a+3,w
  8356     15DE  00DA               	movwf	??___fladd
  8357     15DF  075A               	addwf	??___fladd,w
  8358     15E0  00E3               	movwf	___fladd@aexp
  8359     15E1                     l2666:
  8360     15E1  1FD8               	btfss	___fladd@a+2,7
  8361     15E2  2DE4               	goto	u3331
  8362     15E3  2DE5               	goto	u3330
  8363     15E4                     u3331:
  8364     15E4  2DE6               	goto	l2670
  8365     15E5                     u3330:
  8366     15E5                     l2668:
  8367     15E5  1463               	bsf	___fladd@aexp,0
  8368     15E6                     l2670:
  8369     15E6  0863               	movf	___fladd@aexp,w
  8370     15E7  1903               	btfsc	3,2
  8371     15E8  2DEA               	goto	u3341
  8372     15E9  2DEB               	goto	u3340
  8373     15EA                     u3341:
  8374     15EA  2DFB               	goto	l2680
  8375     15EB                     u3340:
  8376     15EB                     l2672:
  8377     15EB  0A63               	incf	___fladd@aexp,w
  8378     15EC  1D03               	btfss	3,2
  8379     15ED  2DEF               	goto	u3351
  8380     15EE  2DF0               	goto	u3350
  8381     15EF                     u3351:
  8382     15EF  2DF8               	goto	l2676
  8383     15F0                     u3350:
  8384     15F0                     l2674:
  8385     15F0  3000               	movlw	0
  8386     15F1  00D9               	movwf	___fladd@a+3
  8387     15F2  3000               	movlw	0
  8388     15F3  00D8               	movwf	___fladd@a+2
  8389     15F4  3000               	movlw	0
  8390     15F5  00D7               	movwf	___fladd@a+1
  8391     15F6  3000               	movlw	0
  8392     15F7  00D6               	movwf	___fladd@a
  8393     15F8                     l2676:
  8394     15F8  17D8               	bsf	___fladd@a+2,7
  8395     15F9                     l2678:
  8396     15F9  01D9               	clrf	___fladd@a+3
  8397     15FA  2E03               	goto	l770
  8398     15FB                     l2680:
  8399     15FB  3000               	movlw	0
  8400     15FC  00D9               	movwf	___fladd@a+3
  8401     15FD  3000               	movlw	0
  8402     15FE  00D8               	movwf	___fladd@a+2
  8403     15FF  3000               	movlw	0
  8404     1600  00D7               	movwf	___fladd@a+1
  8405     1601  3000               	movlw	0
  8406     1602  00D6               	movwf	___fladd@a
  8407     1603                     l770:
  8408     1603  0864               	movf	___fladd@bexp,w
  8409     1604  0263               	subwf	___fladd@aexp,w
  8410     1605  1803               	skipnc
  8411     1606  2E08               	goto	u3361
  8412     1607  2E09               	goto	u3360
  8413     1608                     u3361:
  8414     1608  2E2F               	goto	l2716
  8415     1609                     u3360:
  8416     1609                     l2682:
  8417     1609  1F62               	btfss	___fladd@signs,6
  8418     160A  2E0C               	goto	u3371
  8419     160B  2E0D               	goto	u3370
  8420     160C                     u3371:
  8421     160C  2E11               	goto	l2686
  8422     160D                     u3370:
  8423     160D                     l2684:
  8424     160D  3080               	movlw	128
  8425     160E  00DA               	movwf	??___fladd
  8426     160F  085A               	movf	??___fladd,w
  8427     1610  06E2               	xorwf	___fladd@signs,f
  8428     1611                     l2686:
  8429     1611  0864               	movf	___fladd@bexp,w
  8430     1612  00E5               	movwf	___fladd@grs
  8431     1613                     l2688:
  8432     1613  0863               	movf	___fladd@aexp,w
  8433     1614  00E4               	movwf	___fladd@bexp
  8434     1615                     l2690:
  8435     1615  0865               	movf	___fladd@grs,w
  8436     1616  00E3               	movwf	___fladd@aexp
  8437     1617                     l2692:
  8438     1617  0852               	movf	___fladd@b,w
  8439     1618  00E5               	movwf	___fladd@grs
  8440     1619                     l2694:
  8441     1619  0856               	movf	___fladd@a,w
  8442     161A  00D2               	movwf	___fladd@b
  8443     161B                     l2696:
  8444     161B  0865               	movf	___fladd@grs,w
  8445     161C  00D6               	movwf	___fladd@a
  8446     161D                     l2698:
  8447     161D  0853               	movf	___fladd@b+1,w
  8448     161E  00E5               	movwf	___fladd@grs
  8449     161F                     l2700:
  8450     161F  0857               	movf	___fladd@a+1,w
  8451     1620  00D3               	movwf	___fladd@b+1
  8452     1621                     l2702:
  8453     1621  0865               	movf	___fladd@grs,w
  8454     1622  00D7               	movwf	___fladd@a+1
  8455     1623                     l2704:
  8456     1623  0854               	movf	___fladd@b+2,w
  8457     1624  00E5               	movwf	___fladd@grs
  8458     1625                     l2706:
  8459     1625  0858               	movf	___fladd@a+2,w
  8460     1626  00D4               	movwf	___fladd@b+2
  8461     1627                     l2708:
  8462     1627  0865               	movf	___fladd@grs,w
  8463     1628  00D8               	movwf	___fladd@a+2
  8464     1629                     l2710:
  8465     1629  0855               	movf	___fladd@b+3,w
  8466     162A  00E5               	movwf	___fladd@grs
  8467     162B                     l2712:
  8468     162B  0859               	movf	___fladd@a+3,w
  8469     162C  00D5               	movwf	___fladd@b+3
  8470     162D                     l2714:
  8471     162D  0865               	movf	___fladd@grs,w
  8472     162E  00D9               	movwf	___fladd@a+3
  8473     162F                     l2716:
  8474     162F  01E5               	clrf	___fladd@grs
  8475     1630                     l2718:
  8476     1630  0863               	movf	___fladd@aexp,w
  8477     1631  00DA               	movwf	??___fladd
  8478     1632  01DB               	clrf	??___fladd+1
  8479     1633  085B               	movf	??___fladd+1,w
  8480     1634  00DD               	movwf	??___fladd+3
  8481     1635  0864               	movf	___fladd@bexp,w
  8482     1636  025A               	subwf	??___fladd,w
  8483     1637  00DC               	movwf	??___fladd+2
  8484     1638  1C03               	skipc
  8485     1639  03DD               	decf	??___fladd+3,f
  8486     163A  085D               	movf	??___fladd+3,w
  8487     163B  3A80               	xorlw	128
  8488     163C  00FF               	movwf	btemp+1
  8489     163D  3080               	movlw	128
  8490     163E  027F               	subwf	btemp+1,w
  8491     163F  1D03               	skipz
  8492     1640  2E43               	goto	u3385
  8493     1641  301A               	movlw	26
  8494     1642  025C               	subwf	??___fladd+2,w
  8495     1643                     u3385:
  8496     1643  1C03               	skipc
  8497     1644  2E46               	goto	u3381
  8498     1645  2E47               	goto	u3380
  8499     1646                     u3381:
  8500     1646  2E7E               	goto	l2734
  8501     1647                     u3380:
  8502     1647                     l2720:
  8503     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8504     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8505     1649  0855               	movf	___fladd@b+3,w
  8506     164A  0454               	iorwf	___fladd@b+2,w
  8507     164B  0453               	iorwf	___fladd@b+1,w
  8508     164C  0452               	iorwf	___fladd@b,w
  8509     164D  1D03               	skipz
  8510     164E  2E50               	goto	u3391
  8511     164F  2E52               	goto	u3390
  8512     1650                     u3391:
  8513     1650  3001               	movlw	1
  8514     1651  2E53               	goto	u3400
  8515     1652                     u3390:
  8516     1652  3000               	movlw	0
  8517     1653                     u3400:
  8518     1653  00E5               	movwf	___fladd@grs
  8519     1654  3000               	movlw	0
  8520     1655  00D5               	movwf	___fladd@b+3
  8521     1656  3000               	movlw	0
  8522     1657  00D4               	movwf	___fladd@b+2
  8523     1658  3000               	movlw	0
  8524     1659  00D3               	movwf	___fladd@b+1
  8525     165A  3000               	movlw	0
  8526     165B  00D2               	movwf	___fladd@b
  8527     165C  0863               	movf	___fladd@aexp,w
  8528     165D  00E4               	movwf	___fladd@bexp
  8529     165E  2E86               	goto	l774
  8530     165F                     l776:
  8531     165F  1C65               	btfss	___fladd@grs,0
  8532     1660  2E62               	goto	u3411
  8533     1661  2E63               	goto	u3410
  8534     1662                     u3411:
  8535     1662  2E6A               	goto	l2724
  8536     1663                     u3410:
  8537     1663                     l2722:
  8538     1663  0865               	movf	___fladd@grs,w
  8539     1664  00DA               	movwf	??___fladd
  8540     1665  1003               	clrc
  8541     1666  0C5A               	rrf	??___fladd,w
  8542     1667  3801               	iorlw	1
  8543     1668  00E5               	movwf	___fladd@grs
  8544     1669  2E6C               	goto	l2726
  8545     166A                     l2724:
  8546     166A  1003               	clrc
  8547     166B  0CE5               	rrf	___fladd@grs,f
  8548     166C                     l2726:
  8549     166C  1C52               	btfss	___fladd@b,0
  8550     166D  2E6F               	goto	u3421
  8551     166E  2E70               	goto	u3420
  8552     166F                     u3421:
  8553     166F  2E71               	goto	l2730
  8554     1670                     u3420:
  8555     1670                     l2728:
  8556     1670  17E5               	bsf	___fladd@grs,7
  8557     1671                     l2730:
  8558     1671  3001               	movlw	1
  8559     1672  00DA               	movwf	??___fladd
  8560     1673                     u3435:
  8561     1673  0D55               	rlf	___fladd@b+3,w
  8562     1674  0CD5               	rrf	___fladd@b+3,f
  8563     1675  0CD4               	rrf	___fladd@b+2,f
  8564     1676  0CD3               	rrf	___fladd@b+1,f
  8565     1677  0CD2               	rrf	___fladd@b,f
  8566     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8567     1679  2E73               	goto	u3435
  8568     167A                     l2732:
  8569     167A  3001               	movlw	1
  8570     167B  00DA               	movwf	??___fladd
  8571     167C  085A               	movf	??___fladd,w
  8572     167D  07E4               	addwf	___fladd@bexp,f
  8573     167E                     l2734:
  8574     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8575     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8576     1680  0863               	movf	___fladd@aexp,w
  8577     1681  0264               	subwf	___fladd@bexp,w
  8578     1682  1C03               	skipc
  8579     1683  2E85               	goto	u3441
  8580     1684  2E86               	goto	u3440
  8581     1685                     u3441:
  8582     1685  2E5F               	goto	l776
  8583     1686                     u3440:
  8584     1686                     l774:
  8585     1686  1B62               	btfsc	___fladd@signs,6
  8586     1687  2E89               	goto	u3451
  8587     1688  2E8A               	goto	u3450
  8588     1689                     u3451:
  8589     1689  2ED3               	goto	l2760
  8590     168A                     u3450:
  8591     168A                     l2736:
  8592     168A  0864               	movf	___fladd@bexp,w
  8593     168B  1D03               	btfss	3,2
  8594     168C  2E8E               	goto	u3461
  8595     168D  2E8F               	goto	u3460
  8596     168E                     u3461:
  8597     168E  2E98               	goto	l2742
  8598     168F                     u3460:
  8599     168F                     l2738:
  8600     168F  3000               	movlw	0
  8601     1690  00D5               	movwf	?___fladd+3
  8602     1691  3000               	movlw	0
  8603     1692  00D4               	movwf	?___fladd+2
  8604     1693  3000               	movlw	0
  8605     1694  00D3               	movwf	?___fladd+1
  8606     1695  3000               	movlw	0
  8607     1696  00D2               	movwf	?___fladd
  8608     1697  2FFF               	goto	l783
  8609     1698                     l2742:
  8610     1698  0856               	movf	___fladd@a,w
  8611     1699  07D2               	addwf	___fladd@b,f
  8612     169A  0857               	movf	___fladd@a+1,w
  8613     169B  1103               	clrz
  8614     169C  1803               	skipnc
  8615     169D  3E01               	addlw	1
  8616     169E  1903               	skipnz
  8617     169F  2EA1               	goto	u3471
  8618     16A0  07D3               	addwf	___fladd@b+1,f
  8619     16A1                     u3471:
  8620     16A1  0858               	movf	___fladd@a+2,w
  8621     16A2  1103               	clrz
  8622     16A3  1803               	skipnc
  8623     16A4  3E01               	addlw	1
  8624     16A5  1903               	skipnz
  8625     16A6  2EA8               	goto	u3472
  8626     16A7  07D4               	addwf	___fladd@b+2,f
  8627     16A8                     u3472:
  8628     16A8  0859               	movf	___fladd@a+3,w
  8629     16A9  1103               	clrz
  8630     16AA  1803               	skipnc
  8631     16AB  3E01               	addlw	1
  8632     16AC  1903               	skipnz
  8633     16AD  2EAF               	goto	u3473
  8634     16AE  07D5               	addwf	___fladd@b+3,f
  8635     16AF                     u3473:
  8636     16AF                     l2744:
  8637     16AF  1C55               	btfss	___fladd@b+3,0
  8638     16B0  2EB2               	goto	u3481
  8639     16B1  2EB3               	goto	u3480
  8640     16B2                     u3481:
  8641     16B2  2F87               	goto	l2794
  8642     16B3                     u3480:
  8643     16B3                     l2746:
  8644     16B3  1C65               	btfss	___fladd@grs,0
  8645     16B4  2EB6               	goto	u3491
  8646     16B5  2EB7               	goto	u3490
  8647     16B6                     u3491:
  8648     16B6  2EBE               	goto	l2750
  8649     16B7                     u3490:
  8650     16B7                     l2748:
  8651     16B7  0865               	movf	___fladd@grs,w
  8652     16B8  00DA               	movwf	??___fladd
  8653     16B9  1003               	clrc
  8654     16BA  0C5A               	rrf	??___fladd,w
  8655     16BB  3801               	iorlw	1
  8656     16BC  00E5               	movwf	___fladd@grs
  8657     16BD  2EC0               	goto	l2752
  8658     16BE                     l2750:
  8659     16BE  1003               	clrc
  8660     16BF  0CE5               	rrf	___fladd@grs,f
  8661     16C0                     l2752:
  8662     16C0  1C52               	btfss	___fladd@b,0
  8663     16C1  2EC3               	goto	u3501
  8664     16C2  2EC4               	goto	u3500
  8665     16C3                     u3501:
  8666     16C3  2EC5               	goto	l2756
  8667     16C4                     u3500:
  8668     16C4                     l2754:
  8669     16C4  17E5               	bsf	___fladd@grs,7
  8670     16C5                     l2756:
  8671     16C5  3001               	movlw	1
  8672     16C6  00DA               	movwf	??___fladd
  8673     16C7                     u3515:
  8674     16C7  0D55               	rlf	___fladd@b+3,w
  8675     16C8  0CD5               	rrf	___fladd@b+3,f
  8676     16C9  0CD4               	rrf	___fladd@b+2,f
  8677     16CA  0CD3               	rrf	___fladd@b+1,f
  8678     16CB  0CD2               	rrf	___fladd@b,f
  8679     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8680     16CD  2EC7               	goto	u3515
  8681     16CE                     l2758:
  8682     16CE  3001               	movlw	1
  8683     16CF  00DA               	movwf	??___fladd
  8684     16D0  085A               	movf	??___fladd,w
  8685     16D1  07E4               	addwf	___fladd@bexp,f
  8686     16D2  2F87               	goto	l2794
  8687     16D3                     l2760:
  8688     16D3  0855               	movf	___fladd@b+3,w
  8689     16D4  3A80               	xorlw	128
  8690     16D5  00FF               	movwf	btemp+1
  8691     16D6  0859               	movf	___fladd@a+3,w
  8692     16D7  3A80               	xorlw	128
  8693     16D8  027F               	subwf	btemp+1,w
  8694     16D9  1D03               	skipz
  8695     16DA  2EE5               	goto	u3523
  8696     16DB  0858               	movf	___fladd@a+2,w
  8697     16DC  0254               	subwf	___fladd@b+2,w
  8698     16DD  1D03               	skipz
  8699     16DE  2EE5               	goto	u3523
  8700     16DF  0857               	movf	___fladd@a+1,w
  8701     16E0  0253               	subwf	___fladd@b+1,w
  8702     16E1  1D03               	skipz
  8703     16E2  2EE5               	goto	u3523
  8704     16E3  0856               	movf	___fladd@a,w
  8705     16E4  0252               	subwf	___fladd@b,w
  8706     16E5                     u3523:
  8707     16E5  1803               	skipnc
  8708     16E6  2EE8               	goto	u3521
  8709     16E7  2EE9               	goto	u3520
  8710     16E8                     u3521:
  8711     16E8  2F41               	goto	l2770
  8712     16E9                     u3520:
  8713     16E9                     l2762:
  8714     16E9  30FF               	movlw	255
  8715     16EA  00DA               	movwf	??___fladd
  8716     16EB  30FF               	movlw	255
  8717     16EC  00DB               	movwf	??___fladd+1
  8718     16ED  30FF               	movlw	255
  8719     16EE  00DC               	movwf	??___fladd+2
  8720     16EF  30FF               	movlw	255
  8721     16F0  00DD               	movwf	??___fladd+3
  8722     16F1  0856               	movf	___fladd@a,w
  8723     16F2  00DE               	movwf	??___fladd+4
  8724     16F3  0857               	movf	___fladd@a+1,w
  8725     16F4  00DF               	movwf	??___fladd+5
  8726     16F5  0858               	movf	___fladd@a+2,w
  8727     16F6  00E0               	movwf	??___fladd+6
  8728     16F7  0859               	movf	___fladd@a+3,w
  8729     16F8  00E1               	movwf	??___fladd+7
  8730     16F9  0852               	movf	___fladd@b,w
  8731     16FA  02DE               	subwf	??___fladd+4,f
  8732     16FB  0853               	movf	___fladd@b+1,w
  8733     16FC  1C03               	skipc
  8734     16FD  0F53               	incfsz	___fladd@b+1,w
  8735     16FE  2F00               	goto	u3531
  8736     16FF  2F01               	goto	u3532
  8737     1700                     u3531:
  8738     1700  02DF               	subwf	??___fladd+5,f
  8739     1701                     u3532:
  8740     1701  0854               	movf	___fladd@b+2,w
  8741     1702  1C03               	skipc
  8742     1703  0F54               	incfsz	___fladd@b+2,w
  8743     1704  2F06               	goto	u3533
  8744     1705  2F07               	goto	u3534
  8745     1706                     u3533:
  8746     1706  02E0               	subwf	??___fladd+6,f
  8747     1707                     u3534:
  8748     1707  0855               	movf	___fladd@b+3,w
  8749     1708  1C03               	skipc
  8750     1709  0F55               	incfsz	___fladd@b+3,w
  8751     170A  2F0C               	goto	u3535
  8752     170B  2F0D               	goto	u3536
  8753     170C                     u3535:
  8754     170C  02E1               	subwf	??___fladd+7,f
  8755     170D                     u3536:
  8756     170D  085E               	movf	??___fladd+4,w
  8757     170E  07DA               	addwf	??___fladd,f
  8758     170F  085F               	movf	??___fladd+5,w
  8759     1710  1803               	skipnc
  8760     1711  0F5F               	incfsz	??___fladd+5,w
  8761     1712  2F14               	goto	u3540
  8762     1713  2F15               	goto	u3541
  8763     1714                     u3540:
  8764     1714  07DB               	addwf	??___fladd+1,f
  8765     1715                     u3541:
  8766     1715  0860               	movf	??___fladd+6,w
  8767     1716  1803               	skipnc
  8768     1717  0F60               	incfsz	??___fladd+6,w
  8769     1718  2F1A               	goto	u3542
  8770     1719  2F1B               	goto	u3543
  8771     171A                     u3542:
  8772     171A  07DC               	addwf	??___fladd+2,f
  8773     171B                     u3543:
  8774     171B  0861               	movf	??___fladd+7,w
  8775     171C  1803               	skipnc
  8776     171D  0A61               	incf	??___fladd+7,w
  8777     171E  07DD               	addwf	??___fladd+3,f
  8778     171F  085D               	movf	??___fladd+3,w
  8779     1720  00D5               	movwf	___fladd@b+3
  8780     1721  085C               	movf	??___fladd+2,w
  8781     1722  00D4               	movwf	___fladd@b+2
  8782     1723  085B               	movf	??___fladd+1,w
  8783     1724  00D3               	movwf	___fladd@b+1
  8784     1725  085A               	movf	??___fladd,w
  8785     1726  00D2               	movwf	___fladd@b
  8786     1727                     l2764:
  8787     1727  3080               	movlw	128
  8788     1728  00DA               	movwf	??___fladd
  8789     1729  085A               	movf	??___fladd,w
  8790     172A  06E2               	xorwf	___fladd@signs,f
  8791     172B  09E5               	comf	___fladd@grs,f
  8792     172C  0AE5               	incf	___fladd@grs,f
  8793     172D                     l2766:
  8794     172D  0865               	movf	___fladd@grs,w
  8795     172E  1D03               	btfss	3,2
  8796     172F  2F31               	goto	u3551
  8797     1730  2F32               	goto	u3550
  8798     1731                     u3551:
  8799     1731  2F4F               	goto	l791
  8800     1732                     u3550:
  8801     1732                     l2768:
  8802     1732  3001               	movlw	1
  8803     1733  07D2               	addwf	___fladd@b,f
  8804     1734  3000               	movlw	0
  8805     1735  1803               	skipnc
  8806     1736  3001               	movlw	1
  8807     1737  07D3               	addwf	___fladd@b+1,f
  8808     1738  3000               	movlw	0
  8809     1739  1803               	skipnc
  8810     173A  3001               	movlw	1
  8811     173B  07D4               	addwf	___fladd@b+2,f
  8812     173C  3000               	movlw	0
  8813     173D  1803               	skipnc
  8814     173E  3001               	movlw	1
  8815     173F  07D5               	addwf	___fladd@b+3,f
  8816     1740  2F4F               	goto	l791
  8817     1741                     l2770:
  8818     1741  0856               	movf	___fladd@a,w
  8819     1742  02D2               	subwf	___fladd@b,f
  8820     1743  0857               	movf	___fladd@a+1,w
  8821     1744  1C03               	skipc
  8822     1745  0F57               	incfsz	___fladd@a+1,w
  8823     1746  02D3               	subwf	___fladd@b+1,f
  8824     1747  0858               	movf	___fladd@a+2,w
  8825     1748  1C03               	skipc
  8826     1749  0F58               	incfsz	___fladd@a+2,w
  8827     174A  02D4               	subwf	___fladd@b+2,f
  8828     174B  0859               	movf	___fladd@a+3,w
  8829     174C  1C03               	skipc
  8830     174D  0F59               	incfsz	___fladd@a+3,w
  8831     174E  02D5               	subwf	___fladd@b+3,f
  8832     174F                     l791:
  8833     174F  0855               	movf	___fladd@b+3,w
  8834     1750  0454               	iorwf	___fladd@b+2,w
  8835     1751  0453               	iorwf	___fladd@b+1,w
  8836     1752  0452               	iorwf	___fladd@b,w
  8837     1753  1D03               	skipz
  8838     1754  2F56               	goto	u3561
  8839     1755  2F57               	goto	u3560
  8840     1756                     u3561:
  8841     1756  2F83               	goto	l2792
  8842     1757                     u3560:
  8843     1757                     l2772:
  8844     1757  0865               	movf	___fladd@grs,w
  8845     1758  1D03               	btfss	3,2
  8846     1759  2F5B               	goto	u3571
  8847     175A  2F5C               	goto	u3570
  8848     175B                     u3571:
  8849     175B  2F83               	goto	l2792
  8850     175C                     u3570:
  8851     175C                     l2774:
  8852     175C  3000               	movlw	0
  8853     175D  00D5               	movwf	?___fladd+3
  8854     175E  3000               	movlw	0
  8855     175F  00D4               	movwf	?___fladd+2
  8856     1760  3000               	movlw	0
  8857     1761  00D3               	movwf	?___fladd+1
  8858     1762  3000               	movlw	0
  8859     1763  00D2               	movwf	?___fladd
  8860     1764  2FFF               	goto	l783
  8861     1765                     l2778:
  8862     1765  3001               	movlw	1
  8863     1766  00DA               	movwf	??___fladd
  8864     1767                     u3585:
  8865     1767  1003               	clrc
  8866     1768  0DD2               	rlf	___fladd@b,f
  8867     1769  0DD3               	rlf	___fladd@b+1,f
  8868     176A  0DD4               	rlf	___fladd@b+2,f
  8869     176B  0DD5               	rlf	___fladd@b+3,f
  8870     176C  0BDA               	decfsz	??___fladd,f
  8871     176D  2F67               	goto	u3585
  8872     176E                     l2780:
  8873     176E  1FE5               	btfss	___fladd@grs,7
  8874     176F  2F71               	goto	u3591
  8875     1770  2F72               	goto	u3590
  8876     1771                     u3591:
  8877     1771  2F73               	goto	l795
  8878     1772                     u3590:
  8879     1772                     l2782:
  8880     1772  1452               	bsf	___fladd@b,0
  8881     1773                     l795:
  8882     1773  1C65               	btfss	___fladd@grs,0
  8883     1774  2F76               	goto	u3601
  8884     1775  2F77               	goto	u3600
  8885     1776                     u3601:
  8886     1776  2F7A               	goto	l2786
  8887     1777                     u3600:
  8888     1777                     l2784:
  8889     1777  1403               	setc
  8890     1778  0DE5               	rlf	___fladd@grs,f
  8891     1779  2F7C               	goto	l2788
  8892     177A                     l2786:
  8893     177A  1003               	clrc
  8894     177B  0DE5               	rlf	___fladd@grs,f
  8895     177C                     l2788:
  8896     177C  0864               	movf	___fladd@bexp,w
  8897     177D  1903               	btfsc	3,2
  8898     177E  2F80               	goto	u3611
  8899     177F  2F81               	goto	u3610
  8900     1780                     u3611:
  8901     1780  2F83               	goto	l2792
  8902     1781                     u3610:
  8903     1781                     l2790:
  8904     1781  3001               	movlw	1
  8905     1782  02E4               	subwf	___fladd@bexp,f
  8906     1783                     l2792:
  8907     1783  1FD4               	btfss	___fladd@b+2,7
  8908     1784  2F86               	goto	u3621
  8909     1785  2F87               	goto	u3620
  8910     1786                     u3621:
  8911     1786  2F65               	goto	l2778
  8912     1787                     u3620:
  8913     1787                     l2794:
  8914     1787  01E3               	clrf	___fladd@aexp
  8915     1788                     l2796:
  8916     1788  1FE5               	btfss	___fladd@grs,7
  8917     1789  2F8B               	goto	u3631
  8918     178A  2F8C               	goto	u3630
  8919     178B                     u3631:
  8920     178B  2F9A               	goto	l2804
  8921     178C                     u3630:
  8922     178C                     l2798:
  8923     178C  0865               	movf	___fladd@grs,w
  8924     178D  397F               	andlw	127
  8925     178E  1903               	btfsc	3,2
  8926     178F  2F91               	goto	u3641
  8927     1790  2F92               	goto	u3640
  8928     1791                     u3641:
  8929     1791  2F95               	goto	l801
  8930     1792                     u3640:
  8931     1792                     l2800:
  8932     1792  01E3               	clrf	___fladd@aexp
  8933     1793  0AE3               	incf	___fladd@aexp,f
  8934     1794  2F9A               	goto	l2804
  8935     1795                     l801:
  8936     1795  1C52               	btfss	___fladd@b,0
  8937     1796  2F98               	goto	u3651
  8938     1797  2F99               	goto	u3650
  8939     1798                     u3651:
  8940     1798  2F9A               	goto	l2804
  8941     1799                     u3650:
  8942     1799  2F92               	goto	l2800
  8943     179A                     l2804:
  8944     179A  0863               	movf	___fladd@aexp,w
  8945     179B  1903               	btfsc	3,2
  8946     179C  2F9E               	goto	u3661
  8947     179D  2F9F               	goto	u3660
  8948     179E                     u3661:
  8949     179E  2FD3               	goto	l804
  8950     179F                     u3660:
  8951     179F                     l2806:
  8952     179F  3001               	movlw	1
  8953     17A0  07D2               	addwf	___fladd@b,f
  8954     17A1  3000               	movlw	0
  8955     17A2  1803               	skipnc
  8956     17A3  3001               	movlw	1
  8957     17A4  07D3               	addwf	___fladd@b+1,f
  8958     17A5  3000               	movlw	0
  8959     17A6  1803               	skipnc
  8960     17A7  3001               	movlw	1
  8961     17A8  07D4               	addwf	___fladd@b+2,f
  8962     17A9  3000               	movlw	0
  8963     17AA  1803               	skipnc
  8964     17AB  3001               	movlw	1
  8965     17AC  07D5               	addwf	___fladd@b+3,f
  8966     17AD                     l2808:
  8967     17AD  1C55               	btfss	___fladd@b+3,0
  8968     17AE  2FB0               	goto	u3671
  8969     17AF  2FB1               	goto	u3670
  8970     17B0                     u3671:
  8971     17B0  2FD3               	goto	l804
  8972     17B1                     u3670:
  8973     17B1                     l2810:
  8974     17B1  0852               	movf	___fladd@b,w
  8975     17B2  00DA               	movwf	??___fladd
  8976     17B3  0853               	movf	___fladd@b+1,w
  8977     17B4  00DB               	movwf	??___fladd+1
  8978     17B5  0854               	movf	___fladd@b+2,w
  8979     17B6  00DC               	movwf	??___fladd+2
  8980     17B7  0855               	movf	___fladd@b+3,w
  8981     17B8  00DD               	movwf	??___fladd+3
  8982     17B9  3001               	movlw	1
  8983     17BA  00DE               	movwf	??___fladd+4
  8984     17BB                     u3685:
  8985     17BB  0D5D               	rlf	??___fladd+3,w
  8986     17BC  0CDD               	rrf	??___fladd+3,f
  8987     17BD  0CDC               	rrf	??___fladd+2,f
  8988     17BE  0CDB               	rrf	??___fladd+1,f
  8989     17BF  0CDA               	rrf	??___fladd,f
  8990     17C0                     u3680:
  8991     17C0  0BDE               	decfsz	??___fladd+4,f
  8992     17C1  2FBB               	goto	u3685
  8993     17C2  085D               	movf	??___fladd+3,w
  8994     17C3  00D5               	movwf	___fladd@b+3
  8995     17C4  085C               	movf	??___fladd+2,w
  8996     17C5  00D4               	movwf	___fladd@b+2
  8997     17C6  085B               	movf	??___fladd+1,w
  8998     17C7  00D3               	movwf	___fladd@b+1
  8999     17C8  085A               	movf	??___fladd,w
  9000     17C9  00D2               	movwf	___fladd@b
  9001     17CA  0A64               	incf	___fladd@bexp,w
  9002     17CB  1903               	btfsc	3,2
  9003     17CC  2FCE               	goto	u3691
  9004     17CD  2FCF               	goto	u3690
  9005     17CE                     u3691:
  9006     17CE  2FD3               	goto	l804
  9007     17CF                     u3690:
  9008     17CF                     l2812:
  9009     17CF  3001               	movlw	1
  9010     17D0  00DA               	movwf	??___fladd
  9011     17D1  085A               	movf	??___fladd,w
  9012     17D2  07E4               	addwf	___fladd@bexp,f
  9013     17D3                     l804:
  9014     17D3  0A64               	incf	___fladd@bexp,w
  9015     17D4  1903               	btfsc	3,2
  9016     17D5  2FD7               	goto	u3701
  9017     17D6  2FD8               	goto	u3700
  9018     17D7                     u3701:
  9019     17D7  2FDD               	goto	l2816
  9020     17D8                     u3700:
  9021     17D8                     l2814:
  9022     17D8  0864               	movf	___fladd@bexp,w
  9023     17D9  1D03               	btfss	3,2
  9024     17DA  2FDC               	goto	u3711
  9025     17DB  2FDD               	goto	u3710
  9026     17DC                     u3711:
  9027     17DC  2FEB               	goto	l2822
  9028     17DD                     u3710:
  9029     17DD                     l2816:
  9030     17DD  3000               	movlw	0
  9031     17DE  00D5               	movwf	___fladd@b+3
  9032     17DF  3000               	movlw	0
  9033     17E0  00D4               	movwf	___fladd@b+2
  9034     17E1  3000               	movlw	0
  9035     17E2  00D3               	movwf	___fladd@b+1
  9036     17E3  3000               	movlw	0
  9037     17E4  00D2               	movwf	___fladd@b
  9038     17E5                     l2818:
  9039     17E5  0864               	movf	___fladd@bexp,w
  9040     17E6  1D03               	btfss	3,2
  9041     17E7  2FE9               	goto	u3721
  9042     17E8  2FEA               	goto	u3720
  9043     17E9                     u3721:
  9044     17E9  2FEB               	goto	l2822
  9045     17EA                     u3720:
  9046     17EA                     l2820:
  9047     17EA  01E2               	clrf	___fladd@signs
  9048     17EB                     l2822:
  9049     17EB  1C64               	btfss	___fladd@bexp,0
  9050     17EC  2FEE               	goto	u3731
  9051     17ED  2FEF               	goto	u3730
  9052     17EE                     u3731:
  9053     17EE  2FF1               	goto	l2826
  9054     17EF                     u3730:
  9055     17EF                     l2824:
  9056     17EF  17D4               	bsf	___fladd@b+2,7
  9057     17F0  2FF5               	goto	l812
  9058     17F1                     l2826:
  9059     17F1  307F               	movlw	127
  9060     17F2  00DA               	movwf	??___fladd
  9061     17F3  085A               	movf	??___fladd,w
  9062     17F4  05D4               	andwf	___fladd@b+2,f
  9063     17F5                     l812:
  9064     17F5  0864               	movf	___fladd@bexp,w
  9065     17F6  00DA               	movwf	??___fladd
  9066     17F7  1003               	clrc
  9067     17F8  0C5A               	rrf	??___fladd,w
  9068     17F9  00D5               	movwf	___fladd@b+3
  9069     17FA                     l2828:
  9070     17FA  1FE2               	btfss	___fladd@signs,7
  9071     17FB  2FFD               	goto	u3741
  9072     17FC  2FFE               	goto	u3740
  9073     17FD                     u3741:
  9074     17FD  2FFF               	goto	l813
  9075     17FE                     u3740:
  9076     17FE                     l2830:
  9077     17FE  17D5               	bsf	___fladd@b+3,7
  9078     17FF                     l813:
  9079     17FF                     l783:
  9080     17FF  0008               	return
  9081     1800                     __end_of___fladd:
  9082                           
  9083                           	psect	text19
  9084     1B9E                     __ptext19:	
  9085 ;; *************** function ___flneg *****************
  9086 ;; Defined at:
  9087 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  f1              4    0[COMMON] unsigned char 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  4    0[COMMON] unsigned char 
  9094 ;; Registers used:
  9095 ;;		wreg
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9101 ;;      Params:         4       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0
  9103 ;;      Temps:          0       0       0       0       0
  9104 ;;      Totals:         4       0       0       0       0
  9105 ;;Total ram usage:        4 bytes
  9106 ;; Hardware stack levels used: 1
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		_sprintf
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114     1B9E                     ___flneg:	
  9115                           ;psect for function ___flneg
  9116                           
  9117     1B9E                     l3242:	
  9118                           ;incstack = 0
  9119                           ; Regs used in ___flneg: [wreg]
  9120                           
  9121     1B9E  0873               	movf	___flneg@f1+3,w
  9122     1B9F  0472               	iorwf	___flneg@f1+2,w
  9123     1BA0  0471               	iorwf	___flneg@f1+1,w
  9124     1BA1  0470               	iorwf	___flneg@f1,w
  9125     1BA2  1903               	skipnz
  9126     1BA3  2BA5               	goto	u4831
  9127     1BA4  2BA6               	goto	u4830
  9128     1BA5                     u4831:
  9129     1BA5  2BA8               	goto	l3246
  9130     1BA6                     u4830:
  9131     1BA6                     l3244:
  9132     1BA6  3080               	movlw	128
  9133     1BA7  06F3               	xorwf	___flneg@f1+3,f
  9134     1BA8                     l3246:
  9135     1BA8                     l642:
  9136     1BA8  0008               	return
  9137     1BA9                     __end_of___flneg:
  9138                           
  9139                           	psect	text20
  9140     0802                     __ptext20:	
  9141 ;; *************** function ___flge *****************
  9142 ;; Defined at:
  9143 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  ff1             4    0[COMMON] unsigned char 
  9146 ;;  ff2             4    4[COMMON] unsigned char 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;		None               void
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9158 ;;      Params:         8       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0
  9160 ;;      Temps:          4       0       0       0       0
  9161 ;;      Totals:        12       0       0       0       0
  9162 ;;Total ram usage:       12 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_main
  9168 ;;		_sprintf
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172     0802                     ___flge:	
  9173                           ;psect for function ___flge
  9174                           
  9175     0802                     l3222:	
  9176                           ;incstack = 0
  9177                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9178                           
  9179     0802  3000               	movlw	0
  9180     0803  0570               	andwf	___flge@ff1,w
  9181     0804  00F8               	movwf	??___flge
  9182     0805  3000               	movlw	0
  9183     0806  0571               	andwf	___flge@ff1+1,w
  9184     0807  00F9               	movwf	??___flge+1
  9185     0808  3080               	movlw	128
  9186     0809  0572               	andwf	___flge@ff1+2,w
  9187     080A  00FA               	movwf	??___flge+2
  9188     080B  307F               	movlw	127
  9189     080C  0573               	andwf	___flge@ff1+3,w
  9190     080D  00FB               	movwf	??___flge+3
  9191     080E  087B               	movf	??___flge+3,w
  9192     080F  047A               	iorwf	??___flge+2,w
  9193     0810  0479               	iorwf	??___flge+1,w
  9194     0811  0478               	iorwf	??___flge,w
  9195     0812  1D03               	skipz
  9196     0813  2815               	goto	u4761
  9197     0814  2816               	goto	u4760
  9198     0815                     u4761:
  9199     0815  281E               	goto	l634
  9200     0816                     u4760:
  9201     0816                     l3224:
  9202     0816  3000               	movlw	0
  9203     0817  00F3               	movwf	___flge@ff1+3
  9204     0818  3000               	movlw	0
  9205     0819  00F2               	movwf	___flge@ff1+2
  9206     081A  3000               	movlw	0
  9207     081B  00F1               	movwf	___flge@ff1+1
  9208     081C  3000               	movlw	0
  9209     081D  00F0               	movwf	___flge@ff1
  9210     081E                     l634:
  9211     081E  3000               	movlw	0
  9212     081F  0574               	andwf	___flge@ff2,w
  9213     0820  00F8               	movwf	??___flge
  9214     0821  3000               	movlw	0
  9215     0822  0575               	andwf	___flge@ff2+1,w
  9216     0823  00F9               	movwf	??___flge+1
  9217     0824  3080               	movlw	128
  9218     0825  0576               	andwf	___flge@ff2+2,w
  9219     0826  00FA               	movwf	??___flge+2
  9220     0827  307F               	movlw	127
  9221     0828  0577               	andwf	___flge@ff2+3,w
  9222     0829  00FB               	movwf	??___flge+3
  9223     082A  087B               	movf	??___flge+3,w
  9224     082B  047A               	iorwf	??___flge+2,w
  9225     082C  0479               	iorwf	??___flge+1,w
  9226     082D  0478               	iorwf	??___flge,w
  9227     082E  1D03               	skipz
  9228     082F  2831               	goto	u4771
  9229     0830  2832               	goto	u4770
  9230     0831                     u4771:
  9231     0831  283A               	goto	l3228
  9232     0832                     u4770:
  9233     0832                     l3226:
  9234     0832  3000               	movlw	0
  9235     0833  00F7               	movwf	___flge@ff2+3
  9236     0834  3000               	movlw	0
  9237     0835  00F6               	movwf	___flge@ff2+2
  9238     0836  3000               	movlw	0
  9239     0837  00F5               	movwf	___flge@ff2+1
  9240     0838  3000               	movlw	0
  9241     0839  00F4               	movwf	___flge@ff2
  9242     083A                     l3228:
  9243     083A  1FF3               	btfss	___flge@ff1+3,7
  9244     083B  283D               	goto	u4781
  9245     083C  283E               	goto	u4780
  9246     083D                     u4781:
  9247     083D  2862               	goto	l3232
  9248     083E                     u4780:
  9249     083E                     l3230:
  9250     083E  3000               	movlw	0
  9251     083F  00F8               	movwf	??___flge
  9252     0840  3000               	movlw	0
  9253     0841  00F9               	movwf	??___flge+1
  9254     0842  3000               	movlw	0
  9255     0843  00FA               	movwf	??___flge+2
  9256     0844  3080               	movlw	128
  9257     0845  00FB               	movwf	??___flge+3
  9258     0846  0870               	movf	___flge@ff1,w
  9259     0847  02F8               	subwf	??___flge,f
  9260     0848  0871               	movf	___flge@ff1+1,w
  9261     0849  1C03               	skipc
  9262     084A  0F71               	incfsz	___flge@ff1+1,w
  9263     084B  284D               	goto	u4791
  9264     084C  284E               	goto	u4792
  9265     084D                     u4791:
  9266     084D  02F9               	subwf	??___flge+1,f
  9267     084E                     u4792:
  9268     084E  0872               	movf	___flge@ff1+2,w
  9269     084F  1C03               	skipc
  9270     0850  0F72               	incfsz	___flge@ff1+2,w
  9271     0851  2853               	goto	u4793
  9272     0852  2854               	goto	u4794
  9273     0853                     u4793:
  9274     0853  02FA               	subwf	??___flge+2,f
  9275     0854                     u4794:
  9276     0854  0873               	movf	___flge@ff1+3,w
  9277     0855  1C03               	skipc
  9278     0856  0F73               	incfsz	___flge@ff1+3,w
  9279     0857  2859               	goto	u4795
  9280     0858  285A               	goto	u4796
  9281     0859                     u4795:
  9282     0859  02FB               	subwf	??___flge+3,f
  9283     085A                     u4796:
  9284     085A  087B               	movf	??___flge+3,w
  9285     085B  00F3               	movwf	___flge@ff1+3
  9286     085C  087A               	movf	??___flge+2,w
  9287     085D  00F2               	movwf	___flge@ff1+2
  9288     085E  0879               	movf	??___flge+1,w
  9289     085F  00F1               	movwf	___flge@ff1+1
  9290     0860  0878               	movf	??___flge,w
  9291     0861  00F0               	movwf	___flge@ff1
  9292     0862                     l3232:
  9293     0862  1FF7               	btfss	___flge@ff2+3,7
  9294     0863  2865               	goto	u4801
  9295     0864  2866               	goto	u4800
  9296     0865                     u4801:
  9297     0865  288A               	goto	l637
  9298     0866                     u4800:
  9299     0866                     l3234:
  9300     0866  3000               	movlw	0
  9301     0867  00F8               	movwf	??___flge
  9302     0868  3000               	movlw	0
  9303     0869  00F9               	movwf	??___flge+1
  9304     086A  3000               	movlw	0
  9305     086B  00FA               	movwf	??___flge+2
  9306     086C  3080               	movlw	128
  9307     086D  00FB               	movwf	??___flge+3
  9308     086E  0874               	movf	___flge@ff2,w
  9309     086F  02F8               	subwf	??___flge,f
  9310     0870  0875               	movf	___flge@ff2+1,w
  9311     0871  1C03               	skipc
  9312     0872  0F75               	incfsz	___flge@ff2+1,w
  9313     0873  2875               	goto	u4811
  9314     0874  2876               	goto	u4812
  9315     0875                     u4811:
  9316     0875  02F9               	subwf	??___flge+1,f
  9317     0876                     u4812:
  9318     0876  0876               	movf	___flge@ff2+2,w
  9319     0877  1C03               	skipc
  9320     0878  0F76               	incfsz	___flge@ff2+2,w
  9321     0879  287B               	goto	u4813
  9322     087A  287C               	goto	u4814
  9323     087B                     u4813:
  9324     087B  02FA               	subwf	??___flge+2,f
  9325     087C                     u4814:
  9326     087C  0877               	movf	___flge@ff2+3,w
  9327     087D  1C03               	skipc
  9328     087E  0F77               	incfsz	___flge@ff2+3,w
  9329     087F  2881               	goto	u4815
  9330     0880  2882               	goto	u4816
  9331     0881                     u4815:
  9332     0881  02FB               	subwf	??___flge+3,f
  9333     0882                     u4816:
  9334     0882  087B               	movf	??___flge+3,w
  9335     0883  00F7               	movwf	___flge@ff2+3
  9336     0884  087A               	movf	??___flge+2,w
  9337     0885  00F6               	movwf	___flge@ff2+2
  9338     0886  0879               	movf	??___flge+1,w
  9339     0887  00F5               	movwf	___flge@ff2+1
  9340     0888  0878               	movf	??___flge,w
  9341     0889  00F4               	movwf	___flge@ff2
  9342     088A                     l637:
  9343     088A  3080               	movlw	128
  9344     088B  06F3               	xorwf	___flge@ff1+3,f
  9345     088C  3080               	movlw	128
  9346     088D  06F7               	xorwf	___flge@ff2+3,f
  9347     088E  0877               	movf	___flge@ff2+3,w
  9348     088F  0273               	subwf	___flge@ff1+3,w
  9349     0890  1D03               	skipz
  9350     0891  289C               	goto	u4825
  9351     0892  0876               	movf	___flge@ff2+2,w
  9352     0893  0272               	subwf	___flge@ff1+2,w
  9353     0894  1D03               	skipz
  9354     0895  289C               	goto	u4825
  9355     0896  0875               	movf	___flge@ff2+1,w
  9356     0897  0271               	subwf	___flge@ff1+1,w
  9357     0898  1D03               	skipz
  9358     0899  289C               	goto	u4825
  9359     089A  0874               	movf	___flge@ff2,w
  9360     089B  0270               	subwf	___flge@ff1,w
  9361     089C                     u4825:
  9362     089C  1803               	skipnc
  9363     089D  289F               	goto	u4821
  9364     089E  28A0               	goto	u4820
  9365     089F                     u4821:
  9366     089F  28A2               	goto	l3238
  9367     08A0                     u4820:
  9368     08A0                     l3236:
  9369     08A0  1003               	clrc
  9370     08A1  28A3               	goto	l638
  9371     08A2                     l3238:
  9372     08A2  1403               	setc
  9373     08A3                     l638:
  9374     08A3  0008               	return
  9375     08A4                     __end_of___flge:
  9376                           
  9377                           	psect	text21
  9378     1E42                     __ptext21:	
  9379 ;; *************** function ___fleq *****************
  9380 ;; Defined at:
  9381 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  ff1             4    0[COMMON] unsigned char 
  9384 ;;  ff2             4    4[COMMON] unsigned char 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;		None               void
  9389 ;; Registers used:
  9390 ;;		wreg, status,2, status,0
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9396 ;;      Params:         8       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0
  9398 ;;      Temps:          4       0       0       0       0
  9399 ;;      Totals:        12       0       0       0       0
  9400 ;;Total ram usage:       12 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_sprintf
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409     1E42                     ___fleq:	
  9410                           ;psect for function ___fleq
  9411                           
  9412     1E42                     l3210:	
  9413                           ;incstack = 0
  9414                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9415                           
  9416     1E42  3000               	movlw	0
  9417     1E43  0570               	andwf	___fleq@ff1,w
  9418     1E44  00F8               	movwf	??___fleq
  9419     1E45  3000               	movlw	0
  9420     1E46  0571               	andwf	___fleq@ff1+1,w
  9421     1E47  00F9               	movwf	??___fleq+1
  9422     1E48  3080               	movlw	128
  9423     1E49  0572               	andwf	___fleq@ff1+2,w
  9424     1E4A  00FA               	movwf	??___fleq+2
  9425     1E4B  307F               	movlw	127
  9426     1E4C  0573               	andwf	___fleq@ff1+3,w
  9427     1E4D  00FB               	movwf	??___fleq+3
  9428     1E4E  087B               	movf	??___fleq+3,w
  9429     1E4F  047A               	iorwf	??___fleq+2,w
  9430     1E50  0479               	iorwf	??___fleq+1,w
  9431     1E51  0478               	iorwf	??___fleq,w
  9432     1E52  1D03               	skipz
  9433     1E53  2E55               	goto	u4731
  9434     1E54  2E56               	goto	u4730
  9435     1E55                     u4731:
  9436     1E55  2E5E               	goto	l629
  9437     1E56                     u4730:
  9438     1E56                     l3212:
  9439     1E56  3000               	movlw	0
  9440     1E57  00F3               	movwf	___fleq@ff1+3
  9441     1E58  3000               	movlw	0
  9442     1E59  00F2               	movwf	___fleq@ff1+2
  9443     1E5A  3000               	movlw	0
  9444     1E5B  00F1               	movwf	___fleq@ff1+1
  9445     1E5C  3000               	movlw	0
  9446     1E5D  00F0               	movwf	___fleq@ff1
  9447     1E5E                     l629:
  9448     1E5E  3000               	movlw	0
  9449     1E5F  0574               	andwf	___fleq@ff2,w
  9450     1E60  00F8               	movwf	??___fleq
  9451     1E61  3000               	movlw	0
  9452     1E62  0575               	andwf	___fleq@ff2+1,w
  9453     1E63  00F9               	movwf	??___fleq+1
  9454     1E64  3080               	movlw	128
  9455     1E65  0576               	andwf	___fleq@ff2+2,w
  9456     1E66  00FA               	movwf	??___fleq+2
  9457     1E67  307F               	movlw	127
  9458     1E68  0577               	andwf	___fleq@ff2+3,w
  9459     1E69  00FB               	movwf	??___fleq+3
  9460     1E6A  087B               	movf	??___fleq+3,w
  9461     1E6B  047A               	iorwf	??___fleq+2,w
  9462     1E6C  0479               	iorwf	??___fleq+1,w
  9463     1E6D  0478               	iorwf	??___fleq,w
  9464     1E6E  1D03               	skipz
  9465     1E6F  2E71               	goto	u4741
  9466     1E70  2E72               	goto	u4740
  9467     1E71                     u4741:
  9468     1E71  2E7A               	goto	l630
  9469     1E72                     u4740:
  9470     1E72                     l3214:
  9471     1E72  3000               	movlw	0
  9472     1E73  00F7               	movwf	___fleq@ff2+3
  9473     1E74  3000               	movlw	0
  9474     1E75  00F6               	movwf	___fleq@ff2+2
  9475     1E76  3000               	movlw	0
  9476     1E77  00F5               	movwf	___fleq@ff2+1
  9477     1E78  3000               	movlw	0
  9478     1E79  00F4               	movwf	___fleq@ff2
  9479     1E7A                     l630:
  9480     1E7A  0877               	movf	___fleq@ff2+3,w
  9481     1E7B  0673               	xorwf	___fleq@ff1+3,w
  9482     1E7C  1D03               	skipz
  9483     1E7D  2E88               	goto	u4755
  9484     1E7E  0876               	movf	___fleq@ff2+2,w
  9485     1E7F  0672               	xorwf	___fleq@ff1+2,w
  9486     1E80  1D03               	skipz
  9487     1E81  2E88               	goto	u4755
  9488     1E82  0875               	movf	___fleq@ff2+1,w
  9489     1E83  0671               	xorwf	___fleq@ff1+1,w
  9490     1E84  1D03               	skipz
  9491     1E85  2E88               	goto	u4755
  9492     1E86  0874               	movf	___fleq@ff2,w
  9493     1E87  0670               	xorwf	___fleq@ff1,w
  9494     1E88                     u4755:
  9495     1E88  1903               	skipnz
  9496     1E89  2E8B               	goto	u4751
  9497     1E8A  2E8C               	goto	u4750
  9498     1E8B                     u4751:
  9499     1E8B  2E8E               	goto	l3218
  9500     1E8C                     u4750:
  9501     1E8C                     l3216:
  9502     1E8C  1003               	clrc
  9503     1E8D  2E8F               	goto	l631
  9504     1E8E                     l3218:
  9505     1E8E  1403               	setc
  9506     1E8F                     l631:
  9507     1E8F  0008               	return
  9508     1E90                     __end_of___fleq:
  9509                           
  9510                           	psect	text22
  9511     1C42                     __ptext22:	
  9512 ;; *************** function _setupPWM *****************
  9513 ;; Defined at:
  9514 ;;		line 42 in file "motorDC.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;		None
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      void 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9528 ;;      Params:         0       0       0       0       0
  9529 ;;      Locals:         0       0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0
  9531 ;;      Totals:         0       0       0       0       0
  9532 ;;Total ram usage:        0 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_main
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541     1C42                     _setupPWM:	
  9542                           ;psect for function _setupPWM
  9543                           
  9544     1C42                     l3462:	
  9545                           ;incstack = 0
  9546                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
  9547                           
  9548                           
  9549                           ;motorDC.c: 46:     TRISCbits.TRISC2 = 1;
  9550     1C42  1683               	bsf	3,5	;RP0=1, select bank1
  9551     1C43  1303               	bcf	3,6	;RP1=0, select bank1
  9552     1C44  1507               	bsf	7,2	;volatile
  9553                           
  9554                           ;motorDC.c: 47:     TRISCbits.TRISC1 = 1;
  9555     1C45  1487               	bsf	7,1	;volatile
  9556     1C46                     l3464:
  9557                           
  9558                           ;motorDC.c: 51:     PR2 = 255;
  9559     1C46  30FF               	movlw	255
  9560     1C47  0092               	movwf	18	;volatile
  9561     1C48                     l3466:
  9562                           
  9563                           ;motorDC.c: 55:     CCP1CONbits.P1M = 0b00;
  9564     1C48  303F               	movlw	-193
  9565     1C49  1283               	bcf	3,5	;RP0=0, select bank0
  9566     1C4A  1303               	bcf	3,6	;RP1=0, select bank0
  9567     1C4B  0597               	andwf	23,f	;volatile
  9568     1C4C                     l3468:
  9569                           
  9570                           ;motorDC.c: 57:     CCP1CONbits.CCP1M = 0b1100;
  9571     1C4C  0817               	movf	23,w	;volatile
  9572     1C4D  39F0               	andlw	-16
  9573     1C4E  380C               	iorlw	12
  9574     1C4F  0097               	movwf	23	;volatile
  9575     1C50                     l3470:
  9576                           
  9577                           ;motorDC.c: 58:     CCP2CONbits.CCP2M = 0b1100;
  9578     1C50  081D               	movf	29,w	;volatile
  9579     1C51  39F0               	andlw	-16
  9580     1C52  380C               	iorlw	12
  9581     1C53  009D               	movwf	29	;volatile
  9582     1C54                     l3472:
  9583                           
  9584                           ;motorDC.c: 62:     CCP1CONbits.DC1B = 0b11;
  9585     1C54  3030               	movlw	48
  9586     1C55  0497               	iorwf	23,f	;volatile
  9587     1C56                     l3474:
  9588                           
  9589                           ;motorDC.c: 63:     CCP2CONbits.DC2B1 = 0b1;
  9590     1C56  169D               	bsf	29,5	;volatile
  9591     1C57                     l3476:
  9592                           
  9593                           ;motorDC.c: 64:     CCP2CONbits.DC2B0 = 0b1;
  9594     1C57  161D               	bsf	29,4	;volatile
  9595     1C58                     l3478:
  9596                           
  9597                           ;motorDC.c: 66:     CCPR1L = 0;
  9598     1C58  0195               	clrf	21	;volatile
  9599     1C59                     l3480:
  9600                           
  9601                           ;motorDC.c: 67:     CCPR2L = 0;
  9602     1C59  019B               	clrf	27	;volatile
  9603     1C5A                     l3482:
  9604                           
  9605                           ;motorDC.c: 73:     PIR1bits.TMR2IF = 0;
  9606     1C5A  108C               	bcf	12,1	;volatile
  9607     1C5B                     l3484:
  9608                           
  9609                           ;motorDC.c: 74:     T2CONbits.T2CKPS = 0b11;
  9610     1C5B  3003               	movlw	3
  9611     1C5C  0492               	iorwf	18,f	;volatile
  9612     1C5D                     l3486:
  9613                           
  9614                           ;motorDC.c: 75:     T2CONbits.TMR2ON = 1;
  9615     1C5D  1512               	bsf	18,2	;volatile
  9616     1C5E                     l261:	
  9617                           ;motorDC.c: 79:     while(!PIR1bits.TMR2IF){};
  9618                           
  9619     1C5E  1C8C               	btfss	12,1	;volatile
  9620     1C5F  2C61               	goto	u5221
  9621     1C60  2C62               	goto	u5220
  9622     1C61                     u5221:
  9623     1C61  2C5E               	goto	l261
  9624     1C62                     u5220:
  9625     1C62                     l263:
  9626                           
  9627                           ;motorDC.c: 81:     TRISCbits.TRISC2 = 0;
  9628     1C62  1683               	bsf	3,5	;RP0=1, select bank1
  9629     1C63  1303               	bcf	3,6	;RP1=0, select bank1
  9630     1C64  1107               	bcf	7,2	;volatile
  9631                           
  9632                           ;motorDC.c: 82:     TRISCbits.TRISC1 = 0;
  9633     1C65  1087               	bcf	7,1	;volatile
  9634     1C66                     l264:
  9635     1C66  0008               	return
  9636     1C67                     __end_of_setupPWM:
  9637                           
  9638                           	psect	text23
  9639     00DA                     __ptext23:	
  9640 ;; *************** function _setupMotores *****************
  9641 ;; Defined at:
  9642 ;;		line 15 in file "motorDC.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9656 ;;      Params:         0       0       0       0       0
  9657 ;;      Locals:         0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0
  9659 ;;      Totals:         0       0       0       0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_main
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669     00DA                     _setupMotores:	
  9670                           ;psect for function _setupMotores
  9671                           
  9672     00DA                     l3432:	
  9673                           ;incstack = 0
  9674                           ; Regs used in _setupMotores: [wreg+status,2]
  9675                           
  9676                           
  9677                           ;motorDC.c: 17:     ANSEL = 0;
  9678     00DA  1683               	bsf	3,5	;RP0=1, select bank3
  9679     00DB  1703               	bsf	3,6	;RP1=1, select bank3
  9680     00DC  0188               	clrf	8	;volatile
  9681                           
  9682                           ;motorDC.c: 18:     ANSELH = 0;
  9683     00DD  0189               	clrf	9	;volatile
  9684                           
  9685                           ;motorDC.c: 20:     TRISA = 0;
  9686     00DE  1683               	bsf	3,5	;RP0=1, select bank1
  9687     00DF  1303               	bcf	3,6	;RP1=0, select bank1
  9688     00E0  0185               	clrf	5	;volatile
  9689     00E1                     l3434:
  9690                           
  9691                           ;motorDC.c: 21:     TRISB = 0b00011111;
  9692     00E1  301F               	movlw	31
  9693     00E2  0086               	movwf	6	;volatile
  9694     00E3                     l3436:
  9695                           
  9696                           ;motorDC.c: 22:     TRISD = 0;
  9697     00E3  0188               	clrf	8	;volatile
  9698     00E4                     l3438:
  9699                           
  9700                           ;motorDC.c: 24:     OPTION_REGbits.nRBPU = 0;
  9701     00E4  1381               	bcf	1,7	;volatile
  9702     00E5                     l3440:
  9703                           
  9704                           ;motorDC.c: 25:     WPUBbits.WPUB0 = 1;
  9705     00E5  1415               	bsf	21,0	;volatile
  9706     00E6                     l3442:
  9707                           
  9708                           ;motorDC.c: 26:     WPUBbits.WPUB1 = 1;
  9709     00E6  1495               	bsf	21,1	;volatile
  9710     00E7                     l3444:
  9711                           
  9712                           ;motorDC.c: 27:     WPUBbits.WPUB2 = 1;
  9713     00E7  1515               	bsf	21,2	;volatile
  9714     00E8                     l3446:
  9715                           
  9716                           ;motorDC.c: 28:     WPUBbits.WPUB3 = 1;
  9717     00E8  1595               	bsf	21,3	;volatile
  9718     00E9                     l3448:
  9719                           
  9720                           ;motorDC.c: 29:     WPUBbits.WPUB4 = 1;
  9721     00E9  1615               	bsf	21,4	;volatile
  9722                           
  9723                           ;motorDC.c: 30:     IOCB = 0b00011111;
  9724     00EA  301F               	movlw	31
  9725     00EB  0096               	movwf	22	;volatile
  9726     00EC                     l3450:
  9727                           
  9728                           ;motorDC.c: 32:     PORTB = 0;
  9729     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  9730     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  9731     00EE  0186               	clrf	6	;volatile
  9732     00EF                     l3452:
  9733                           
  9734                           ;motorDC.c: 33:     PORTD = 0;
  9735     00EF  0188               	clrf	8	;volatile
  9736     00F0                     l3454:
  9737                           
  9738                           ;motorDC.c: 35:     PORTDbits.RD0 = 1;
  9739     00F0  1408               	bsf	8,0	;volatile
  9740     00F1                     l3456:
  9741                           
  9742                           ;motorDC.c: 36:     PORTDbits.RD1 = 0;
  9743     00F1  1088               	bcf	8,1	;volatile
  9744     00F2                     l3458:
  9745                           
  9746                           ;motorDC.c: 37:     PORTDbits.RD2 = 1;
  9747     00F2  1508               	bsf	8,2	;volatile
  9748     00F3                     l3460:
  9749                           
  9750                           ;motorDC.c: 38:     PORTDbits.RD3 = 0;
  9751     00F3  1188               	bcf	8,3	;volatile
  9752     00F4                     l258:
  9753     00F4  0008               	return
  9754     00F5                     __end_of_setupMotores:
  9755                           
  9756                           	psect	text24
  9757     1CB3                     __ptext24:	
  9758 ;; *************** function _setup *****************
  9759 ;; Defined at:
  9760 ;;		line 194 in file "main_M.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0, pclath, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9774 ;;      Params:         0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 3
  9781 ;; This function calls:
  9782 ;;		_I2C_Master_Init
  9783 ;;		_Lcd_Init_4bits
  9784 ;;		_setupINTOSC
  9785 ;; This function is called by:
  9786 ;;		_main
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790     1CB3                     _setup:	
  9791                           ;psect for function _setup
  9792                           
  9793     1CB3                     l3414:	
  9794                           ;incstack = 0
  9795                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9796                           
  9797                           
  9798                           ;main_M.c: 196:     ANSEL = 0;
  9799     1CB3  1683               	bsf	3,5	;RP0=1, select bank3
  9800     1CB4  1703               	bsf	3,6	;RP1=1, select bank3
  9801     1CB5  0188               	clrf	8	;volatile
  9802                           
  9803                           ;main_M.c: 197:     ANSELH = 0;
  9804     1CB6  0189               	clrf	9	;volatile
  9805                           
  9806                           ;main_M.c: 199:     TRISA = 0;
  9807     1CB7  1683               	bsf	3,5	;RP0=1, select bank1
  9808     1CB8  1303               	bcf	3,6	;RP1=0, select bank1
  9809     1CB9  0185               	clrf	5	;volatile
  9810     1CBA                     l3416:
  9811                           
  9812                           ;main_M.c: 200:     TRISB = 0b00000010;
  9813     1CBA  3002               	movlw	2
  9814     1CBB  0086               	movwf	6	;volatile
  9815     1CBC                     l3418:
  9816                           
  9817                           ;main_M.c: 201:     TRISD = 0;
  9818     1CBC  0188               	clrf	8	;volatile
  9819     1CBD                     l3420:
  9820                           
  9821                           ;main_M.c: 209:     PORTA = 0;
  9822     1CBD  1283               	bcf	3,5	;RP0=0, select bank0
  9823     1CBE  1303               	bcf	3,6	;RP1=0, select bank0
  9824     1CBF  0185               	clrf	5	;volatile
  9825     1CC0                     l3422:
  9826                           
  9827                           ;main_M.c: 210:     PORTB = 0;
  9828     1CC0  0186               	clrf	6	;volatile
  9829     1CC1                     l3424:
  9830                           
  9831                           ;main_M.c: 211:     PORTD = 0;
  9832     1CC1  0188               	clrf	8	;volatile
  9833     1CC2                     l3426:
  9834                           
  9835                           ;main_M.c: 213:     I2C_Master_Init(100000);
  9836     1CC2  3000               	movlw	0
  9837     1CC3  00A3               	movwf	I2C_Master_Init@c+3
  9838     1CC4  3001               	movlw	1
  9839     1CC5  00A2               	movwf	I2C_Master_Init@c+2
  9840     1CC6  3086               	movlw	134
  9841     1CC7  00A1               	movwf	I2C_Master_Init@c+1
  9842     1CC8  30A0               	movlw	160
  9843     1CC9  00A0               	movwf	I2C_Master_Init@c
  9844     1CCA  160A  158A  253E  160A  158A  	fcall	_I2C_Master_Init
  9845     1CCF                     l3428:
  9846                           
  9847                           ;main_M.c: 214:     setupINTOSC(FOSC_8MHZ);
  9848     1CCF  3007               	movlw	7
  9849     1CD0  160A  158A  23C3  160A  158A  	fcall	_setupINTOSC
  9850     1CD5                     l3430:
  9851                           
  9852                           ;main_M.c: 215:     Lcd_Init_4bits();
  9853     1CD5  160A  158A  273D  160A  158A  	fcall	_Lcd_Init_4bits
  9854     1CDA                     l193:
  9855     1CDA  0008               	return
  9856     1CDB                     __end_of_setup:
  9857                           
  9858                           	psect	text25
  9859     1BC3                     __ptext25:	
  9860 ;; *************** function _setupINTOSC *****************
  9861 ;; Defined at:
  9862 ;;		line 11 in file "configINTOSC.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  F               1    wreg     enum E1292
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  F               1    1[COMMON] enum E1292
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      void 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9876 ;;      Params:         0       0       0       0       0
  9877 ;;      Locals:         1       0       0       0       0
  9878 ;;      Temps:          1       0       0       0       0
  9879 ;;      Totals:         2       0       0       0       0
  9880 ;;Total ram usage:        2 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_setup
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889     1BC3                     _setupINTOSC:	
  9890                           ;psect for function _setupINTOSC
  9891                           
  9892                           
  9893                           ;incstack = 0
  9894                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9895                           ;setupINTOSC@F stored from wreg
  9896     1BC3  00F1               	movwf	setupINTOSC@F
  9897     1BC4                     l2988:
  9898                           
  9899                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  9900     1BC4  0871               	movf	setupINTOSC@F,w
  9901     1BC5  00F0               	movwf	??_setupINTOSC
  9902     1BC6  0EF0               	swapf	??_setupINTOSC,f
  9903     1BC7  1683               	bsf	3,5	;RP0=1, select bank1
  9904     1BC8  1303               	bcf	3,6	;RP1=0, select bank1
  9905     1BC9  080F               	movf	15,w	;volatile
  9906     1BCA  0670               	xorwf	??_setupINTOSC,w
  9907     1BCB  398F               	andlw	-113
  9908     1BCC  0670               	xorwf	??_setupINTOSC,w
  9909     1BCD  008F               	movwf	15	;volatile
  9910     1BCE                     l2990:
  9911                           
  9912                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  9913     1BCE  140F               	bsf	15,0	;volatile
  9914     1BCF                     l60:
  9915     1BCF  0008               	return
  9916     1BD0                     __end_of_setupINTOSC:
  9917                           
  9918                           	psect	text26
  9919     1F3D                     __ptext26:	
  9920 ;; *************** function _Lcd_Init_4bits *****************
  9921 ;; Defined at:
  9922 ;;		line 66 in file "configLCD_4bits.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;		None
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0, pclath, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9936 ;;      Params:         0       0       0       0       0
  9937 ;;      Locals:         0       0       0       0       0
  9938 ;;      Temps:          2       0       0       0       0
  9939 ;;      Totals:         2       0       0       0       0
  9940 ;;Total ram usage:        2 bytes
  9941 ;; Hardware stack levels used: 1
  9942 ;; Hardware stack levels required when called: 2
  9943 ;; This function calls:
  9944 ;;		_Lcd_Cmd_4bits
  9945 ;;		_Lcd_Port_4bits
  9946 ;; This function is called by:
  9947 ;;		_setup
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951     1F3D                     _Lcd_Init_4bits:	
  9952                           ;psect for function _Lcd_Init_4bits
  9953                           
  9954     1F3D                     l2992:	
  9955                           ;incstack = 0
  9956                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  9957                           
  9958                           
  9959                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  9960     1F3D  3000               	movlw	0
  9961     1F3E  160A  158A  23FC  160A  158A  	fcall	_Lcd_Port_4bits
  9962     1F43                     l2994:
  9963                           
  9964                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9965     1F43  3034               	movlw	52
  9966     1F44  00F5               	movwf	??_Lcd_Init_4bits+1
  9967     1F45  30F1               	movlw	241
  9968     1F46  00F4               	movwf	??_Lcd_Init_4bits
  9969     1F47                     u5707:
  9970     1F47  0BF4               	decfsz	??_Lcd_Init_4bits,f
  9971     1F48  2F47               	goto	u5707
  9972     1F49  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  9973     1F4A  2F47               	goto	u5707
  9974     1F4B  2F4C               	nop2
  9975     1F4C                     l2996:
  9976                           
  9977                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  9978     1F4C  3003               	movlw	3
  9979     1F4D  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
  9980                           
  9981                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9982     1F52  300D               	movlw	13
  9983     1F53  00F5               	movwf	??_Lcd_Init_4bits+1
  9984     1F54  30FB               	movlw	251
  9985     1F55  00F4               	movwf	??_Lcd_Init_4bits
  9986     1F56                     u5717:
  9987     1F56  0BF4               	decfsz	??_Lcd_Init_4bits,f
  9988     1F57  2F56               	goto	u5717
  9989     1F58  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  9990     1F59  2F56               	goto	u5717
  9991     1F5A  2F5B               	nop2
  9992     1F5B                     l2998:
  9993                           
  9994                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  9995     1F5B  3003               	movlw	3
  9996     1F5C  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
  9997     1F61                     l3000:
  9998                           
  9999                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10000     1F61  301D               	movlw	29
 10001     1F62  00F5               	movwf	??_Lcd_Init_4bits+1
 10002     1F63  3091               	movlw	145
 10003     1F64  00F4               	movwf	??_Lcd_Init_4bits
 10004     1F65                     u5727:
 10005     1F65  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10006     1F66  2F65               	goto	u5727
 10007     1F67  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10008     1F68  2F65               	goto	u5727
 10009                           
 10010                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
 10011     1F69  3003               	movlw	3
 10012     1F6A  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10013                           
 10014                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
 10015     1F6F  3002               	movlw	2
 10016     1F70  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10017                           
 10018                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
 10019     1F75  3002               	movlw	2
 10020     1F76  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10021                           
 10022                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
 10023     1F7B  3008               	movlw	8
 10024     1F7C  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10025                           
 10026                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
 10027     1F81  3000               	movlw	0
 10028     1F82  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10029                           
 10030                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
 10031     1F87  300C               	movlw	12
 10032     1F88  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10033                           
 10034                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
 10035     1F8D  3000               	movlw	0
 10036     1F8E  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10037                           
 10038                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
 10039     1F93  3006               	movlw	6
 10040     1F94  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10041     1F99                     l90:
 10042     1F99  0008               	return
 10043     1F9A                     __end_of_Lcd_Init_4bits:
 10044                           
 10045                           	psect	text27
 10046     1D3E                     __ptext27:	
 10047 ;; *************** function _I2C_Master_Init *****************
 10048 ;; Defined at:
 10049 ;;		line 13 in file "configI2C.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  c               4    0[BANK0 ] const unsigned long 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  1    wreg      void 
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0, pclath, cstack
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10063 ;;      Params:         0       4       0       0       0
 10064 ;;      Locals:         0       0       0       0       0
 10065 ;;      Temps:          0       4       0       0       0
 10066 ;;      Totals:         0       8       0       0       0
 10067 ;;Total ram usage:        8 bytes
 10068 ;; Hardware stack levels used: 1
 10069 ;; Hardware stack levels required when called: 1
 10070 ;; This function calls:
 10071 ;;		___lldiv
 10072 ;; This function is called by:
 10073 ;;		_setup
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077     1D3E                     _I2C_Master_Init:	
 10078                           ;psect for function _I2C_Master_Init
 10079                           
 10080     1D3E                     l2972:	
 10081                           ;incstack = 0
 10082                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10083                           
 10084                           
 10085                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
 10086     1D3E  3028               	movlw	40
 10087     1D3F  1283               	bcf	3,5	;RP0=0, select bank0
 10088     1D40  1303               	bcf	3,6	;RP1=0, select bank0
 10089     1D41  0094               	movwf	20	;volatile
 10090     1D42                     l2974:
 10091                           
 10092                           ;configI2C.c: 16:     SSPCON2 = 0;
 10093     1D42  1683               	bsf	3,5	;RP0=1, select bank1
 10094     1D43  1303               	bcf	3,6	;RP1=0, select bank1
 10095     1D44  0191               	clrf	17	;volatile
 10096     1D45                     l2976:
 10097                           
 10098                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
 10099     1D45  1283               	bcf	3,5	;RP0=0, select bank0
 10100     1D46  1303               	bcf	3,6	;RP1=0, select bank0
 10101     1D47  0820               	movf	I2C_Master_Init@c,w
 10102     1D48  00A4               	movwf	??_I2C_Master_Init
 10103     1D49  0821               	movf	I2C_Master_Init@c+1,w
 10104     1D4A  00A5               	movwf	??_I2C_Master_Init+1
 10105     1D4B  0822               	movf	I2C_Master_Init@c+2,w
 10106     1D4C  00A6               	movwf	??_I2C_Master_Init+2
 10107     1D4D  0823               	movf	I2C_Master_Init@c+3,w
 10108     1D4E  00A7               	movwf	??_I2C_Master_Init+3
 10109     1D4F  3002               	movlw	2
 10110     1D50                     u4125:
 10111     1D50  1003               	clrc
 10112     1D51  0DA4               	rlf	??_I2C_Master_Init,f
 10113     1D52  0DA5               	rlf	??_I2C_Master_Init+1,f
 10114     1D53  0DA6               	rlf	??_I2C_Master_Init+2,f
 10115     1D54  0DA7               	rlf	??_I2C_Master_Init+3,f
 10116     1D55                     u4120:
 10117     1D55  3EFF               	addlw	-1
 10118     1D56  1D03               	skipz
 10119     1D57  2D50               	goto	u4125
 10120     1D58  0827               	movf	??_I2C_Master_Init+3,w
 10121     1D59  00F3               	movwf	___lldiv@divisor+3
 10122     1D5A  0826               	movf	??_I2C_Master_Init+2,w
 10123     1D5B  00F2               	movwf	___lldiv@divisor+2
 10124     1D5C  0825               	movf	??_I2C_Master_Init+1,w
 10125     1D5D  00F1               	movwf	___lldiv@divisor+1
 10126     1D5E  0824               	movf	??_I2C_Master_Init,w
 10127     1D5F  00F0               	movwf	___lldiv@divisor
 10128     1D60  3000               	movlw	0
 10129     1D61  00F7               	movwf	___lldiv@dividend+3
 10130     1D62  307A               	movlw	122
 10131     1D63  00F6               	movwf	___lldiv@dividend+2
 10132     1D64  3012               	movlw	18
 10133     1D65  00F5               	movwf	___lldiv@dividend+1
 10134     1D66  3000               	movlw	0
 10135     1D67  00F4               	movwf	___lldiv@dividend
 10136     1D68  160A  158A  279A  160A  158A  	fcall	___lldiv
 10137     1D6D  0870               	movf	?___lldiv,w
 10138     1D6E  3EFF               	addlw	255
 10139     1D6F  1683               	bsf	3,5	;RP0=1, select bank1
 10140     1D70  1303               	bcf	3,6	;RP1=0, select bank1
 10141     1D71  0093               	movwf	19	;volatile
 10142     1D72                     l2978:
 10143                           
 10144                           ;configI2C.c: 18:     SSPSTAT = 0;
 10145     1D72  0194               	clrf	20	;volatile
 10146     1D73                     l2980:
 10147                           
 10148                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
 10149     1D73  1587               	bsf	7,3	;volatile
 10150     1D74                     l2982:
 10151                           
 10152                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
 10153     1D74  1607               	bsf	7,4	;volatile
 10154     1D75                     l29:
 10155     1D75  0008               	return
 10156     1D76                     __end_of_I2C_Master_Init:
 10157                           
 10158                           	psect	text28
 10159     1F9A                     __ptext28:	
 10160 ;; *************** function ___lldiv *****************
 10161 ;; Defined at:
 10162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  divisor         4    0[COMMON] unsigned long 
 10165 ;;  dividend        4    4[COMMON] unsigned long 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;  quotient        4    9[COMMON] unsigned long 
 10168 ;;  counter         1   13[COMMON] unsigned char 
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  4    0[COMMON] unsigned long 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, status,0
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10178 ;;      Params:         8       0       0       0       0
 10179 ;;      Locals:         5       0       0       0       0
 10180 ;;      Temps:          1       0       0       0       0
 10181 ;;      Totals:        14       0       0       0       0
 10182 ;;Total ram usage:       14 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_I2C_Master_Init
 10188 ;;		_sprintf
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192     1F9A                     ___lldiv:	
 10193                           ;psect for function ___lldiv
 10194                           
 10195     1F9A                     l2484:	
 10196                           ;incstack = 0
 10197                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10198                           
 10199     1F9A  3000               	movlw	0
 10200     1F9B  00FC               	movwf	___lldiv@quotient+3
 10201     1F9C  3000               	movlw	0
 10202     1F9D  00FB               	movwf	___lldiv@quotient+2
 10203     1F9E  3000               	movlw	0
 10204     1F9F  00FA               	movwf	___lldiv@quotient+1
 10205     1FA0  3000               	movlw	0
 10206     1FA1  00F9               	movwf	___lldiv@quotient
 10207     1FA2  0873               	movf	___lldiv@divisor+3,w
 10208     1FA3  0472               	iorwf	___lldiv@divisor+2,w
 10209     1FA4  0471               	iorwf	___lldiv@divisor+1,w
 10210     1FA5  0470               	iorwf	___lldiv@divisor,w
 10211     1FA6  1903               	skipnz
 10212     1FA7  2FA9               	goto	u2901
 10213     1FA8  2FAA               	goto	u2900
 10214     1FA9                     u2901:
 10215     1FA9  2FF7               	goto	l2504
 10216     1FAA                     u2900:
 10217     1FAA                     l2486:
 10218     1FAA  01FD               	clrf	___lldiv@counter
 10219     1FAB  0AFD               	incf	___lldiv@counter,f
 10220     1FAC  2FBA               	goto	l2490
 10221     1FAD                     l2488:
 10222     1FAD  3001               	movlw	1
 10223     1FAE  00F8               	movwf	??___lldiv
 10224     1FAF                     u2915:
 10225     1FAF  1003               	clrc
 10226     1FB0  0DF0               	rlf	___lldiv@divisor,f
 10227     1FB1  0DF1               	rlf	___lldiv@divisor+1,f
 10228     1FB2  0DF2               	rlf	___lldiv@divisor+2,f
 10229     1FB3  0DF3               	rlf	___lldiv@divisor+3,f
 10230     1FB4  0BF8               	decfsz	??___lldiv,f
 10231     1FB5  2FAF               	goto	u2915
 10232     1FB6  3001               	movlw	1
 10233     1FB7  00F8               	movwf	??___lldiv
 10234     1FB8  0878               	movf	??___lldiv,w
 10235     1FB9  07FD               	addwf	___lldiv@counter,f
 10236     1FBA                     l2490:
 10237     1FBA  1FF3               	btfss	___lldiv@divisor+3,7
 10238     1FBB  2FBD               	goto	u2921
 10239     1FBC  2FBE               	goto	u2920
 10240     1FBD                     u2921:
 10241     1FBD  2FAD               	goto	l2488
 10242     1FBE                     u2920:
 10243     1FBE                     l2492:
 10244     1FBE  3001               	movlw	1
 10245     1FBF  00F8               	movwf	??___lldiv
 10246     1FC0                     u2935:
 10247     1FC0  1003               	clrc
 10248     1FC1  0DF9               	rlf	___lldiv@quotient,f
 10249     1FC2  0DFA               	rlf	___lldiv@quotient+1,f
 10250     1FC3  0DFB               	rlf	___lldiv@quotient+2,f
 10251     1FC4  0DFC               	rlf	___lldiv@quotient+3,f
 10252     1FC5  0BF8               	decfsz	??___lldiv,f
 10253     1FC6  2FC0               	goto	u2935
 10254     1FC7                     l2494:
 10255     1FC7  0873               	movf	___lldiv@divisor+3,w
 10256     1FC8  0277               	subwf	___lldiv@dividend+3,w
 10257     1FC9  1D03               	skipz
 10258     1FCA  2FD5               	goto	u2945
 10259     1FCB  0872               	movf	___lldiv@divisor+2,w
 10260     1FCC  0276               	subwf	___lldiv@dividend+2,w
 10261     1FCD  1D03               	skipz
 10262     1FCE  2FD5               	goto	u2945
 10263     1FCF  0871               	movf	___lldiv@divisor+1,w
 10264     1FD0  0275               	subwf	___lldiv@dividend+1,w
 10265     1FD1  1D03               	skipz
 10266     1FD2  2FD5               	goto	u2945
 10267     1FD3  0870               	movf	___lldiv@divisor,w
 10268     1FD4  0274               	subwf	___lldiv@dividend,w
 10269     1FD5                     u2945:
 10270     1FD5  1C03               	skipc
 10271     1FD6  2FD8               	goto	u2941
 10272     1FD7  2FD9               	goto	u2940
 10273     1FD8                     u2941:
 10274     1FD8  2FE8               	goto	l2500
 10275     1FD9                     u2940:
 10276     1FD9                     l2496:
 10277     1FD9  0870               	movf	___lldiv@divisor,w
 10278     1FDA  02F4               	subwf	___lldiv@dividend,f
 10279     1FDB  0871               	movf	___lldiv@divisor+1,w
 10280     1FDC  1C03               	skipc
 10281     1FDD  0F71               	incfsz	___lldiv@divisor+1,w
 10282     1FDE  02F5               	subwf	___lldiv@dividend+1,f
 10283     1FDF  0872               	movf	___lldiv@divisor+2,w
 10284     1FE0  1C03               	skipc
 10285     1FE1  0F72               	incfsz	___lldiv@divisor+2,w
 10286     1FE2  02F6               	subwf	___lldiv@dividend+2,f
 10287     1FE3  0873               	movf	___lldiv@divisor+3,w
 10288     1FE4  1C03               	skipc
 10289     1FE5  0F73               	incfsz	___lldiv@divisor+3,w
 10290     1FE6  02F7               	subwf	___lldiv@dividend+3,f
 10291     1FE7                     l2498:
 10292     1FE7  1479               	bsf	___lldiv@quotient,0
 10293     1FE8                     l2500:
 10294     1FE8  3001               	movlw	1
 10295     1FE9                     u2955:
 10296     1FE9  1003               	clrc
 10297     1FEA  0CF3               	rrf	___lldiv@divisor+3,f
 10298     1FEB  0CF2               	rrf	___lldiv@divisor+2,f
 10299     1FEC  0CF1               	rrf	___lldiv@divisor+1,f
 10300     1FED  0CF0               	rrf	___lldiv@divisor,f
 10301     1FEE  3EFF               	addlw	-1
 10302     1FEF  1D03               	skipz
 10303     1FF0  2FE9               	goto	u2955
 10304     1FF1                     l2502:
 10305     1FF1  3001               	movlw	1
 10306     1FF2  02FD               	subwf	___lldiv@counter,f
 10307     1FF3  1D03               	btfss	3,2
 10308     1FF4  2FF6               	goto	u2961
 10309     1FF5  2FF7               	goto	u2960
 10310     1FF6                     u2961:
 10311     1FF6  2FBE               	goto	l2492
 10312     1FF7                     u2960:
 10313     1FF7                     l2504:
 10314     1FF7  087C               	movf	___lldiv@quotient+3,w
 10315     1FF8  00F3               	movwf	?___lldiv+3
 10316     1FF9  087B               	movf	___lldiv@quotient+2,w
 10317     1FFA  00F2               	movwf	?___lldiv+2
 10318     1FFB  087A               	movf	___lldiv@quotient+1,w
 10319     1FFC  00F1               	movwf	?___lldiv+1
 10320     1FFD  0879               	movf	___lldiv@quotient,w
 10321     1FFE  00F0               	movwf	?___lldiv
 10322     1FFF                     l479:
 10323     1FFF  0008               	return
 10324     2000                     __end_of___lldiv:
 10325                           
 10326                           	psect	text29
 10327     1D76                     __ptext29:	
 10328 ;; *************** function _Lcd_Write_String_4bits *****************
 10329 ;; Defined at:
 10330 ;;		line 99 in file "configLCD_4bits.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  a               2    5[COMMON] PTR unsigned char 
 10333 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(5), 
 10334 ;;		 -> STR_4(5), STR_3(6), STR_2(5), distanciaLCD(16), 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  i               2   10[COMMON] int 
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10346 ;;      Params:         2       0       0       0       0
 10347 ;;      Locals:         2       0       0       0       0
 10348 ;;      Temps:          3       0       0       0       0
 10349 ;;      Totals:         7       0       0       0       0
 10350 ;;Total ram usage:        7 bytes
 10351 ;; Hardware stack levels used: 1
 10352 ;; Hardware stack levels required when called: 2
 10353 ;; This function calls:
 10354 ;;		_Lcd_Write_Char_4bits
 10355 ;; This function is called by:
 10356 ;;		_main
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360     1D76                     _Lcd_Write_String_4bits:	
 10361                           ;psect for function _Lcd_Write_String_4bits
 10362                           
 10363     1D76                     l3406:	
 10364                           ;incstack = 0
 10365                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
 10366                           
 10367                           
 10368                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
 10369     1D76  01FA               	clrf	Lcd_Write_String_4bits@i
 10370     1D77  01FB               	clrf	Lcd_Write_String_4bits@i+1
 10371     1D78  2D9B               	goto	l3412
 10372     1D79                     l3408:
 10373                           
 10374                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
 10375     1D79  087A               	movf	Lcd_Write_String_4bits@i,w
 10376     1D7A  0775               	addwf	Lcd_Write_String_4bits@a,w
 10377     1D7B  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10378     1D7C  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10379     1D7D  00F7               	movwf	??_Lcd_Write_String_4bits
 10380     1D7E  1803               	skipnc
 10381     1D7F  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10382     1D80  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10383     1D81  2D83               	goto	u5190
 10384     1D82  03F7               	decf	??_Lcd_Write_String_4bits,f
 10385     1D83                     u5190:
 10386     1D83  0877               	movf	??_Lcd_Write_String_4bits,w
 10387     1D84  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10388     1D85  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10389     1D86  1283               	bcf	3,5	;RP0=0, select bank0
 10390     1D87  1303               	bcf	3,6	;RP1=0, select bank0
 10391     1D88  00FF               	movwf	btemp+1
 10392     1D89  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10393     1D8A  0084               	movwf	4
 10394     1D8B  120A  118A  2003  160A  158A  	fcall	stringtab
 10395     1D90  160A  158A  2509  160A  158A  	fcall	_Lcd_Write_Char_4bits
 10396     1D95                     l3410:
 10397     1D95  3001               	movlw	1
 10398     1D96  07FA               	addwf	Lcd_Write_String_4bits@i,f
 10399     1D97  1803               	skipnc
 10400     1D98  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
 10401     1D99  3000               	movlw	0
 10402     1D9A  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
 10403     1D9B                     l3412:
 10404     1D9B  087A               	movf	Lcd_Write_String_4bits@i,w
 10405     1D9C  0775               	addwf	Lcd_Write_String_4bits@a,w
 10406     1D9D  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10407     1D9E  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10408     1D9F  00F7               	movwf	??_Lcd_Write_String_4bits
 10409     1DA0  1803               	skipnc
 10410     1DA1  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10411     1DA2  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10412     1DA3  2DA5               	goto	u5200
 10413     1DA4  03F7               	decf	??_Lcd_Write_String_4bits,f
 10414     1DA5                     u5200:
 10415     1DA5  0877               	movf	??_Lcd_Write_String_4bits,w
 10416     1DA6  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10417     1DA7  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10418     1DA8  1283               	bcf	3,5	;RP0=0, select bank0
 10419     1DA9  1303               	bcf	3,6	;RP1=0, select bank0
 10420     1DAA  00FF               	movwf	btemp+1
 10421     1DAB  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10422     1DAC  0084               	movwf	4
 10423     1DAD  120A  118A  2003  160A  158A  	fcall	stringtab
 10424     1DB2  3A00               	xorlw	0
 10425     1DB3  1D03               	skipz
 10426     1DB4  2DB6               	goto	u5211
 10427     1DB5  2DB7               	goto	u5210
 10428     1DB6                     u5211:
 10429     1DB6  2D79               	goto	l3408
 10430     1DB7                     u5210:
 10431     1DB7                     l99:
 10432     1DB7  0008               	return
 10433     1DB8                     __end_of_Lcd_Write_String_4bits:
 10434                           
 10435                           	psect	text30
 10436     1D09                     __ptext30:	
 10437 ;; *************** function _Lcd_Write_Char_4bits *****************
 10438 ;; Defined at:
 10439 ;;		line 84 in file "configLCD_4bits.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;  a               1    wreg     unsigned char 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  a               1    4[COMMON] unsigned char 
 10444 ;;  y               1    3[COMMON] unsigned char 
 10445 ;;  temp            1    2[COMMON] unsigned char 
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  1    wreg      void 
 10448 ;; Registers used:
 10449 ;;		wreg, status,2, status,0, pclath, cstack
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10455 ;;      Params:         0       0       0       0       0
 10456 ;;      Locals:         3       0       0       0       0
 10457 ;;      Temps:          1       0       0       0       0
 10458 ;;      Totals:         4       0       0       0       0
 10459 ;;Total ram usage:        4 bytes
 10460 ;; Hardware stack levels used: 1
 10461 ;; Hardware stack levels required when called: 1
 10462 ;; This function calls:
 10463 ;;		_Lcd_Port_4bits
 10464 ;; This function is called by:
 10465 ;;		_Lcd_Write_String_4bits
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469     1D09                     _Lcd_Write_Char_4bits:	
 10470                           ;psect for function _Lcd_Write_Char_4bits
 10471                           
 10472                           
 10473                           ;incstack = 0
 10474                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
 10475                           ;Lcd_Write_Char_4bits@a stored from wreg
 10476     1D09  00F4               	movwf	Lcd_Write_Char_4bits@a
 10477     1D0A                     l3002:
 10478                           
 10479                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
 10480     1D0A  0874               	movf	Lcd_Write_Char_4bits@a,w
 10481     1D0B  390F               	andlw	15
 10482     1D0C  00F2               	movwf	Lcd_Write_Char_4bits@temp
 10483                           
 10484                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
 10485     1D0D  0874               	movf	Lcd_Write_Char_4bits@a,w
 10486     1D0E  39F0               	andlw	240
 10487     1D0F  00F3               	movwf	Lcd_Write_Char_4bits@y
 10488     1D10                     l3004:
 10489                           
 10490                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
 10491     1D10  1283               	bcf	3,5	;RP0=0, select bank0
 10492     1D11  1303               	bcf	3,6	;RP1=0, select bank0
 10493     1D12  1508               	bsf	8,2	;volatile
 10494     1D13                     l3006:
 10495                           
 10496                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
 10497     1D13  0873               	movf	Lcd_Write_Char_4bits@y,w
 10498     1D14  00F1               	movwf	??_Lcd_Write_Char_4bits
 10499     1D15  3004               	movlw	4
 10500     1D16                     u4155:
 10501     1D16  1003               	clrc
 10502     1D17  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
 10503     1D18  3EFF               	addlw	-1
 10504     1D19  1D03               	skipz
 10505     1D1A  2D16               	goto	u4155
 10506     1D1B  0871               	movf	??_Lcd_Write_Char_4bits,w
 10507     1D1C  160A  158A  23FC  160A  158A  	fcall	_Lcd_Port_4bits
 10508     1D21                     l3008:
 10509                           
 10510                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
 10511     1D21  1283               	bcf	3,5	;RP0=0, select bank0
 10512     1D22  1303               	bcf	3,6	;RP1=0, select bank0
 10513     1D23  1588               	bsf	8,3	;volatile
 10514     1D24                     l3010:
 10515                           
 10516                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10517     1D24  301A               	movlw	26
 10518     1D25  00F1               	movwf	??_Lcd_Write_Char_4bits
 10519     1D26                     u5737:
 10520     1D26  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10521     1D27  2D26               	goto	u5737
 10522     1D28  0000               	nop
 10523     1D29                     l3012:
 10524                           
 10525                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
 10526     1D29  1283               	bcf	3,5	;RP0=0, select bank0
 10527     1D2A  1303               	bcf	3,6	;RP1=0, select bank0
 10528     1D2B  1188               	bcf	8,3	;volatile
 10529     1D2C                     l3014:
 10530                           
 10531                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
 10532     1D2C  0872               	movf	Lcd_Write_Char_4bits@temp,w
 10533     1D2D  160A  158A  23FC  160A  158A  	fcall	_Lcd_Port_4bits
 10534     1D32                     l3016:
 10535                           
 10536                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
 10537     1D32  1283               	bcf	3,5	;RP0=0, select bank0
 10538     1D33  1303               	bcf	3,6	;RP1=0, select bank0
 10539     1D34  1588               	bsf	8,3	;volatile
 10540     1D35                     l3018:
 10541                           
 10542                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10543     1D35  301A               	movlw	26
 10544     1D36  00F1               	movwf	??_Lcd_Write_Char_4bits
 10545     1D37                     u5747:
 10546     1D37  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10547     1D38  2D37               	goto	u5747
 10548     1D39  0000               	nop
 10549     1D3A                     l3020:
 10550                           
 10551                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
 10552     1D3A  1283               	bcf	3,5	;RP0=0, select bank0
 10553     1D3B  1303               	bcf	3,6	;RP1=0, select bank0
 10554     1D3C  1188               	bcf	8,3	;volatile
 10555     1D3D                     l93:
 10556     1D3D  0008               	return
 10557     1D3E                     __end_of_Lcd_Write_Char_4bits:
 10558                           
 10559                           	psect	text31
 10560     1DFC                     __ptext31:	
 10561 ;; *************** function _Lcd_Set_Cursor_4bits *****************
 10562 ;; Defined at:
 10563 ;;		line 49 in file "configLCD_4bits.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  a               1    wreg     unsigned char 
 10566 ;;  b               1    4[COMMON] unsigned char 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;  a               1    6[COMMON] unsigned char 
 10569 ;;  temp            1    9[COMMON] unsigned char 
 10570 ;;  y               1    8[COMMON] unsigned char 
 10571 ;;  z               1    7[COMMON] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      void 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0, pclath, cstack
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10581 ;;      Params:         1       0       0       0       0
 10582 ;;      Locals:         4       0       0       0       0
 10583 ;;      Temps:          1       0       0       0       0
 10584 ;;      Totals:         6       0       0       0       0
 10585 ;;Total ram usage:        6 bytes
 10586 ;; Hardware stack levels used: 1
 10587 ;; Hardware stack levels required when called: 2
 10588 ;; This function calls:
 10589 ;;		_Lcd_Cmd_4bits
 10590 ;; This function is called by:
 10591 ;;		_main
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595     1DFC                     _Lcd_Set_Cursor_4bits:	
 10596                           ;psect for function _Lcd_Set_Cursor_4bits
 10597                           
 10598                           
 10599                           ;incstack = 0
 10600                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
 10601                           ;Lcd_Set_Cursor_4bits@a stored from wreg
 10602     1DFC  00F6               	movwf	Lcd_Set_Cursor_4bits@a
 10603     1DFD                     l3386:
 10604                           
 10605                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
 10606     1DFD  0376               	decf	Lcd_Set_Cursor_4bits@a,w
 10607     1DFE  1D03               	btfss	3,2
 10608     1DFF  2E01               	goto	u5151
 10609     1E00  2E02               	goto	u5150
 10610     1E01                     u5151:
 10611     1E01  2E1F               	goto	l3396
 10612     1E02                     u5150:
 10613     1E02                     l3388:
 10614                           
 10615                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
 10616     1E02  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10617     1E03  3E7F               	addlw	127
 10618     1E04  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10619                           
 10620                           ;configLCD_4bits.c: 53:         z = temp >> 4;
 10621     1E05  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10622     1E06  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10623     1E07  3004               	movlw	4
 10624     1E08                     u5165:
 10625     1E08  1003               	clrc
 10626     1E09  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10627     1E0A  3EFF               	addlw	-1
 10628     1E0B  1D03               	skipz
 10629     1E0C  2E08               	goto	u5165
 10630     1E0D  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10631     1E0E  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10632     1E0F                     l3390:
 10633                           
 10634                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
 10635     1E0F  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10636     1E10  390F               	andlw	15
 10637     1E11  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10638     1E12                     l3392:
 10639                           
 10640                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
 10641     1E12  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10642     1E13  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10643     1E18                     l3394:
 10644                           
 10645                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
 10646     1E18  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10647     1E19  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10648                           
 10649                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
 10650     1E1E  2E41               	goto	l87
 10651     1E1F                     l3396:
 10652     1E1F  3002               	movlw	2
 10653     1E20  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
 10654     1E21  1D03               	btfss	3,2
 10655     1E22  2E24               	goto	u5171
 10656     1E23  2E25               	goto	u5170
 10657     1E24                     u5171:
 10658     1E24  2E41               	goto	l87
 10659     1E25                     u5170:
 10660     1E25                     l3398:
 10661                           
 10662                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
 10663     1E25  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10664     1E26  3EBF               	addlw	191
 10665     1E27  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10666                           
 10667                           ;configLCD_4bits.c: 59:         z = temp >> 4;
 10668     1E28  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10669     1E29  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10670     1E2A  3004               	movlw	4
 10671     1E2B                     u5185:
 10672     1E2B  1003               	clrc
 10673     1E2C  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10674     1E2D  3EFF               	addlw	-1
 10675     1E2E  1D03               	skipz
 10676     1E2F  2E2B               	goto	u5185
 10677     1E30  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10678     1E31  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10679     1E32                     l3400:
 10680                           
 10681                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
 10682     1E32  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10683     1E33  390F               	andlw	15
 10684     1E34  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10685     1E35                     l3402:
 10686                           
 10687                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
 10688     1E35  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10689     1E36  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10690     1E3B                     l3404:
 10691                           
 10692                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
 10693     1E3B  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10694     1E3C  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10695     1E41                     l87:
 10696     1E41  0008               	return
 10697     1E42                     __end_of_Lcd_Set_Cursor_4bits:
 10698                           
 10699                           	psect	text32
 10700     1BB6                     __ptext32:	
 10701 ;; *************** function _Lcd_Clear_4bits *****************
 10702 ;; Defined at:
 10703 ;;		line 44 in file "configLCD_4bits.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;		None
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;		None
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0, pclath, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10717 ;;      Params:         0       0       0       0       0
 10718 ;;      Locals:         0       0       0       0       0
 10719 ;;      Temps:          0       0       0       0       0
 10720 ;;      Totals:         0       0       0       0       0
 10721 ;;Total ram usage:        0 bytes
 10722 ;; Hardware stack levels used: 1
 10723 ;; Hardware stack levels required when called: 2
 10724 ;; This function calls:
 10725 ;;		_Lcd_Cmd_4bits
 10726 ;; This function is called by:
 10727 ;;		_main
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731     1BB6                     _Lcd_Clear_4bits:	
 10732                           ;psect for function _Lcd_Clear_4bits
 10733                           
 10734     1BB6                     l3384:	
 10735                           ;incstack = 0
 10736                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
 10737                           
 10738                           
 10739                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
 10740     1BB6  3000               	movlw	0
 10741     1BB7  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10742                           
 10743                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
 10744     1BBC  3001               	movlw	1
 10745     1BBD  160A  158A  23E2  160A  158A  	fcall	_Lcd_Cmd_4bits
 10746     1BC2                     l81:
 10747     1BC2  0008               	return
 10748     1BC3                     __end_of_Lcd_Clear_4bits:
 10749                           
 10750                           	psect	text33
 10751     1BE2                     __ptext33:	
 10752 ;; *************** function _Lcd_Cmd_4bits *****************
 10753 ;; Defined at:
 10754 ;;		line 36 in file "configLCD_4bits.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;  a               1    wreg     unsigned char 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  a               1    3[COMMON] unsigned char 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, status,2, status,0, pclath, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10768 ;;      Params:         0       0       0       0       0
 10769 ;;      Locals:         1       0       0       0       0
 10770 ;;      Temps:          2       0       0       0       0
 10771 ;;      Totals:         3       0       0       0       0
 10772 ;;Total ram usage:        3 bytes
 10773 ;; Hardware stack levels used: 1
 10774 ;; Hardware stack levels required when called: 1
 10775 ;; This function calls:
 10776 ;;		_Lcd_Port_4bits
 10777 ;; This function is called by:
 10778 ;;		_Lcd_Clear_4bits
 10779 ;;		_Lcd_Set_Cursor_4bits
 10780 ;;		_Lcd_Init_4bits
 10781 ;;		_Lcd_Shift_Right_4bits
 10782 ;;		_Lcd_Shift_Left_4bits
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786     1BE2                     _Lcd_Cmd_4bits:	
 10787                           ;psect for function _Lcd_Cmd_4bits
 10788                           
 10789                           
 10790                           ;incstack = 0
 10791                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
 10792                           ;Lcd_Cmd_4bits@a stored from wreg
 10793     1BE2  00F3               	movwf	Lcd_Cmd_4bits@a
 10794     1BE3                     l2474:
 10795                           
 10796                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
 10797     1BE3  1283               	bcf	3,5	;RP0=0, select bank0
 10798     1BE4  1303               	bcf	3,6	;RP1=0, select bank0
 10799     1BE5  1108               	bcf	8,2	;volatile
 10800     1BE6                     l2476:
 10801                           
 10802                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
 10803     1BE6  0873               	movf	Lcd_Cmd_4bits@a,w
 10804     1BE7  160A  158A  23FC  160A  158A  	fcall	_Lcd_Port_4bits
 10805     1BEC                     l2478:
 10806                           
 10807                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
 10808     1BEC  1283               	bcf	3,5	;RP0=0, select bank0
 10809     1BED  1303               	bcf	3,6	;RP1=0, select bank0
 10810     1BEE  1588               	bsf	8,3	;volatile
 10811     1BEF                     l2480:
 10812                           
 10813                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10814     1BEF  300B               	movlw	11
 10815     1BF0  00F2               	movwf	??_Lcd_Cmd_4bits+1
 10816     1BF1  3062               	movlw	98
 10817     1BF2  00F1               	movwf	??_Lcd_Cmd_4bits
 10818     1BF3                     u5757:
 10819     1BF3  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
 10820     1BF4  2BF3               	goto	u5757
 10821     1BF5  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
 10822     1BF6  2BF3               	goto	u5757
 10823     1BF7  0000               	nop
 10824     1BF8                     l2482:
 10825                           
 10826                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
 10827     1BF8  1283               	bcf	3,5	;RP0=0, select bank0
 10828     1BF9  1303               	bcf	3,6	;RP1=0, select bank0
 10829     1BFA  1188               	bcf	8,3	;volatile
 10830     1BFB                     l78:
 10831     1BFB  0008               	return
 10832     1BFC                     __end_of_Lcd_Cmd_4bits:
 10833                           
 10834                           	psect	text34
 10835     1BFC                     __ptext34:	
 10836 ;; *************** function _Lcd_Port_4bits *****************
 10837 ;; Defined at:
 10838 ;;		line 14 in file "configLCD_4bits.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;  a               1    wreg     unsigned char 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  a               1    0[COMMON] unsigned char 
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		wreg
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10852 ;;      Params:         0       0       0       0       0
 10853 ;;      Locals:         1       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0
 10855 ;;      Totals:         1       0       0       0       0
 10856 ;;Total ram usage:        1 bytes
 10857 ;; Hardware stack levels used: 1
 10858 ;; This function calls:
 10859 ;;		Nothing
 10860 ;; This function is called by:
 10861 ;;		_Lcd_Cmd_4bits
 10862 ;;		_Lcd_Init_4bits
 10863 ;;		_Lcd_Write_Char_4bits
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867     1BFC                     _Lcd_Port_4bits:	
 10868                           ;psect for function _Lcd_Port_4bits
 10869                           
 10870                           
 10871                           ;incstack = 0
 10872                           ; Regs used in _Lcd_Port_4bits: [wreg]
 10873                           ;Lcd_Port_4bits@a stored from wreg
 10874     1BFC  00F0               	movwf	Lcd_Port_4bits@a
 10875     1BFD                     l2450:
 10876                           
 10877                           ;configLCD_4bits.c: 15:     if (a & 1)
 10878     1BFD  1C70               	btfss	Lcd_Port_4bits@a,0
 10879     1BFE  2C00               	goto	u2831
 10880     1BFF  2C01               	goto	u2830
 10881     1C00                     u2831:
 10882     1C00  2C05               	goto	l67
 10883     1C01                     u2830:
 10884     1C01                     l2452:
 10885                           
 10886                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
 10887     1C01  1283               	bcf	3,5	;RP0=0, select bank0
 10888     1C02  1303               	bcf	3,6	;RP1=0, select bank0
 10889     1C03  1608               	bsf	8,4	;volatile
 10890     1C04  2C08               	goto	l68
 10891     1C05                     l67:	
 10892                           ;configLCD_4bits.c: 17:     else
 10893                           
 10894                           
 10895                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
 10896     1C05  1283               	bcf	3,5	;RP0=0, select bank0
 10897     1C06  1303               	bcf	3,6	;RP1=0, select bank0
 10898     1C07  1208               	bcf	8,4	;volatile
 10899     1C08                     l68:
 10900                           
 10901                           ;configLCD_4bits.c: 20:     if (a & 2)
 10902     1C08  1CF0               	btfss	Lcd_Port_4bits@a,1
 10903     1C09  2C0B               	goto	u2841
 10904     1C0A  2C0C               	goto	u2840
 10905     1C0B                     u2841:
 10906     1C0B  2C0E               	goto	l69
 10907     1C0C                     u2840:
 10908     1C0C                     l2454:
 10909                           
 10910                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
 10911     1C0C  1688               	bsf	8,5	;volatile
 10912     1C0D  2C0F               	goto	l70
 10913     1C0E                     l69:	
 10914                           ;configLCD_4bits.c: 22:     else
 10915                           
 10916                           
 10917                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
 10918     1C0E  1288               	bcf	8,5	;volatile
 10919     1C0F                     l70:
 10920                           
 10921                           ;configLCD_4bits.c: 25:     if (a & 4)
 10922     1C0F  1D70               	btfss	Lcd_Port_4bits@a,2
 10923     1C10  2C12               	goto	u2851
 10924     1C11  2C13               	goto	u2850
 10925     1C12                     u2851:
 10926     1C12  2C15               	goto	l71
 10927     1C13                     u2850:
 10928     1C13                     l2456:
 10929                           
 10930                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
 10931     1C13  1708               	bsf	8,6	;volatile
 10932     1C14  2C16               	goto	l72
 10933     1C15                     l71:	
 10934                           ;configLCD_4bits.c: 27:     else
 10935                           
 10936                           
 10937                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
 10938     1C15  1308               	bcf	8,6	;volatile
 10939     1C16                     l72:
 10940                           
 10941                           ;configLCD_4bits.c: 30:     if (a & 8)
 10942     1C16  1DF0               	btfss	Lcd_Port_4bits@a,3
 10943     1C17  2C19               	goto	u2861
 10944     1C18  2C1A               	goto	u2860
 10945     1C19                     u2861:
 10946     1C19  2C1C               	goto	l73
 10947     1C1A                     u2860:
 10948     1C1A                     l2458:
 10949                           
 10950                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
 10951     1C1A  1788               	bsf	8,7	;volatile
 10952     1C1B  2C1D               	goto	l75
 10953     1C1C                     l73:	
 10954                           ;configLCD_4bits.c: 32:     else
 10955                           
 10956                           
 10957                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
 10958     1C1C  1388               	bcf	8,7	;volatile
 10959     1C1D                     l75:
 10960     1C1D  0008               	return
 10961     1C1E                     __end_of_Lcd_Port_4bits:
 10962                           
 10963                           	psect	text35
 10964     1B94                     __ptext35:	
 10965 ;; *************** function _I2C_Master_Write *****************
 10966 ;; Defined at:
 10967 ;;		line 62 in file "configI2C.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;  d               2    0[COMMON] unsigned int 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		wreg, status,2, status,0, pclath, cstack
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10981 ;;      Params:         2       0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0
 10984 ;;      Totals:         2       0       0       0       0
 10985 ;;Total ram usage:        2 bytes
 10986 ;; Hardware stack levels used: 1
 10987 ;; Hardware stack levels required when called: 1
 10988 ;; This function calls:
 10989 ;;		_I2C_Master_Wait
 10990 ;; This function is called by:
 10991 ;;		_main
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995     1B94                     _I2C_Master_Write:	
 10996                           ;psect for function _I2C_Master_Write
 10997                           
 10998     1B94                     l3364:	
 10999                           ;incstack = 0
 11000                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11001                           
 11002                           
 11003                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
 11004     1B94  160A  158A  23A9  160A  158A  	fcall	_I2C_Master_Wait
 11005     1B99                     l3366:
 11006                           
 11007                           ;configI2C.c: 65:     SSPBUF = d;
 11008     1B99  0870               	movf	I2C_Master_Write@d,w
 11009     1B9A  1283               	bcf	3,5	;RP0=0, select bank0
 11010     1B9B  1303               	bcf	3,6	;RP1=0, select bank0
 11011     1B9C  0093               	movwf	19	;volatile
 11012     1B9D                     l47:
 11013     1B9D  0008               	return
 11014     1B9E                     __end_of_I2C_Master_Write:
 11015                           
 11016                           	psect	text36
 11017     1B8B                     __ptext36:	
 11018 ;; *************** function _I2C_Master_Stop *****************
 11019 ;; Defined at:
 11020 ;;		line 52 in file "configI2C.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, status,0, pclath, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11034 ;;      Params:         0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 1
 11041 ;; This function calls:
 11042 ;;		_I2C_Master_Wait
 11043 ;; This function is called by:
 11044 ;;		_main
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048     1B8B                     _I2C_Master_Stop:	
 11049                           ;psect for function _I2C_Master_Stop
 11050                           
 11051     1B8B                     l3360:	
 11052                           ;incstack = 0
 11053                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11054                           
 11055                           
 11056                           ;configI2C.c: 54:     I2C_Master_Wait();
 11057     1B8B  160A  158A  23A9  160A  158A  	fcall	_I2C_Master_Wait
 11058     1B90                     l3362:
 11059                           
 11060                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
 11061     1B90  1683               	bsf	3,5	;RP0=1, select bank1
 11062     1B91  1303               	bcf	3,6	;RP1=0, select bank1
 11063     1B92  1511               	bsf	17,2	;volatile
 11064     1B93                     l44:
 11065     1B93  0008               	return
 11066     1B94                     __end_of_I2C_Master_Stop:
 11067                           
 11068                           	psect	text37
 11069     1B82                     __ptext37:	
 11070 ;; *************** function _I2C_Master_Start *****************
 11071 ;; Defined at:
 11072 ;;		line 36 in file "configI2C.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0, pclath, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11086 ;;      Params:         0       0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used: 1
 11092 ;; Hardware stack levels required when called: 1
 11093 ;; This function calls:
 11094 ;;		_I2C_Master_Wait
 11095 ;; This function is called by:
 11096 ;;		_main
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100     1B82                     _I2C_Master_Start:	
 11101                           ;psect for function _I2C_Master_Start
 11102                           
 11103     1B82                     l3356:	
 11104                           ;incstack = 0
 11105                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11106                           
 11107                           
 11108                           ;configI2C.c: 38:     I2C_Master_Wait();
 11109     1B82  160A  158A  23A9  160A  158A  	fcall	_I2C_Master_Wait
 11110     1B87                     l3358:
 11111                           
 11112                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
 11113     1B87  1683               	bsf	3,5	;RP0=1, select bank1
 11114     1B88  1303               	bcf	3,6	;RP1=0, select bank1
 11115     1B89  1411               	bsf	17,0	;volatile
 11116     1B8A                     l38:
 11117     1B8A  0008               	return
 11118     1B8B                     __end_of_I2C_Master_Start:
 11119                           
 11120                           	psect	text38
 11121     1CDB                     __ptext38:	
 11122 ;; *************** function _I2C_Master_Read *****************
 11123 ;; Defined at:
 11124 ;;		line 71 in file "configI2C.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  a               2    0[COMMON] unsigned short 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  temp            2    4[COMMON] unsigned short 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  2    0[COMMON] unsigned short 
 11131 ;; Registers used:
 11132 ;;		wreg, status,2, status,0, pclath, cstack
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11138 ;;      Params:         2       0       0       0       0
 11139 ;;      Locals:         2       0       0       0       0
 11140 ;;      Temps:          2       0       0       0       0
 11141 ;;      Totals:         6       0       0       0       0
 11142 ;;Total ram usage:        6 bytes
 11143 ;; Hardware stack levels used: 1
 11144 ;; Hardware stack levels required when called: 1
 11145 ;; This function calls:
 11146 ;;		_I2C_Master_Wait
 11147 ;; This function is called by:
 11148 ;;		_main
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152     1CDB                     _I2C_Master_Read:	
 11153                           ;psect for function _I2C_Master_Read
 11154                           
 11155     1CDB                     l3368:	
 11156                           ;incstack = 0
 11157                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11158                           
 11159                           
 11160                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
 11161     1CDB  160A  158A  23A9  160A  158A  	fcall	_I2C_Master_Wait
 11162     1CE0                     l3370:
 11163                           
 11164                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
 11165     1CE0  1683               	bsf	3,5	;RP0=1, select bank1
 11166     1CE1  1303               	bcf	3,6	;RP1=0, select bank1
 11167     1CE2  1591               	bsf	17,3	;volatile
 11168                           
 11169                           ;configI2C.c: 76:     I2C_Master_Wait();
 11170     1CE3  160A  158A  23A9  160A  158A  	fcall	_I2C_Master_Wait
 11171     1CE8                     l3372:
 11172                           
 11173                           ;configI2C.c: 77:     temp = SSPBUF;
 11174     1CE8  1283               	bcf	3,5	;RP0=0, select bank0
 11175     1CE9  1303               	bcf	3,6	;RP1=0, select bank0
 11176     1CEA  0813               	movf	19,w	;volatile
 11177     1CEB  00F2               	movwf	??_I2C_Master_Read
 11178     1CEC  01F3               	clrf	??_I2C_Master_Read+1
 11179     1CED  0872               	movf	??_I2C_Master_Read,w
 11180     1CEE  00F4               	movwf	I2C_Master_Read@temp
 11181     1CEF  0873               	movf	??_I2C_Master_Read+1,w
 11182     1CF0  00F5               	movwf	I2C_Master_Read@temp+1
 11183     1CF1                     l3374:
 11184                           
 11185                           ;configI2C.c: 78:     I2C_Master_Wait();
 11186     1CF1  160A  158A  23A9  160A  158A  	fcall	_I2C_Master_Wait
 11187     1CF6                     l3376:
 11188                           
 11189                           ;configI2C.c: 79:     if(a == 1){
 11190     1CF6  0370               	decf	I2C_Master_Read@a,w
 11191     1CF7  0471               	iorwf	I2C_Master_Read@a+1,w
 11192     1CF8  1D03               	btfss	3,2
 11193     1CF9  2CFB               	goto	u5141
 11194     1CFA  2CFC               	goto	u5140
 11195     1CFB                     u5141:
 11196     1CFB  2D00               	goto	l50
 11197     1CFC                     u5140:
 11198     1CFC                     l3378:
 11199                           
 11200                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
 11201     1CFC  1683               	bsf	3,5	;RP0=1, select bank1
 11202     1CFD  1303               	bcf	3,6	;RP1=0, select bank1
 11203     1CFE  1291               	bcf	17,5	;volatile
 11204                           
 11205                           ;configI2C.c: 81:     }else{
 11206     1CFF  2D03               	goto	l51
 11207     1D00                     l50:
 11208                           
 11209                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
 11210     1D00  1683               	bsf	3,5	;RP0=1, select bank1
 11211     1D01  1303               	bcf	3,6	;RP1=0, select bank1
 11212     1D02  1691               	bsf	17,5	;volatile
 11213     1D03                     l51:	
 11214                           ;configI2C.c: 83:     }
 11215                           
 11216                           
 11217                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
 11218     1D03  1611               	bsf	17,4	;volatile
 11219     1D04                     l3380:
 11220                           
 11221                           ;configI2C.c: 85:     return temp;
 11222     1D04  0875               	movf	I2C_Master_Read@temp+1,w
 11223     1D05  00F1               	movwf	?_I2C_Master_Read+1
 11224     1D06  0874               	movf	I2C_Master_Read@temp,w
 11225     1D07  00F0               	movwf	?_I2C_Master_Read
 11226     1D08                     l52:
 11227     1D08  0008               	return
 11228     1D09                     __end_of_I2C_Master_Read:
 11229                           
 11230                           	psect	text39
 11231     1BA9                     __ptext39:	
 11232 ;; *************** function _I2C_Master_Wait *****************
 11233 ;; Defined at:
 11234 ;;		line 29 in file "configI2C.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      void 
 11241 ;; Registers used:
 11242 ;;		wreg, status,2
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11248 ;;      Params:         0       0       0       0       0
 11249 ;;      Locals:         0       0       0       0       0
 11250 ;;      Temps:          0       0       0       0       0
 11251 ;;      Totals:         0       0       0       0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used: 1
 11254 ;; This function calls:
 11255 ;;		Nothing
 11256 ;; This function is called by:
 11257 ;;		_I2C_Master_Start
 11258 ;;		_I2C_Master_Stop
 11259 ;;		_I2C_Master_Write
 11260 ;;		_I2C_Master_Read
 11261 ;;		_I2C_Master_RepeatedStart
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265     1BA9                     _I2C_Master_Wait:	
 11266                           ;psect for function _I2C_Master_Wait
 11267                           
 11268     1BA9                     l2984:	
 11269                           ;incstack = 0
 11270                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11271                           
 11272     1BA9                     l32:	
 11273                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11274                           
 11275     1BA9  1683               	bsf	3,5	;RP0=1, select bank1
 11276     1BAA  1303               	bcf	3,6	;RP1=0, select bank1
 11277     1BAB  1914               	btfsc	20,2	;volatile
 11278     1BAC  2BAE               	goto	u4131
 11279     1BAD  2BAF               	goto	u4130
 11280     1BAE                     u4131:
 11281     1BAE  2BA9               	goto	l32
 11282     1BAF                     u4130:
 11283     1BAF                     l2986:
 11284     1BAF  0811               	movf	17,w	;volatile
 11285     1BB0  391F               	andlw	31
 11286     1BB1  1D03               	btfss	3,2
 11287     1BB2  2BB4               	goto	u4141
 11288     1BB3  2BB5               	goto	u4140
 11289     1BB4                     u4141:
 11290     1BB4  2BA9               	goto	l32
 11291     1BB5                     u4140:
 11292     1BB5                     l35:
 11293     1BB5  0008               	return
 11294     1BB6                     __end_of_I2C_Master_Wait:
 11295     007E                     btemp	set	126	;btemp
 11296     007E                     wtemp0	set	126
 11297                           
 11298                           	psect	idloc
 11299                           
 11300                           ;Config register IDLOC0 @ 0x2000
 11301                           ;	unspecified, using default values
 11302     2000                     	org	8192
 11303     2000  3FFF               	dw	16383
 11304                           
 11305                           ;Config register IDLOC1 @ 0x2001
 11306                           ;	unspecified, using default values
 11307     2001                     	org	8193
 11308     2001  3FFF               	dw	16383
 11309                           
 11310                           ;Config register IDLOC2 @ 0x2002
 11311                           ;	unspecified, using default values
 11312     2002                     	org	8194
 11313     2002  3FFF               	dw	16383
 11314                           
 11315                           ;Config register IDLOC3 @ 0x2003
 11316                           ;	unspecified, using default values
 11317     2003                     	org	8195
 11318     2003  3FFF               	dw	16383
 11319                           
 11320                           	psect	config
 11321                           
 11322                           ;Config register CONFIG1 @ 0x2007
 11323                           ;	Oscillator Selection bits
 11324                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11325                           ;	Watchdog Timer Enable bit
 11326                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11327                           ;	Power-up Timer Enable bit
 11328                           ;	PWRTE = OFF, PWRT disabled
 11329                           ;	RE3/MCLR pin function select bit
 11330                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11331                           ;	Code Protection bit
 11332                           ;	CP = OFF, Program memory code protection is disabled
 11333                           ;	Data Code Protection bit
 11334                           ;	CPD = OFF, Data memory code protection is disabled
 11335                           ;	Brown Out Reset Selection bits
 11336                           ;	BOREN = OFF, BOR disabled
 11337                           ;	Internal External Switchover bit
 11338                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11339                           ;	Fail-Safe Clock Monitor Enabled bit
 11340                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11341                           ;	Low Voltage Programming Enable bit
 11342                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11343                           ;	In-Circuit Debugger Mode bit
 11344                           ;	DEBUG = 0x1, unprogramme 11345     2007                     	org	8199
 11346     2007  20D4               	dw	8404
 11347                           
 11348                           ;Config register CONFIG2 @ 0x2008
 11349                           ;	Brown-out Reset Selection bit
 11350                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11351                           ;	Flash Program Memory Self Write Enable bits
 11352                           ;	WRT = OFF, Write protection off
 11353     2008                     	org	8200
 11354     2008  3FFF               	dw	16383

Data Sizes:
    Strings     52
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     39      62
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> distanciaLCD(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[5]), distanciaLCD(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_I2C_Master_Read
    ___flsub->___xxtofl
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36412
                                             35 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                             ___flge
                            ___fltol
                           ___xxtofl
                              _setup
                       _setupMotores
                           _setupPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30954
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     942
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupMotores                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     936
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     876
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     988
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___flge
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _setupMotores
   _setupPWM
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3E       7       77.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 04:19:20 2023

                             pc 0002                              l32 1BA9                              l50 1D00  
                            l35 1BB5                              l51 1D03                              l52 1D08  
                            l44 1B93                              l60 1BCF                              l29 1D75  
                            l38 1B8A                              l70 1C0F                              l47 1B9D  
                            l71 1C15                              l72 1C16                              l73 1C1C  
                            l81 1BC2                              l90 1F99                              l75 1C1D  
                            l67 1C05                              l68 1C08                              l69 1C0E  
                            l93 1D3D                              l78 1BFB                              l87 1E41  
                            l99 1DB7                    ___awdiv@sign 0021                              fsr 0004  
           ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076                             l261 1C5E  
                           l263 1C62                             l264 1C66                             l193 1CDA  
                           l433 07AB                             l425 064A                             l258 00F4  
                           l418 060C                             l443 1C73                             l445 1C8B  
                           l613 095B                             l373 0FFF                             l630 1E7A  
                           l614 08C2                             l366 15A7                             l631 1E8F  
                           l439 07EE                             l624 094E                             l392 021C  
                           l801 1795                             l617 091E                             l609 1F3C  
                           l634 081E                             l642 1BA8                             l812 17F5  
                           l804 17D3                             l660 11D1                             l629 1E5E  
                           l637 088A                             l813 17FF                             l653 1105  
                           l661 1145                             l638 08A3                             l646 111A  
                           l910 0119                             l479 1FFF                             l671 11C4  
                           l816 1C41                             l656 111A                             l912 01AE  
                           l664 1194                             l770 1603                             l930 1BE1  
                           l923 0178                             l924 0184                             l916 015C  
                           l596 10A2                             l749 1DFB                             l774 1686  
                           l791 174F                             l783 17FF                             l759 1039  
                           l776 165F                             l872 0C10                             l866 0CA0  
                           l795 1773                             l699 1EE3                             l885 1CA0  
                           l878 0C94                             l887 1CB2                             _GIE 005F  
                           _PR2 0092                             _dis 00CD                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0076                    ___flmul@aexp 0036  
                  ___flmul@bexp 0037                    ___flmul@sign 0031                    ___flmul@temp 003C  
                  ___flmul@prod 0038                    ___fltol@exp1 005A                            l3000 1F61  
                          l3010 1D24                            l3002 1D0A                            l3020 1D3A  
                          l3012 1D29                            l3004 1D10                            l3014 1D2C  
                          l3006 1D13                            l3110 115D                            l3030 14B3  
                          l3022 13A0                            l3016 1D32                            l3008 1D21  
                          l3200 1C6D                            l3120 1186                            l3112 1164  
                          l3104 1146                            l3032 14B9                            l3024 13A6  
                          l3040 0CA4                            l3018 1D35                            l3210 1E42  
                          l3202 1C7A                            l3130 11A0                            l3122 118E  
                          l3114 116D                            l3106 114C                            l3042 0CA8  
                          l2500 1FE8                            l3212 1E56                            l3300 1ED5  
                          l3204 1C81                            l3140 11C9                            l3124 1198  
                          l3132 11B2                            l3116 117B                            l3108 115B  
                          l3036 1564                            l3052 0D99                            l3044 0CAA  
                          l2502 1FF1                            l3214 1E72                            l3230 083E  
                          l3222 0802                            l3302 1EDB                            l3206 1C87  
                          l3150 08B8                            l3118 1185                            l2510 103D  
                          l3070 0F44                            l3054 0DA0                            l3046 0CB1  
                          l3062 0E55                            l3400 1E32                            l2504 1FF7  
                          l3216 1E8C                            l3232 0862                            l3224 0816  
                          l3320 0121                            l3312 00F8                            l3160 08DC  
                          l3144 08A4                            l2600 1DCE                            l3080 1BD1  
                          l2520 1051                            l2512 1041                            l3072 0F4B  
                          l3064 0E5C                            l2450 1BFD                            l3402 1E35  
                          l3410 1D95                            l3218 1E8E                            l3234 0866  
                          l3226 0832                            l3242 1B9E                            l3306 1C1E  
                          l3250 10A3                            l3330 0141                            l3314 00FD  
                          l3170 090E                            l3162 08DE                            l3146 08AF  
                          l3138 11B9                            l2610 1DF1                            l2602 1DD2  
                          l3082 1BD2                            l2530 1067                            l2522 1055  
                          l2514 1046                            l3058 0E28                            l2452 1C01  
                          l3404 1E3B                            l3412 1D9B                            l3420 1CBD  
                          l3236 08A0                            l3228 083A                            l3244 1BA6  
                          l2700 161F                            l3308 1C22                            l3260 10CB  
                          l3252 10AE                            l3340 0172                            l3332 0145  
                          l3324 012A                            l3316 0101                            l3172 090F  
                          l3164 08E5                            l3156 08C3                            l3092 111B  
                          l2460 1C8D                            l2604 1DE3                            l2612 1DF7  
                          l2620 1009                            l3084 1BD8                            l2540 1087  
                          l2532 106B                            l2524 1057                            l2516 1048  
                          l2508 103A                            l3076 0FD3                            l3500 01D3  
                          l2454 1C0C                            l3406 1D76                            l3430 1CD5  
                          l3422 1CC0                            l3414 1CB3                            l3238 08A2  
                          l3246 1BA8                            l2710 1629                            l2702 1621  
                          l3262 10D3                            l3350 01A5                            l3342 017C  
                          l3334 0153                            l3326 012D                            l3318 0111  
                          l3190 0943                            l3182 092A                            l3174 0918  
                          l3166 08EE                            l3158 08CB                            l3094 112C  
                          l2470 1CAE                            l2462 1C8F                            l2606 1DE9  
                          l2630 1028                            l2622 1010                            l3086 1BDE  
                          l2542 108E                            l2534 106F                            l2526 105D  
                          l2518 104C                            l3510 0203                            l3502 01D4  
                          l3360 1B8B                            l2456 1C13                            l2480 1BEF  
                          l3408 1D79                            l3424 1CC1                            l3416 1CBA  
                          l3440 00E5                            l3432 00DA                            l2800 1792  
                          l2720 1647                            l2712 162B                            l2704 1623  
                          l2640 15AD                            l3280 10FA                            l3272 10E1  
                          l3264 10D5                            l3256 10B7                            l3352 01A6  
                          l3344 0186                            l3336 0163                            l3328 013A  
                          l3192 0953                            l3176 0922                            l3184 093C  
                          l3168 0900                            l2464 1C96                            l2608 1DEA  
                          l2632 102F                            l2624 1014                            l2616 1000  
                          l3088 1BE0                            l2536 1080                            l2528 1060  
                          l2544 1094                            l2560 1EF0                            l2552 1EE4  
                          l3520 021E                            l3512 0207                            l3504 01D8  
                          l3370 1CE0                            l3362 1B90                            l2458 1C1A  
                          l2482 1BF8                            l2474 1BE3                            l2490 1FBA  
                          l3426 1CC2                            l3418 1CBC                            l3450 00EC  
                          l3442 00E6                            l3434 00E1                            l2810 17B1  
                          l2730 1671                            l2722 1663                            l2714 162D  
                          l2706 1625                            l2650 15C0                            l2642 15B1  
                          l3282 110A                            l3266 10D9                            l3274 10F3  
                          l3258 10CA                            l3290 1E9B                            l3346 019C  
                          l3338 016E                            l3098 1135                            l2466 1C9A  
                          l2626 1018                            l2618 1006                            l2634 1035  
                          l2546 1099                            l2538 1086                            l2570 1F09  
                          l2562 1EF4                            l2554 1EE5                            l3610 0592  
                          l3530 025C                            l3522 023A                            l3506 01DB  
                          l3514 0218                            l3380 1D04                            l3372 1CE8  
                          l3356 1B82                            l3364 1B94                            l2476 1BE6  
                          l2492 1FBE                            l2484 1F9A                            l3428 1CCF  
                          l3460 00F3                            l3452 00EF                            l3444 00E7  
                          l3436 00E3                            l2820 17EA                            l2812 17CF  
                          l2804 179A                            l2732 167A                            l2724 166A  
                          l2708 1627                            l2716 162F                            l2660 15D6  
                          l2652 15C8                            l2644 15B5                            l3284 110F  
                          l3292 1EA8                            l3196 1C67                            l3348 01A1  
                          l2468 1CA9                            l2900 0AD6                            l2628 1022  
                          l2548 109E                            l2580 1F28                            l2572 1F0D  
                          l2564 1EF9                            l2556 1EE9                            l3620 0602  
                          l3612 059E                            l3604 0551                            l3540 029A  
                          l3532 0260                            l3524 0246                            l3516 021A  
                          l3508 01F0                            l3374 1CF1                            l3358 1B87  
                          l3366 1B99                            l2478 1BEC                            l3390 1E0F  
                          l2494 1FC7                            l2486 1FAA                            l3454 00F0  
                          l3446 00E8                            l3438 00E4                            l3470 1C50  
                          l3462 1C42                            l2830 17FE                            l2822 17EB  
                          l2814 17D8                            l2806 179F                            l2750 16BE  
                          l2742 1698                            l2726 166C                            l2734 167E  
                          l2718 1630                            l2670 15E6                            l2662 15DC  
                          l2654 15C9                            l2646 15B6                            l2638 15A8  
                          l3294 1EAC                            l3286 1E90                            l3198 1C69  
                          l2910 0B6E                            l2902 0AED                            l2590 1DB8  
                          l2574 1F11                            l2566 1EFF                            l2582 1F2E  
                          l2558 1EEE                            l3630 0632                            l3622 0614  
                          l3614 05A3                            l3550 02EA                            l3542 02B3  
                          l3534 0279                            l3526 024A                            l3710 11EF  
                          l3702 11D2                            l3376 1CF6                            l3368 1CDB  
                          l3384 1BB6                            l3392 1E12                            l2496 1FD9  
                          l2488 1FAD                            l3456 00F1                            l3448 00E9  
                          l3480 1C59                            l3472 1C54                            l3464 1C46  
                          l2824 17EF                            l2816 17DD                            l2808 17AD  
                          l2752 16C0                            l2744 16AF                            l2736 168A  
                          l2760 16D3                            l2728 1670                            l2672 15EB  
                          l2680 15FB                            l2664 15DD                            l2648 15BB  
                          l2656 15CB                            l3296 1EBE                            l3288 1E98  
                          l2920 0BDC                            l2912 0B94                            l2904 0B0A  
                          l2840 096A                            l2832 095C                            l2592 1DBA  
                          l2584 1F33                            l2576 1F1B                            l2568 1F02  
                          l3640 065D                            l3632 0641                            l3624 061B  
                          l3616 05A8                            l3608 0588                            l3560 0377  
                          l3552 02EE                            l3544 02BE                            l3536 0292  
                          l3528 024E                            l3800 1386                            l3720 1244  
                          l3712 11FA                            l3704 11E0                            l3378 1CFC  
                          l3394 1E18                            l3386 1DFD                            l2498 1FE7  
                          l3458 00F2                            l3482 1C5A                            l3474 1C56  
                          l3466 1C48                            l2826 17F1                            l2818 17E5  
                          l2762 16E9                            l2770 1741                            l2754 16C4  
                          l2746 16B3                            l2738 168F                            l2690 1615  
                          l2682 1609                            l2674 15F0                            l2666 15E1  
                          l2658 15D3                            l3298 1ECC                            l2930 0BF4  
                          l2922 0BE0                            l2914 0BBC                            l2906 0B35  
                          l2850 0986                            l2842 096F                            l2834 0961  
                          l2594 1DC0                            l2586 1F38                            l2578 1F21  
                          l3650 0734                            l3642 0661                            l3634 0646  
                          l3626 061F                            l3618 05E3                            l3570 03F9  
                          l3562 0380                            l3554 02F4                            l3546 02C4  
                          l3538 0296                            l3490 01B5                            l3802 138F  
                          l3730 1277                            l3722 1249                            l3714 11FF  
                          l3706 11E5                            l3388 1E02                            l3396 1E1F  
                          l3484 1C5B                            l3476 1C57                            l3468 1C4C  
                          l2828 17FA                            l2780 176E                            l2772 1757  
                          l2764 1727                            l2756 16C5                            l2748 16B7  
                          l2692 1617                            l2684 160D                            l2676 15F8  
                          l2668 15E5                            l2940 0C15                            l2932 0BF5  
                          l2924 0BE1                            l2916 0BC5                            l2908 0B43  
                          l2860 0999                            l2852 098B                            l2844 0974  
                          l2836 0965                            l2596 1DC3                            l3660 078A  
                          l3652 073E                            l3644 067F                            l3636 0653  
                          l3628 0625                            l3580 0474                            l3572 0408  
                          l3564 039B                            l3556 0313                            l3548 02D7  
                          l3492 01BB                            l3740 12BA                            l3732 1280  
                          l3724 1252                            l3716 1208                            l3708 11EA  
                          l3398 1E25                            l3486 1C5D                            l3478 1C58  
                          l2790 1781                            l2782 1772                            l2774 175C  
                          l2766 172D                            l2758 16CE                            l2694 1619  
                          l2686 1611                            l2678 15F9                            l2942 0C1A  
                          l2950 0C4B                            l2934 0BF9                            l2926 0BEA  
                          l2918 0BD3                            l2870 09B5                            l2862 099E  
                          l2854 098F                            l2846 097C                            l2838 0969  
                          l2598 1DCA                            l3670 07B6                            l3662 0790  
                          l3646 06DA                            l3654 0779                            l3638 0658  
                          l3590 04C2                            l3582 047D                            l3574 0423  
                          l3558 035E                            l3566 03A3                            l3494 01C0  
                          l3750 12FF                            l3742 12C3                            l3734 128C  
                          l3726 125E                            l3718 1230                            l2784 1777  
                          l2792 1783                            l2768 1732                            l2696 161B  
                          l2688 1613                            l2960 0C7E                            l2952 0C58  
                          l2944 0C28                            l2936 0C0D                            l2928 0BF0  
                          l2880 09DE                            l2872 09BA                            l2864 09A6  
                          l2856 0993                            l2848 097E                            l3672 07B7  
                          l3656 0781                            l3648 0715                            l3584 0485  
                          l3576 044A                            l3592 04CB                            l3568 03B2  
                          l3664 0797                            l3496 01C5                            l3488 01B2  
                          l3760 1322                            l3752 1304                            l3744 12E8  
                          l3736 12A0                            l3728 1272                            l2786 177A  
                          l2778 1765                            l2794 1787                            l2698 161D  
                          l2962 0C8A                            l2954 0C63                            l2946 0C2C  
                          l2890 0A77                            l2882 09F9                            l2866 09A8  
                          l2858 0994                            l3674 07C6                            l3666 079D  
                          l3658 0786                            l3594 0500                            l3586 04A3  
                          l3578 0459                            l3498 01C7                            l3682 07DA  
                          l3770 1346                            l3762 1328                            l3754 130A  
                          l3746 12ED                            l3738 12B2                            l2980 1D73  
                          l2972 1D3E                            l2796 1788                            l2788 177C  
                          l2964 0C8E                            l2956 0C72                            l2948 0C45  
                          l2892 0A80                            l2884 0A15                            l2876 09C3  
                          l2868 09B0                            l3676 07C6                            l3668 07A5  
                          l3596 054D                            l3684 07EA                            l3772 134E  
                          l3764 1330                            l3756 1312                            l3748 12F5  
                          l2982 1D74                            l2974 1D42                            l2990 1BCE  
                          l2798 178C                            l2966 0C8F                            l2958 0C7C  
                          l2894 0A8E                            l2886 0A3F                            l2878 09D1  
                          l3678 07D4                            l3598 054F                            l3854 0232  
                          l3774 1358                            l3766 133A                            l3758 131C  
                          l2984 1BA9                            l2976 1D45                            l2992 1F3D  
                          l2968 0C98                            l2896 0AAB                            l2888 0A5B  
                          l3776 1371                            l3768 1340                            l2986 1BAF  
                          l2978 1D72                            l2994 1F43                            l2898 0AB9  
                          l3794 1378                            l3778 1378                            l2996 1F4C  
                          l2988 1BC4                            l3796 1378                            l2998 1F5B  
                          l3798 137E                            STR_1 00A3                            STR_2 00C8  
                          STR_3 00BC                            STR_4 00CD                            STR_5 00D2  
                          STR_6 00C2                            STR_7 00B6                            STR_8 00B6  
                          u3010 106F                            u3011 106E                            _IOCB 0096  
                          u3005 1061                            u3030 1080                            u3110 1F11  
                          u3031 107F                            u3111 1F10                            u4000 0BE0  
                          u3200 1DE3                            u3120 1F1B                            u4001 0BDF  
                          u3201 1DE2                            u3025 1070                            u3121 1F1A  
                          u3105 1F03                            u3050 1094                            u3051 1093  
                          u3035 107C                            u3300 15BB                            u4100 0C72  
                          u4020 0BF4                            u3220 1DF7                            u3060 1099  
                          u3140 1F2E                            u3301 15BA                            u4101 0C71  
                          u4021 0BF3                            u3221 1DF6                            u3205 1DDF  
                          u3061 1098                            u3045 1088                            u3141 1F2D  
                          u3125 1F17                            u3310 15C0                            u4110 0C8E  
                          u4030 0BF9                            u3230 1006                            u3150 1F33  
                          u3070 1EE9                            u3311 15BF                            u4111 0C8D  
                          u4031 0BF8                            u4015 0BE3                            u3215 1DEB  
                          u3231 1005                            u3151 1F32                            u3135 1F22  
                          u3071 1EE8                            u4120 1D55                            u3400 1653  
                          u3320 15DC                            u5000 00FD                            u4040 0C0D  
                          u3160 1DC0                            u4200 14B9                            u3080 1EF4  
                          u3321 15DB                            u5001 00FC                            u4105 0C6E  
                          u4041 0C0C                            u3161 1DBF                            u4201 14B8  
                          u3081 1EF3                            u4130 1BAF                            u3410 1663  
                          u3330 15E5                            u5010 0101                            u4050 0C14  
                          u3250 1018                            u3090 1EFF                            u4131 1BAE  
                          u3411 1662                            u3331 15E4                            u5011 0100  
                          u4051 0C13                            u3251 1017                            u3091 1EFE  
                          u4140 1BB5                            u3500 16C4                            u3420 1670  
                          u3340 15EB                            u5100 017C                            u5020 0121  
                          u4060 0C1A                            u3180 1DD2                            u3260 1022  
                          u4141 1BB4                            u4125 1D50                            u3501 16C3  
                          u3421 166F                            u3341 15EA                            u5101 017B  
                          u5021 0120                            u4061 0C19                            u3181 1DD1  
                          u3261 1021                            u3245 100A                            u3350 15F0  
                          u5110 0191                            u4070 0C2C                            u3351 15EF  
                          u4071 0C2B                            u3175 1DC4                            u4215 14D6  
                          u5200 1DA5                            u3600 1777                            u3520 16E9  
                          u3440 1686                            u3360 1609                            u5120 01A1  
                          u5040 0140                            u4080 0C3B                            u3280 1035  
                          u4160 13A6                            u4240 0CA8                            u3601 1776  
                          u3521 16E8                            u3441 1685                            u3361 1608  
                          u5121 01A0                            u5041 013F                            u3281 1034  
                          u3265 101E                            u4225 1523                            u4161 13A5  
                          u4305 0DB3                            u4241 0CA7                            u5210 1DB7  
                          u3610 1781                            u3450 168A                            u3370 160D  
                          u3290 15B5                            u5130 01A5                            u4090 0C58  
                          u4410 1BD8                            u4330 0E5C                            u4250 0CB1  
                          u4155 1D16                            u5211 1DB6                            u3611 1780  
                          u3531 1700                            u3523 16E5                            u3515 16C7  
                          u3451 1689                            u3435 1673                            u3371 160C  
                          u3291 15B4                            u5131 01A4                            u5115 018C  
                          u5035 0132                            u4091 0C57                            u3195 1DD3  
                          u3275 1029                            u4235 156F                            u4411 1BD7  
                          u4331 0E5B                            u4315 0DEF                            u4251 0CB0  
                          u5140 1CFC                            u2900 1FAA                            u5220 1C62  
                          u3700 17D8                            u3620 1787                            u3540 1714  
                          u3532 1701                            u3460 168F                            u3380 1647  
                          u5060 0162                            u4500 119F                            u4420 1BDE  
                          u5300 02EE                            u5141 1CFB                            u2901 1FA9  
                          u5221 1C61                            u3701 17D7                            u3621 1786  
                          u3541 1715                            u3533 1706                            u3461 168E  
                          u3381 1646                            u5061 0161                            u4501 119E  
                          u4085 0C36                            u4421 1BDD                            u4405 0FD6  
                          u4325 0E2B                            u5301 02ED                            u2830 1C01  
                          u5150 1E02                            u3710 17DD                            u3630 178C  
                          u3550 1732                            u3542 171A                            u3534 1707  
                          u3390 1652                            u4430 112C                            u5310 0377  
                          u5230 01BB                            u2831 1C00                            u5151 1E01  
                          u3711 17DC                            u3631 178B                            u3551 1731  
                          u3543 171B                            u3535 170C                            u3471 16A1  
                          u3391 1650                            u5055 0154                            u4431 112B  
                          u4095 0C54                            u4175 13C3                            u5311 0376  
                          u5231 01BA                            u2840 1C0C                            u2920 1FBE  
                          u3720 17EA                            u3640 1792                            u3560 1757  
                          u3536 170D                            u3480 16B3                            u3472 16A8  
                          u5080 0172                            u4520 11B1                            u4440 1144  
                          u3800 099E                            u5400 0587                            u5320 039B  
                          u5240 01D3                            u2841 1C0B                            u2921 1FBD  
                          u3721 17E9                            u3641 1791                            u3561 1756  
                          u3481 16B2                            u3473 16AF                            u3385 1643  
                          u5081 0171                            u4521 11B0                            u4441 1143  
                          u3801 099D                            u4185 141D                            u4345 0E7C  
                          u4265 0CD1                            u5401 0586                            u5321 039A  
                          u5241 01D2                            u2850 1C13                            u5170 1E25  
                          u3730 17EF                            u3650 1799                            u3570 175C  
                          u3490 16B7                            u5090 0178                            u4610 091E  
                          u4530 11B8                            u3810 09B5                            u4370 0F4B  
                          u4290 0DA0                            u5410 0592                            u5330 03B2  
                          u5250 0217                            u2851 1C12                            u5171 1E24  
                          u2915 1FAF                            u3731 17EE                            u3651 1798  
                          u3571 175B                            u3491 16B6                            u5091 0177  
                          u5075 0167                            u4611 091D                            u4531 11B7  
                          u4515 11A1                            u3811 09B4                            u4195 1472  
                          u4371 0F4A                            u4355 0EB8                            u4291 0D9F  
                          u4275 0D0D                            u5411 0591                            u5331 03B1  
                          u5251 0216                            _PEIE 005E                            u2860 1C1A  
                          u2940 1FD9                            u3740 17FE                            u3660 179F  
                          u4620 0922                            u4460 117B                            u3820 09BA  
                          u5500 0780                            u5420 059E                            u5340 0408  
                          u5260 0246                            u2861 1C19                            u5165 1E08  
                          u2941 1FD8                            u3741 17FD                            u3661 179E  
                          u4621 0921                            u4605 0911                            u4461 117A  
                          u3821 09B9                            u4365 0F03                            u4285 0D58  
                          u5501 077F                            u5421 059D                            u5405 0583  
                          u5341 0407                            u5261 0245                            u5190 1D83  
                          u3670 17B1                            u3590 1772                            u4630 0929  
                          u4550 11C9                            u2870 1C9A                            u3750 0969  
                          u5510 0796                            u5350 0423                            u5270 024A  
                          u2935 1FC0                            u3671 17B0                            u3591 1771  
                          u4631 0928                            u4551 11C8                            u4455 1166  
                          u2871 1C99                            u3911 0AFC                            u3831 0A07  
                          u3751 0968                            u5511 0795                            u5351 0422  
                          u5335 03AE                            u5271 0249                            u2960 1FF7  
                          u4800 0866                            u3680 17C0                            u4720 1C87  
                          u4560 08AF                            u4480 1194                            u3912 0B03  
                          u3832 0A0E                            u3760 096F                            u5520 079D  
                          u5440 0613                            u5360 044A                            u5280 0279  
                          u5600 1322                            u5185 1E2B                            u2961 1FF6  
                          u2945 1FD5                            u4801 0865                            u3585 1767  
                          u4721 1C86                            u4705 1C74                            u4561 08AE  
                          u4545 11BB                            u4481 1193                            u4465 1177  
                          u3921 0B27                            u3913 0B0A                            u3905 0AD8  
                          u3841 0A23                            u3833 0A15                            u3761 096E  
                          u4385 0F5E                            u5521 079C                            u5441 0612  
                          u5361 0449                            u5345 0404                            u5281 0278  
                          u5601 1321                            u4730 1E56                            u3690 17CF  
                          u4650 093B                            u4570 08C1                            u4490 1198  
                          u2890 1CAE                            u3922 0B2E                            u3842 0A2A  
                          u3770 0974                            u2970 1041                            u5530 07A5  
                          u5450 0632                            u5370 0459                            u5290 02B3  
                          u5610 1340                            u2955 1FE9                            u4731 1E55  
                          u4811 0875                            u3691 17CE                            u4715 1C7B  
                          u4651 093A                            u4571 08C0                            u4491 1197  
                          u4475 1187                            u2891 1CAD                            u3931 0B52  
                          u3923 0B35                            u3851 0A4D                            u3843 0A31  
                          u3771 0973                            u2971 1040                            u4395 0F9A  
                          u5531 07A4                            u5451 0631                            u5435 05AB  
                          u5371 0458                            u5291 02B2                            u5611 133F  
                          u4740 1E72                            u4820 08A0                            u4812 0876  
                          u4900 10F9                            u4660 0942                            u3940 0B7A  
                          u3932 0B59                            u3852 0A54                            u3780 0993  
                          u2980 104C                            u5540 07B6                            u5460 0641  
                          u5380 0474                            u5620 1371                            u4741 1E71  
                          u4821 089F                            u4813 087B                            u3685 17BB  
                          u4901 10F8                            u4661 0941                            u4645 092B  
                          u2885 1CA1                            u3933 0B60                            u3861 0A69  
                          u3853 0A5B                            u3781 0992                            u2981 104B  
                          u5541 07B5                            u5461 0640                            u5381 0473  
                          u5621 1370                            u4750 1E8C                            u4814 087C  
                          u4830 1BA6                            u4590 0900                            u3862 0A70  
                          u3790 0999                            u2990 105D                            u5550 07C6  
                          u5470 0658                            u4751 1E8B                            u4815 0881  
                          u4831 1BA5                            u4591 08FF                            u3951 0B86  
                          u3863 0A77                            u3791 0998                            u2991 105C  
                          u5551 07C5                            u5471 0657                            u5455 062E  
                          u5375 0455                            u4816 0882                            u4760 0816  
                          u4920 110A                            u4840 10AE                            u4680 0953  
                          u3960 0BA2                            u3952 0B8D                            u5560 07D4  
                          u4825 089C                            u4761 0815                            u4921 1109  
                          u4841 10AD                            u4681 0952                            u4585 08E7  
                          u3953 0B94                            u3945 0B75                            u3881 0A9D  
                          u5561 07D3                            u5545 07B2                            u5465 063D  
                          u4770 0832                            u4930 110F                            u4850 10C5  
                          u4690 1C6D                            u3882 0AA4                            u5570 07EA  
                          u5707 1F47                            u4755 1E88                            u4771 0831  
                          u4931 110E                            u4915 10FC                            u4691 1C6C  
                          u4675 0945                            u4595 08FC                            u3971 0BAE  
                          u3891 0AC8                            u3883 0AAB                            u3875 0A79  
                          u5571 07E9                            u5555 07C2                            u5395 0554  
                          u4780 083E                            u4860 10D9                            u4940 1E98  
                          u3972 0BB5                            u3892 0ACF                            u5580 12ED  
                          u5717 1F56                            u4781 083D                            u4861 10D8  
                          u4941 1E97                            u3973 0BBC                            u3965 0B9D  
                          u3893 0AD6                            u5485 06DD                            u5581 12EC  
                          u4870 10E0                            u5590 1304                            u5727 1F65  
                          u4791 084D                            u4871 10DF                            u4855 10C0  
                          u5495 0741                            u5591 1303                            u4792 084E  
                          u4960 1EAC                            u5737 1D26                            u4793 0853  
                          u4961 1EAB                            u3985 0BBE                            u5657 11DA  
                          u4794 0854                            u4890 10F2                            u4970 1EBE  
                          u5747 1D37                            u4795 0859                            u4891 10F1  
                          u4971 1EBD                            u4955 1E9D                            u3995 0BD5  
                          u5667 123D                            u4796 085A                            u5757 1BF3  
                          u4885 10E2                            u5677 126B                            u4990 1EDB  
                          u4991 1EDA                            u4975 1EBA                            u5687 1299  
                          u4985 1ECD                            u5697 1395                            _TMR1 000E  
                          _main 11D2          _Lcd_Write_String_4bits 1D76                            btemp 007E  
                          start 0000                    _sprintf$1366 00AA                ?_I2C_Master_Init 0020  
              ?_I2C_Master_Read 0070                ?_I2C_Master_Wait 0070                ?_I2C_Master_Stop 0070  
                 ___fltol@sign1 0059                 __end_of___fladd 1800                           ?_main 0070  
             ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 10A3                 __end_of___flneg 1BA9  
               __end_of___awmod 1F3D                 __end_of___flmul 0CA1                 __end_of___flsub 1C42  
               __end_of___fltol 111B                           _ANSEL 0188                 __end_of___lldiv 2000  
               ___awdiv@divisor 0077                 __end_of___llmod 1EE4                 __end_of___lwdiv 1DFC  
               __end_of___lwmod 103A                 ___awdiv@counter 0020                           _PORTA 0005  
                         _PORTB 0006                           _PORTD 0008                           _TRISA 0085  
                         _TRISB 0086                           _TRISD 0088                           _SSPIE 0463  
                         _SSPIF 0063           __end_of_Lcd_Cmd_4bits 1BFC                 __end_of_dpowers 00A3  
                         _color 00CC                           _linea 00CB                           _scale 0CA1  
               __end_of_isdigit 1BE2                           _setup 1CB3                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 07EF  
               __initialization 07EF                    __end_of_main 139D                          ??_main 00C3  
             ?_I2C_Master_Start 0070               ?_I2C_Master_Write 0070              ??_I2C_Master_Start 0070  
            ??_I2C_Master_Write 0072                ___llmod@dividend 0074                          ?_scale 003E  
                        _CCPR1L 0015                          _CCPR2L 001B                ___awdiv@dividend 0079  
                        ?_setup 0070                          _ANSELH 0189                          _SSPADD 0093  
                        _TRISC3 043B                          _TRISC4 043C                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 01AF        Lcd_Write_Char_4bits@temp 0072  
              __end_of__powers_ 0047                          ___flge 0802                          ___fleq 1E42  
                     ??___fladd 005A                          ___wmul 1C67                       ??___awdiv 007B  
                     ??___flneg 0074                       ??___awmod 0074                       ??___flmul 002C  
                     ??___flsub 007E                       ??___fltol 0055                       ??___lldiv 0078  
                     ??___llmod 0078                       ??___lwdiv 007A                       ??___lwmod 0074  
                        _fround 139D                ___awdiv@quotient 0022                 ___awmod@divisor 0070  
               ___awmod@counter 0075                    ?_setupINTOSC 0070                       ??_isdigit 0070  
              __end_of_setupPWM 1C67                  _Lcd_Init_4bits 1F3D                       ??_sprintf 00A5  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 0022  
                  ___xxtofl@exp 0021                    ___xxtofl@val 0076                      ___fleq@ff1 0070  
                    ___fleq@ff2 0074         __end_of__initialization 07FC                      ___flneg@f1 0070  
                    ___fltol@f1 0051                  __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074  
         Lcd_Write_Char_4bits@y 0073                   __end_of_scale 1000                   __end_of_setup 1CDB  
                    __div_to_l_ 08A4                  _OPTION_REGbits 0081          __end_of_Lcd_Init_4bits 1F9A  
               __div_to_l_@exp1 0025                 __div_to_l_@cntr 0024                         ??_scale 0042  
               __div_to_l_@quot 0020         ?_Lcd_Write_String_4bits 0075                         ??_setup 007E  
                    __pbssBANK0 006E                      __pbssBANK1 00C7                  _Lcd_Port_4bits 1BFC  
                 __div_to_l_@f1 0070                   __div_to_l_@f2 0074               __end_of__Umul8_16 1CB3  
               _Lcd_Clear_4bits 1BB6                      __pmaintext 11D2                         ?___flge 0070  
                       ?___fleq 0070                         ?___wmul 0070                         ?_fround 003E  
                     ?___xxtofl 0076    __end_of_Lcd_Write_Char_4bits 1D3E                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 1DB8                         _SSPCON2 0091  
                       _SSPSTAT 0094                      __stringtab 0003          __end_of_Lcd_Port_4bits 1C1E  
             __end_of__npowers_ 007B                      _scale$1365 004C                       ?_setupPWM 0070  
                       ___fladd 15A8                         ___awdiv 103A                         ___flneg 1B9E  
                       ___awmod 1EE4                         ___flmul 095C                         ___flsub 1C1E  
                       ___fltol 10A3                         ___lldiv 1F9A                         ___llmod 1E90  
                       ___lwdiv 1DB8                         ___lwmod 1000                         __ptext1 01AF  
                       __ptext2 0CA1                         __ptext3 1EE4                         __ptext4 103A  
                       __ptext5 1BD0                         __ptext6 139D                         __ptext7 1000  
                       __ptext8 1DB8                         __ptext9 095C                       _T1CONbits 0010  
                   ?__div_to_l_ 0070                         _dpowers 007B                       _T2CONbits 0012  
                       _isdigit 1BD0                      ??___xxtofl 007A                ___awmod@dividend 0072  
  __end_of_Lcd_Set_Cursor_4bits 1E42                         _sprintf 01AF                         clrloop0 1B7B  
          end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070         __end_of_Lcd_Clear_4bits 1BC3  
               ___lldiv@divisor 0070                 ___lldiv@counter 007D                      ??_setupPWM 0070  
              I2C_Master_Init@c 0020                I2C_Master_Read@a 0070                  __tdiv_to_l_@f1 0070  
                __tdiv_to_l_@f2 0074                   ?_setupMotores 0070                   ??__tdiv_to_l_ 0078  
                  _distanciaLCD 00CE                       _PORTAbits 0005                       _PORTDbits 0008  
                   ___fladd@grs 0065                   ___xxtofl@sign 0020                       _TRISAbits 0085  
                     _TRISCbits 0087                     ___flmul@grs 0032                     _CCP1CONbits 0017  
                   _CCP2CONbits 001D            _Lcd_Write_Char_4bits 1D09                  __end_of___flge 08A4  
                __end_of___fleq 1E90                  ??_setupMotores 0070                  __end_of___wmul 1C8C  
                __end_of_fround 15A8             start_initialization 07EF             __end_of__tdiv_to_l_ 11D2  
                 _Lcd_Cmd_4bits 1BE2           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
             ??_I2C_Master_Init 0024               ??_I2C_Master_Read 0072               ??_I2C_Master_Wait 0070  
             ??_I2C_Master_Stop 0070                 ___llmod@divisor 0070                 ___llmod@counter 0079  
         ?_Lcd_Write_Char_4bits 0070                        ??___flge 0078                        ??___fleq 0078  
                      ??___wmul 0074        Lcd_Set_Cursor_4bits@temp 0079            _Lcd_Set_Cursor_4bits 1DFC  
                     __Umul8_16 1C8C                        ??_fround 0042                ??_Lcd_Init_4bits 0074  
                 sprintf@tmpval 00B7                       ___fladd@a 0056                       ___fladd@b 0052  
                    fround@prec 0051                       ___flmul@a 0028                       ___flmul@b 0024  
                     ___flsub@a 0066                       ___flsub@b 006A                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                  ?_Lcd_Cmd_4bits 0070  
                  _isdigit$1152 0070                     sprintf@flag 00AF                     sprintf@eexp 00B5  
                   sprintf@fval 00BE                     sprintf@prec 00BC                _I2C_Master_Start 1B82  
              _I2C_Master_Write 1B94                ___lwdiv@dividend 0078                        ?___fladd 0052  
         ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0077                        ?___flneg 0070  
                      ?___awmod 0070                        ?___flmul 0024                        ?___flsub 0066  
                      ?___fltol 0051                        ?___lldiv 0070                        ?___llmod 0070  
                     __npowers_ 0047                      ?__Umul8_16 0070                        ?___lwdiv 0076  
                      ?___lwmod 0070                       __pstrings 0003                     __tdiv_to_l_ 111B  
                     _distancia 00C7                    ??__div_to_l_ 0078                        ?_isdigit 0070  
              ??_Lcd_Port_4bits 0070                ___lwdiv@quotient 007B                        ?_sprintf 00A0  
          __end_of_setupMotores 00F5                  ___wmul@product 0074                       clear_ram0 1B7A  
        ??_Lcd_Write_Char_4bits 0071                        _PIR1bits 000C              __end_of__div_to_l_ 095C  
                     _velocidad 006E                     __stringbase 0012                   ??_setupINTOSC 0070  
             ___wmul@multiplier 0070                 ??_Lcd_Cmd_4bits 0071                        _WPUBbits 0095  
           I2C_Master_Read@temp 0074         Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A  
        ??_Lcd_Set_Cursor_4bits 0075                     ??__Umul8_16 0072                     _fround$1363 004D  
                   _fround$1364 0049              __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077  
                Lcd_Cmd_4bits@a 0073                      sprintf@val 00B1                 _I2C_Master_Init 1D3E  
               _I2C_Master_Read 1CDB                        ___xxtofl 00F5                 _I2C_Master_Wait 1BA9  
               _I2C_Master_Stop 1B8B                 ___lwdiv@divisor 0076                 ___lwdiv@counter 007D  
                      __ptext10 1C8C                        __ptext11 111B                        __ptext20 0802  
                      __ptext12 08A4                        __ptext21 1E42                        __ptext13 00F5  
                      __ptext30 1D09                        __ptext22 1C42                        __ptext14 1C67  
                      __ptext31 1DFC                        __ptext23 00DA                        __ptext15 1E90  
                      __ptext32 1BB6                        __ptext24 1CB3                        __ptext16 10A3  
                      __ptext33 1BE2                        __ptext25 1BC3                        __ptext17 1C1E  
                      __ptext34 1BFC                        __ptext26 1F3D                        __ptext18 15A8  
                      __ptext35 1B94                        __ptext27 1D3E                        __ptext19 1B9E  
                      __ptext36 1B8B                        __ptext28 1F9A                        __ptext37 1B82  
                      __ptext29 1D76                        __ptext38 1CDB                        __ptext39 1BA9  
           __end_of_setupINTOSC 1BD0                        __powers_ 0013                        _setupPWM 1C42  
      __end_of_I2C_Master_Start 1B8B        __end_of_I2C_Master_Write 1B9E                        isdigit@c 0071  
                      scale@scl 0050                       sprintf@ap 00AE                __tdiv_to_l_@exp1 0025  
              __tdiv_to_l_@cntr 0024                       sprintf@sp 00BB                __tdiv_to_l_@quot 0020  
              ___lwmod@dividend 0072                ___lldiv@dividend 0074                       stringcode 000D  
                    _OSCCONbits 008F         __end_of_I2C_Master_Init 1D76         __end_of_I2C_Master_Read 1D09  
       __end_of_I2C_Master_Wait 1BB6         __end_of_I2C_Master_Stop 1B94                    _setupMotores 00DA  
                  ?__tdiv_to_l_ 0070          __Umul8_16@multiplicand 0070                     _setupINTOSC 1BC3  
                      sprintf@c 00C2                        sprintf@f 00A0                    setupINTOSC@F 0071  
              ___lldiv@quotient 0079               I2C_Master_Write@d 0070                 ___lwmod@divisor 0070  
               ___lwmod@counter 0075                        stringdir 000D                        stringtab 0003  
                   _SSPCON2bits 0091                   ___fladd@signs 0062                    ___fladd@aexp 0063  
                  ___fladd@bexp 0064            __Umul8_16@multiplier 0078               __Umul8_16@product 0074  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 17:41:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401     0000                     	;# 
   402     0001                     	;# 
   403     0002                     	;# 
   404     0003                     	;# 
   405     0004                     	;# 
   406     0005                     	;# 
   407     0006                     	;# 
   408     0007                     	;# 
   409     0008                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0088                     	;# 
   441     0089                     	;# 
   442     008C                     	;# 
   443     008D                     	;# 
   444     008E                     	;# 
   445     008F                     	;# 
   446     0090                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009C                     	;# 
   461     009D                     	;# 
   462     009E                     	;# 
   463     009F                     	;# 
   464     0105                     	;# 
   465     0107                     	;# 
   466     0108                     	;# 
   467     0109                     	;# 
   468     010C                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0185                     	;# 
   474     0187                     	;# 
   475     0188                     	;# 
   476     0189                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479     0000                     	;# 
   480     0001                     	;# 
   481     0002                     	;# 
   482     0003                     	;# 
   483     0004                     	;# 
   484     0005                     	;# 
   485     0006                     	;# 
   486     0007                     	;# 
   487     0008                     	;# 
   488     0009                     	;# 
   489     000A                     	;# 
   490     000B                     	;# 
   491     000C                     	;# 
   492     000D                     	;# 
   493     000E                     	;# 
   494     000E                     	;# 
   495     000F                     	;# 
   496     0010                     	;# 
   497     0011                     	;# 
   498     0012                     	;# 
   499     0013                     	;# 
   500     0014                     	;# 
   501     0015                     	;# 
   502     0015                     	;# 
   503     0016                     	;# 
   504     0017                     	;# 
   505     0018                     	;# 
   506     0019                     	;# 
   507     001A                     	;# 
   508     001B                     	;# 
   509     001B                     	;# 
   510     001C                     	;# 
   511     001D                     	;# 
   512     001E                     	;# 
   513     001F                     	;# 
   514     0081                     	;# 
   515     0085                     	;# 
   516     0086                     	;# 
   517     0087                     	;# 
   518     0088                     	;# 
   519     0089                     	;# 
   520     008C                     	;# 
   521     008D                     	;# 
   522     008E                     	;# 
   523     008F                     	;# 
   524     0090                     	;# 
   525     0091                     	;# 
   526     0092                     	;# 
   527     0093                     	;# 
   528     0093                     	;# 
   529     0093                     	;# 
   530     0094                     	;# 
   531     0095                     	;# 
   532     0096                     	;# 
   533     0097                     	;# 
   534     0098                     	;# 
   535     0099                     	;# 
   536     009A                     	;# 
   537     009B                     	;# 
   538     009C                     	;# 
   539     009D                     	;# 
   540     009E                     	;# 
   541     009F                     	;# 
   542     0105                     	;# 
   543     0107                     	;# 
   544     0108                     	;# 
   545     0109                     	;# 
   546     010C                     	;# 
   547     010C                     	;# 
   548     010D                     	;# 
   549     010E                     	;# 
   550     010F                     	;# 
   551     0185                     	;# 
   552     0187                     	;# 
   553     0188                     	;# 
   554     0189                     	;# 
   555     018C                     	;# 
   556     018D                     	;# 
   557     0000                     	;# 
   558     0001                     	;# 
   559     0002                     	;# 
   560     0003                     	;# 
   561     0004                     	;# 
   562     0005                     	;# 
   563     0006                     	;# 
   564     0007                     	;# 
   565     0008                     	;# 
   566     0009                     	;# 
   567     000A                     	;# 
   568     000B                     	;# 
   569     000C                     	;# 
   570     000D                     	;# 
   571     000E                     	;# 
   572     000E                     	;# 
   573     000F                     	;# 
   574     0010                     	;# 
   575     0011                     	;# 
   576     0012                     	;# 
   577     0013                     	;# 
   578     0014                     	;# 
   579     0015                     	;# 
   580     0015                     	;# 
   581     0016                     	;# 
   582     0017                     	;# 
   583     0018                     	;# 
   584     0019                     	;# 
   585     001A                     	;# 
   586     001B                     	;# 
   587     001B                     	;# 
   588     001C                     	;# 
   589     001D                     	;# 
   590     001E                     	;# 
   591     001F                     	;# 
   592     0081                     	;# 
   593     0085                     	;# 
   594     0086                     	;# 
   595     0087                     	;# 
   596     0088                     	;# 
   597     0089                     	;# 
   598     008C                     	;# 
   599     008D                     	;# 
   600     008E                     	;# 
   601     008F                     	;# 
   602     0090                     	;# 
   603     0091                     	;# 
   604     0092                     	;# 
   605     0093                     	;# 
   606     0093                     	;# 
   607     0093                     	;# 
   608     0094                     	;# 
   609     0095                     	;# 
   610     0096                     	;# 
   611     0097                     	;# 
   612     0098                     	;# 
   613     0099                     	;# 
   614     009A                     	;# 
   615     009B                     	;# 
   616     009C                     	;# 
   617     009D                     	;# 
   618     009E                     	;# 
   619     009F                     	;# 
   620     0105                     	;# 
   621     0107                     	;# 
   622     0108                     	;# 
   623     0109                     	;# 
   624     010C                     	;# 
   625     010C                     	;# 
   626     010D                     	;# 
   627     010E                     	;# 
   628     010F                     	;# 
   629     0185                     	;# 
   630     0187                     	;# 
   631     0188                     	;# 
   632     0189                     	;# 
   633     018C                     	;# 
   634     018D                     	;# 
   635                           
   636                           	psect	strings
   637     1000                     __pstrings:
   638     1000                     stringtab:
   639     1000                     __stringtab:
   640     1000                     stringcode:	
   641                           ;	String table - string pointers are 1 byte each
   642                           
   643     1000                     stringdir:
   644     1000  3010               	movlw	high stringdir
   645     1001  008A               	movwf	10
   646     1002  0804               	movf	4,w
   647     1003  0A84               	incf	4,f
   648     1004  0782               	addwf	2,f
   649     1005                     __stringbase:
   650     1005  3400               	retlw	0
   651     1006                     __end_of__stringtab:
   652     1006                     __powers_:
   653     1006  3400               	retlw	0
   654     1007  3400               	retlw	0
   655     1008  3480               	retlw	128
   656     1009  343F               	retlw	63
   657     100A  3400               	retlw	0
   658     100B  3400               	retlw	0
   659     100C  3420               	retlw	32
   660     100D  3441               	retlw	65
   661     100E  3400               	retlw	0
   662     100F  3400               	retlw	0
   663     1010  34C8               	retlw	200
   664     1011  3442               	retlw	66
   665     1012  3400               	retlw	0
   666     1013  3400               	retlw	0
   667     1014  347A               	retlw	122
   668     1015  3444               	retlw	68
   669     1016  3400               	retlw	0
   670     1017  3440               	retlw	64
   671     1018  341C               	retlw	28
   672     1019  3446               	retlw	70
   673     101A  3400               	retlw	0
   674     101B  3450               	retlw	80
   675     101C  34C3               	retlw	195
   676     101D  3447               	retlw	71
   677     101E  3400               	retlw	0
   678     101F  3424               	retlw	36
   679     1020  3474               	retlw	116
   680     1021  3449               	retlw	73
   681     1022  3480               	retlw	128
   682     1023  3496               	retlw	150
   683     1024  3418               	retlw	24
   684     1025  344B               	retlw	75
   685     1026  3420               	retlw	32
   686     1027  34BC               	retlw	188
   687     1028  34BE               	retlw	190
   688     1029  344C               	retlw	76
   689     102A  3428               	retlw	40
   690     102B  346B               	retlw	107
   691     102C  346E               	retlw	110
   692     102D  344E               	retlw	78
   693     102E  34F9               	retlw	249
   694     102F  3402               	retlw	2
   695     1030  3415               	retlw	21
   696     1031  3450               	retlw	80
   697     1032  34EC               	retlw	236
   698     1033  3478               	retlw	120
   699     1034  34AD               	retlw	173
   700     1035  3460               	retlw	96
   701     1036  34CA               	retlw	202
   702     1037  34F2               	retlw	242
   703     1038  3449               	retlw	73
   704     1039  3471               	retlw	113
   705     103A                     __end_of__powers_:
   706     103A                     __npowers_:
   707     103A  3400               	retlw	0
   708     103B  3400               	retlw	0
   709     103C  3480               	retlw	128
   710     103D  343F               	retlw	63
   711     103E  34CD               	retlw	205
   712     103F  34CC               	retlw	204
   713     1040  34CC               	retlw	204
   714     1041  343D               	retlw	61
   715     1042  340A               	retlw	10
   716     1043  34D7               	retlw	215
   717     1044  3423               	retlw	35
   718     1045  343C               	retlw	60
   719     1046  346F               	retlw	111
   720     1047  3412               	retlw	18
   721     1048  3483               	retlw	131
   722     1049  343A               	retlw	58
   723     104A  3417               	retlw	23
   724     104B  34B7               	retlw	183
   725     104C  34D1               	retlw	209
   726     104D  3438               	retlw	56
   727     104E  34AC               	retlw	172
   728     104F  34C5               	retlw	197
   729     1050  3427               	retlw	39
   730     1051  3437               	retlw	55
   731     1052  34BD               	retlw	189
   732     1053  3437               	retlw	55
   733     1054  3486               	retlw	134
   734     1055  3435               	retlw	53
   735     1056  3495               	retlw	149
   736     1057  34BF               	retlw	191
   737     1058  34D6               	retlw	214
   738     1059  3433               	retlw	51
   739     105A  3477               	retlw	119
   740     105B  34CC               	retlw	204
   741     105C  342B               	retlw	43
   742     105D  3432               	retlw	50
   743     105E  345F               	retlw	95
   744     105F  3470               	retlw	112
   745     1060  3489               	retlw	137
   746     1061  3430               	retlw	48
   747     1062  34FF               	retlw	255
   748     1063  34E6               	retlw	230
   749     1064  34DB               	retlw	219
   750     1065  342E               	retlw	46
   751     1066  3408               	retlw	8
   752     1067  34E5               	retlw	229
   753     1068  343C               	retlw	60
   754     1069  341E               	retlw	30
   755     106A  3460               	retlw	96
   756     106B  3442               	retlw	66
   757     106C  34A2               	retlw	162
   758     106D  340D               	retlw	13
   759     106E                     __end_of__npowers_:
   760     106E                     _dpowers:
   761     106E  3401               	retlw	1
   762     106F  3400               	retlw	0
   763     1070  3400               	retlw	0
   764     1071  3400               	retlw	0
   765     1072  340A               	retlw	10
   766     1073  3400               	retlw	0
   767     1074  3400               	retlw	0
   768     1075  3400               	retlw	0
   769     1076  3464               	retlw	100
   770     1077  3400               	retlw	0
   771     1078  3400               	retlw	0
   772     1079  3400               	retlw	0
   773     107A  34E8               	retlw	232
   774     107B  3403               	retlw	3
   775     107C  3400               	retlw	0
   776     107D  3400               	retlw	0
   777     107E  3410               	retlw	16
   778     107F  3427               	retlw	39
   779     1080  3400               	retlw	0
   780     1081  3400               	retlw	0
   781     1082  34A0               	retlw	160
   782     1083  3486               	retlw	134
   783     1084  3401               	retlw	1
   784     1085  3400               	retlw	0
   785     1086  3440               	retlw	64
   786     1087  3442               	retlw	66
   787     1088  340F               	retlw	15
   788     1089  3400               	retlw	0
   789     108A  3480               	retlw	128
   790     108B  3496               	retlw	150
   791     108C  3498               	retlw	152
   792     108D  3400               	retlw	0
   793     108E  3400               	retlw	0
   794     108F  34E1               	retlw	225
   795     1090  34F5               	retlw	245
   796     1091  3405               	retlw	5
   797     1092  3400               	retlw	0
   798     1093  34CA               	retlw	202
   799     1094  349A               	retlw	154
   800     1095  343B               	retlw	59
   801     1096                     __end_of_dpowers:
   802     000E                     _TMR1	set	14
   803     0006                     _PORTBbits	set	6
   804     0012                     _T2CONbits	set	18
   805     000C                     _PIR1bits	set	12
   806     001B                     _CCPR2L	set	27
   807     0015                     _CCPR1L	set	21
   808     001D                     _CCP2CONbits	set	29
   809     0017                     _CCP1CONbits	set	23
   810     0005                     _PORTAbits	set	5
   811     0010                     _T1CONbits	set	16
   812     0008                     _PORTD	set	8
   813     0006                     _PORTB	set	6
   814     0005                     _PORTA	set	5
   815     0008                     _PORTDbits	set	8
   816     0013                     _SSPBUF	set	19
   817     0014                     _SSPCON	set	20
   818     0063                     _SSPIF	set	99
   819     005E                     _PEIE	set	94
   820     005F                     _GIE	set	95
   821     0092                     _PR2	set	146
   822     0096                     _IOCB	set	150
   823     0095                     _WPUBbits	set	149
   824     0081                     _OPTION_REGbits	set	129
   825     0085                     _TRISAbits	set	133
   826     0088                     _TRISD	set	136
   827     0086                     _TRISB	set	134
   828     0085                     _TRISA	set	133
   829     008F                     _OSCCONbits	set	143
   830     0091                     _SSPCON2bits	set	145
   831     0087                     _TRISCbits	set	135
   832     0094                     _SSPSTAT	set	148
   833     0093                     _SSPADD	set	147
   834     0091                     _SSPCON2	set	145
   835     0463                     _SSPIE	set	1123
   836     043C                     _TRISC4	set	1084
   837     043B                     _TRISC3	set	1083
   838     0189                     _ANSELH	set	393
   839     0188                     _ANSEL	set	392
   840     1096                     STR_1:
   841     1096  3444               	retlw	68	;'D'
   842     1097  3469               	retlw	105	;'i'
   843     1098  3473               	retlw	115	;'s'
   844     1099  3474               	retlw	116	;'t'
   845     109A  3461               	retlw	97	;'a'
   846     109B  346E               	retlw	110	;'n'
   847     109C  3463               	retlw	99	;'c'
   848     109D  3469               	retlw	105	;'i'
   849     109E  3461               	retlw	97	;'a'
   850     109F  343A               	retlw	58	;':'
   851     10A0  3420               	retlw	32	;' '
   852     10A1  3425               	retlw	37	;'%'
   853     10A2  342E               	retlw	46	;'.'
   854     10A3  3431               	retlw	49	;'1'
   855     10A4  3466               	retlw	102	;'f'
   856     10A5  3463               	retlw	99	;'c'
   857     10A6  346D               	retlw	109	;'m'
   858     10A7  3400               	retlw	0
   859                           
   860                           	psect	cinit
   861     07EF                     start_initialization:	
   862                           ; #config settings
   863                           
   864     07EF                     __initialization:
   865                           
   866                           ; Clear objects allocated to BANK0
   867     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   868     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   869     07F1  01EE               	clrf	__pbssBANK0& (0+127)
   870     07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   871                           
   872                           ; Clear objects allocated to BANK1
   873     07F3  1383               	bcf	3,7	;select IRP bank0
   874     07F4  30C7               	movlw	low __pbssBANK1
   875     07F5  0084               	movwf	4
   876     07F6  30DB               	movlw	low (__pbssBANK1+20)
   877     07F7  160A  158A  2558  120A  118A  	fcall	clear_ram0
   878     07FC                     end_of_initialization:	
   879                           ;End of C runtime variable initialization code
   880                           
   881     07FC                     __end_of__initialization:
   882     07FC  0183               	clrf	3
   883     07FD  160A  118A  2B25   	ljmp	_main	;jump to C main() function
   884                           
   885                           	psect	bssBANK0
   886     006E                     __pbssBANK0:
   887     006E                     _velocidad:
   888     006E                     	ds	2
   889                           
   890                           	psect	bssBANK1
   891     00C7                     __pbssBANK1:
   892     00C7                     _distancia:
   893     00C7                     	ds	4
   894     00CB                     _distanciaLCD:
   895     00CB                     	ds	16
   896                           
   897                           	psect	clrtext
   898     1D58                     clear_ram0:	
   899                           ;	Called with FSR containing the base address, and
   900                           ;	W with the last address+1
   901                           
   902     1D58  0064               	clrwdt	;clear the watchdog before getting into this loop
   903     1D59                     clrloop0:
   904     1D59  0180               	clrf	0	;clear RAM location pointed to by FSR
   905     1D5A  0A84               	incf	4,f	;increment pointer
   906     1D5B  0604               	xorwf	4,w	;XOR with final address
   907     1D5C  1903               	btfsc	3,2	;have we reached the end yet?
   908     1D5D  3400               	retlw	0	;all done for this memory range, return
   909     1D5E  0604               	xorwf	4,w	;XOR again to restore value
   910     1D5F  2D59               	goto	clrloop0	;do the next byte
   911                           
   912                           	psect	cstackBANK1
   913     00A0                     __pcstackBANK1:
   914     00A0                     ?_sprintf:
   915     00A0                     sprintf@f:	
   916                           ; 2 bytes @ 0x0
   917                           
   918                           
   919                           ; 1 bytes @ 0x0
   920     00A0                     	ds	5
   921     00A5                     ??_sprintf:
   922                           
   923                           ; 1 bytes @ 0x5
   924     00A5                     	ds	5
   925     00AA                     _sprintf$1375:
   926                           
   927                           ; 4 bytes @ 0xA
   928     00AA                     	ds	4
   929     00AE                     sprintf@ap:
   930                           
   931                           ; 1 bytes @ 0xE
   932     00AE                     	ds	1
   933     00AF                     sprintf@flag:
   934                           
   935                           ; 2 bytes @ 0xF
   936     00AF                     	ds	2
   937     00B1                     sprintf@val:
   938                           
   939                           ; 4 bytes @ 0x11
   940     00B1                     	ds	4
   941     00B5                     sprintf@eexp:
   942                           
   943                           ; 2 bytes @ 0x15
   944     00B5                     	ds	2
   945     00B7                     sprintf@tmpval:
   946                           
   947                           ; 4 bytes @ 0x17
   948     00B7                     	ds	4
   949     00BB                     sprintf@sp:
   950                           
   951                           ; 1 bytes @ 0x1B
   952     00BB                     	ds	1
   953     00BC                     sprintf@prec:
   954                           
   955                           ; 2 bytes @ 0x1C
   956     00BC                     	ds	2
   957     00BE                     sprintf@fval:
   958                           
   959                           ; 4 bytes @ 0x1E
   960     00BE                     	ds	4
   961     00C2                     sprintf@c:
   962                           
   963                           ; 1 bytes @ 0x22
   964     00C2                     	ds	1
   965     00C3                     ??_main:
   966                           
   967                           ; 1 bytes @ 0x23
   968     00C3                     	ds	4
   969                           
   970                           	psect	cstackCOMMON
   971     0070                     __pcstackCOMMON:
   972     0070                     ?_isdigit:
   973     0070                     ?___fleq:	
   974                           ; 1 bit 
   975                           
   976     0070                     ?___flge:	
   977                           ; 1 bit 
   978                           
   979     0070                     ?_setup:	
   980                           ; 1 bit 
   981                           
   982     0070                     ??_isdigit:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?_I2C_Master_Wait:	
   986                           ; 1 bytes @ 0x0
   987                           
   988     0070                     ??_I2C_Master_Wait:	
   989                           ; 1 bytes @ 0x0
   990                           
   991     0070                     ?_I2C_Master_Start:	
   992                           ; 1 bytes @ 0x0
   993                           
   994     0070                     ??_I2C_Master_Start:	
   995                           ; 1 bytes @ 0x0
   996                           
   997     0070                     ?_I2C_Master_Stop:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000     0070                     ??_I2C_Master_Stop:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003     0070                     ?_I2C_Master_Write:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006     0070                     ?_setupINTOSC:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009     0070                     ??_setupINTOSC:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012     0070                     ?_Lcd_Port_4bits:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015     0070                     ??_Lcd_Port_4bits:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0070                     ?_Lcd_Cmd_4bits:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     0070                     ?_Lcd_Clear_4bits:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     0070                     ?_Lcd_Init_4bits:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ?_Lcd_Write_Char_4bits:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     ?_Lcd_Write_String_4bits:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ?_main:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ?__Umul8_16:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0070                     ?_I2C_Master_Read:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042     0070                     ?___wmul:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045     0070                     ?___awmod:	
  1046                           ; 2 bytes @ 0x0
  1047                           
  1048     0070                     ?___lwmod:	
  1049                           ; 2 bytes @ 0x0
  1050                           
  1051     0070                     ?__tdiv_to_l_:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054     0070                     ?__div_to_l_:	
  1055                           ; 4 bytes @ 0x0
  1056                           
  1057     0070                     ?___lldiv:	
  1058                           ; 4 bytes @ 0x0
  1059                           
  1060     0070                     ?___flneg:	
  1061                           ; 4 bytes @ 0x0
  1062                           
  1063     0070                     ?___llmod:	
  1064                           ; 4 bytes @ 0x0
  1065                           
  1066     0070                     Lcd_Port_4bits@a:	
  1067                           ; 4 bytes @ 0x0
  1068                           
  1069     0070                     __Umul8_16@multiplicand:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     _isdigit$1152:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     I2C_Master_Write@d:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     I2C_Master_Read@a:	
  1079                           ; 2 bytes @ 0x0
  1080                           
  1081     0070                     ___wmul@multiplier:	
  1082                           ; 2 bytes @ 0x0
  1083                           
  1084     0070                     ___awmod@divisor:	
  1085                           ; 2 bytes @ 0x0
  1086                           
  1087     0070                     ___lwmod@divisor:	
  1088                           ; 2 bytes @ 0x0
  1089                           
  1090     0070                     ___lldiv@divisor:	
  1091                           ; 2 bytes @ 0x0
  1092                           
  1093     0070                     __div_to_l_@f1:	
  1094                           ; 4 bytes @ 0x0
  1095                           
  1096     0070                     ___fleq@ff1:	
  1097                           ; 4 bytes @ 0x0
  1098                           
  1099     0070                     ___flge@ff1:	
  1100                           ; 4 bytes @ 0x0
  1101                           
  1102     0070                     ___flneg@f1:	
  1103                           ; 4 bytes @ 0x0
  1104                           
  1105     0070                     __tdiv_to_l_@f1:	
  1106                           ; 4 bytes @ 0x0
  1107                           
  1108     0070                     ___llmod@divisor:	
  1109                           ; 4 bytes @ 0x0
  1110                           
  1111                           
  1112                           ; 4 bytes @ 0x0
  1113     0070                     	ds	1
  1114     0071                     ??_Lcd_Cmd_4bits:
  1115     0071                     ??_Lcd_Write_Char_4bits:	
  1116                           ; 1 bytes @ 0x1
  1117                           
  1118     0071                     setupINTOSC@F:	
  1119                           ; 1 bytes @ 0x1
  1120                           
  1121     0071                     isdigit@c:	
  1122                           ; 1 bytes @ 0x1
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x1
  1126     0071                     	ds	1
  1127     0072                     ??__Umul8_16:
  1128     0072                     ??_I2C_Master_Write:	
  1129                           ; 1 bytes @ 0x2
  1130                           
  1131     0072                     ??_I2C_Master_Read:	
  1132                           ; 1 bytes @ 0x2
  1133                           
  1134     0072                     Lcd_Write_Char_4bits@temp:	
  1135                           ; 1 bytes @ 0x2
  1136                           
  1137     0072                     ___wmul@multiplicand:	
  1138                           ; 1 bytes @ 0x2
  1139                           
  1140     0072                     ___awmod@dividend:	
  1141                           ; 2 bytes @ 0x2
  1142                           
  1143     0072                     ___lwmod@dividend:	
  1144                           ; 2 bytes @ 0x2
  1145                           
  1146                           
  1147                           ; 2 bytes @ 0x2
  1148     0072                     	ds	1
  1149     0073                     Lcd_Cmd_4bits@a:
  1150     0073                     Lcd_Write_Char_4bits@y:	
  1151                           ; 1 bytes @ 0x3
  1152                           
  1153                           
  1154                           ; 1 bytes @ 0x3
  1155     0073                     	ds	1
  1156     0074                     ??_Lcd_Clear_4bits:
  1157     0074                     ?_Lcd_Set_Cursor_4bits:	
  1158                           ; 1 bytes @ 0x4
  1159                           
  1160     0074                     ??_Lcd_Init_4bits:	
  1161                           ; 1 bytes @ 0x4
  1162                           
  1163     0074                     ??___wmul:	
  1164                           ; 1 bytes @ 0x4
  1165                           
  1166     0074                     ??___awmod:	
  1167                           ; 1 bytes @ 0x4
  1168                           
  1169     0074                     ??___flneg:	
  1170                           ; 1 bytes @ 0x4
  1171                           
  1172     0074                     ??___lwmod:	
  1173                           ; 1 bytes @ 0x4
  1174                           
  1175     0074                     Lcd_Set_Cursor_4bits@b:	
  1176                           ; 1 bytes @ 0x4
  1177                           
  1178     0074                     Lcd_Write_Char_4bits@a:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181     0074                     I2C_Master_Read@temp:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184     0074                     ___wmul@product:	
  1185                           ; 2 bytes @ 0x4
  1186                           
  1187     0074                     __Umul8_16@product:	
  1188                           ; 2 bytes @ 0x4
  1189                           
  1190     0074                     ___lldiv@dividend:	
  1191                           ; 2 bytes @ 0x4
  1192                           
  1193     0074                     __div_to_l_@f2:	
  1194                           ; 4 bytes @ 0x4
  1195                           
  1196     0074                     ___fleq@ff2:	
  1197                           ; 4 bytes @ 0x4
  1198                           
  1199     0074                     ___flge@ff2:	
  1200                           ; 4 bytes @ 0x4
  1201                           
  1202     0074                     __tdiv_to_l_@f2:	
  1203                           ; 4 bytes @ 0x4
  1204                           
  1205     0074                     ___llmod@dividend:	
  1206                           ; 4 bytes @ 0x4
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x4
  1210     0074                     	ds	1
  1211     0075                     ??_Lcd_Set_Cursor_4bits:
  1212     0075                     ??_Lcd_Write_String_4bits:	
  1213                           ; 1 bytes @ 0x5
  1214                           
  1215     0075                     ___awmod@counter:	
  1216                           ; 1 bytes @ 0x5
  1217                           
  1218     0075                     ___lwmod@counter:	
  1219                           ; 1 bytes @ 0x5
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x5
  1223     0075                     	ds	1
  1224     0076                     ?___lwdiv:
  1225     0076                     ?___xxtofl:	
  1226                           ; 2 bytes @ 0x6
  1227                           
  1228     0076                     Lcd_Set_Cursor_4bits@a:	
  1229                           ; 4 bytes @ 0x6
  1230                           
  1231     0076                     ___awmod@sign:	
  1232                           ; 1 bytes @ 0x6
  1233                           
  1234     0076                     Lcd_Write_String_4bits@i:	
  1235                           ; 1 bytes @ 0x6
  1236                           
  1237     0076                     ___lwdiv@divisor:	
  1238                           ; 2 bytes @ 0x6
  1239                           
  1240     0076                     __Umul8_16@word_mpld:	
  1241                           ; 2 bytes @ 0x6
  1242                           
  1243     0076                     ___xxtofl@val:	
  1244                           ; 2 bytes @ 0x6
  1245                           
  1246                           
  1247                           ; 4 bytes @ 0x6
  1248     0076                     	ds	1
  1249     0077                     ?___awdiv:
  1250     0077                     Lcd_Set_Cursor_4bits@z:	
  1251                           ; 2 bytes @ 0x7
  1252                           
  1253     0077                     ___awdiv@divisor:	
  1254                           ; 1 bytes @ 0x7
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x7
  1258     0077                     	ds	1
  1259     0078                     ??__tdiv_to_l_:
  1260     0078                     ??__div_to_l_:	
  1261                           ; 1 bytes @ 0x8
  1262                           
  1263     0078                     ??___lldiv:	
  1264                           ; 1 bytes @ 0x8
  1265                           
  1266     0078                     ??___fleq:	
  1267                           ; 1 bytes @ 0x8
  1268                           
  1269     0078                     ??___flge:	
  1270                           ; 1 bytes @ 0x8
  1271                           
  1272     0078                     ??___llmod:	
  1273                           ; 1 bytes @ 0x8
  1274                           
  1275     0078                     Lcd_Set_Cursor_4bits@y:	
  1276                           ; 1 bytes @ 0x8
  1277                           
  1278     0078                     Lcd_Write_String_4bits@a:	
  1279                           ; 1 bytes @ 0x8
  1280                           
  1281     0078                     __Umul8_16@multiplier:	
  1282                           ; 1 bytes @ 0x8
  1283                           
  1284     0078                     ___lwdiv@dividend:	
  1285                           ; 1 bytes @ 0x8
  1286                           
  1287                           
  1288                           ; 2 bytes @ 0x8
  1289     0078                     	ds	1
  1290     0079                     Lcd_Set_Cursor_4bits@temp:
  1291     0079                     ___llmod@counter:	
  1292                           ; 1 bytes @ 0x9
  1293                           
  1294     0079                     ___awdiv@dividend:	
  1295                           ; 1 bytes @ 0x9
  1296                           
  1297     0079                     ___lldiv@quotient:	
  1298                           ; 2 bytes @ 0x9
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x9
  1302     0079                     	ds	1
  1303     007A                     ??___lwdiv:
  1304     007A                     ??___xxtofl:	
  1305                           ; 1 bytes @ 0xA
  1306                           
  1307                           
  1308                           ; 1 bytes @ 0xA
  1309     007A                     	ds	1
  1310     007B                     ??___awdiv:
  1311     007B                     ___lwdiv@quotient:	
  1312                           ; 1 bytes @ 0xB
  1313                           
  1314                           
  1315                           ; 2 bytes @ 0xB
  1316     007B                     	ds	2
  1317     007D                     ___lldiv@counter:
  1318     007D                     ___lwdiv@counter:	
  1319                           ; 1 bytes @ 0xD
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0xD
  1323     007D                     	ds	1
  1324     007E                     ??_setup:
  1325     007E                     ??___flsub:	
  1326                           ; 1 bytes @ 0xE
  1327                           
  1328                           
  1329                           	psect	cstackBANK0
  1330     0020                     __pcstackBANK0:	
  1331                           ; 1 bytes @ 0xE
  1332                           
  1333     0020                     ?_I2C_Master_Init:
  1334     0020                     ___awdiv@counter:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337     0020                     ___xxtofl@sign:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340     0020                     I2C_Master_Init@c:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343     0020                     __div_to_l_@quot:	
  1344                           ; 4 bytes @ 0x0
  1345                           
  1346     0020                     __tdiv_to_l_@quot:	
  1347                           ; 4 bytes @ 0x0
  1348                           
  1349                           
  1350                           ; 4 bytes @ 0x0
  1351     0020                     	ds	1
  1352     0021                     ___awdiv@sign:
  1353     0021                     ___xxtofl@exp:	
  1354                           ; 1 bytes @ 0x1
  1355                           
  1356                           
  1357                           ; 1 bytes @ 0x1
  1358     0021                     	ds	1
  1359     0022                     ___awdiv@quotient:
  1360     0022                     ___xxtofl@arg:	
  1361                           ; 2 bytes @ 0x2
  1362                           
  1363                           
  1364                           ; 4 bytes @ 0x2
  1365     0022                     	ds	2
  1366     0024                     ??_I2C_Master_Init:
  1367     0024                     ?___flmul:	
  1368                           ; 1 bytes @ 0x4
  1369                           
  1370     0024                     __div_to_l_@cntr:	
  1371                           ; 4 bytes @ 0x4
  1372                           
  1373     0024                     __tdiv_to_l_@cntr:	
  1374                           ; 1 bytes @ 0x4
  1375                           
  1376     0024                     ___flmul@b:	
  1377                           ; 1 bytes @ 0x4
  1378                           
  1379                           
  1380                           ; 4 bytes @ 0x4
  1381     0024                     	ds	1
  1382     0025                     __div_to_l_@exp1:
  1383     0025                     __tdiv_to_l_@exp1:	
  1384                           ; 1 bytes @ 0x5
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x5
  1388     0025                     	ds	3
  1389     0028                     ___flmul@a:
  1390                           
  1391                           ; 4 bytes @ 0x8
  1392     0028                     	ds	4
  1393     002C                     ??___flmul:
  1394                           
  1395                           ; 1 bytes @ 0xC
  1396     002C                     	ds	5
  1397     0031                     ___flmul@sign:
  1398                           
  1399                           ; 1 bytes @ 0x11
  1400     0031                     	ds	1
  1401     0032                     ___flmul@grs:
  1402                           
  1403                           ; 4 bytes @ 0x12
  1404     0032                     	ds	4
  1405     0036                     ___flmul@aexp:
  1406                           
  1407                           ; 1 bytes @ 0x16
  1408     0036                     	ds	1
  1409     0037                     ___flmul@bexp:
  1410                           
  1411                           ; 1 bytes @ 0x17
  1412     0037                     	ds	1
  1413     0038                     ___flmul@prod:
  1414                           
  1415                           ; 4 bytes @ 0x18
  1416     0038                     	ds	4
  1417     003C                     ___flmul@temp:
  1418                           
  1419                           ; 2 bytes @ 0x1C
  1420     003C                     	ds	2
  1421     003E                     ?_fround:
  1422     003E                     ?_scale:	
  1423                           ; 4 bytes @ 0x1E
  1424                           
  1425                           
  1426                           ; 4 bytes @ 0x1E
  1427     003E                     	ds	4
  1428     0042                     ??_fround:
  1429     0042                     ??_scale:	
  1430                           ; 1 bytes @ 0x22
  1431                           
  1432                           
  1433                           ; 1 bytes @ 0x22
  1434     0042                     	ds	7
  1435     0049                     _fround$1373:
  1436                           
  1437                           ; 4 bytes @ 0x29
  1438     0049                     	ds	3
  1439     004C                     _scale$1374:
  1440                           
  1441                           ; 4 bytes @ 0x2C
  1442     004C                     	ds	1
  1443     004D                     _fround$1372:
  1444                           
  1445                           ; 4 bytes @ 0x2D
  1446     004D                     	ds	3
  1447     0050                     scale@scl:
  1448                           
  1449                           ; 1 bytes @ 0x30
  1450     0050                     	ds	1
  1451     0051                     ?___fltol:
  1452     0051                     fround@prec:	
  1453                           ; 4 bytes @ 0x31
  1454                           
  1455     0051                     ___fltol@f1:	
  1456                           ; 1 bytes @ 0x31
  1457                           
  1458                           
  1459                           ; 4 bytes @ 0x31
  1460     0051                     	ds	1
  1461     0052                     ?___fladd:
  1462     0052                     ___fladd@b:	
  1463                           ; 4 bytes @ 0x32
  1464                           
  1465                           
  1466                           ; 4 bytes @ 0x32
  1467     0052                     	ds	3
  1468     0055                     ??___fltol:
  1469                           
  1470                           ; 1 bytes @ 0x35
  1471     0055                     	ds	1
  1472     0056                     ___fladd@a:
  1473                           
  1474                           ; 4 bytes @ 0x36
  1475     0056                     	ds	3
  1476     0059                     ___fltol@sign1:
  1477                           
  1478                           ; 1 bytes @ 0x39
  1479     0059                     	ds	1
  1480     005A                     ??___fladd:
  1481     005A                     ___fltol@exp1:	
  1482                           ; 1 bytes @ 0x3A
  1483                           
  1484                           
  1485                           ; 1 bytes @ 0x3A
  1486     005A                     	ds	8
  1487     0062                     ___fladd@signs:
  1488                           
  1489                           ; 1 bytes @ 0x42
  1490     0062                     	ds	1
  1491     0063                     ___fladd@aexp:
  1492                           
  1493                           ; 1 bytes @ 0x43
  1494     0063                     	ds	1
  1495     0064                     ___fladd@bexp:
  1496                           
  1497                           ; 1 bytes @ 0x44
  1498     0064                     	ds	1
  1499     0065                     ___fladd@grs:
  1500                           
  1501                           ; 1 bytes @ 0x45
  1502     0065                     	ds	1
  1503     0066                     ?___flsub:
  1504     0066                     ___flsub@a:	
  1505                           ; 4 bytes @ 0x46
  1506                           
  1507                           
  1508                           ; 4 bytes @ 0x46
  1509     0066                     	ds	4
  1510     006A                     ___flsub@b:
  1511                           
  1512                           ; 4 bytes @ 0x4A
  1513     006A                     	ds	4
  1514                           
  1515                           	psect	maintext
  1516     1325                     __pmaintext:	
  1517 ;;
  1518 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1519 ;;
  1520 ;; *************** function _main *****************
  1521 ;; Defined at:
  1522 ;;		line 66 in file "main_M.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : B00/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0
  1538 ;;      Temps:          0       0       4       0       0
  1539 ;;      Totals:         0       0       4       0       0
  1540 ;;Total ram usage:        4 bytes
  1541 ;; Hardware stack levels required when called: 4
  1542 ;; This function calls:
  1543 ;;		_I2C_Master_Read
  1544 ;;		_I2C_Master_Start
  1545 ;;		_I2C_Master_Stop
  1546 ;;		_I2C_Master_Write
  1547 ;;		_Lcd_Clear_4bits
  1548 ;;		_Lcd_Set_Cursor_4bits
  1549 ;;		_Lcd_Write_String_4bits
  1550 ;;		___xxtofl
  1551 ;;		_setup
  1552 ;;		_sprintf
  1553 ;; This function is called by:
  1554 ;;		Startup code after reset
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558     1325                     _main:	
  1559                           ;psect for function _main
  1560                           
  1561     1325                     l3555:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1564                           
  1565                           
  1566                           ;main_M.c: 68:     setup();
  1567     1325  160A  118A  20AC  160A  118A  	fcall	_setup
  1568                           
  1569                           ;main_M.c: 69:     Lcd_Clear_4bits();
  1570     132A  160A  158A  2594  160A  118A  	fcall	_Lcd_Clear_4bits
  1571     132F                     l156:	
  1572                           ;main_M.c: 74:     while(1)
  1573                           
  1574                           
  1575                           ;main_M.c: 75:     {;main_M.c: 77:         I2C_Master_Start();
  1576     132F  160A  158A  2560  160A  118A  	fcall	_I2C_Master_Start
  1577                           
  1578                           ;main_M.c: 78:         I2C_Master_Write(0x11);
  1579     1334  3011               	movlw	17
  1580     1335  00F0               	movwf	I2C_Master_Write@d
  1581     1336  3000               	movlw	0
  1582     1337  00F1               	movwf	I2C_Master_Write@d+1
  1583     1338  160A  158A  2572  160A  118A  	fcall	_I2C_Master_Write
  1584                           
  1585                           ;main_M.c: 79:         distancia = I2C_Master_Read(0);
  1586     133D  3000               	movlw	0
  1587     133E  00F0               	movwf	I2C_Master_Read@a
  1588     133F  00F1               	movwf	I2C_Master_Read@a+1
  1589     1340  160A  158A  268D  160A  118A  	fcall	_I2C_Master_Read
  1590     1345  0870               	movf	?_I2C_Master_Read,w
  1591     1346  1683               	bsf	3,5	;RP0=1, select bank1
  1592     1347  1303               	bcf	3,6	;RP1=0, select bank1
  1593     1348  00C3               	movwf	??_main^(0+128)
  1594     1349  0871               	movf	?_I2C_Master_Read+1,w
  1595     134A  00C4               	movwf	(??_main^(0+128)+1)
  1596     134B  01C5               	clrf	(??_main^(0+128)+2)
  1597     134C  01C6               	clrf	(??_main^(0+128)+3)
  1598     134D  0846               	movf	(??_main+3)^(0+128),w
  1599     134E  00F9               	movwf	___xxtofl@val+3
  1600     134F  0845               	movf	(??_main+2)^(0+128),w
  1601     1350  00F8               	movwf	___xxtofl@val+2
  1602     1351  0844               	movf	(??_main+1)^(0+128),w
  1603     1352  00F7               	movwf	___xxtofl@val+1
  1604     1353  0843               	movf	??_main^(0+128),w
  1605     1354  00F6               	movwf	___xxtofl@val
  1606     1355  3000               	movlw	0
  1607     1356  120A  118A  20F5  160A  118A  	fcall	___xxtofl
  1608     135B  0879               	movf	?___xxtofl+3,w
  1609     135C  1683               	bsf	3,5	;RP0=1, select bank1
  1610     135D  1303               	bcf	3,6	;RP1=0, select bank1
  1611     135E  00CA               	movwf	(_distancia+3)^(0+128)
  1612     135F  0878               	movf	?___xxtofl+2,w
  1613     1360  00C9               	movwf	(_distancia+2)^(0+128)
  1614     1361  0877               	movf	?___xxtofl+1,w
  1615     1362  00C8               	movwf	(_distancia+1)^(0+128)
  1616     1363  0876               	movf	?___xxtofl,w
  1617     1364  00C7               	movwf	_distancia^(0+128)
  1618                           
  1619                           ;main_M.c: 80:         I2C_Master_Stop();
  1620     1365  160A  158A  2569  160A  118A  	fcall	_I2C_Master_Stop
  1621     136A                     l3557:
  1622                           
  1623                           ;main_M.c: 81:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1624     136A  3003               	movlw	3
  1625     136B  1683               	bsf	3,5	;RP0=1, select bank1
  1626     136C  1303               	bcf	3,6	;RP1=0, select bank1
  1627     136D  00C5               	movwf	(??_main^(0+128)+2)
  1628     136E  3008               	movlw	8
  1629     136F  00C4               	movwf	(??_main^(0+128)+1)
  1630     1370  3076               	movlw	118
  1631     1371  00C3               	movwf	??_main^(0+128)
  1632     1372                     u5557:
  1633     1372  0BC3               	decfsz	??_main^(0+128),f
  1634     1373  2B72               	goto	u5557
  1635     1374  0BC4               	decfsz	(??_main^(0+128)+1),f
  1636     1375  2B72               	goto	u5557
  1637     1376  0BC5               	decfsz	(??_main^(0+128)+2),f
  1638     1377  2B72               	goto	u5557
  1639     1378  0000               	nop
  1640     1379                     l3559:
  1641                           
  1642                           ;main_M.c: 84:         sprintf(distanciaLCD, "Distancia: %.1fcm", distancia);
  1643     1379  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1644     137A  1683               	bsf	3,5	;RP0=1, select bank1
  1645     137B  1303               	bcf	3,6	;RP1=0, select bank1
  1646     137C  00A0               	movwf	sprintf@f^(0+128)
  1647     137D  084A               	movf	(_distancia+3)^(0+128),w
  1648     137E  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1649     137F  0849               	movf	(_distancia+2)^(0+128),w
  1650     1380  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1651     1381  0848               	movf	(_distancia+1)^(0+128),w
  1652     1382  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1653     1383  0847               	movf	_distancia^(0+128),w
  1654     1384  00A1               	movwf	(?_sprintf^(0+128)+1)
  1655     1385  30CB               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1656     1386  120A  118A  21AF  160A  118A  	fcall	_sprintf
  1657     138B                     l3561:
  1658                           
  1659                           ;main_M.c: 86:         Lcd_Set_Cursor_4bits(1,1);
  1660     138B  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1661     138C  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1662     138D  3001               	movlw	1
  1663     138E  160A  158A  276C  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1664     1393                     l3563:
  1665                           
  1666                           ;main_M.c: 87:         Lcd_Write_String_4bits(distanciaLCD);
  1667     1393  30CB               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1668     1394  160A  158A  25DA  160A  118A  	fcall	_Lcd_Write_String_4bits
  1669     1399  2B2F               	goto	l156
  1670     139A  120A  118A  2800   	ljmp	start
  1671     139D                     __end_of_main:
  1672                           
  1673                           	psect	text1
  1674     01AF                     __ptext1:	
  1675 ;; *************** function _sprintf *****************
  1676 ;; Defined at:
  1677 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  sp              1    wreg     PTR unsigned char 
  1680 ;;		 -> distanciaLCD(16), 
  1681 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1682 ;;		 -> STR_1(18), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1685 ;;		 -> distanciaLCD(16), 
  1686 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1687 ;;  tmpval          4   23[BANK1 ] struct .
  1688 ;;  val             4   17[BANK1 ] unsigned long 
  1689 ;;  prec            2   28[BANK1 ] int 
  1690 ;;  eexp            2   21[BANK1 ] int 
  1691 ;;  flag            2   15[BANK1 ] unsigned short 
  1692 ;;  cp              2    0        PTR const unsigned char 
  1693 ;;  len             2    0        unsigned int 
  1694 ;;  width           2    0        int 
  1695 ;;  c               1   34[BANK1 ] unsigned char 
  1696 ;;  ap              1   14[BANK1 ] PTR void [1]
  1697 ;;		 -> ?_sprintf(2), 
  1698 ;;  d               1    0        unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2    0[BANK1 ] int 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       5       0       0
  1709 ;;      Locals:         0       0      25       0       0
  1710 ;;      Temps:          0       0       5       0       0
  1711 ;;      Totals:         0       0      35       0       0
  1712 ;;Total ram usage:       35 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 3
  1715 ;; This function calls:
  1716 ;;		___awdiv
  1717 ;;		___fladd
  1718 ;;		___fleq
  1719 ;;		___flge
  1720 ;;		___flmul
  1721 ;;		___flneg
  1722 ;;		___flsub
  1723 ;;		___fltol
  1724 ;;		___lldiv
  1725 ;;		___llmod
  1726 ;;		___wmul
  1727 ;;		___xxtofl
  1728 ;;		__div_to_l_
  1729 ;;		__tdiv_to_l_
  1730 ;;		_fround
  1731 ;;		_isdigit
  1732 ;;		_scale
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738     01AF                     _sprintf:	
  1739                           ;psect for function _sprintf
  1740                           
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1744                           ;sprintf@sp stored from wreg
  1745     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1746     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1747     01B1  00BB               	movwf	sprintf@sp^(0+128)
  1748     01B2                     l3341:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1751     01B2  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1752     01B3  00AE               	movwf	sprintf@ap^(0+128)
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1755     01B4  2FDA               	goto	l3535
  1756     01B5                     l3343:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1759     01B5  3025               	movlw	37
  1760     01B6  0642               	xorwf	sprintf@c^(0+128),w
  1761     01B7  1903               	btfsc	3,2
  1762     01B8  29BA               	goto	u5181
  1763     01B9  29BB               	goto	u5180
  1764     01BA                     u5181:
  1765     01BA  29C5               	goto	l3349
  1766     01BB                     u5180:
  1767     01BB                     l3345:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1770     01BB  083B               	movf	sprintf@sp^(0+128),w
  1771     01BC  0084               	movwf	4
  1772     01BD  0842               	movf	sprintf@c^(0+128),w
  1773     01BE  1383               	bcf	3,7	;select IRP bank0
  1774     01BF  0080               	movwf	0
  1775     01C0                     l3347:
  1776     01C0  3001               	movlw	1
  1777     01C1  00A5               	movwf	??_sprintf^(0+128)
  1778     01C2  0825               	movf	??_sprintf^(0+128),w
  1779     01C3  07BB               	addwf	sprintf@sp^(0+128),f
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1782     01C4  2FDA               	goto	l3535
  1783     01C5                     l3349:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1786     01C5  01AF               	clrf	sprintf@flag^(0+128)
  1787     01C6  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1788     01C7                     l3351:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1791     01C7  0820               	movf	sprintf@f^(0+128),w
  1792     01C8  0084               	movwf	4
  1793     01C9  160A  118A  2000  120A  118A  	fcall	stringdir
  1794     01CE  3A2E               	xorlw	46
  1795     01CF  1D03               	skipz
  1796     01D0  29D2               	goto	u5191
  1797     01D1  29D3               	goto	u5190
  1798     01D2                     u5191:
  1799     01D2  2A18               	goto	l3367
  1800     01D3                     u5190:
  1801     01D3                     l3353:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1804     01D3  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1805     01D4                     l3355:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1808     01D4  3001               	movlw	1
  1809     01D5  00A5               	movwf	??_sprintf^(0+128)
  1810     01D6  0825               	movf	??_sprintf^(0+128),w
  1811     01D7  07A0               	addwf	sprintf@f^(0+128),f
  1812     01D8                     l3357:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1815     01D8  01BC               	clrf	sprintf@prec^(0+128)
  1816     01D9  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1819     01DA  2A07               	goto	l3365
  1820     01DB                     l3359:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1823     01DB  300A               	movlw	10
  1824     01DC  00F0               	movwf	___wmul@multiplier
  1825     01DD  3000               	movlw	0
  1826     01DE  00F1               	movwf	___wmul@multiplier+1
  1827     01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1828     01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1829     01E1  083D               	movf	(sprintf@prec+1)^(0+128),w
  1830     01E2  00F3               	movwf	___wmul@multiplicand+1
  1831     01E3  083C               	movf	sprintf@prec^(0+128),w
  1832     01E4  00F2               	movwf	___wmul@multiplicand
  1833     01E5  160A  158A  2641  120A  118A  	fcall	___wmul
  1834     01EA  0871               	movf	?___wmul+1,w
  1835     01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1836     01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1837     01ED  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1838     01EE  0870               	movf	?___wmul,w
  1839     01EF  00BC               	movwf	sprintf@prec^(0+128)
  1840     01F0                     l3361:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1843     01F0  0820               	movf	sprintf@f^(0+128),w
  1844     01F1  0084               	movwf	4
  1845     01F2  160A  118A  2000  120A  118A  	fcall	stringdir
  1846     01F7  3ED0               	addlw	208
  1847     01F8  00A5               	movwf	??_sprintf^(0+128)
  1848     01F9  30FF               	movlw	255
  1849     01FA  1803               	skipnc
  1850     01FB  3000               	movlw	0
  1851     01FC  00A6               	movwf	(??_sprintf^(0+128)+1)
  1852     01FD  0825               	movf	??_sprintf^(0+128),w
  1853     01FE  07BC               	addwf	sprintf@prec^(0+128),f
  1854     01FF  1803               	skipnc
  1855     0200  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1856     0201  0826               	movf	(??_sprintf+1)^(0+128),w
  1857     0202  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1858     0203                     l3363:
  1859     0203  3001               	movlw	1
  1860     0204  00A5               	movwf	??_sprintf^(0+128)
  1861     0205  0825               	movf	??_sprintf^(0+128),w
  1862     0206  07A0               	addwf	sprintf@f^(0+128),f
  1863     0207                     l3365:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1866     0207  0820               	movf	sprintf@f^(0+128),w
  1867     0208  0084               	movwf	4
  1868     0209  160A  118A  2000  120A  118A  	fcall	stringdir
  1869     020E  160A  158A  25AE  120A  118A  	fcall	_isdigit
  1870     0213  1803               	btfsc	3,0
  1871     0214  2A16               	goto	u5201
  1872     0215  2A17               	goto	u5200
  1873     0216                     u5201:
  1874     0216  29DB               	goto	l3359
  1875     0217                     u5200:
  1876     0217  2A1E               	goto	l3373
  1877     0218                     l3367:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1880     0218  01BC               	clrf	sprintf@prec^(0+128)
  1881     0219  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1882     021A                     l3369:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1885     021A  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1886     021B  2A1E               	goto	l3373
  1887     021C                     l373:	
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1889                           
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1892     021C  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1895     021D  2A3A               	goto	l3375
  1896     021E                     l3373:
  1897     021E  3001               	movlw	1
  1898     021F  1683               	bsf	3,5	;RP0=1, select bank1
  1899     0220  1303               	bcf	3,6	;RP1=0, select bank1
  1900     0221  07A0               	addwf	sprintf@f^(0+128),f
  1901     0222  30FF               	movlw	-1
  1902     0223  0720               	addwf	sprintf@f^(0+128),w
  1903     0224  0084               	movwf	4
  1904     0225  160A  118A  2000  120A  118A  	fcall	stringdir
  1905     022A  00C2               	movwf	sprintf@c^(0+128)
  1906     022B  00A5               	movwf	??_sprintf^(0+128)
  1907     022C  01A6               	clrf	(??_sprintf^(0+128)+1)
  1908                           
  1909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1910                           ; Switch size 1, requested type "simple"
  1911                           ; Number of cases is 1, Range of values is 0 to 0
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            4     3 (average)
  1915                           ; direct_byte           11     8 (fixed)
  1916                           ; jumptable            260     6 (fixed)
  1917                           ;	Chosen strategy is simple_byte
  1918     022D  0826               	movf	(??_sprintf+1)^(0+128),w
  1919     022E  3A00               	xorlw	0	; case 0
  1920     022F  1903               	skipnz
  1921     0230  2A32               	goto	l3615
  1922     0231  2FDA               	goto	l3535
  1923     0232                     l3615:
  1924                           
  1925                           ; Switch size 1, requested type "simple"
  1926                           ; Number of cases is 2, Range of values is 0 to 102
  1927                           ; switch strategies available:
  1928                           ; Name         Instructions Cycles
  1929                           ; simple_byte            7     4 (average)
  1930                           ; jumptable            260     6 (fixed)
  1931                           ;	Chosen strategy is simple_byte
  1932     0232  0825               	movf	??_sprintf^(0+128),w
  1933     0233  3A00               	xorlw	0	; case 0
  1934     0234  1903               	skipnz
  1935     0235  2FEA               	goto	l3537
  1936     0236  3A66               	xorlw	102	; case 102
  1937     0237  1903               	skipnz
  1938     0238  2A1C               	goto	l373
  1939     0239  2FDA               	goto	l3535
  1940     023A                     l3375:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1943     023A  3000               	movlw	0
  1944     023B  052F               	andwf	sprintf@flag^(0+128),w
  1945     023C  00A5               	movwf	??_sprintf^(0+128)
  1946     023D  3007               	movlw	7
  1947     023E  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1948     023F  00A6               	movwf	(??_sprintf+1)^(0+128)
  1949     0240  0825               	movf	??_sprintf^(0+128),w
  1950     0241  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1951     0242  1903               	btfsc	3,2
  1952     0243  2A45               	goto	u5211
  1953     0244  2A46               	goto	u5210
  1954     0245                     u5211:
  1955     0245  2F97               	goto	l3517
  1956     0246                     u5210:
  1957     0246                     l3377:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1960     0246  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1961     0247  2A49               	goto	u5221
  1962     0248  2A4A               	goto	u5220
  1963     0249                     u5221:
  1964     0249  2A4E               	goto	l3381
  1965     024A                     u5220:
  1966     024A                     l3379:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1969     024A  3006               	movlw	6
  1970     024B  00BC               	movwf	sprintf@prec^(0+128)
  1971     024C  3000               	movlw	0
  1972     024D  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1973     024E                     l3381:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1976     024E  082E               	movf	sprintf@ap^(0+128),w
  1977     024F  0084               	movwf	4
  1978     0250  1383               	bcf	3,7	;select IRP bank0
  1979     0251  0800               	movf	0,w
  1980     0252  00BE               	movwf	sprintf@fval^(0+128)
  1981     0253  0A84               	incf	4,f
  1982     0254  0800               	movf	0,w
  1983     0255  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1984     0256  0A84               	incf	4,f
  1985     0257  0800               	movf	0,w
  1986     0258  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1987     0259  0A84               	incf	4,f
  1988     025A  0800               	movf	0,w
  1989     025B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1990     025C                     l3383:
  1991     025C  3004               	movlw	4
  1992     025D  00A5               	movwf	??_sprintf^(0+128)
  1993     025E  0825               	movf	??_sprintf^(0+128),w
  1994     025F  07AE               	addwf	sprintf@ap^(0+128),f
  1995     0260                     l3385:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1998     0260  0841               	movf	(sprintf@fval+3)^(0+128),w
  1999     0261  00F3               	movwf	___flge@ff1+3
  2000     0262  0840               	movf	(sprintf@fval+2)^(0+128),w
  2001     0263  00F2               	movwf	___flge@ff1+2
  2002     0264  083F               	movf	(sprintf@fval+1)^(0+128),w
  2003     0265  00F1               	movwf	___flge@ff1+1
  2004     0266  083E               	movf	sprintf@fval^(0+128),w
  2005     0267  00F0               	movwf	___flge@ff1
  2006     0268  3000               	movlw	0
  2007     0269  00F7               	movwf	___flge@ff2+3
  2008     026A  3000               	movlw	0
  2009     026B  00F6               	movwf	___flge@ff2+2
  2010     026C  3000               	movlw	0
  2011     026D  00F5               	movwf	___flge@ff2+1
  2012     026E  3000               	movlw	0
  2013     026F  00F4               	movwf	___flge@ff2
  2014     0270  120A  158A  2003  120A  118A  	fcall	___flge
  2015     0275  1803               	btfsc	3,0
  2016     0276  2A78               	goto	u5231
  2017     0277  2A79               	goto	u5230
  2018     0278                     u5231:
  2019     0278  2A96               	goto	l3391
  2020     0279                     u5230:
  2021     0279                     l3387:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2024     0279  1683               	bsf	3,5	;RP0=1, select bank1
  2025     027A  1303               	bcf	3,6	;RP1=0, select bank1
  2026     027B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2027     027C  00F3               	movwf	___flneg@f1+3
  2028     027D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2029     027E  00F2               	movwf	___flneg@f1+2
  2030     027F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2031     0280  00F1               	movwf	___flneg@f1+1
  2032     0281  083E               	movf	sprintf@fval^(0+128),w
  2033     0282  00F0               	movwf	___flneg@f1
  2034     0283  160A  158A  257C  120A  118A  	fcall	___flneg
  2035     0288  0873               	movf	?___flneg+3,w
  2036     0289  1683               	bsf	3,5	;RP0=1, select bank1
  2037     028A  1303               	bcf	3,6	;RP1=0, select bank1
  2038     028B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2039     028C  0872               	movf	?___flneg+2,w
  2040     028D  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2041     028E  0871               	movf	?___flneg+1,w
  2042     028F  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2043     0290  0870               	movf	?___flneg,w
  2044     0291  00BE               	movwf	sprintf@fval^(0+128)
  2045     0292                     l3389:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2048     0292  3003               	movlw	3
  2049     0293  04AF               	iorwf	sprintf@flag^(0+128),f
  2050     0294  3000               	movlw	0
  2051     0295  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2052     0296                     l3391:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2055     0296  1683               	bsf	3,5	;RP0=1, select bank1
  2056     0297  1303               	bcf	3,6	;RP1=0, select bank1
  2057     0298  01B5               	clrf	sprintf@eexp^(0+128)
  2058     0299  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2059     029A                     l3393:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2062     029A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2063     029B  00F3               	movwf	___fleq@ff1+3
  2064     029C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2065     029D  00F2               	movwf	___fleq@ff1+2
  2066     029E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2067     029F  00F1               	movwf	___fleq@ff1+1
  2068     02A0  083E               	movf	sprintf@fval^(0+128),w
  2069     02A1  00F0               	movwf	___fleq@ff1
  2070     02A2  3000               	movlw	0
  2071     02A3  00F7               	movwf	___fleq@ff2+3
  2072     02A4  3000               	movlw	0
  2073     02A5  00F6               	movwf	___fleq@ff2+2
  2074     02A6  3000               	movlw	0
  2075     02A7  00F5               	movwf	___fleq@ff2+1
  2076     02A8  3000               	movlw	0
  2077     02A9  00F4               	movwf	___fleq@ff2
  2078     02AA  160A  158A  27B2  120A  118A  	fcall	___fleq
  2079     02AF  1803               	btfsc	3,0
  2080     02B0  2AB2               	goto	u5241
  2081     02B1  2AB3               	goto	u5240
  2082     02B2                     u5241:
  2083     02B2  2BA3               	goto	l3419
  2084     02B3                     u5240:
  2085     02B3                     l3395:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2088     02B3  1003               	clrc
  2089     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2090     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  2091     02B6  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2092     02B7  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2093     02B8  3E82               	addlw	130
  2094     02B9  00B5               	movwf	sprintf@eexp^(0+128)
  2095     02BA  30FF               	movlw	255
  2096     02BB  1803               	skipnc
  2097     02BC  3000               	movlw	0
  2098     02BD  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2099     02BE                     l3397:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2102     02BE  30FF               	movlw	255
  2103     02BF  07B5               	addwf	sprintf@eexp^(0+128),f
  2104     02C0  1803               	skipnc
  2105     02C1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2106     02C2  30FF               	movlw	255
  2107     02C3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2108     02C4                     l3399:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2111     02C4  3003               	movlw	3
  2112     02C5  00F0               	movwf	___wmul@multiplier
  2113     02C6  3000               	movlw	0
  2114     02C7  00F1               	movwf	___wmul@multiplier+1
  2115     02C8  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2116     02C9  00F3               	movwf	___wmul@multiplicand+1
  2117     02CA  0835               	movf	sprintf@eexp^(0+128),w
  2118     02CB  00F2               	movwf	___wmul@multiplicand
  2119     02CC  160A  158A  2641  120A  118A  	fcall	___wmul
  2120     02D1  0871               	movf	?___wmul+1,w
  2121     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2122     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2123     02D4  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2124     02D5  0870               	movf	?___wmul,w
  2125     02D6  00B5               	movwf	sprintf@eexp^(0+128)
  2126     02D7                     l3401:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2129     02D7  300A               	movlw	10
  2130     02D8  00F7               	movwf	___awdiv@divisor
  2131     02D9  3000               	movlw	0
  2132     02DA  00F8               	movwf	___awdiv@divisor+1
  2133     02DB  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2134     02DC  00FA               	movwf	___awdiv@dividend+1
  2135     02DD  0835               	movf	sprintf@eexp^(0+128),w
  2136     02DE  00F9               	movwf	___awdiv@dividend
  2137     02DF  160A  118A  2244  120A  118A  	fcall	___awdiv
  2138     02E4  0878               	movf	?___awdiv+1,w
  2139     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2140     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2141     02E7  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2142     02E8  0877               	movf	?___awdiv,w
  2143     02E9  00B5               	movwf	sprintf@eexp^(0+128)
  2144     02EA                     l3403:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2147     02EA  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2148     02EB  2AED               	goto	u5251
  2149     02EC  2AEE               	goto	u5250
  2150     02ED                     u5251:
  2151     02ED  2AF4               	goto	l3407
  2152     02EE                     u5250:
  2153     02EE                     l3405:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2156     02EE  30FF               	movlw	255
  2157     02EF  07B5               	addwf	sprintf@eexp^(0+128),f
  2158     02F0  1803               	skipnc
  2159     02F1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2160     02F2  30FF               	movlw	255
  2161     02F3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2162     02F4                     l3407:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2165     02F4  0335               	decf	sprintf@eexp^(0+128),w
  2166     02F5  3AFF               	xorlw	255
  2167     02F6  120A  158A  24A1  120A  118A  	fcall	_scale
  2168     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2169     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2170     02FD  0841               	movf	?_scale+3,w
  2171     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2172     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2173     0300  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2174     0301  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0302  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0303  0840               	movf	?_scale+2,w
  2177     0304  1683               	bsf	3,5	;RP0=1, select bank1
  2178     0305  1303               	bcf	3,6	;RP1=0, select bank1
  2179     0306  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2180     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2181     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2182     0309  083F               	movf	?_scale+1,w
  2183     030A  1683               	bsf	3,5	;RP0=1, select bank1
  2184     030B  1303               	bcf	3,6	;RP1=0, select bank1
  2185     030C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2186     030D  1283               	bcf	3,5	;RP0=0, select bank0
  2187     030E  1303               	bcf	3,6	;RP1=0, select bank0
  2188     030F  083E               	movf	?_scale,w
  2189     0310  1683               	bsf	3,5	;RP0=1, select bank1
  2190     0311  1303               	bcf	3,6	;RP1=0, select bank1
  2191     0312  00B7               	movwf	sprintf@tmpval^(0+128)
  2192     0313                     l3409:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2195     0313  0841               	movf	(sprintf@fval+3)^(0+128),w
  2196     0314  1283               	bcf	3,5	;RP0=0, select bank0
  2197     0315  1303               	bcf	3,6	;RP1=0, select bank0
  2198     0316  00A7               	movwf	___flmul@b+3
  2199     0317  1683               	bsf	3,5	;RP0=1, select bank1
  2200     0318  1303               	bcf	3,6	;RP1=0, select bank1
  2201     0319  0840               	movf	(sprintf@fval+2)^(0+128),w
  2202     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2203     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2204     031C  00A6               	movwf	___flmul@b+2
  2205     031D  1683               	bsf	3,5	;RP0=1, select bank1
  2206     031E  1303               	bcf	3,6	;RP1=0, select bank1
  2207     031F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2208     0320  1283               	bcf	3,5	;RP0=0, select bank0
  2209     0321  1303               	bcf	3,6	;RP1=0, select bank0
  2210     0322  00A5               	movwf	___flmul@b+1
  2211     0323  1683               	bsf	3,5	;RP0=1, select bank1
  2212     0324  1303               	bcf	3,6	;RP1=0, select bank1
  2213     0325  083E               	movf	sprintf@fval^(0+128),w
  2214     0326  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0327  1303               	bcf	3,6	;RP1=0, select bank0
  2216     0328  00A4               	movwf	___flmul@b
  2217     0329  1683               	bsf	3,5	;RP0=1, select bank1
  2218     032A  1303               	bcf	3,6	;RP1=0, select bank1
  2219     032B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2220     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2221     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2222     032E  00AB               	movwf	___flmul@a+3
  2223     032F  1683               	bsf	3,5	;RP0=1, select bank1
  2224     0330  1303               	bcf	3,6	;RP1=0, select bank1
  2225     0331  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2226     0332  1283               	bcf	3,5	;RP0=0, select bank0
  2227     0333  1303               	bcf	3,6	;RP1=0, select bank0
  2228     0334  00AA               	movwf	___flmul@a+2
  2229     0335  1683               	bsf	3,5	;RP0=1, select bank1
  2230     0336  1303               	bcf	3,6	;RP1=0, select bank1
  2231     0337  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2232     0338  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0339  1303               	bcf	3,6	;RP1=0, select bank0
  2234     033A  00A9               	movwf	___flmul@a+1
  2235     033B  1683               	bsf	3,5	;RP0=1, select bank1
  2236     033C  1303               	bcf	3,6	;RP1=0, select bank1
  2237     033D  0837               	movf	sprintf@tmpval^(0+128),w
  2238     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2239     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2240     0340  00A8               	movwf	___flmul@a
  2241     0341  120A  158A  215C  120A  118A  	fcall	___flmul
  2242     0346  1283               	bcf	3,5	;RP0=0, select bank0
  2243     0347  1303               	bcf	3,6	;RP1=0, select bank0
  2244     0348  0827               	movf	?___flmul+3,w
  2245     0349  1683               	bsf	3,5	;RP0=1, select bank1
  2246     034A  1303               	bcf	3,6	;RP1=0, select bank1
  2247     034B  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2248     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2249     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2250     034E  0826               	movf	?___flmul+2,w
  2251     034F  1683               	bsf	3,5	;RP0=1, select bank1
  2252     0350  1303               	bcf	3,6	;RP1=0, select bank1
  2253     0351  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2254     0352  1283               	bcf	3,5	;RP0=0, select bank0
  2255     0353  1303               	bcf	3,6	;RP1=0, select bank0
  2256     0354  0825               	movf	?___flmul+1,w
  2257     0355  1683               	bsf	3,5	;RP0=1, select bank1
  2258     0356  1303               	bcf	3,6	;RP1=0, select bank1
  2259     0357  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2260     0358  1283               	bcf	3,5	;RP0=0, select bank0
  2261     0359  1303               	bcf	3,6	;RP1=0, select bank0
  2262     035A  0824               	movf	?___flmul,w
  2263     035B  1683               	bsf	3,5	;RP0=1, select bank1
  2264     035C  1303               	bcf	3,6	;RP1=0, select bank1
  2265     035D  00B7               	movwf	sprintf@tmpval^(0+128)
  2266     035E                     l3411:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2269     035E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2270     035F  00F3               	movwf	___flge@ff1+3
  2271     0360  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2272     0361  00F2               	movwf	___flge@ff1+2
  2273     0362  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2274     0363  00F1               	movwf	___flge@ff1+1
  2275     0364  0837               	movf	sprintf@tmpval^(0+128),w
  2276     0365  00F0               	movwf	___flge@ff1
  2277     0366  303F               	movlw	63
  2278     0367  00F7               	movwf	___flge@ff2+3
  2279     0368  3080               	movlw	128
  2280     0369  00F6               	movwf	___flge@ff2+2
  2281     036A  3000               	movlw	0
  2282     036B  00F5               	movwf	___flge@ff2+1
  2283     036C  3000               	movlw	0
  2284     036D  00F4               	movwf	___flge@ff2
  2285     036E  120A  158A  2003  120A  118A  	fcall	___flge
  2286     0373  1803               	btfsc	3,0
  2287     0374  2B76               	goto	u5261
  2288     0375  2B77               	goto	u5260
  2289     0376                     u5261:
  2290     0376  2B80               	goto	l3415
  2291     0377                     u5260:
  2292     0377                     l3413:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2295     0377  30FF               	movlw	255
  2296     0378  1683               	bsf	3,5	;RP0=1, select bank1
  2297     0379  1303               	bcf	3,6	;RP1=0, select bank1
  2298     037A  07B5               	addwf	sprintf@eexp^(0+128),f
  2299     037B  1803               	skipnc
  2300     037C  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2301     037D  30FF               	movlw	255
  2302     037E  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2303     037F  2BA3               	goto	l3419
  2304     0380                     l3415:
  2305     0380  1683               	bsf	3,5	;RP0=1, select bank1
  2306     0381  1303               	bcf	3,6	;RP1=0, select bank1
  2307     0382  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2308     0383  00F3               	movwf	___flge@ff1+3
  2309     0384  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2310     0385  00F2               	movwf	___flge@ff1+2
  2311     0386  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2312     0387  00F1               	movwf	___flge@ff1+1
  2313     0388  0837               	movf	sprintf@tmpval^(0+128),w
  2314     0389  00F0               	movwf	___flge@ff1
  2315     038A  3041               	movlw	65
  2316     038B  00F7               	movwf	___flge@ff2+3
  2317     038C  3020               	movlw	32
  2318     038D  00F6               	movwf	___flge@ff2+2
  2319     038E  3000               	movlw	0
  2320     038F  00F5               	movwf	___flge@ff2+1
  2321     0390  3000               	movlw	0
  2322     0391  00F4               	movwf	___flge@ff2
  2323     0392  120A  158A  2003  120A  118A  	fcall	___flge
  2324     0397  1C03               	btfss	3,0
  2325     0398  2B9A               	goto	u5271
  2326     0399  2B9B               	goto	u5270
  2327     039A                     u5271:
  2328     039A  2BA3               	goto	l3419
  2329     039B                     u5270:
  2330     039B                     l3417:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2333     039B  3001               	movlw	1
  2334     039C  1683               	bsf	3,5	;RP0=1, select bank1
  2335     039D  1303               	bcf	3,6	;RP1=0, select bank1
  2336     039E  07B5               	addwf	sprintf@eexp^(0+128),f
  2337     039F  1803               	skipnc
  2338     03A0  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2339     03A1  3000               	movlw	0
  2340     03A2  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2341     03A3                     l3419:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2344     03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2345     03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2346     03A5  083D               	movf	(sprintf@prec+1)^(0+128),w
  2347     03A6  3A80               	xorlw	128
  2348     03A7  00FF               	movwf	btemp+1
  2349     03A8  3080               	movlw	128
  2350     03A9  027F               	subwf	btemp+1,w
  2351     03AA  1D03               	skipz
  2352     03AB  2BAE               	goto	u5285
  2353     03AC  300D               	movlw	13
  2354     03AD  023C               	subwf	sprintf@prec^(0+128),w
  2355     03AE                     u5285:
  2356     03AE  1803               	skipnc
  2357     03AF  2BB1               	goto	u5281
  2358     03B0  2BB2               	goto	u5280
  2359     03B1                     u5281:
  2360     03B1  2BF9               	goto	l3423
  2361     03B2                     u5280:
  2362     03B2                     l3421:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2365     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2366     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2367     03B4  083C               	movf	sprintf@prec^(0+128),w
  2368     03B5  160A  118A  239D  120A  118A  	fcall	_fround
  2369     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2370     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2371     03BC  0841               	movf	?_fround+3,w
  2372     03BD  00D5               	movwf	___fladd@b+3
  2373     03BE  0840               	movf	?_fround+2,w
  2374     03BF  00D4               	movwf	___fladd@b+2
  2375     03C0  083F               	movf	?_fround+1,w
  2376     03C1  00D3               	movwf	___fladd@b+1
  2377     03C2  083E               	movf	?_fround,w
  2378     03C3  00D2               	movwf	___fladd@b
  2379     03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2380     03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2381     03C6  0841               	movf	(sprintf@fval+3)^(0+128),w
  2382     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2383     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2384     03C9  00D9               	movwf	___fladd@a+3
  2385     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2386     03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2387     03CC  0840               	movf	(sprintf@fval+2)^(0+128),w
  2388     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2389     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2390     03CF  00D8               	movwf	___fladd@a+2
  2391     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2392     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2393     03D2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2394     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2395     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2396     03D5  00D7               	movwf	___fladd@a+1
  2397     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2398     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2399     03D8  083E               	movf	sprintf@fval^(0+128),w
  2400     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2401     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2402     03DB  00D6               	movwf	___fladd@a
  2403     03DC  160A  118A  25A8  120A  118A  	fcall	___fladd
  2404     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2405     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2406     03E3  0855               	movf	?___fladd+3,w
  2407     03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2408     03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2409     03E6  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2410     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2411     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2412     03E9  0854               	movf	?___fladd+2,w
  2413     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2414     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2415     03EC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2416     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2417     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2418     03EF  0853               	movf	?___fladd+1,w
  2419     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2420     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2421     03F2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2422     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2423     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2424     03F5  0852               	movf	?___fladd,w
  2425     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2426     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2427     03F8  00BE               	movwf	sprintf@fval^(0+128)
  2428     03F9                     l3423:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2431     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2432     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2433     03FB  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2434     03FC  3A80               	xorlw	128
  2435     03FD  00FF               	movwf	btemp+1
  2436     03FE  3080               	movlw	128
  2437     03FF  027F               	subwf	btemp+1,w
  2438     0400  1D03               	skipz
  2439     0401  2C04               	goto	u5295
  2440     0402  300A               	movlw	10
  2441     0403  0235               	subwf	sprintf@eexp^(0+128),w
  2442     0404                     u5295:
  2443     0404  1803               	skipnc
  2444     0405  2C07               	goto	u5291
  2445     0406  2C08               	goto	u5290
  2446     0407                     u5291:
  2447     0407  2C59               	goto	l3431
  2448     0408                     u5290:
  2449     0408                     l3425:
  2450     0408  1683               	bsf	3,5	;RP0=1, select bank1
  2451     0409  1303               	bcf	3,6	;RP1=0, select bank1
  2452     040A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2453     040B  00F3               	movwf	___fleq@ff1+3
  2454     040C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2455     040D  00F2               	movwf	___fleq@ff1+2
  2456     040E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2457     040F  00F1               	movwf	___fleq@ff1+1
  2458     0410  083E               	movf	sprintf@fval^(0+128),w
  2459     0411  00F0               	movwf	___fleq@ff1
  2460     0412  3000               	movlw	0
  2461     0413  00F7               	movwf	___fleq@ff2+3
  2462     0414  3000               	movlw	0
  2463     0415  00F6               	movwf	___fleq@ff2+2
  2464     0416  3000               	movlw	0
  2465     0417  00F5               	movwf	___fleq@ff2+1
  2466     0418  3000               	movlw	0
  2467     0419  00F4               	movwf	___fleq@ff2
  2468     041A  160A  158A  27B2  120A  118A  	fcall	___fleq
  2469     041F  1803               	btfsc	3,0
  2470     0420  2C22               	goto	u5301
  2471     0421  2C23               	goto	u5300
  2472     0422                     u5301:
  2473     0422  2CCB               	goto	l3445
  2474     0423                     u5300:
  2475     0423                     l3427:
  2476     0423  1683               	bsf	3,5	;RP0=1, select bank1
  2477     0424  1303               	bcf	3,6	;RP1=0, select bank1
  2478     0425  0841               	movf	(sprintf@fval+3)^(0+128),w
  2479     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2480     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2481     0428  00D4               	movwf	___fltol@f1+3
  2482     0429  1683               	bsf	3,5	;RP0=1, select bank1
  2483     042A  1303               	bcf	3,6	;RP1=0, select bank1
  2484     042B  0840               	movf	(sprintf@fval+2)^(0+128),w
  2485     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2486     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2487     042E  00D3               	movwf	___fltol@f1+2
  2488     042F  1683               	bsf	3,5	;RP0=1, select bank1
  2489     0430  1303               	bcf	3,6	;RP1=0, select bank1
  2490     0431  083F               	movf	(sprintf@fval+1)^(0+128),w
  2491     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2492     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2493     0434  00D2               	movwf	___fltol@f1+1
  2494     0435  1683               	bsf	3,5	;RP0=1, select bank1
  2495     0436  1303               	bcf	3,6	;RP1=0, select bank1
  2496     0437  083E               	movf	sprintf@fval^(0+128),w
  2497     0438  1283               	bcf	3,5	;RP0=0, select bank0
  2498     0439  1303               	bcf	3,6	;RP1=0, select bank0
  2499     043A  00D1               	movwf	___fltol@f1
  2500     043B  160A  118A  22AD  120A  118A  	fcall	___fltol
  2501     0440  1283               	bcf	3,5	;RP0=0, select bank0
  2502     0441  1303               	bcf	3,6	;RP1=0, select bank0
  2503     0442  0854               	movf	?___fltol+3,w
  2504     0443  0453               	iorwf	?___fltol+2,w
  2505     0444  0452               	iorwf	?___fltol+1,w
  2506     0445  0451               	iorwf	?___fltol,w
  2507     0446  1D03               	skipz
  2508     0447  2C49               	goto	u5311
  2509     0448  2C4A               	goto	u5310
  2510     0449                     u5311:
  2511     0449  2CCB               	goto	l3445
  2512     044A                     u5310:
  2513     044A                     l3429:
  2514     044A  1683               	bsf	3,5	;RP0=1, select bank1
  2515     044B  1303               	bcf	3,6	;RP1=0, select bank1
  2516     044C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2517     044D  3A80               	xorlw	128
  2518     044E  00FF               	movwf	btemp+1
  2519     044F  3080               	movlw	128
  2520     0450  027F               	subwf	btemp+1,w
  2521     0451  1D03               	skipz
  2522     0452  2C55               	goto	u5325
  2523     0453  3002               	movlw	2
  2524     0454  0235               	subwf	sprintf@eexp^(0+128),w
  2525     0455                     u5325:
  2526     0455  1C03               	skipc
  2527     0456  2C58               	goto	u5321
  2528     0457  2C59               	goto	u5320
  2529     0458                     u5321:
  2530     0458  2CCB               	goto	l3445
  2531     0459                     u5320:
  2532     0459                     l3431:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2535     0459  1683               	bsf	3,5	;RP0=1, select bank1
  2536     045A  1303               	bcf	3,6	;RP1=0, select bank1
  2537     045B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2538     045C  00F3               	movwf	___flge@ff1+3
  2539     045D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2540     045E  00F2               	movwf	___flge@ff1+2
  2541     045F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2542     0460  00F1               	movwf	___flge@ff1+1
  2543     0461  0837               	movf	sprintf@tmpval^(0+128),w
  2544     0462  00F0               	movwf	___flge@ff1
  2545     0463  3040               	movlw	64
  2546     0464  00F7               	movwf	___flge@ff2+3
  2547     0465  3089               	movlw	137
  2548     0466  00F6               	movwf	___flge@ff2+2
  2549     0467  3070               	movlw	112
  2550     0468  00F5               	movwf	___flge@ff2+1
  2551     0469  305F               	movlw	95
  2552     046A  00F4               	movwf	___flge@ff2
  2553     046B  120A  158A  2003  120A  118A  	fcall	___flge
  2554     0470  1803               	btfsc	3,0
  2555     0471  2C73               	goto	u5331
  2556     0472  2C74               	goto	u5330
  2557     0473                     u5331:
  2558     0473  2C7D               	goto	l3435
  2559     0474                     u5330:
  2560     0474                     l3433:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2563     0474  30F7               	movlw	247
  2564     0475  1683               	bsf	3,5	;RP0=1, select bank1
  2565     0476  1303               	bcf	3,6	;RP1=0, select bank1
  2566     0477  07B5               	addwf	sprintf@eexp^(0+128),f
  2567     0478  1803               	skipnc
  2568     0479  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2569     047A  30FF               	movlw	255
  2570     047B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2573     047C  2C85               	goto	l3437
  2574     047D                     l3435:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2577     047D  30F8               	movlw	248
  2578     047E  1683               	bsf	3,5	;RP0=1, select bank1
  2579     047F  1303               	bcf	3,6	;RP1=0, select bank1
  2580     0480  07B5               	addwf	sprintf@eexp^(0+128),f
  2581     0481  1803               	skipnc
  2582     0482  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2583     0483  30FF               	movlw	255
  2584     0484  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2585     0485                     l3437:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2588     0485  0835               	movf	sprintf@eexp^(0+128),w
  2589     0486  120A  158A  24A1  120A  118A  	fcall	_scale
  2590     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2591     048C  1303               	bcf	3,6	;RP1=0, select bank0
  2592     048D  0841               	movf	?_scale+3,w
  2593     048E  1683               	bsf	3,5	;RP0=1, select bank1
  2594     048F  1303               	bcf	3,6	;RP1=0, select bank1
  2595     0490  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2596     0491  1283               	bcf	3,5	;RP0=0, select bank0
  2597     0492  1303               	bcf	3,6	;RP1=0, select bank0
  2598     0493  0840               	movf	?_scale+2,w
  2599     0494  1683               	bsf	3,5	;RP0=1, select bank1
  2600     0495  1303               	bcf	3,6	;RP1=0, select bank1
  2601     0496  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2602     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2603     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2604     0499  083F               	movf	?_scale+1,w
  2605     049A  1683               	bsf	3,5	;RP0=1, select bank1
  2606     049B  1303               	bcf	3,6	;RP1=0, select bank1
  2607     049C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2608     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2609     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2610     049F  083E               	movf	?_scale,w
  2611     04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2612     04A1  1303               	bcf	3,6	;RP1=0, select bank1
  2613     04A2  00B7               	movwf	sprintf@tmpval^(0+128)
  2614     04A3                     l3439:
  2615     04A3  0841               	movf	(sprintf@fval+3)^(0+128),w
  2616     04A4  00F3               	movwf	__div_to_l_@f1+3
  2617     04A5  0840               	movf	(sprintf@fval+2)^(0+128),w
  2618     04A6  00F2               	movwf	__div_to_l_@f1+2
  2619     04A7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2620     04A8  00F1               	movwf	__div_to_l_@f1+1
  2621     04A9  083E               	movf	sprintf@fval^(0+128),w
  2622     04AA  00F0               	movwf	__div_to_l_@f1
  2623     04AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2624     04AC  00F7               	movwf	__div_to_l_@f2+3
  2625     04AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2626     04AE  00F6               	movwf	__div_to_l_@f2+2
  2627     04AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2628     04B0  00F5               	movwf	__div_to_l_@f2+1
  2629     04B1  0837               	movf	sprintf@tmpval^(0+128),w
  2630     04B2  00F4               	movwf	__div_to_l_@f2
  2631     04B3  120A  118A  203D  120A  118A  	fcall	__div_to_l_
  2632     04B8  0873               	movf	?__div_to_l_+3,w
  2633     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  2634     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  2635     04BB  00B4               	movwf	(sprintf@val+3)^(0+128)
  2636     04BC  0872               	movf	?__div_to_l_+2,w
  2637     04BD  00B3               	movwf	(sprintf@val+2)^(0+128)
  2638     04BE  0871               	movf	?__div_to_l_+1,w
  2639     04BF  00B2               	movwf	(sprintf@val+1)^(0+128)
  2640     04C0  0870               	movf	?__div_to_l_,w
  2641     04C1  00B1               	movwf	sprintf@val^(0+128)
  2642     04C2                     l3443:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2645     04C2  3000               	movlw	0
  2646     04C3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2647     04C4  3000               	movlw	0
  2648     04C5  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2649     04C6  3000               	movlw	0
  2650     04C7  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2651     04C8  3000               	movlw	0
  2652     04C9  00BE               	movwf	sprintf@fval^(0+128)
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2655     04CA  2D4F               	goto	l3451
  2656     04CB                     l3445:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2659     04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2660     04CC  1303               	bcf	3,6	;RP1=0, select bank1
  2661     04CD  0841               	movf	(sprintf@fval+3)^(0+128),w
  2662     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2663     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2664     04D0  00D4               	movwf	___fltol@f1+3
  2665     04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2666     04D2  1303               	bcf	3,6	;RP1=0, select bank1
  2667     04D3  0840               	movf	(sprintf@fval+2)^(0+128),w
  2668     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2669     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2670     04D6  00D3               	movwf	___fltol@f1+2
  2671     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2672     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2673     04D9  083F               	movf	(sprintf@fval+1)^(0+128),w
  2674     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2675     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2676     04DC  00D2               	movwf	___fltol@f1+1
  2677     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  2678     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  2679     04DF  083E               	movf	sprintf@fval^(0+128),w
  2680     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2681     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2682     04E2  00D1               	movwf	___fltol@f1
  2683     04E3  160A  118A  22AD  120A  118A  	fcall	___fltol
  2684     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2685     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2686     04EA  0854               	movf	?___fltol+3,w
  2687     04EB  1683               	bsf	3,5	;RP0=1, select bank1
  2688     04EC  1303               	bcf	3,6	;RP1=0, select bank1
  2689     04ED  00B4               	movwf	(sprintf@val+3)^(0+128)
  2690     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2691     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2692     04F0  0853               	movf	?___fltol+2,w
  2693     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  2694     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  2695     04F3  00B3               	movwf	(sprintf@val+2)^(0+128)
  2696     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2697     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2698     04F6  0852               	movf	?___fltol+1,w
  2699     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2700     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2701     04F9  00B2               	movwf	(sprintf@val+1)^(0+128)
  2702     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2703     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2704     04FC  0851               	movf	?___fltol,w
  2705     04FD  1683               	bsf	3,5	;RP0=1, select bank1
  2706     04FE  1303               	bcf	3,6	;RP1=0, select bank1
  2707     04FF  00B1               	movwf	sprintf@val^(0+128)
  2708     0500                     l3447:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2711     0500  0834               	movf	(sprintf@val+3)^(0+128),w
  2712     0501  00F9               	movwf	___xxtofl@val+3
  2713     0502  0833               	movf	(sprintf@val+2)^(0+128),w
  2714     0503  00F8               	movwf	___xxtofl@val+2
  2715     0504  0832               	movf	(sprintf@val+1)^(0+128),w
  2716     0505  00F7               	movwf	___xxtofl@val+1
  2717     0506  0831               	movf	sprintf@val^(0+128),w
  2718     0507  00F6               	movwf	___xxtofl@val
  2719     0508  3000               	movlw	0
  2720     0509  120A  118A  20F5  120A  118A  	fcall	___xxtofl
  2721     050E  0879               	movf	?___xxtofl+3,w
  2722     050F  1283               	bcf	3,5	;RP0=0, select bank0
  2723     0510  1303               	bcf	3,6	;RP1=0, select bank0
  2724     0511  00E9               	movwf	___flsub@a+3
  2725     0512  0878               	movf	?___xxtofl+2,w
  2726     0513  00E8               	movwf	___flsub@a+2
  2727     0514  0877               	movf	?___xxtofl+1,w
  2728     0515  00E7               	movwf	___flsub@a+1
  2729     0516  0876               	movf	?___xxtofl,w
  2730     0517  00E6               	movwf	___flsub@a
  2731     0518  1683               	bsf	3,5	;RP0=1, select bank1
  2732     0519  1303               	bcf	3,6	;RP1=0, select bank1
  2733     051A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2734     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2735     051C  1303               	bcf	3,6	;RP1=0, select bank0
  2736     051D  00ED               	movwf	___flsub@b+3
  2737     051E  1683               	bsf	3,5	;RP0=1, select bank1
  2738     051F  1303               	bcf	3,6	;RP1=0, select bank1
  2739     0520  0840               	movf	(sprintf@fval+2)^(0+128),w
  2740     0521  1283               	bcf	3,5	;RP0=0, select bank0
  2741     0522  1303               	bcf	3,6	;RP1=0, select bank0
  2742     0523  00EC               	movwf	___flsub@b+2
  2743     0524  1683               	bsf	3,5	;RP0=1, select bank1
  2744     0525  1303               	bcf	3,6	;RP1=0, select bank1
  2745     0526  083F               	movf	(sprintf@fval+1)^(0+128),w
  2746     0527  1283               	bcf	3,5	;RP0=0, select bank0
  2747     0528  1303               	bcf	3,6	;RP1=0, select bank0
  2748     0529  00EB               	movwf	___flsub@b+1
  2749     052A  1683               	bsf	3,5	;RP0=1, select bank1
  2750     052B  1303               	bcf	3,6	;RP1=0, select bank1
  2751     052C  083E               	movf	sprintf@fval^(0+128),w
  2752     052D  1283               	bcf	3,5	;RP0=0, select bank0
  2753     052E  1303               	bcf	3,6	;RP1=0, select bank0
  2754     052F  00EA               	movwf	___flsub@b
  2755     0530  160A  158A  261D  120A  118A  	fcall	___flsub
  2756     0535  1283               	bcf	3,5	;RP0=0, select bank0
  2757     0536  1303               	bcf	3,6	;RP1=0, select bank0
  2758     0537  0869               	movf	?___flsub+3,w
  2759     0538  1683               	bsf	3,5	;RP0=1, select bank1
  2760     0539  1303               	bcf	3,6	;RP1=0, select bank1
  2761     053A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2762     053B  1283               	bcf	3,5	;RP0=0, select bank0
  2763     053C  1303               	bcf	3,6	;RP1=0, select bank0
  2764     053D  0868               	movf	?___flsub+2,w
  2765     053E  1683               	bsf	3,5	;RP0=1, select bank1
  2766     053F  1303               	bcf	3,6	;RP1=0, select bank1
  2767     0540  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2768     0541  1283               	bcf	3,5	;RP0=0, select bank0
  2769     0542  1303               	bcf	3,6	;RP1=0, select bank0
  2770     0543  0867               	movf	?___flsub+1,w
  2771     0544  1683               	bsf	3,5	;RP0=1, select bank1
  2772     0545  1303               	bcf	3,6	;RP1=0, select bank1
  2773     0546  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2774     0547  1283               	bcf	3,5	;RP0=0, select bank0
  2775     0548  1303               	bcf	3,6	;RP1=0, select bank0
  2776     0549  0866               	movf	?___flsub,w
  2777     054A  1683               	bsf	3,5	;RP0=1, select bank1
  2778     054B  1303               	bcf	3,6	;RP1=0, select bank1
  2779     054C  00BE               	movwf	sprintf@fval^(0+128)
  2780     054D                     l3449:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2783     054D  01B5               	clrf	sprintf@eexp^(0+128)
  2784     054E  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2785     054F                     l3451:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2788     054F  01C2               	clrf	sprintf@c^(0+128)
  2789     0550  0AC2               	incf	sprintf@c^(0+128),f
  2790     0551                     l3457:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2793     0551  0842               	movf	sprintf@c^(0+128),w
  2794     0552  00A5               	movwf	??_sprintf^(0+128)
  2795     0553  3001               	movlw	1
  2796     0554                     u5345:
  2797     0554  1003               	clrc
  2798     0555  0DA5               	rlf	??_sprintf^(0+128),f
  2799     0556  3EFF               	addlw	-1
  2800     0557  1D03               	skipz
  2801     0558  2D54               	goto	u5345
  2802     0559  1003               	clrc
  2803     055A  0D25               	rlf	??_sprintf^(0+128),w
  2804     055B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2805     055C  0084               	movwf	4
  2806     055D  160A  118A  2000  120A  118A  	fcall	stringdir
  2807     0562  00A6               	movwf	(??_sprintf+1)^(0+128)
  2808     0563  160A  118A  2000  120A  118A  	fcall	stringdir
  2809     0568  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2810     0569  160A  118A  2000  120A  118A  	fcall	stringdir
  2811     056E  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2812     056F  160A  118A  2000  120A  118A  	fcall	stringdir
  2813     0574  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2814     0575  0829               	movf	(??_sprintf+4)^(0+128),w
  2815     0576  0234               	subwf	(sprintf@val+3)^(0+128),w
  2816     0577  1D03               	skipz
  2817     0578  2D83               	goto	u5355
  2818     0579  0828               	movf	(??_sprintf+3)^(0+128),w
  2819     057A  0233               	subwf	(sprintf@val+2)^(0+128),w
  2820     057B  1D03               	skipz
  2821     057C  2D83               	goto	u5355
  2822     057D  0827               	movf	(??_sprintf+2)^(0+128),w
  2823     057E  0232               	subwf	(sprintf@val+1)^(0+128),w
  2824     057F  1D03               	skipz
  2825     0580  2D83               	goto	u5355
  2826     0581  0826               	movf	(??_sprintf+1)^(0+128),w
  2827     0582  0231               	subwf	sprintf@val^(0+128),w
  2828     0583                     u5355:
  2829     0583  1803               	skipnc
  2830     0584  2D86               	goto	u5351
  2831     0585  2D87               	goto	u5350
  2832     0586                     u5351:
  2833     0586  2D88               	goto	l3461
  2834     0587                     u5350:
  2835     0587  2D92               	goto	l3463
  2836     0588                     l3461:
  2837     0588  3001               	movlw	1
  2838     0589  00A5               	movwf	??_sprintf^(0+128)
  2839     058A  0825               	movf	??_sprintf^(0+128),w
  2840     058B  07C2               	addwf	sprintf@c^(0+128),f
  2841     058C  300A               	movlw	10
  2842     058D  0642               	xorwf	sprintf@c^(0+128),w
  2843     058E  1D03               	btfss	3,2
  2844     058F  2D91               	goto	u5361
  2845     0590  2D92               	goto	u5360
  2846     0591                     u5361:
  2847     0591  2D51               	goto	l3457
  2848     0592                     u5360:
  2849     0592                     l3463:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2852     0592  3003               	movlw	3
  2853     0593  052F               	andwf	sprintf@flag^(0+128),w
  2854     0594  00A5               	movwf	??_sprintf^(0+128)
  2855     0595  3000               	movlw	0
  2856     0596  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2857     0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2858     0598  0825               	movf	??_sprintf^(0+128),w
  2859     0599  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2860     059A  1903               	btfsc	3,2
  2861     059B  2D9D               	goto	u5371
  2862     059C  2D9E               	goto	u5370
  2863     059D                     u5371:
  2864     059D  2E0C               	goto	l399
  2865     059E                     u5370:
  2866     059E                     l3465:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2869     059E  083B               	movf	sprintf@sp^(0+128),w
  2870     059F  0084               	movwf	4
  2871     05A0  302D               	movlw	45
  2872     05A1  1383               	bcf	3,7	;select IRP bank0
  2873     05A2  0080               	movwf	0
  2874     05A3                     l3467:
  2875     05A3  3001               	movlw	1
  2876     05A4  00A5               	movwf	??_sprintf^(0+128)
  2877     05A5  0825               	movf	??_sprintf^(0+128),w
  2878     05A6  07BB               	addwf	sprintf@sp^(0+128),f
  2879     05A7  2E0C               	goto	l399
  2880     05A8                     l3469:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2883     05A8  0842               	movf	sprintf@c^(0+128),w
  2884     05A9  00A5               	movwf	??_sprintf^(0+128)
  2885     05AA  3001               	movlw	1
  2886     05AB                     u5385:
  2887     05AB  1003               	clrc
  2888     05AC  0DA5               	rlf	??_sprintf^(0+128),f
  2889     05AD  3EFF               	addlw	-1
  2890     05AE  1D03               	skipz
  2891     05AF  2DAB               	goto	u5385
  2892     05B0  1003               	clrc
  2893     05B1  0D25               	rlf	??_sprintf^(0+128),w
  2894     05B2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2895     05B3  0084               	movwf	4
  2896     05B4  160A  118A  2000  120A  118A  	fcall	stringdir
  2897     05B9  00F0               	movwf	___lldiv@divisor
  2898     05BA  160A  118A  2000  120A  118A  	fcall	stringdir
  2899     05BF  00F1               	movwf	___lldiv@divisor+1
  2900     05C0  160A  118A  2000  120A  118A  	fcall	stringdir
  2901     05C5  00F2               	movwf	___lldiv@divisor+2
  2902     05C6  160A  118A  2000  120A  118A  	fcall	stringdir
  2903     05CB  00F3               	movwf	___lldiv@divisor+3
  2904     05CC  0834               	movf	(sprintf@val+3)^(0+128),w
  2905     05CD  00F7               	movwf	___lldiv@dividend+3
  2906     05CE  0833               	movf	(sprintf@val+2)^(0+128),w
  2907     05CF  00F6               	movwf	___lldiv@dividend+2
  2908     05D0  0832               	movf	(sprintf@val+1)^(0+128),w
  2909     05D1  00F5               	movwf	___lldiv@dividend+1
  2910     05D2  0831               	movf	sprintf@val^(0+128),w
  2911     05D3  00F4               	movwf	___lldiv@dividend
  2912     05D4  160A  118A  21DE  120A  118A  	fcall	___lldiv
  2913     05D9  0873               	movf	?___lldiv+3,w
  2914     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2915     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2916     05DC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2917     05DD  0872               	movf	?___lldiv+2,w
  2918     05DE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2919     05DF  0871               	movf	?___lldiv+1,w
  2920     05E0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2921     05E1  0870               	movf	?___lldiv,w
  2922     05E2  00B7               	movwf	sprintf@tmpval^(0+128)
  2923     05E3                     l3471:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2926     05E3  3000               	movlw	0
  2927     05E4  00F3               	movwf	___llmod@divisor+3
  2928     05E5  3000               	movlw	0
  2929     05E6  00F2               	movwf	___llmod@divisor+2
  2930     05E7  3000               	movlw	0
  2931     05E8  00F1               	movwf	___llmod@divisor+1
  2932     05E9  300A               	movlw	10
  2933     05EA  00F0               	movwf	___llmod@divisor
  2934     05EB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2935     05EC  00F7               	movwf	___llmod@dividend+3
  2936     05ED  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2937     05EE  00F6               	movwf	___llmod@dividend+2
  2938     05EF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2939     05F0  00F5               	movwf	___llmod@dividend+1
  2940     05F1  0837               	movf	sprintf@tmpval^(0+128),w
  2941     05F2  00F4               	movwf	___llmod@dividend
  2942     05F3  160A  118A  20D4  120A  118A  	fcall	___llmod
  2943     05F8  0873               	movf	?___llmod+3,w
  2944     05F9  1683               	bsf	3,5	;RP0=1, select bank1
  2945     05FA  1303               	bcf	3,6	;RP1=0, select bank1
  2946     05FB  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2947     05FC  0872               	movf	?___llmod+2,w
  2948     05FD  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2949     05FE  0871               	movf	?___llmod+1,w
  2950     05FF  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2951     0600  0870               	movf	?___llmod,w
  2952     0601  00B7               	movwf	sprintf@tmpval^(0+128)
  2953     0602                     l3473:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2956     0602  083B               	movf	sprintf@sp^(0+128),w
  2957     0603  0084               	movwf	4
  2958     0604  0837               	movf	sprintf@tmpval^(0+128),w
  2959     0605  3E30               	addlw	48
  2960     0606  1383               	bcf	3,7	;select IRP bank0
  2961     0607  0080               	movwf	0
  2962     0608  3001               	movlw	1
  2963     0609  00A5               	movwf	??_sprintf^(0+128)
  2964     060A  0825               	movf	??_sprintf^(0+128),w
  2965     060B  07BB               	addwf	sprintf@sp^(0+128),f
  2966     060C                     l399:	
  2967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2968                           
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2971     060C  3001               	movlw	1
  2972     060D  02C2               	subwf	sprintf@c^(0+128),f
  2973     060E  0A42               	incf	sprintf@c^(0+128),w
  2974     060F  1D03               	btfss	3,2
  2975     0610  2E12               	goto	u5391
  2976     0611  2E13               	goto	u5390
  2977     0612                     u5391:
  2978     0612  2DA8               	goto	l3469
  2979     0613                     u5390:
  2980     0613  2E25               	goto	l3481
  2981     0614                     l3475:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2984     0614  1683               	bsf	3,5	;RP0=1, select bank1
  2985     0615  1303               	bcf	3,6	;RP1=0, select bank1
  2986     0616  083B               	movf	sprintf@sp^(0+128),w
  2987     0617  0084               	movwf	4
  2988     0618  3030               	movlw	48
  2989     0619  1383               	bcf	3,7	;select IRP bank0
  2990     061A  0080               	movwf	0
  2991     061B                     l3477:
  2992     061B  3001               	movlw	1
  2993     061C  00A5               	movwf	??_sprintf^(0+128)
  2994     061D  0825               	movf	??_sprintf^(0+128),w
  2995     061E  07BB               	addwf	sprintf@sp^(0+128),f
  2996     061F                     l3479:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2999     061F  30FF               	movlw	255
  3000     0620  07B5               	addwf	sprintf@eexp^(0+128),f
  3001     0621  1803               	skipnc
  3002     0622  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3003     0623  30FF               	movlw	255
  3004     0624  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3005     0625                     l3481:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3008     0625  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3009     0626  3A80               	xorlw	128
  3010     0627  00FF               	movwf	btemp+1
  3011     0628  3080               	movlw	128
  3012     0629  027F               	subwf	btemp+1,w
  3013     062A  1D03               	skipz
  3014     062B  2E2E               	goto	u5405
  3015     062C  3001               	movlw	1
  3016     062D  0235               	subwf	sprintf@eexp^(0+128),w
  3017     062E                     u5405:
  3018     062E  1803               	skipnc
  3019     062F  2E31               	goto	u5401
  3020     0630  2E32               	goto	u5400
  3021     0631                     u5401:
  3022     0631  2E14               	goto	l3475
  3023     0632                     u5400:
  3024     0632                     l3483:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3027     0632  1683               	bsf	3,5	;RP0=1, select bank1
  3028     0633  1303               	bcf	3,6	;RP1=0, select bank1
  3029     0634  083D               	movf	(sprintf@prec+1)^(0+128),w
  3030     0635  3A80               	xorlw	128
  3031     0636  00FF               	movwf	btemp+1
  3032     0637  3080               	movlw	128
  3033     0638  027F               	subwf	btemp+1,w
  3034     0639  1D03               	skipz
  3035     063A  2E3D               	goto	u5415
  3036     063B  3009               	movlw	9
  3037     063C  023C               	subwf	sprintf@prec^(0+128),w
  3038     063D                     u5415:
  3039     063D  1C03               	skipc
  3040     063E  2E40               	goto	u5411
  3041     063F  2E41               	goto	u5410
  3042     0640                     u5411:
  3043     0640  2E46               	goto	l3487
  3044     0641                     u5410:
  3045     0641                     l3485:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3048     0641  3008               	movlw	8
  3049     0642  1683               	bsf	3,5	;RP0=1, select bank1
  3050     0643  1303               	bcf	3,6	;RP1=0, select bank1
  3051     0644  00C2               	movwf	sprintf@c^(0+128)
  3052     0645  2E4A               	goto	l406
  3053     0646                     l3487:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3056     0646  1683               	bsf	3,5	;RP0=1, select bank1
  3057     0647  1303               	bcf	3,6	;RP1=0, select bank1
  3058     0648  083C               	movf	sprintf@prec^(0+128),w
  3059     0649  00C2               	movwf	sprintf@c^(0+128)
  3060     064A                     l406:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3063     064A  0842               	movf	sprintf@c^(0+128),w
  3064     064B  00A5               	movwf	??_sprintf^(0+128)
  3065     064C  01A6               	clrf	(??_sprintf^(0+128)+1)
  3066     064D  0825               	movf	??_sprintf^(0+128),w
  3067     064E  02BC               	subwf	sprintf@prec^(0+128),f
  3068     064F  0826               	movf	(??_sprintf+1)^(0+128),w
  3069     0650  1C03               	skipc
  3070     0651  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3071     0652  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3072     0653                     l3489:
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3075     0653  0842               	movf	sprintf@c^(0+128),w
  3076     0654  1903               	btfsc	3,2
  3077     0655  2E57               	goto	u5421
  3078     0656  2E58               	goto	u5420
  3079     0657                     u5421:
  3080     0657  2E61               	goto	l3495
  3081     0658                     u5420:
  3082     0658                     l3491:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3085     0658  083B               	movf	sprintf@sp^(0+128),w
  3086     0659  0084               	movwf	4
  3087     065A  302E               	movlw	46
  3088     065B  1383               	bcf	3,7	;select IRP bank0
  3089     065C  0080               	movwf	0
  3090     065D                     l3493:
  3091     065D  3001               	movlw	1
  3092     065E  00A5               	movwf	??_sprintf^(0+128)
  3093     065F  0825               	movf	??_sprintf^(0+128),w
  3094     0660  07BB               	addwf	sprintf@sp^(0+128),f
  3095     0661                     l3495:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3098     0661  0842               	movf	sprintf@c^(0+128),w
  3099     0662  120A  158A  24A1  120A  118A  	fcall	_scale
  3100     0667  1283               	bcf	3,5	;RP0=0, select bank0
  3101     0668  1303               	bcf	3,6	;RP1=0, select bank0
  3102     0669  0841               	movf	?_scale+3,w
  3103     066A  1683               	bsf	3,5	;RP0=1, select bank1
  3104     066B  1303               	bcf	3,6	;RP1=0, select bank1
  3105     066C  00AD               	movwf	(_sprintf$1375+3)^(0+128)
  3106     066D  1283               	bcf	3,5	;RP0=0, select bank0
  3107     066E  1303               	bcf	3,6	;RP1=0, select bank0
  3108     066F  0840               	movf	?_scale+2,w
  3109     0670  1683               	bsf	3,5	;RP0=1, select bank1
  3110     0671  1303               	bcf	3,6	;RP1=0, select bank1
  3111     0672  00AC               	movwf	(_sprintf$1375+2)^(0+128)
  3112     0673  1283               	bcf	3,5	;RP0=0, select bank0
  3113     0674  1303               	bcf	3,6	;RP1=0, select bank0
  3114     0675  083F               	movf	?_scale+1,w
  3115     0676  1683               	bsf	3,5	;RP0=1, select bank1
  3116     0677  1303               	bcf	3,6	;RP1=0, select bank1
  3117     0678  00AB               	movwf	(_sprintf$1375+1)^(0+128)
  3118     0679  1283               	bcf	3,5	;RP0=0, select bank0
  3119     067A  1303               	bcf	3,6	;RP1=0, select bank0
  3120     067B  083E               	movf	?_scale,w
  3121     067C  1683               	bsf	3,5	;RP0=1, select bank1
  3122     067D  1303               	bcf	3,6	;RP1=0, select bank1
  3123     067E  00AA               	movwf	_sprintf$1375^(0+128)
  3124     067F                     l3497:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3127     067F  082D               	movf	(_sprintf$1375+3)^(0+128),w
  3128     0680  1283               	bcf	3,5	;RP0=0, select bank0
  3129     0681  1303               	bcf	3,6	;RP1=0, select bank0
  3130     0682  00AB               	movwf	___flmul@a+3
  3131     0683  1683               	bsf	3,5	;RP0=1, select bank1
  3132     0684  1303               	bcf	3,6	;RP1=0, select bank1
  3133     0685  082C               	movf	(_sprintf$1375+2)^(0+128),w
  3134     0686  1283               	bcf	3,5	;RP0=0, select bank0
  3135     0687  1303               	bcf	3,6	;RP1=0, select bank0
  3136     0688  00AA               	movwf	___flmul@a+2
  3137     0689  1683               	bsf	3,5	;RP0=1, select bank1
  3138     068A  1303               	bcf	3,6	;RP1=0, select bank1
  3139     068B  082B               	movf	(_sprintf$1375+1)^(0+128),w
  3140     068C  1283               	bcf	3,5	;RP0=0, select bank0
  3141     068D  1303               	bcf	3,6	;RP1=0, select bank0
  3142     068E  00A9               	movwf	___flmul@a+1
  3143     068F  1683               	bsf	3,5	;RP0=1, select bank1
  3144     0690  1303               	bcf	3,6	;RP1=0, select bank1
  3145     0691  082A               	movf	_sprintf$1375^(0+128),w
  3146     0692  1283               	bcf	3,5	;RP0=0, select bank0
  3147     0693  1303               	bcf	3,6	;RP1=0, select bank0
  3148     0694  00A8               	movwf	___flmul@a
  3149     0695  1683               	bsf	3,5	;RP0=1, select bank1
  3150     0696  1303               	bcf	3,6	;RP1=0, select bank1
  3151     0697  0841               	movf	(sprintf@fval+3)^(0+128),w
  3152     0698  1283               	bcf	3,5	;RP0=0, select bank0
  3153     0699  1303               	bcf	3,6	;RP1=0, select bank0
  3154     069A  00A7               	movwf	___flmul@b+3
  3155     069B  1683               	bsf	3,5	;RP0=1, select bank1
  3156     069C  1303               	bcf	3,6	;RP1=0, select bank1
  3157     069D  0840               	movf	(sprintf@fval+2)^(0+128),w
  3158     069E  1283               	bcf	3,5	;RP0=0, select bank0
  3159     069F  1303               	bcf	3,6	;RP1=0, select bank0
  3160     06A0  00A6               	movwf	___flmul@b+2
  3161     06A1  1683               	bsf	3,5	;RP0=1, select bank1
  3162     06A2  1303               	bcf	3,6	;RP1=0, select bank1
  3163     06A3  083F               	movf	(sprintf@fval+1)^(0+128),w
  3164     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3165     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3166     06A6  00A5               	movwf	___flmul@b+1
  3167     06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3168     06A8  1303               	bcf	3,6	;RP1=0, select bank1
  3169     06A9  083E               	movf	sprintf@fval^(0+128),w
  3170     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3171     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3172     06AC  00A4               	movwf	___flmul@b
  3173     06AD  120A  158A  215C  120A  118A  	fcall	___flmul
  3174     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3175     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3176     06B4  0827               	movf	?___flmul+3,w
  3177     06B5  00D4               	movwf	___fltol@f1+3
  3178     06B6  0826               	movf	?___flmul+2,w
  3179     06B7  00D3               	movwf	___fltol@f1+2
  3180     06B8  0825               	movf	?___flmul+1,w
  3181     06B9  00D2               	movwf	___fltol@f1+1
  3182     06BA  0824               	movf	?___flmul,w
  3183     06BB  00D1               	movwf	___fltol@f1
  3184     06BC  160A  118A  22AD  120A  118A  	fcall	___fltol
  3185     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3186     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3187     06C3  0854               	movf	?___fltol+3,w
  3188     06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3189     06C5  1303               	bcf	3,6	;RP1=0, select bank1
  3190     06C6  00B4               	movwf	(sprintf@val+3)^(0+128)
  3191     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3192     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3193     06C9  0853               	movf	?___fltol+2,w
  3194     06CA  1683               	bsf	3,5	;RP0=1, select bank1
  3195     06CB  1303               	bcf	3,6	;RP1=0, select bank1
  3196     06CC  00B3               	movwf	(sprintf@val+2)^(0+128)
  3197     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3198     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3199     06CF  0852               	movf	?___fltol+1,w
  3200     06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3201     06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3202     06D2  00B2               	movwf	(sprintf@val+1)^(0+128)
  3203     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3204     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3205     06D5  0851               	movf	?___fltol,w
  3206     06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3207     06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3208     06D8  00B1               	movwf	sprintf@val^(0+128)
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3211     06D9  2F79               	goto	l3507
  3212     06DA                     l3499:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3215     06DA  0842               	movf	sprintf@c^(0+128),w
  3216     06DB  00A5               	movwf	??_sprintf^(0+128)
  3217     06DC  3001               	movlw	1
  3218     06DD                     u5435:
  3219     06DD  1003               	clrc
  3220     06DE  0DA5               	rlf	??_sprintf^(0+128),f
  3221     06DF  3EFF               	addlw	-1
  3222     06E0  1D03               	skipz
  3223     06E1  2EDD               	goto	u5435
  3224     06E2  1003               	clrc
  3225     06E3  0D25               	rlf	??_sprintf^(0+128),w
  3226     06E4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3227     06E5  0084               	movwf	4
  3228     06E6  160A  118A  2000  120A  118A  	fcall	stringdir
  3229     06EB  00F0               	movwf	___lldiv@divisor
  3230     06EC  160A  118A  2000  120A  118A  	fcall	stringdir
  3231     06F1  00F1               	movwf	___lldiv@divisor+1
  3232     06F2  160A  118A  2000  120A  118A  	fcall	stringdir
  3233     06F7  00F2               	movwf	___lldiv@divisor+2
  3234     06F8  160A  118A  2000  120A  118A  	fcall	stringdir
  3235     06FD  00F3               	movwf	___lldiv@divisor+3
  3236     06FE  0834               	movf	(sprintf@val+3)^(0+128),w
  3237     06FF  00F7               	movwf	___lldiv@dividend+3
  3238     0700  0833               	movf	(sprintf@val+2)^(0+128),w
  3239     0701  00F6               	movwf	___lldiv@dividend+2
  3240     0702  0832               	movf	(sprintf@val+1)^(0+128),w
  3241     0703  00F5               	movwf	___lldiv@dividend+1
  3242     0704  0831               	movf	sprintf@val^(0+128),w
  3243     0705  00F4               	movwf	___lldiv@dividend
  3244     0706  160A  118A  21DE  120A  118A  	fcall	___lldiv
  3245     070B  0873               	movf	?___lldiv+3,w
  3246     070C  1683               	bsf	3,5	;RP0=1, select bank1
  3247     070D  1303               	bcf	3,6	;RP1=0, select bank1
  3248     070E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3249     070F  0872               	movf	?___lldiv+2,w
  3250     0710  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3251     0711  0871               	movf	?___lldiv+1,w
  3252     0712  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3253     0713  0870               	movf	?___lldiv,w
  3254     0714  00B7               	movwf	sprintf@tmpval^(0+128)
  3255     0715                     l3501:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3258     0715  3000               	movlw	0
  3259     0716  00F3               	movwf	___llmod@divisor+3
  3260     0717  3000               	movlw	0
  3261     0718  00F2               	movwf	___llmod@divisor+2
  3262     0719  3000               	movlw	0
  3263     071A  00F1               	movwf	___llmod@divisor+1
  3264     071B  300A               	movlw	10
  3265     071C  00F0               	movwf	___llmod@divisor
  3266     071D  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3267     071E  00F7               	movwf	___llmod@dividend+3
  3268     071F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3269     0720  00F6               	movwf	___llmod@dividend+2
  3270     0721  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3271     0722  00F5               	movwf	___llmod@dividend+1
  3272     0723  0837               	movf	sprintf@tmpval^(0+128),w
  3273     0724  00F4               	movwf	___llmod@dividend
  3274     0725  160A  118A  20D4  120A  118A  	fcall	___llmod
  3275     072A  0873               	movf	?___llmod+3,w
  3276     072B  1683               	bsf	3,5	;RP0=1, select bank1
  3277     072C  1303               	bcf	3,6	;RP1=0, select bank1
  3278     072D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3279     072E  0872               	movf	?___llmod+2,w
  3280     072F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3281     0730  0871               	movf	?___llmod+1,w
  3282     0731  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3283     0732  0870               	movf	?___llmod,w
  3284     0733  00B7               	movwf	sprintf@tmpval^(0+128)
  3285     0734                     l3503:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3288     0734  083B               	movf	sprintf@sp^(0+128),w
  3289     0735  0084               	movwf	4
  3290     0736  0837               	movf	sprintf@tmpval^(0+128),w
  3291     0737  3E30               	addlw	48
  3292     0738  1383               	bcf	3,7	;select IRP bank0
  3293     0739  0080               	movwf	0
  3294     073A  3001               	movlw	1
  3295     073B  00A5               	movwf	??_sprintf^(0+128)
  3296     073C  0825               	movf	??_sprintf^(0+128),w
  3297     073D  07BB               	addwf	sprintf@sp^(0+128),f
  3298     073E                     l3505:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3301     073E  0842               	movf	sprintf@c^(0+128),w
  3302     073F  00A5               	movwf	??_sprintf^(0+128)
  3303     0740  3001               	movlw	1
  3304     0741                     u5445:
  3305     0741  1003               	clrc
  3306     0742  0DA5               	rlf	??_sprintf^(0+128),f
  3307     0743  3EFF               	addlw	-1
  3308     0744  1D03               	skipz
  3309     0745  2F41               	goto	u5445
  3310     0746  1003               	clrc
  3311     0747  0D25               	rlf	??_sprintf^(0+128),w
  3312     0748  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3313     0749  0084               	movwf	4
  3314     074A  160A  118A  2000  120A  118A  	fcall	stringdir
  3315     074F  00F0               	movwf	___llmod@divisor
  3316     0750  160A  118A  2000  120A  118A  	fcall	stringdir
  3317     0755  00F1               	movwf	___llmod@divisor+1
  3318     0756  160A  118A  2000  120A  118A  	fcall	stringdir
  3319     075B  00F2               	movwf	___llmod@divisor+2
  3320     075C  160A  118A  2000  120A  118A  	fcall	stringdir
  3321     0761  00F3               	movwf	___llmod@divisor+3
  3322     0762  0834               	movf	(sprintf@val+3)^(0+128),w
  3323     0763  00F7               	movwf	___llmod@dividend+3
  3324     0764  0833               	movf	(sprintf@val+2)^(0+128),w
  3325     0765  00F6               	movwf	___llmod@dividend+2
  3326     0766  0832               	movf	(sprintf@val+1)^(0+128),w
  3327     0767  00F5               	movwf	___llmod@dividend+1
  3328     0768  0831               	movf	sprintf@val^(0+128),w
  3329     0769  00F4               	movwf	___llmod@dividend
  3330     076A  160A  118A  20D4  120A  118A  	fcall	___llmod
  3331     076F  0873               	movf	?___llmod+3,w
  3332     0770  1683               	bsf	3,5	;RP0=1, select bank1
  3333     0771  1303               	bcf	3,6	;RP1=0, select bank1
  3334     0772  00B4               	movwf	(sprintf@val+3)^(0+128)
  3335     0773  0872               	movf	?___llmod+2,w
  3336     0774  00B3               	movwf	(sprintf@val+2)^(0+128)
  3337     0775  0871               	movf	?___llmod+1,w
  3338     0776  00B2               	movwf	(sprintf@val+1)^(0+128)
  3339     0777  0870               	movf	?___llmod,w
  3340     0778  00B1               	movwf	sprintf@val^(0+128)
  3341     0779                     l3507:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3344     0779  3001               	movlw	1
  3345     077A  02C2               	subwf	sprintf@c^(0+128),f
  3346     077B  0A42               	incf	sprintf@c^(0+128),w
  3347     077C  1D03               	btfss	3,2
  3348     077D  2F7F               	goto	u5451
  3349     077E  2F80               	goto	u5450
  3350     077F                     u5451:
  3351     077F  2EDA               	goto	l3499
  3352     0780                     u5450:
  3353     0780  2F90               	goto	l3515
  3354     0781                     l3509:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3357     0781  083B               	movf	sprintf@sp^(0+128),w
  3358     0782  0084               	movwf	4
  3359     0783  3030               	movlw	48
  3360     0784  1383               	bcf	3,7	;select IRP bank0
  3361     0785  0080               	movwf	0
  3362     0786                     l3511:
  3363     0786  3001               	movlw	1
  3364     0787  00A5               	movwf	??_sprintf^(0+128)
  3365     0788  0825               	movf	??_sprintf^(0+128),w
  3366     0789  07BB               	addwf	sprintf@sp^(0+128),f
  3367     078A                     l3513:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3370     078A  30FF               	movlw	255
  3371     078B  07BC               	addwf	sprintf@prec^(0+128),f
  3372     078C  1803               	skipnc
  3373     078D  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3374     078E  30FF               	movlw	255
  3375     078F  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3376     0790                     l3515:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3379     0790  083C               	movf	sprintf@prec^(0+128),w
  3380     0791  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3381     0792  1D03               	btfss	3,2
  3382     0793  2F95               	goto	u5461
  3383     0794  2F96               	goto	u5460
  3384     0795                     u5461:
  3385     0795  2F81               	goto	l3509
  3386     0796                     u5460:
  3387     0796  2FDA               	goto	l3535
  3388     0797                     l3517:
  3389                           
  3390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3391     0797  083C               	movf	sprintf@prec^(0+128),w
  3392     0798  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3393     0799  1D03               	btfss	3,2
  3394     079A  2F9C               	goto	u5471
  3395     079B  2F9D               	goto	u5470
  3396     079C                     u5471:
  3397     079C  2FAB               	goto	l414
  3398     079D                     u5470:
  3399     079D                     l3519:
  3400     079D  0834               	movf	(sprintf@val+3)^(0+128),w
  3401     079E  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3402     079F  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3403     07A0  0431               	iorwf	sprintf@val^(0+128),w
  3404     07A1  1D03               	skipz
  3405     07A2  2FA4               	goto	u5481
  3406     07A3  2FA5               	goto	u5480
  3407     07A4                     u5481:
  3408     07A4  2FAB               	goto	l414
  3409     07A5                     u5480:
  3410     07A5                     l3521:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3413     07A5  3001               	movlw	1
  3414     07A6  07BC               	addwf	sprintf@prec^(0+128),f
  3415     07A7  1803               	skipnc
  3416     07A8  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3417     07A9  3000               	movlw	0
  3418     07AA  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3419     07AB                     l414:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3422     07AB  083D               	movf	(sprintf@prec+1)^(0+128),w
  3423     07AC  3A80               	xorlw	128
  3424     07AD  3C80               	sublw	128
  3425     07AE  1D03               	skipz
  3426     07AF  2FB2               	goto	u5495
  3427     07B0  083C               	movf	sprintf@prec^(0+128),w
  3428     07B1  0242               	subwf	sprintf@c^(0+128),w
  3429     07B2                     u5495:
  3430     07B2  1803               	skipnc
  3431     07B3  2FB5               	goto	u5491
  3432     07B4  2FB6               	goto	u5490
  3433     07B5                     u5491:
  3434     07B5  2FB7               	goto	l3525
  3435     07B6                     u5490:
  3436     07B6                     l3523:
  3437     07B6  2FC6               	goto	l3529
  3438     07B7                     l3525:
  3439     07B7  1683               	bsf	3,5	;RP0=1, select bank1
  3440     07B8  1303               	bcf	3,6	;RP1=0, select bank1
  3441     07B9  083D               	movf	(sprintf@prec+1)^(0+128),w
  3442     07BA  3A80               	xorlw	128
  3443     07BB  00A5               	movwf	??_sprintf^(0+128)
  3444     07BC  3080               	movlw	128
  3445     07BD  0225               	subwf	??_sprintf^(0+128),w
  3446     07BE  1D03               	skipz
  3447     07BF  2FC2               	goto	u5505
  3448     07C0  0842               	movf	sprintf@c^(0+128),w
  3449     07C1  023C               	subwf	sprintf@prec^(0+128),w
  3450     07C2                     u5505:
  3451     07C2  1803               	skipnc
  3452     07C3  2FC5               	goto	u5501
  3453     07C4  2FC6               	goto	u5500
  3454     07C5                     u5501:
  3455     07C5  2FC6               	goto	l3529
  3456     07C6                     u5500:
  3457     07C6                     l3527:
  3458     07C6                     l3529:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3461     07C6  3003               	movlw	3
  3462     07C7  1683               	bsf	3,5	;RP0=1, select bank1
  3463     07C8  1303               	bcf	3,6	;RP1=0, select bank1
  3464     07C9  052F               	andwf	sprintf@flag^(0+128),w
  3465     07CA  00A5               	movwf	??_sprintf^(0+128)
  3466     07CB  3000               	movlw	0
  3467     07CC  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3468     07CD  00A6               	movwf	(??_sprintf+1)^(0+128)
  3469     07CE  0825               	movf	??_sprintf^(0+128),w
  3470     07CF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3471     07D0  1903               	btfsc	3,2
  3472     07D1  2FD3               	goto	u5511
  3473     07D2  2FD4               	goto	u5510
  3474     07D3                     u5511:
  3475     07D3  2FDA               	goto	l3535
  3476     07D4                     u5510:
  3477     07D4                     l3531:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3480     07D4  083B               	movf	sprintf@sp^(0+128),w
  3481     07D5  0084               	movwf	4
  3482     07D6  302D               	movlw	45
  3483     07D7  1383               	bcf	3,7	;select IRP bank0
  3484     07D8  0080               	movwf	0
  3485     07D9  29C0               	goto	l3347
  3486     07DA                     l3535:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3489     07DA  3001               	movlw	1
  3490     07DB  07A0               	addwf	sprintf@f^(0+128),f
  3491     07DC  30FF               	movlw	-1
  3492     07DD  0720               	addwf	sprintf@f^(0+128),w
  3493     07DE  0084               	movwf	4
  3494     07DF  160A  118A  2000  120A  118A  	fcall	stringdir
  3495     07E4  00C2               	movwf	sprintf@c^(0+128)
  3496     07E5  0842               	movf	sprintf@c^(0+128),w
  3497     07E6  1D03               	btfss	3,2
  3498     07E7  2FE9               	goto	u5521
  3499     07E8  2FEA               	goto	u5520
  3500     07E9                     u5521:
  3501     07E9  29B5               	goto	l3343
  3502     07EA                     u5520:
  3503     07EA                     l3537:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3506     07EA  083B               	movf	sprintf@sp^(0+128),w
  3507     07EB  0084               	movwf	4
  3508     07EC  1383               	bcf	3,7	;select IRP bank0
  3509     07ED  0180               	clrf	0
  3510     07EE                     l420:
  3511     07EE  0008               	return
  3512     07EF                     __end_of_sprintf:
  3513                           
  3514                           	psect	text2
  3515     0CA1                     __ptext2:	
  3516 ;; *************** function _scale *****************
  3517 ;; Defined at:
  3518 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  scl             1    wreg     char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  scl             1   48[BANK0 ] char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  4   30[BANK0 ] char 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       4       0       0       0
  3533 ;;      Locals:         0       5       0       0       0
  3534 ;;      Temps:          0      10       0       0       0
  3535 ;;      Totals:         0      19       0       0       0
  3536 ;;Total ram usage:       19 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 2
  3539 ;; This function calls:
  3540 ;;		___awdiv
  3541 ;;		___awmod
  3542 ;;		___flmul
  3543 ;; This function is called by:
  3544 ;;		_sprintf
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548     0CA1                     _scale:	
  3549                           ;psect for function _scale
  3550                           
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3554                           ;scale@scl stored from wreg
  3555     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3556     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3557     0CA3  00D0               	movwf	scale@scl
  3558     0CA4                     l2949:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3561     0CA4  1FD0               	btfss	scale@scl,7
  3562     0CA5  2CA7               	goto	u4221
  3563     0CA6  2CA8               	goto	u4220
  3564     0CA7                     u4221:
  3565     0CA7  2E55               	goto	l2971
  3566     0CA8                     u4220:
  3567     0CA8                     l2951:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3570     0CA8  09D0               	comf	scale@scl,f
  3571     0CA9  0AD0               	incf	scale@scl,f
  3572     0CAA                     l2953:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3575     0CAA  0850               	movf	scale@scl,w
  3576     0CAB  3A80               	xorlw	128
  3577     0CAC  3E12               	addlw	-238
  3578     0CAD  1C03               	skipc
  3579     0CAE  2CB0               	goto	u4231
  3580     0CAF  2CB1               	goto	u4230
  3581     0CB0                     u4231:
  3582     0CB0  2D99               	goto	l2961
  3583     0CB1                     u4230:
  3584     0CB1                     l2955:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3587     0CB1  300A               	movlw	10
  3588     0CB2  00F7               	movwf	___awdiv@divisor
  3589     0CB3  3000               	movlw	0
  3590     0CB4  00F8               	movwf	___awdiv@divisor+1
  3591     0CB5  0850               	movf	scale@scl,w
  3592     0CB6  00F2               	movwf	___awmod@dividend
  3593     0CB7  01F3               	clrf	___awmod@dividend+1
  3594     0CB8  1BF2               	btfsc	___awmod@dividend,7
  3595     0CB9  03F3               	decf	___awmod@dividend+1,f
  3596     0CBA  3064               	movlw	100
  3597     0CBB  00F0               	movwf	___awmod@divisor
  3598     0CBC  3000               	movlw	0
  3599     0CBD  00F1               	movwf	___awmod@divisor+1
  3600     0CBE  160A  118A  2128  120A  158A  	fcall	___awmod
  3601     0CC3  0871               	movf	?___awmod+1,w
  3602     0CC4  00FA               	movwf	___awdiv@dividend+1
  3603     0CC5  0870               	movf	?___awmod,w
  3604     0CC6  00F9               	movwf	___awdiv@dividend
  3605     0CC7  160A  118A  2244  120A  158A  	fcall	___awdiv
  3606     0CCC  0877               	movf	?___awdiv,w
  3607     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3608     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3609     0CCF  00C2               	movwf	??_scale
  3610     0CD0  3001               	movlw	1
  3611     0CD1                     u4245:
  3612     0CD1  1003               	clrc
  3613     0CD2  0DC2               	rlf	??_scale,f
  3614     0CD3  3EFF               	addlw	-1
  3615     0CD4  1D03               	skipz
  3616     0CD5  2CD1               	goto	u4245
  3617     0CD6  1003               	clrc
  3618     0CD7  0D42               	rlf	??_scale,w
  3619     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3620     0CD9  0084               	movwf	4
  3621     0CDA  160A  118A  2000  120A  158A  	fcall	stringdir
  3622     0CDF  00C3               	movwf	??_scale+1
  3623     0CE0  160A  118A  2000  120A  158A  	fcall	stringdir
  3624     0CE5  00C4               	movwf	??_scale+2
  3625     0CE6  160A  118A  2000  120A  158A  	fcall	stringdir
  3626     0CEB  00C5               	movwf	??_scale+3
  3627     0CEC  160A  118A  2000  120A  158A  	fcall	stringdir
  3628     0CF1  00C6               	movwf	??_scale+4
  3629     0CF2  0846               	movf	??_scale+4,w
  3630     0CF3  00A7               	movwf	___flmul@b+3
  3631     0CF4  0845               	movf	??_scale+3,w
  3632     0CF5  00A6               	movwf	___flmul@b+2
  3633     0CF6  0844               	movf	??_scale+2,w
  3634     0CF7  00A5               	movwf	___flmul@b+1
  3635     0CF8  0843               	movf	??_scale+1,w
  3636     0CF9  00A4               	movwf	___flmul@b
  3637     0CFA  3064               	movlw	100
  3638     0CFB  00F7               	movwf	___awdiv@divisor
  3639     0CFC  3000               	movlw	0
  3640     0CFD  00F8               	movwf	___awdiv@divisor+1
  3641     0CFE  0850               	movf	scale@scl,w
  3642     0CFF  00F9               	movwf	___awdiv@dividend
  3643     0D00  01FA               	clrf	___awdiv@dividend+1
  3644     0D01  1BF9               	btfsc	___awdiv@dividend,7
  3645     0D02  03FA               	decf	___awdiv@dividend+1,f
  3646     0D03  160A  118A  2244  120A  158A  	fcall	___awdiv
  3647     0D08  0877               	movf	?___awdiv,w
  3648     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3649     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3650     0D0B  00C7               	movwf	??_scale+5
  3651     0D0C  3001               	movlw	1
  3652     0D0D                     u4255:
  3653     0D0D  1003               	clrc
  3654     0D0E  0DC7               	rlf	??_scale+5,f
  3655     0D0F  3EFF               	addlw	-1
  3656     0D10  1D03               	skipz
  3657     0D11  2D0D               	goto	u4255
  3658     0D12  1003               	clrc
  3659     0D13  0D47               	rlf	??_scale+5,w
  3660     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3661     0D15  0084               	movwf	4
  3662     0D16  160A  118A  2000  120A  158A  	fcall	stringdir
  3663     0D1B  00C8               	movwf	??_scale+6
  3664     0D1C  160A  118A  2000  120A  158A  	fcall	stringdir
  3665     0D21  00C9               	movwf	??_scale+7
  3666     0D22  160A  118A  2000  120A  158A  	fcall	stringdir
  3667     0D27  00CA               	movwf	??_scale+8
  3668     0D28  160A  118A  2000  120A  158A  	fcall	stringdir
  3669     0D2D  00CB               	movwf	??_scale+9
  3670     0D2E  084B               	movf	??_scale+9,w
  3671     0D2F  00AB               	movwf	___flmul@a+3
  3672     0D30  084A               	movf	??_scale+8,w
  3673     0D31  00AA               	movwf	___flmul@a+2
  3674     0D32  0849               	movf	??_scale+7,w
  3675     0D33  00A9               	movwf	___flmul@a+1
  3676     0D34  0848               	movf	??_scale+6,w
  3677     0D35  00A8               	movwf	___flmul@a
  3678     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  3679     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3680     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3681     0D3D  0827               	movf	?___flmul+3,w
  3682     0D3E  00CF               	movwf	_scale$1374+3
  3683     0D3F  0826               	movf	?___flmul+2,w
  3684     0D40  00CE               	movwf	_scale$1374+2
  3685     0D41  0825               	movf	?___flmul+1,w
  3686     0D42  00CD               	movwf	_scale$1374+1
  3687     0D43  0824               	movf	?___flmul,w
  3688     0D44  00CC               	movwf	_scale$1374
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3691     0D45  300A               	movlw	10
  3692     0D46  00F0               	movwf	___awmod@divisor
  3693     0D47  3000               	movlw	0
  3694     0D48  00F1               	movwf	___awmod@divisor+1
  3695     0D49  0850               	movf	scale@scl,w
  3696     0D4A  00F2               	movwf	___awmod@dividend
  3697     0D4B  01F3               	clrf	___awmod@dividend+1
  3698     0D4C  1BF2               	btfsc	___awmod@dividend,7
  3699     0D4D  03F3               	decf	___awmod@dividend+1,f
  3700     0D4E  160A  118A  2128  120A  158A  	fcall	___awmod
  3701     0D53  0870               	movf	?___awmod,w
  3702     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3703     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3704     0D56  00C2               	movwf	??_scale
  3705     0D57  3001               	movlw	1
  3706     0D58                     u4265:
  3707     0D58  1003               	clrc
  3708     0D59  0DC2               	rlf	??_scale,f
  3709     0D5A  3EFF               	addlw	-1
  3710     0D5B  1D03               	skipz
  3711     0D5C  2D58               	goto	u4265
  3712     0D5D  1003               	clrc
  3713     0D5E  0D42               	rlf	??_scale,w
  3714     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3715     0D60  0084               	movwf	4
  3716     0D61  160A  118A  2000  120A  158A  	fcall	stringdir
  3717     0D66  00C3               	movwf	??_scale+1
  3718     0D67  160A  118A  2000  120A  158A  	fcall	stringdir
  3719     0D6C  00C4               	movwf	??_scale+2
  3720     0D6D  160A  118A  2000  120A  158A  	fcall	stringdir
  3721     0D72  00C5               	movwf	??_scale+3
  3722     0D73  160A  118A  2000  120A  158A  	fcall	stringdir
  3723     0D78  00C6               	movwf	??_scale+4
  3724     0D79  0846               	movf	??_scale+4,w
  3725     0D7A  00A7               	movwf	___flmul@b+3
  3726     0D7B  0845               	movf	??_scale+3,w
  3727     0D7C  00A6               	movwf	___flmul@b+2
  3728     0D7D  0844               	movf	??_scale+2,w
  3729     0D7E  00A5               	movwf	___flmul@b+1
  3730     0D7F  0843               	movf	??_scale+1,w
  3731     0D80  00A4               	movwf	___flmul@b
  3732     0D81  084F               	movf	_scale$1374+3,w
  3733     0D82  00AB               	movwf	___flmul@a+3
  3734     0D83  084E               	movf	_scale$1374+2,w
  3735     0D84  00AA               	movwf	___flmul@a+2
  3736     0D85  084D               	movf	_scale$1374+1,w
  3737     0D86  00A9               	movwf	___flmul@a+1
  3738     0D87  084C               	movf	_scale$1374,w
  3739     0D88  00A8               	movwf	___flmul@a
  3740     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  3741     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3742     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3743     0D90  0827               	movf	?___flmul+3,w
  3744     0D91  00C1               	movwf	?_scale+3
  3745     0D92  0826               	movf	?___flmul+2,w
  3746     0D93  00C0               	movwf	?_scale+2
  3747     0D94  0825               	movf	?___flmul+1,w
  3748     0D95  00BF               	movwf	?_scale+1
  3749     0D96  0824               	movf	?___flmul,w
  3750     0D97  00BE               	movwf	?_scale
  3751     0D98  2FFF               	goto	l354
  3752     0D99                     l2961:
  3753     0D99  0850               	movf	scale@scl,w
  3754     0D9A  3A80               	xorlw	128
  3755     0D9B  3E75               	addlw	-139
  3756     0D9C  1C03               	skipc
  3757     0D9D  2D9F               	goto	u4271
  3758     0D9E  2DA0               	goto	u4270
  3759     0D9F                     u4271:
  3760     0D9F  2E28               	goto	l2967
  3761     0DA0                     u4270:
  3762     0DA0                     l2963:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3765     0DA0  300A               	movlw	10
  3766     0DA1  00F0               	movwf	___awmod@divisor
  3767     0DA2  3000               	movlw	0
  3768     0DA3  00F1               	movwf	___awmod@divisor+1
  3769     0DA4  0850               	movf	scale@scl,w
  3770     0DA5  00F2               	movwf	___awmod@dividend
  3771     0DA6  01F3               	clrf	___awmod@dividend+1
  3772     0DA7  1BF2               	btfsc	___awmod@dividend,7
  3773     0DA8  03F3               	decf	___awmod@dividend+1,f
  3774     0DA9  160A  118A  2128  120A  158A  	fcall	___awmod
  3775     0DAE  0870               	movf	?___awmod,w
  3776     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3777     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3778     0DB1  00C2               	movwf	??_scale
  3779     0DB2  3001               	movlw	1
  3780     0DB3                     u4285:
  3781     0DB3  1003               	clrc
  3782     0DB4  0DC2               	rlf	??_scale,f
  3783     0DB5  3EFF               	addlw	-1
  3784     0DB6  1D03               	skipz
  3785     0DB7  2DB3               	goto	u4285
  3786     0DB8  1003               	clrc
  3787     0DB9  0D42               	rlf	??_scale,w
  3788     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3789     0DBB  0084               	movwf	4
  3790     0DBC  160A  118A  2000  120A  158A  	fcall	stringdir
  3791     0DC1  00C3               	movwf	??_scale+1
  3792     0DC2  160A  118A  2000  120A  158A  	fcall	stringdir
  3793     0DC7  00C4               	movwf	??_scale+2
  3794     0DC8  160A  118A  2000  120A  158A  	fcall	stringdir
  3795     0DCD  00C5               	movwf	??_scale+3
  3796     0DCE  160A  118A  2000  120A  158A  	fcall	stringdir
  3797     0DD3  00C6               	movwf	??_scale+4
  3798     0DD4  0846               	movf	??_scale+4,w
  3799     0DD5  00A7               	movwf	___flmul@b+3
  3800     0DD6  0845               	movf	??_scale+3,w
  3801     0DD7  00A6               	movwf	___flmul@b+2
  3802     0DD8  0844               	movf	??_scale+2,w
  3803     0DD9  00A5               	movwf	___flmul@b+1
  3804     0DDA  0843               	movf	??_scale+1,w
  3805     0DDB  00A4               	movwf	___flmul@b
  3806     0DDC  300A               	movlw	10
  3807     0DDD  00F7               	movwf	___awdiv@divisor
  3808     0DDE  3000               	movlw	0
  3809     0DDF  00F8               	movwf	___awdiv@divisor+1
  3810     0DE0  0850               	movf	scale@scl,w
  3811     0DE1  00F9               	movwf	___awdiv@dividend
  3812     0DE2  01FA               	clrf	___awdiv@dividend+1
  3813     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  3814     0DE4  03FA               	decf	___awdiv@dividend+1,f
  3815     0DE5  160A  118A  2244  120A  158A  	fcall	___awdiv
  3816     0DEA  0877               	movf	?___awdiv,w
  3817     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3818     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3819     0DED  00C7               	movwf	??_scale+5
  3820     0DEE  3001               	movlw	1
  3821     0DEF                     u4295:
  3822     0DEF  1003               	clrc
  3823     0DF0  0DC7               	rlf	??_scale+5,f
  3824     0DF1  3EFF               	addlw	-1
  3825     0DF2  1D03               	skipz
  3826     0DF3  2DEF               	goto	u4295
  3827     0DF4  1003               	clrc
  3828     0DF5  0D47               	rlf	??_scale+5,w
  3829     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3830     0DF7  0084               	movwf	4
  3831     0DF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3832     0DFD  00C8               	movwf	??_scale+6
  3833     0DFE  160A  118A  2000  120A  158A  	fcall	stringdir
  3834     0E03  00C9               	movwf	??_scale+7
  3835     0E04  160A  118A  2000  120A  158A  	fcall	stringdir
  3836     0E09  00CA               	movwf	??_scale+8
  3837     0E0A  160A  118A  2000  120A  158A  	fcall	stringdir
  3838     0E0F  00CB               	movwf	??_scale+9
  3839     0E10  084B               	movf	??_scale+9,w
  3840     0E11  00AB               	movwf	___flmul@a+3
  3841     0E12  084A               	movf	??_scale+8,w
  3842     0E13  00AA               	movwf	___flmul@a+2
  3843     0E14  0849               	movf	??_scale+7,w
  3844     0E15  00A9               	movwf	___flmul@a+1
  3845     0E16  0848               	movf	??_scale+6,w
  3846     0E17  00A8               	movwf	___flmul@a
  3847     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3848     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3849     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3850     0E1F  0827               	movf	?___flmul+3,w
  3851     0E20  00C1               	movwf	?_scale+3
  3852     0E21  0826               	movf	?___flmul+2,w
  3853     0E22  00C0               	movwf	?_scale+2
  3854     0E23  0825               	movf	?___flmul+1,w
  3855     0E24  00BF               	movwf	?_scale+1
  3856     0E25  0824               	movf	?___flmul,w
  3857     0E26  00BE               	movwf	?_scale
  3858     0E27  2FFF               	goto	l354
  3859     0E28                     l2967:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3862     0E28  0850               	movf	scale@scl,w
  3863     0E29  00C2               	movwf	??_scale
  3864     0E2A  3001               	movlw	1
  3865     0E2B                     u4305:
  3866     0E2B  1003               	clrc
  3867     0E2C  0DC2               	rlf	??_scale,f
  3868     0E2D  3EFF               	addlw	-1
  3869     0E2E  1D03               	skipz
  3870     0E2F  2E2B               	goto	u4305
  3871     0E30  1003               	clrc
  3872     0E31  0D42               	rlf	??_scale,w
  3873     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3874     0E33  0084               	movwf	4
  3875     0E34  160A  118A  2000  120A  158A  	fcall	stringdir
  3876     0E39  00C3               	movwf	??_scale+1
  3877     0E3A  160A  118A  2000  120A  158A  	fcall	stringdir
  3878     0E3F  00C4               	movwf	??_scale+2
  3879     0E40  160A  118A  2000  120A  158A  	fcall	stringdir
  3880     0E45  00C5               	movwf	??_scale+3
  3881     0E46  160A  118A  2000  120A  158A  	fcall	stringdir
  3882     0E4B  00C6               	movwf	??_scale+4
  3883     0E4C  0846               	movf	??_scale+4,w
  3884     0E4D  00C1               	movwf	?_scale+3
  3885     0E4E  0845               	movf	??_scale+3,w
  3886     0E4F  00C0               	movwf	?_scale+2
  3887     0E50  0844               	movf	??_scale+2,w
  3888     0E51  00BF               	movwf	?_scale+1
  3889     0E52  0843               	movf	??_scale+1,w
  3890     0E53  00BE               	movwf	?_scale
  3891     0E54  2FFF               	goto	l354
  3892     0E55                     l2971:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3895     0E55  0850               	movf	scale@scl,w
  3896     0E56  3A80               	xorlw	128
  3897     0E57  3E12               	addlw	-238
  3898     0E58  1C03               	skipc
  3899     0E59  2E5B               	goto	u4311
  3900     0E5A  2E5C               	goto	u4310
  3901     0E5B                     u4311:
  3902     0E5B  2F44               	goto	l2979
  3903     0E5C                     u4310:
  3904     0E5C                     l2973:
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3907     0E5C  300A               	movlw	10
  3908     0E5D  00F7               	movwf	___awdiv@divisor
  3909     0E5E  3000               	movlw	0
  3910     0E5F  00F8               	movwf	___awdiv@divisor+1
  3911     0E60  0850               	movf	scale@scl,w
  3912     0E61  00F2               	movwf	___awmod@dividend
  3913     0E62  01F3               	clrf	___awmod@dividend+1
  3914     0E63  1BF2               	btfsc	___awmod@dividend,7
  3915     0E64  03F3               	decf	___awmod@dividend+1,f
  3916     0E65  3064               	movlw	100
  3917     0E66  00F0               	movwf	___awmod@divisor
  3918     0E67  3000               	movlw	0
  3919     0E68  00F1               	movwf	___awmod@divisor+1
  3920     0E69  160A  118A  2128  120A  158A  	fcall	___awmod
  3921     0E6E  0871               	movf	?___awmod+1,w
  3922     0E6F  00FA               	movwf	___awdiv@dividend+1
  3923     0E70  0870               	movf	?___awmod,w
  3924     0E71  00F9               	movwf	___awdiv@dividend
  3925     0E72  160A  118A  2244  120A  158A  	fcall	___awdiv
  3926     0E77  0877               	movf	?___awdiv,w
  3927     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3928     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3929     0E7A  00C2               	movwf	??_scale
  3930     0E7B  3001               	movlw	1
  3931     0E7C                     u4325:
  3932     0E7C  1003               	clrc
  3933     0E7D  0DC2               	rlf	??_scale,f
  3934     0E7E  3EFF               	addlw	-1
  3935     0E7F  1D03               	skipz
  3936     0E80  2E7C               	goto	u4325
  3937     0E81  1003               	clrc
  3938     0E82  0D42               	rlf	??_scale,w
  3939     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3940     0E84  0084               	movwf	4
  3941     0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  3942     0E8A  00C3               	movwf	??_scale+1
  3943     0E8B  160A  118A  2000  120A  158A  	fcall	stringdir
  3944     0E90  00C4               	movwf	??_scale+2
  3945     0E91  160A  118A  2000  120A  158A  	fcall	stringdir
  3946     0E96  00C5               	movwf	??_scale+3
  3947     0E97  160A  118A  2000  120A  158A  	fcall	stringdir
  3948     0E9C  00C6               	movwf	??_scale+4
  3949     0E9D  0846               	movf	??_scale+4,w
  3950     0E9E  00A7               	movwf	___flmul@b+3
  3951     0E9F  0845               	movf	??_scale+3,w
  3952     0EA0  00A6               	movwf	___flmul@b+2
  3953     0EA1  0844               	movf	??_scale+2,w
  3954     0EA2  00A5               	movwf	___flmul@b+1
  3955     0EA3  0843               	movf	??_scale+1,w
  3956     0EA4  00A4               	movwf	___flmul@b
  3957     0EA5  3064               	movlw	100
  3958     0EA6  00F7               	movwf	___awdiv@divisor
  3959     0EA7  3000               	movlw	0
  3960     0EA8  00F8               	movwf	___awdiv@divisor+1
  3961     0EA9  0850               	movf	scale@scl,w
  3962     0EAA  00F9               	movwf	___awdiv@dividend
  3963     0EAB  01FA               	clrf	___awdiv@dividend+1
  3964     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  3965     0EAD  03FA               	decf	___awdiv@dividend+1,f
  3966     0EAE  160A  118A  2244  120A  158A  	fcall	___awdiv
  3967     0EB3  0877               	movf	?___awdiv,w
  3968     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3969     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  3970     0EB6  00C7               	movwf	??_scale+5
  3971     0EB7  3001               	movlw	1
  3972     0EB8                     u4335:
  3973     0EB8  1003               	clrc
  3974     0EB9  0DC7               	rlf	??_scale+5,f
  3975     0EBA  3EFF               	addlw	-1
  3976     0EBB  1D03               	skipz
  3977     0EBC  2EB8               	goto	u4335
  3978     0EBD  1003               	clrc
  3979     0EBE  0D47               	rlf	??_scale+5,w
  3980     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3981     0EC0  0084               	movwf	4
  3982     0EC1  160A  118A  2000  120A  158A  	fcall	stringdir
  3983     0EC6  00C8               	movwf	??_scale+6
  3984     0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3985     0ECC  00C9               	movwf	??_scale+7
  3986     0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  3987     0ED2  00CA               	movwf	??_scale+8
  3988     0ED3  160A  118A  2000  120A  158A  	fcall	stringdir
  3989     0ED8  00CB               	movwf	??_scale+9
  3990     0ED9  084B               	movf	??_scale+9,w
  3991     0EDA  00AB               	movwf	___flmul@a+3
  3992     0EDB  084A               	movf	??_scale+8,w
  3993     0EDC  00AA               	movwf	___flmul@a+2
  3994     0EDD  0849               	movf	??_scale+7,w
  3995     0EDE  00A9               	movwf	___flmul@a+1
  3996     0EDF  0848               	movf	??_scale+6,w
  3997     0EE0  00A8               	movwf	___flmul@a
  3998     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  3999     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4000     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4001     0EE8  0827               	movf	?___flmul+3,w
  4002     0EE9  00CF               	movwf	_scale$1374+3
  4003     0EEA  0826               	movf	?___flmul+2,w
  4004     0EEB  00CE               	movwf	_scale$1374+2
  4005     0EEC  0825               	movf	?___flmul+1,w
  4006     0EED  00CD               	movwf	_scale$1374+1
  4007     0EEE  0824               	movf	?___flmul,w
  4008     0EEF  00CC               	movwf	_scale$1374
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4011     0EF0  300A               	movlw	10
  4012     0EF1  00F0               	movwf	___awmod@divisor
  4013     0EF2  3000               	movlw	0
  4014     0EF3  00F1               	movwf	___awmod@divisor+1
  4015     0EF4  0850               	movf	scale@scl,w
  4016     0EF5  00F2               	movwf	___awmod@dividend
  4017     0EF6  01F3               	clrf	___awmod@dividend+1
  4018     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4019     0EF8  03F3               	decf	___awmod@dividend+1,f
  4020     0EF9  160A  118A  2128  120A  158A  	fcall	___awmod
  4021     0EFE  0870               	movf	?___awmod,w
  4022     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4023     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4024     0F01  00C2               	movwf	??_scale
  4025     0F02  3001               	movlw	1
  4026     0F03                     u4345:
  4027     0F03  1003               	clrc
  4028     0F04  0DC2               	rlf	??_scale,f
  4029     0F05  3EFF               	addlw	-1
  4030     0F06  1D03               	skipz
  4031     0F07  2F03               	goto	u4345
  4032     0F08  1003               	clrc
  4033     0F09  0D42               	rlf	??_scale,w
  4034     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4035     0F0B  0084               	movwf	4
  4036     0F0C  160A  118A  2000  120A  158A  	fcall	stringdir
  4037     0F11  00C3               	movwf	??_scale+1
  4038     0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  4039     0F17  00C4               	movwf	??_scale+2
  4040     0F18  160A  118A  2000  120A  158A  	fcall	stringdir
  4041     0F1D  00C5               	movwf	??_scale+3
  4042     0F1E  160A  118A  2000  120A  158A  	fcall	stringdir
  4043     0F23  00C6               	movwf	??_scale+4
  4044     0F24  0846               	movf	??_scale+4,w
  4045     0F25  00A7               	movwf	___flmul@b+3
  4046     0F26  0845               	movf	??_scale+3,w
  4047     0F27  00A6               	movwf	___flmul@b+2
  4048     0F28  0844               	movf	??_scale+2,w
  4049     0F29  00A5               	movwf	___flmul@b+1
  4050     0F2A  0843               	movf	??_scale+1,w
  4051     0F2B  00A4               	movwf	___flmul@b
  4052     0F2C  084F               	movf	_scale$1374+3,w
  4053     0F2D  00AB               	movwf	___flmul@a+3
  4054     0F2E  084E               	movf	_scale$1374+2,w
  4055     0F2F  00AA               	movwf	___flmul@a+2
  4056     0F30  084D               	movf	_scale$1374+1,w
  4057     0F31  00A9               	movwf	___flmul@a+1
  4058     0F32  084C               	movf	_scale$1374,w
  4059     0F33  00A8               	movwf	___flmul@a
  4060     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4061     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4062     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4063     0F3B  0827               	movf	?___flmul+3,w
  4064     0F3C  00C1               	movwf	?_scale+3
  4065     0F3D  0826               	movf	?___flmul+2,w
  4066     0F3E  00C0               	movwf	?_scale+2
  4067     0F3F  0825               	movf	?___flmul+1,w
  4068     0F40  00BF               	movwf	?_scale+1
  4069     0F41  0824               	movf	?___flmul,w
  4070     0F42  00BE               	movwf	?_scale
  4071     0F43  2FFF               	goto	l354
  4072     0F44                     l2979:
  4073     0F44  0850               	movf	scale@scl,w
  4074     0F45  3A80               	xorlw	128
  4075     0F46  3E75               	addlw	-139
  4076     0F47  1C03               	skipc
  4077     0F48  2F4A               	goto	u4351
  4078     0F49  2F4B               	goto	u4350
  4079     0F4A                     u4351:
  4080     0F4A  2FD3               	goto	l2985
  4081     0F4B                     u4350:
  4082     0F4B                     l2981:
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4085     0F4B  300A               	movlw	10
  4086     0F4C  00F0               	movwf	___awmod@divisor
  4087     0F4D  3000               	movlw	0
  4088     0F4E  00F1               	movwf	___awmod@divisor+1
  4089     0F4F  0850               	movf	scale@scl,w
  4090     0F50  00F2               	movwf	___awmod@dividend
  4091     0F51  01F3               	clrf	___awmod@dividend+1
  4092     0F52  1BF2               	btfsc	___awmod@dividend,7
  4093     0F53  03F3               	decf	___awmod@dividend+1,f
  4094     0F54  160A  118A  2128  120A  158A  	fcall	___awmod
  4095     0F59  0870               	movf	?___awmod,w
  4096     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4097     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4098     0F5C  00C2               	movwf	??_scale
  4099     0F5D  3001               	movlw	1
  4100     0F5E                     u4365:
  4101     0F5E  1003               	clrc
  4102     0F5F  0DC2               	rlf	??_scale,f
  4103     0F60  3EFF               	addlw	-1
  4104     0F61  1D03               	skipz
  4105     0F62  2F5E               	goto	u4365
  4106     0F63  1003               	clrc
  4107     0F64  0D42               	rlf	??_scale,w
  4108     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4109     0F66  0084               	movwf	4
  4110     0F67  160A  118A  2000  120A  158A  	fcall	stringdir
  4111     0F6C  00C3               	movwf	??_scale+1
  4112     0F6D  160A  118A  2000  120A  158A  	fcall	stringdir
  4113     0F72  00C4               	movwf	??_scale+2
  4114     0F73  160A  118A  2000  120A  158A  	fcall	stringdir
  4115     0F78  00C5               	movwf	??_scale+3
  4116     0F79  160A  118A  2000  120A  158A  	fcall	stringdir
  4117     0F7E  00C6               	movwf	??_scale+4
  4118     0F7F  0846               	movf	??_scale+4,w
  4119     0F80  00A7               	movwf	___flmul@b+3
  4120     0F81  0845               	movf	??_scale+3,w
  4121     0F82  00A6               	movwf	___flmul@b+2
  4122     0F83  0844               	movf	??_scale+2,w
  4123     0F84  00A5               	movwf	___flmul@b+1
  4124     0F85  0843               	movf	??_scale+1,w
  4125     0F86  00A4               	movwf	___flmul@b
  4126     0F87  300A               	movlw	10
  4127     0F88  00F7               	movwf	___awdiv@divisor
  4128     0F89  3000               	movlw	0
  4129     0F8A  00F8               	movwf	___awdiv@divisor+1
  4130     0F8B  0850               	movf	scale@scl,w
  4131     0F8C  00F9               	movwf	___awdiv@dividend
  4132     0F8D  01FA               	clrf	___awdiv@dividend+1
  4133     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4134     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4135     0F90  160A  118A  2244  120A  158A  	fcall	___awdiv
  4136     0F95  0877               	movf	?___awdiv,w
  4137     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4138     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4139     0F98  00C7               	movwf	??_scale+5
  4140     0F99  3001               	movlw	1
  4141     0F9A                     u4375:
  4142     0F9A  1003               	clrc
  4143     0F9B  0DC7               	rlf	??_scale+5,f
  4144     0F9C  3EFF               	addlw	-1
  4145     0F9D  1D03               	skipz
  4146     0F9E  2F9A               	goto	u4375
  4147     0F9F  1003               	clrc
  4148     0FA0  0D47               	rlf	??_scale+5,w
  4149     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4150     0FA2  0084               	movwf	4
  4151     0FA3  160A  118A  2000  120A  158A  	fcall	stringdir
  4152     0FA8  00C8               	movwf	??_scale+6
  4153     0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  4154     0FAE  00C9               	movwf	??_scale+7
  4155     0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  4156     0FB4  00CA               	movwf	??_scale+8
  4157     0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  4158     0FBA  00CB               	movwf	??_scale+9
  4159     0FBB  084B               	movf	??_scale+9,w
  4160     0FBC  00AB               	movwf	___flmul@a+3
  4161     0FBD  084A               	movf	??_scale+8,w
  4162     0FBE  00AA               	movwf	___flmul@a+2
  4163     0FBF  0849               	movf	??_scale+7,w
  4164     0FC0  00A9               	movwf	___flmul@a+1
  4165     0FC1  0848               	movf	??_scale+6,w
  4166     0FC2  00A8               	movwf	___flmul@a
  4167     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4168     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4169     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4170     0FCA  0827               	movf	?___flmul+3,w
  4171     0FCB  00C1               	movwf	?_scale+3
  4172     0FCC  0826               	movf	?___flmul+2,w
  4173     0FCD  00C0               	movwf	?_scale+2
  4174     0FCE  0825               	movf	?___flmul+1,w
  4175     0FCF  00BF               	movwf	?_scale+1
  4176     0FD0  0824               	movf	?___flmul,w
  4177     0FD1  00BE               	movwf	?_scale
  4178     0FD2  2FFF               	goto	l354
  4179     0FD3                     l2985:
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4182     0FD3  0850               	movf	scale@scl,w
  4183     0FD4  00C2               	movwf	??_scale
  4184     0FD5  3001               	movlw	1
  4185     0FD6                     u4385:
  4186     0FD6  1003               	clrc
  4187     0FD7  0DC2               	rlf	??_scale,f
  4188     0FD8  3EFF               	addlw	-1
  4189     0FD9  1D03               	skipz
  4190     0FDA  2FD6               	goto	u4385
  4191     0FDB  1003               	clrc
  4192     0FDC  0D42               	rlf	??_scale,w
  4193     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4194     0FDE  0084               	movwf	4
  4195     0FDF  160A  118A  2000  120A  158A  	fcall	stringdir
  4196     0FE4  00C3               	movwf	??_scale+1
  4197     0FE5  160A  118A  2000  120A  158A  	fcall	stringdir
  4198     0FEA  00C4               	movwf	??_scale+2
  4199     0FEB  160A  118A  2000  120A  158A  	fcall	stringdir
  4200     0FF0  00C5               	movwf	??_scale+3
  4201     0FF1  160A  118A  2000  120A  158A  	fcall	stringdir
  4202     0FF6  00C6               	movwf	??_scale+4
  4203     0FF7  0846               	movf	??_scale+4,w
  4204     0FF8  00C1               	movwf	?_scale+3
  4205     0FF9  0845               	movf	??_scale+3,w
  4206     0FFA  00C0               	movwf	?_scale+2
  4207     0FFB  0844               	movf	??_scale+2,w
  4208     0FFC  00BF               	movwf	?_scale+1
  4209     0FFD  0843               	movf	??_scale+1,w
  4210     0FFE  00BE               	movwf	?_scale
  4211     0FFF                     l354:
  4212     0FFF  0008               	return
  4213     1000                     __end_of_scale:
  4214                           
  4215                           	psect	text3
  4216     1128                     __ptext3:	
  4217 ;; *************** function ___awmod *****************
  4218 ;; Defined at:
  4219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  divisor         2    0[COMMON] int 
  4222 ;;  dividend        2    2[COMMON] int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  sign            1    6[COMMON] unsigned char 
  4225 ;;  counter         1    5[COMMON] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    0[COMMON] int 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         4       0       0       0       0
  4236 ;;      Locals:         2       0       0       0       0
  4237 ;;      Temps:          1       0       0       0       0
  4238 ;;      Totals:         7       0       0       0       0
  4239 ;;Total ram usage:        7 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_scale
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248     1128                     ___awmod:	
  4249                           ;psect for function ___awmod
  4250                           
  4251     1128                     l2461:	
  4252                           ;incstack = 0
  4253                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4254                           
  4255     1128  01F6               	clrf	___awmod@sign
  4256     1129                     l2463:
  4257     1129  1FF3               	btfss	___awmod@dividend+1,7
  4258     112A  292C               	goto	u3051
  4259     112B  292D               	goto	u3050
  4260     112C                     u3051:
  4261     112C  2934               	goto	l2469
  4262     112D                     u3050:
  4263     112D                     l2465:
  4264     112D  09F2               	comf	___awmod@dividend,f
  4265     112E  09F3               	comf	___awmod@dividend+1,f
  4266     112F  0AF2               	incf	___awmod@dividend,f
  4267     1130  1903               	skipnz
  4268     1131  0AF3               	incf	___awmod@dividend+1,f
  4269     1132                     l2467:
  4270     1132  01F6               	clrf	___awmod@sign
  4271     1133  0AF6               	incf	___awmod@sign,f
  4272     1134                     l2469:
  4273     1134  1FF1               	btfss	___awmod@divisor+1,7
  4274     1135  2937               	goto	u3061
  4275     1136  2938               	goto	u3060
  4276     1137                     u3061:
  4277     1137  293D               	goto	l2473
  4278     1138                     u3060:
  4279     1138                     l2471:
  4280     1138  09F0               	comf	___awmod@divisor,f
  4281     1139  09F1               	comf	___awmod@divisor+1,f
  4282     113A  0AF0               	incf	___awmod@divisor,f
  4283     113B  1903               	skipnz
  4284     113C  0AF1               	incf	___awmod@divisor+1,f
  4285     113D                     l2473:
  4286     113D  0870               	movf	___awmod@divisor,w
  4287     113E  0471               	iorwf	___awmod@divisor+1,w
  4288     113F  1903               	btfsc	3,2
  4289     1140  2942               	goto	u3071
  4290     1141  2943               	goto	u3070
  4291     1142                     u3071:
  4292     1142  2972               	goto	l2491
  4293     1143                     u3070:
  4294     1143                     l2475:
  4295     1143  01F5               	clrf	___awmod@counter
  4296     1144  0AF5               	incf	___awmod@counter,f
  4297     1145  2951               	goto	l2481
  4298     1146                     l2477:
  4299     1146  3001               	movlw	1
  4300     1147                     u3085:
  4301     1147  1003               	clrc
  4302     1148  0DF0               	rlf	___awmod@divisor,f
  4303     1149  0DF1               	rlf	___awmod@divisor+1,f
  4304     114A  3EFF               	addlw	-1
  4305     114B  1D03               	skipz
  4306     114C  2947               	goto	u3085
  4307     114D                     l2479:
  4308     114D  3001               	movlw	1
  4309     114E  00F4               	movwf	??___awmod
  4310     114F  0874               	movf	??___awmod,w
  4311     1150  07F5               	addwf	___awmod@counter,f
  4312     1151                     l2481:
  4313     1151  1FF1               	btfss	___awmod@divisor+1,7
  4314     1152  2954               	goto	u3091
  4315     1153  2955               	goto	u3090
  4316     1154                     u3091:
  4317     1154  2946               	goto	l2477
  4318     1155                     u3090:
  4319     1155                     l2483:
  4320     1155  0871               	movf	___awmod@divisor+1,w
  4321     1156  0273               	subwf	___awmod@dividend+1,w
  4322     1157  1D03               	skipz
  4323     1158  295B               	goto	u3105
  4324     1159  0870               	movf	___awmod@divisor,w
  4325     115A  0272               	subwf	___awmod@dividend,w
  4326     115B                     u3105:
  4327     115B  1C03               	skipc
  4328     115C  295E               	goto	u3101
  4329     115D  295F               	goto	u3100
  4330     115E                     u3101:
  4331     115E  2965               	goto	l2487
  4332     115F                     u3100:
  4333     115F                     l2485:
  4334     115F  0870               	movf	___awmod@divisor,w
  4335     1160  02F2               	subwf	___awmod@dividend,f
  4336     1161  0871               	movf	___awmod@divisor+1,w
  4337     1162  1C03               	skipc
  4338     1163  03F3               	decf	___awmod@dividend+1,f
  4339     1164  02F3               	subwf	___awmod@dividend+1,f
  4340     1165                     l2487:
  4341     1165  3001               	movlw	1
  4342     1166                     u3115:
  4343     1166  1003               	clrc
  4344     1167  0CF1               	rrf	___awmod@divisor+1,f
  4345     1168  0CF0               	rrf	___awmod@divisor,f
  4346     1169  3EFF               	addlw	-1
  4347     116A  1D03               	skipz
  4348     116B  2966               	goto	u3115
  4349     116C                     l2489:
  4350     116C  3001               	movlw	1
  4351     116D  02F5               	subwf	___awmod@counter,f
  4352     116E  1D03               	btfss	3,2
  4353     116F  2971               	goto	u3121
  4354     1170  2972               	goto	u3120
  4355     1171                     u3121:
  4356     1171  2955               	goto	l2483
  4357     1172                     u3120:
  4358     1172                     l2491:
  4359     1172  0876               	movf	___awmod@sign,w
  4360     1173  1903               	btfsc	3,2
  4361     1174  2976               	goto	u3131
  4362     1175  2977               	goto	u3130
  4363     1176                     u3131:
  4364     1176  297C               	goto	l2495
  4365     1177                     u3130:
  4366     1177                     l2493:
  4367     1177  09F2               	comf	___awmod@dividend,f
  4368     1178  09F3               	comf	___awmod@dividend+1,f
  4369     1179  0AF2               	incf	___awmod@dividend,f
  4370     117A  1903               	skipnz
  4371     117B  0AF3               	incf	___awmod@dividend+1,f
  4372     117C                     l2495:
  4373     117C  0873               	movf	___awmod@dividend+1,w
  4374     117D  00F1               	movwf	?___awmod+1
  4375     117E  0872               	movf	___awmod@dividend,w
  4376     117F  00F0               	movwf	?___awmod
  4377     1180                     l590:
  4378     1180  0008               	return
  4379     1181                     __end_of___awmod:
  4380                           
  4381                           	psect	text4
  4382     1244                     __ptext4:	
  4383 ;; *************** function ___awdiv *****************
  4384 ;; Defined at:
  4385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  divisor         2    7[COMMON] int 
  4388 ;;  dividend        2    9[COMMON] int 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  quotient        2    2[BANK0 ] int 
  4391 ;;  sign            1    1[BANK0 ] unsigned char 
  4392 ;;  counter         1    0[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    7[COMMON] int 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4402 ;;      Params:         4       0       0       0       0
  4403 ;;      Locals:         0       4       0       0       0
  4404 ;;      Temps:          1       0       0       0       0
  4405 ;;      Totals:         5       4       0       0       0
  4406 ;;Total ram usage:        9 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_scale
  4412 ;;		_sprintf
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416     1244                     ___awdiv:	
  4417                           ;psect for function ___awdiv
  4418                           
  4419     1244                     l2417:	
  4420                           ;incstack = 0
  4421                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4422                           
  4423     1244  1283               	bcf	3,5	;RP0=0, select bank0
  4424     1245  1303               	bcf	3,6	;RP1=0, select bank0
  4425     1246  01A1               	clrf	___awdiv@sign
  4426     1247                     l2419:
  4427     1247  1FF8               	btfss	___awdiv@divisor+1,7
  4428     1248  2A4A               	goto	u2951
  4429     1249  2A4B               	goto	u2950
  4430     124A                     u2951:
  4431     124A  2A52               	goto	l2425
  4432     124B                     u2950:
  4433     124B                     l2421:
  4434     124B  09F7               	comf	___awdiv@divisor,f
  4435     124C  09F8               	comf	___awdiv@divisor+1,f
  4436     124D  0AF7               	incf	___awdiv@divisor,f
  4437     124E  1903               	skipnz
  4438     124F  0AF8               	incf	___awdiv@divisor+1,f
  4439     1250                     l2423:
  4440     1250  01A1               	clrf	___awdiv@sign
  4441     1251  0AA1               	incf	___awdiv@sign,f
  4442     1252                     l2425:
  4443     1252  1FFA               	btfss	___awdiv@dividend+1,7
  4444     1253  2A55               	goto	u2961
  4445     1254  2A56               	goto	u2960
  4446     1255                     u2961:
  4447     1255  2A5F               	goto	l2431
  4448     1256                     u2960:
  4449     1256                     l2427:
  4450     1256  09F9               	comf	___awdiv@dividend,f
  4451     1257  09FA               	comf	___awdiv@dividend+1,f
  4452     1258  0AF9               	incf	___awdiv@dividend,f
  4453     1259  1903               	skipnz
  4454     125A  0AFA               	incf	___awdiv@dividend+1,f
  4455     125B                     l2429:
  4456     125B  3001               	movlw	1
  4457     125C  00FB               	movwf	??___awdiv
  4458     125D  087B               	movf	??___awdiv,w
  4459     125E  06A1               	xorwf	___awdiv@sign,f
  4460     125F                     l2431:
  4461     125F  01A2               	clrf	___awdiv@quotient
  4462     1260  01A3               	clrf	___awdiv@quotient+1
  4463     1261                     l2433:
  4464     1261  0877               	movf	___awdiv@divisor,w
  4465     1262  0478               	iorwf	___awdiv@divisor+1,w
  4466     1263  1903               	btfsc	3,2
  4467     1264  2A66               	goto	u2971
  4468     1265  2A67               	goto	u2970
  4469     1266                     u2971:
  4470     1266  2A9E               	goto	l2453
  4471     1267                     u2970:
  4472     1267                     l2435:
  4473     1267  01A0               	clrf	___awdiv@counter
  4474     1268  0AA0               	incf	___awdiv@counter,f
  4475     1269  2A75               	goto	l2441
  4476     126A                     l2437:
  4477     126A  3001               	movlw	1
  4478     126B                     u2985:
  4479     126B  1003               	clrc
  4480     126C  0DF7               	rlf	___awdiv@divisor,f
  4481     126D  0DF8               	rlf	___awdiv@divisor+1,f
  4482     126E  3EFF               	addlw	-1
  4483     126F  1D03               	skipz
  4484     1270  2A6B               	goto	u2985
  4485     1271                     l2439:
  4486     1271  3001               	movlw	1
  4487     1272  00FB               	movwf	??___awdiv
  4488     1273  087B               	movf	??___awdiv,w
  4489     1274  07A0               	addwf	___awdiv@counter,f
  4490     1275                     l2441:
  4491     1275  1FF8               	btfss	___awdiv@divisor+1,7
  4492     1276  2A78               	goto	u2991
  4493     1277  2A79               	goto	u2990
  4494     1278                     u2991:
  4495     1278  2A6A               	goto	l2437
  4496     1279                     u2990:
  4497     1279                     l2443:
  4498     1279  3001               	movlw	1
  4499     127A                     u3005:
  4500     127A  1003               	clrc
  4501     127B  0DA2               	rlf	___awdiv@quotient,f
  4502     127C  0DA3               	rlf	___awdiv@quotient+1,f
  4503     127D  3EFF               	addlw	-1
  4504     127E  1D03               	skipz
  4505     127F  2A7A               	goto	u3005
  4506     1280  0878               	movf	___awdiv@divisor+1,w
  4507     1281  027A               	subwf	___awdiv@dividend+1,w
  4508     1282  1D03               	skipz
  4509     1283  2A86               	goto	u3015
  4510     1284  0877               	movf	___awdiv@divisor,w
  4511     1285  0279               	subwf	___awdiv@dividend,w
  4512     1286                     u3015:
  4513     1286  1C03               	skipc
  4514     1287  2A89               	goto	u3011
  4515     1288  2A8A               	goto	u3010
  4516     1289                     u3011:
  4517     1289  2A91               	goto	l2449
  4518     128A                     u3010:
  4519     128A                     l2445:
  4520     128A  0877               	movf	___awdiv@divisor,w
  4521     128B  02F9               	subwf	___awdiv@dividend,f
  4522     128C  0878               	movf	___awdiv@divisor+1,w
  4523     128D  1C03               	skipc
  4524     128E  03FA               	decf	___awdiv@dividend+1,f
  4525     128F  02FA               	subwf	___awdiv@dividend+1,f
  4526     1290                     l2447:
  4527     1290  1422               	bsf	___awdiv@quotient,0
  4528     1291                     l2449:
  4529     1291  3001               	movlw	1
  4530     1292                     u3025:
  4531     1292  1003               	clrc
  4532     1293  0CF8               	rrf	___awdiv@divisor+1,f
  4533     1294  0CF7               	rrf	___awdiv@divisor,f
  4534     1295  3EFF               	addlw	-1
  4535     1296  1D03               	skipz
  4536     1297  2A92               	goto	u3025
  4537     1298                     l2451:
  4538     1298  3001               	movlw	1
  4539     1299  02A0               	subwf	___awdiv@counter,f
  4540     129A  1D03               	btfss	3,2
  4541     129B  2A9D               	goto	u3031
  4542     129C  2A9E               	goto	u3030
  4543     129D                     u3031:
  4544     129D  2A79               	goto	l2443
  4545     129E                     u3030:
  4546     129E                     l2453:
  4547     129E  0821               	movf	___awdiv@sign,w
  4548     129F  1903               	btfsc	3,2
  4549     12A0  2AA2               	goto	u3041
  4550     12A1  2AA3               	goto	u3040
  4551     12A2                     u3041:
  4552     12A2  2AA8               	goto	l2457
  4553     12A3                     u3040:
  4554     12A3                     l2455:
  4555     12A3  09A2               	comf	___awdiv@quotient,f
  4556     12A4  09A3               	comf	___awdiv@quotient+1,f
  4557     12A5  0AA2               	incf	___awdiv@quotient,f
  4558     12A6  1903               	skipnz
  4559     12A7  0AA3               	incf	___awdiv@quotient+1,f
  4560     12A8                     l2457:
  4561     12A8  0823               	movf	___awdiv@quotient+1,w
  4562     12A9  00F8               	movwf	?___awdiv+1
  4563     12AA  0822               	movf	___awdiv@quotient,w
  4564     12AB  00F7               	movwf	?___awdiv
  4565     12AC                     l577:
  4566     12AC  0008               	return
  4567     12AD                     __end_of___awdiv:
  4568                           
  4569                           	psect	text5
  4570     1DAE                     __ptext5:	
  4571 ;; *************** function _isdigit *****************
  4572 ;; Defined at:
  4573 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  c               1    wreg     unsigned char 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  c               1    1[COMMON] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;		None               void
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         0       0       0       0       0
  4588 ;;      Locals:         2       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0
  4590 ;;      Totals:         2       0       0       0       0
  4591 ;;Total ram usage:        2 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_sprintf
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600     1DAE                     _isdigit:	
  4601                           ;psect for function _isdigit
  4602                           
  4603                           
  4604                           ;incstack = 0
  4605                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4606                           ;isdigit@c stored from wreg
  4607     1DAE  00F1               	movwf	isdigit@c
  4608     1DAF                     l2989:
  4609     1DAF  01F0               	clrf	_isdigit$1152
  4610     1DB0                     l2991:
  4611     1DB0  303A               	movlw	58
  4612     1DB1  0271               	subwf	isdigit@c,w
  4613     1DB2  1803               	skipnc
  4614     1DB3  2DB5               	goto	u4391
  4615     1DB4  2DB6               	goto	u4390
  4616     1DB5                     u4391:
  4617     1DB5  2DBE               	goto	l2997
  4618     1DB6                     u4390:
  4619     1DB6                     l2993:
  4620     1DB6  3030               	movlw	48
  4621     1DB7  0271               	subwf	isdigit@c,w
  4622     1DB8  1C03               	skipc
  4623     1DB9  2DBB               	goto	u4401
  4624     1DBA  2DBC               	goto	u4400
  4625     1DBB                     u4401:
  4626     1DBB  2DBE               	goto	l2997
  4627     1DBC                     u4400:
  4628     1DBC                     l2995:
  4629     1DBC  01F0               	clrf	_isdigit$1152
  4630     1DBD  0AF0               	incf	_isdigit$1152,f
  4631     1DBE                     l2997:
  4632     1DBE  0C70               	rrf	_isdigit$1152,w
  4633     1DBF                     l911:
  4634     1DBF  0008               	return
  4635     1DC0                     __end_of_isdigit:
  4636                           
  4637                           	psect	text6
  4638     139D                     __ptext6:	
  4639 ;; *************** function _fround *****************
  4640 ;; Defined at:
  4641 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  prec            1    wreg     unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  prec            1   49[BANK0 ] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  4   30[BANK0 ] unsigned char 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4655 ;;      Params:         0       4       0       0       0
  4656 ;;      Locals:         0       9       0       0       0
  4657 ;;      Temps:          0       7       0       0       0
  4658 ;;      Totals:         0      20       0       0       0
  4659 ;;Total ram usage:       20 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 2
  4662 ;; This function calls:
  4663 ;;		___flmul
  4664 ;;		___lwdiv
  4665 ;;		___lwmod
  4666 ;; This function is called by:
  4667 ;;		_sprintf
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671     139D                     _fround:	
  4672                           ;psect for function _fround
  4673                           
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4677                           ;fround@prec stored from wreg
  4678     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4679     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4680     139F  00D1               	movwf	fround@prec
  4681     13A0                     l2931:
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4684     13A0  306E               	movlw	110
  4685     13A1  0251               	subwf	fround@prec,w
  4686     13A2  1C03               	skipc
  4687     13A3  2BA5               	goto	u4141
  4688     13A4  2BA6               	goto	u4140
  4689     13A5                     u4141:
  4690     13A5  2CB3               	goto	l2939
  4691     13A6                     u4140:
  4692     13A6                     l2933:
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4695     13A6  303F               	movlw	63
  4696     13A7  00A7               	movwf	___flmul@b+3
  4697     13A8  3000               	movlw	0
  4698     13A9  00A6               	movwf	___flmul@b+2
  4699     13AA  3000               	movlw	0
  4700     13AB  00A5               	movwf	___flmul@b+1
  4701     13AC  3000               	movlw	0
  4702     13AD  00A4               	movwf	___flmul@b
  4703     13AE  3064               	movlw	100
  4704     13AF  00F6               	movwf	___lwdiv@divisor
  4705     13B0  3000               	movlw	0
  4706     13B1  00F7               	movwf	___lwdiv@divisor+1
  4707     13B2  0851               	movf	fround@prec,w
  4708     13B3  00C2               	movwf	??_fround
  4709     13B4  01C3               	clrf	??_fround+1
  4710     13B5  0842               	movf	??_fround,w
  4711     13B6  00F8               	movwf	___lwdiv@dividend
  4712     13B7  0843               	movf	??_fround+1,w
  4713     13B8  00F9               	movwf	___lwdiv@dividend+1
  4714     13B9  160A  158A  2728  160A  118A  	fcall	___lwdiv
  4715     13BE  0876               	movf	?___lwdiv,w
  4716     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4717     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4718     13C1  00C4               	movwf	??_fround+2
  4719     13C2  3001               	movlw	1
  4720     13C3                     u4155:
  4721     13C3  1003               	clrc
  4722     13C4  0DC4               	rlf	??_fround+2,f
  4723     13C5  3EFF               	addlw	-1
  4724     13C6  1D03               	skipz
  4725     13C7  2BC3               	goto	u4155
  4726     13C8  1003               	clrc
  4727     13C9  0D44               	rlf	??_fround+2,w
  4728     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4729     13CB  0084               	movwf	4
  4730     13CC  160A  118A  2000  160A  118A  	fcall	stringdir
  4731     13D1  00C5               	movwf	??_fround+3
  4732     13D2  160A  118A  2000  160A  118A  	fcall	stringdir
  4733     13D7  00C6               	movwf	??_fround+4
  4734     13D8  160A  118A  2000  160A  118A  	fcall	stringdir
  4735     13DD  00C7               	movwf	??_fround+5
  4736     13DE  160A  118A  2000  160A  118A  	fcall	stringdir
  4737     13E3  00C8               	movwf	??_fround+6
  4738     13E4  0848               	movf	??_fround+6,w
  4739     13E5  00AB               	movwf	___flmul@a+3
  4740     13E6  0847               	movf	??_fround+5,w
  4741     13E7  00AA               	movwf	___flmul@a+2
  4742     13E8  0846               	movf	??_fround+4,w
  4743     13E9  00A9               	movwf	___flmul@a+1
  4744     13EA  0845               	movf	??_fround+3,w
  4745     13EB  00A8               	movwf	___flmul@a
  4746     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  4747     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4748     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4749     13F3  0827               	movf	?___flmul+3,w
  4750     13F4  00D0               	movwf	_fround$1372+3
  4751     13F5  0826               	movf	?___flmul+2,w
  4752     13F6  00CF               	movwf	_fround$1372+2
  4753     13F7  0825               	movf	?___flmul+1,w
  4754     13F8  00CE               	movwf	_fround$1372+1
  4755     13F9  0824               	movf	?___flmul,w
  4756     13FA  00CD               	movwf	_fround$1372
  4757                           
  4758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4759     13FB  300A               	movlw	10
  4760     13FC  00F6               	movwf	___lwdiv@divisor
  4761     13FD  3000               	movlw	0
  4762     13FE  00F7               	movwf	___lwdiv@divisor+1
  4763     13FF  0851               	movf	fround@prec,w
  4764     1400  00C2               	movwf	??_fround
  4765     1401  01C3               	clrf	??_fround+1
  4766     1402  0842               	movf	??_fround,w
  4767     1403  00F2               	movwf	___lwmod@dividend
  4768     1404  0843               	movf	??_fround+1,w
  4769     1405  00F3               	movwf	___lwmod@dividend+1
  4770     1406  3064               	movlw	100
  4771     1407  00F0               	movwf	___lwmod@divisor
  4772     1408  3000               	movlw	0
  4773     1409  00F1               	movwf	___lwmod@divisor+1
  4774     140A  120A  118A  2003  160A  118A  	fcall	___lwmod
  4775     140F  0871               	movf	?___lwmod+1,w
  4776     1410  00F9               	movwf	___lwdiv@dividend+1
  4777     1411  0870               	movf	?___lwmod,w
  4778     1412  00F8               	movwf	___lwdiv@dividend
  4779     1413  160A  158A  2728  160A  118A  	fcall	___lwdiv
  4780     1418  0876               	movf	?___lwdiv,w
  4781     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4782     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4783     141B  00C4               	movwf	??_fround+2
  4784     141C  3001               	movlw	1
  4785     141D                     u4165:
  4786     141D  1003               	clrc
  4787     141E  0DC4               	rlf	??_fround+2,f
  4788     141F  3EFF               	addlw	-1
  4789     1420  1D03               	skipz
  4790     1421  2C1D               	goto	u4165
  4791     1422  1003               	clrc
  4792     1423  0D44               	rlf	??_fround+2,w
  4793     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4794     1425  0084               	movwf	4
  4795     1426  160A  118A  2000  160A  118A  	fcall	stringdir
  4796     142B  00C5               	movwf	??_fround+3
  4797     142C  160A  118A  2000  160A  118A  	fcall	stringdir
  4798     1431  00C6               	movwf	??_fround+4
  4799     1432  160A  118A  2000  160A  118A  	fcall	stringdir
  4800     1437  00C7               	movwf	??_fround+5
  4801     1438  160A  118A  2000  160A  118A  	fcall	stringdir
  4802     143D  00C8               	movwf	??_fround+6
  4803     143E  0848               	movf	??_fround+6,w
  4804     143F  00A7               	movwf	___flmul@b+3
  4805     1440  0847               	movf	??_fround+5,w
  4806     1441  00A6               	movwf	___flmul@b+2
  4807     1442  0846               	movf	??_fround+4,w
  4808     1443  00A5               	movwf	___flmul@b+1
  4809     1444  0845               	movf	??_fround+3,w
  4810     1445  00A4               	movwf	___flmul@b
  4811     1446  0850               	movf	_fround$1372+3,w
  4812     1447  00AB               	movwf	___flmul@a+3
  4813     1448  084F               	movf	_fround$1372+2,w
  4814     1449  00AA               	movwf	___flmul@a+2
  4815     144A  084E               	movf	_fround$1372+1,w
  4816     144B  00A9               	movwf	___flmul@a+1
  4817     144C  084D               	movf	_fround$1372,w
  4818     144D  00A8               	movwf	___flmul@a
  4819     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  4820     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4821     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4822     1455  0827               	movf	?___flmul+3,w
  4823     1456  00CC               	movwf	_fround$1373+3
  4824     1457  0826               	movf	?___flmul+2,w
  4825     1458  00CB               	movwf	_fround$1373+2
  4826     1459  0825               	movf	?___flmul+1,w
  4827     145A  00CA               	movwf	_fround$1373+1
  4828     145B  0824               	movf	?___flmul,w
  4829     145C  00C9               	movwf	_fround$1373
  4830                           
  4831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4832     145D  300A               	movlw	10
  4833     145E  00F0               	movwf	___lwmod@divisor
  4834     145F  3000               	movlw	0
  4835     1460  00F1               	movwf	___lwmod@divisor+1
  4836     1461  0851               	movf	fround@prec,w
  4837     1462  00C2               	movwf	??_fround
  4838     1463  01C3               	clrf	??_fround+1
  4839     1464  0842               	movf	??_fround,w
  4840     1465  00F2               	movwf	___lwmod@dividend
  4841     1466  0843               	movf	??_fround+1,w
  4842     1467  00F3               	movwf	___lwmod@dividend+1
  4843     1468  120A  118A  2003  160A  118A  	fcall	___lwmod
  4844     146D  0870               	movf	?___lwmod,w
  4845     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4846     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4847     1470  00C4               	movwf	??_fround+2
  4848     1471  3001               	movlw	1
  4849     1472                     u4175:
  4850     1472  1003               	clrc
  4851     1473  0DC4               	rlf	??_fround+2,f
  4852     1474  3EFF               	addlw	-1
  4853     1475  1D03               	skipz
  4854     1476  2C72               	goto	u4175
  4855     1477  1003               	clrc
  4856     1478  0D44               	rlf	??_fround+2,w
  4857     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4858     147A  0084               	movwf	4
  4859     147B  160A  118A  2000  160A  118A  	fcall	stringdir
  4860     1480  00C5               	movwf	??_fround+3
  4861     1481  160A  118A  2000  160A  118A  	fcall	stringdir
  4862     1486  00C6               	movwf	??_fround+4
  4863     1487  160A  118A  2000  160A  118A  	fcall	stringdir
  4864     148C  00C7               	movwf	??_fround+5
  4865     148D  160A  118A  2000  160A  118A  	fcall	stringdir
  4866     1492  00C8               	movwf	??_fround+6
  4867     1493  0848               	movf	??_fround+6,w
  4868     1494  00A7               	movwf	___flmul@b+3
  4869     1495  0847               	movf	??_fround+5,w
  4870     1496  00A6               	movwf	___flmul@b+2
  4871     1497  0846               	movf	??_fround+4,w
  4872     1498  00A5               	movwf	___flmul@b+1
  4873     1499  0845               	movf	??_fround+3,w
  4874     149A  00A4               	movwf	___flmul@b
  4875     149B  084C               	movf	_fround$1373+3,w
  4876     149C  00AB               	movwf	___flmul@a+3
  4877     149D  084B               	movf	_fround$1373+2,w
  4878     149E  00AA               	movwf	___flmul@a+2
  4879     149F  084A               	movf	_fround$1373+1,w
  4880     14A0  00A9               	movwf	___flmul@a+1
  4881     14A1  0849               	movf	_fround$1373,w
  4882     14A2  00A8               	movwf	___flmul@a
  4883     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  4884     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4885     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4886     14AA  0827               	movf	?___flmul+3,w
  4887     14AB  00C1               	movwf	?_fround+3
  4888     14AC  0826               	movf	?___flmul+2,w
  4889     14AD  00C0               	movwf	?_fround+2
  4890     14AE  0825               	movf	?___flmul+1,w
  4891     14AF  00BF               	movwf	?_fround+1
  4892     14B0  0824               	movf	?___flmul,w
  4893     14B1  00BE               	movwf	?_fround
  4894     14B2  2DA7               	goto	l347
  4895     14B3                     l2939:
  4896     14B3  300B               	movlw	11
  4897     14B4  0251               	subwf	fround@prec,w
  4898     14B5  1C03               	skipc
  4899     14B6  2CB8               	goto	u4181
  4900     14B7  2CB9               	goto	u4180
  4901     14B8                     u4181:
  4902     14B8  2D64               	goto	l2945
  4903     14B9                     u4180:
  4904     14B9                     l2941:
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4907     14B9  303F               	movlw	63
  4908     14BA  00A7               	movwf	___flmul@b+3
  4909     14BB  3000               	movlw	0
  4910     14BC  00A6               	movwf	___flmul@b+2
  4911     14BD  3000               	movlw	0
  4912     14BE  00A5               	movwf	___flmul@b+1
  4913     14BF  3000               	movlw	0
  4914     14C0  00A4               	movwf	___flmul@b
  4915     14C1  300A               	movlw	10
  4916     14C2  00F6               	movwf	___lwdiv@divisor
  4917     14C3  3000               	movlw	0
  4918     14C4  00F7               	movwf	___lwdiv@divisor+1
  4919     14C5  0851               	movf	fround@prec,w
  4920     14C6  00C2               	movwf	??_fround
  4921     14C7  01C3               	clrf	??_fround+1
  4922     14C8  0842               	movf	??_fround,w
  4923     14C9  00F8               	movwf	___lwdiv@dividend
  4924     14CA  0843               	movf	??_fround+1,w
  4925     14CB  00F9               	movwf	___lwdiv@dividend+1
  4926     14CC  160A  158A  2728  160A  118A  	fcall	___lwdiv
  4927     14D1  0876               	movf	?___lwdiv,w
  4928     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4929     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4930     14D4  00C4               	movwf	??_fround+2
  4931     14D5  3001               	movlw	1
  4932     14D6                     u4195:
  4933     14D6  1003               	clrc
  4934     14D7  0DC4               	rlf	??_fround+2,f
  4935     14D8  3EFF               	addlw	-1
  4936     14D9  1D03               	skipz
  4937     14DA  2CD6               	goto	u4195
  4938     14DB  1003               	clrc
  4939     14DC  0D44               	rlf	??_fround+2,w
  4940     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4941     14DE  0084               	movwf	4
  4942     14DF  160A  118A  2000  160A  118A  	fcall	stringdir
  4943     14E4  00C5               	movwf	??_fround+3
  4944     14E5  160A  118A  2000  160A  118A  	fcall	stringdir
  4945     14EA  00C6               	movwf	??_fround+4
  4946     14EB  160A  118A  2000  160A  118A  	fcall	stringdir
  4947     14F0  00C7               	movwf	??_fround+5
  4948     14F1  160A  118A  2000  160A  118A  	fcall	stringdir
  4949     14F6  00C8               	movwf	??_fround+6
  4950     14F7  0848               	movf	??_fround+6,w
  4951     14F8  00AB               	movwf	___flmul@a+3
  4952     14F9  0847               	movf	??_fround+5,w
  4953     14FA  00AA               	movwf	___flmul@a+2
  4954     14FB  0846               	movf	??_fround+4,w
  4955     14FC  00A9               	movwf	___flmul@a+1
  4956     14FD  0845               	movf	??_fround+3,w
  4957     14FE  00A8               	movwf	___flmul@a
  4958     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  4959     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4960     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4961     1506  0827               	movf	?___flmul+3,w
  4962     1507  00D0               	movwf	_fround$1372+3
  4963     1508  0826               	movf	?___flmul+2,w
  4964     1509  00CF               	movwf	_fround$1372+2
  4965     150A  0825               	movf	?___flmul+1,w
  4966     150B  00CE               	movwf	_fround$1372+1
  4967     150C  0824               	movf	?___flmul,w
  4968     150D  00CD               	movwf	_fround$1372
  4969                           
  4970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4971     150E  300A               	movlw	10
  4972     150F  00F0               	movwf	___lwmod@divisor
  4973     1510  3000               	movlw	0
  4974     1511  00F1               	movwf	___lwmod@divisor+1
  4975     1512  0851               	movf	fround@prec,w
  4976     1513  00C2               	movwf	??_fround
  4977     1514  01C3               	clrf	??_fround+1
  4978     1515  0842               	movf	??_fround,w
  4979     1516  00F2               	movwf	___lwmod@dividend
  4980     1517  0843               	movf	??_fround+1,w
  4981     1518  00F3               	movwf	___lwmod@dividend+1
  4982     1519  120A  118A  2003  160A  118A  	fcall	___lwmod
  4983     151E  0870               	movf	?___lwmod,w
  4984     151F  1283               	bcf	3,5	;RP0=0, select bank0
  4985     1520  1303               	bcf	3,6	;RP1=0, select bank0
  4986     1521  00C4               	movwf	??_fround+2
  4987     1522  3001               	movlw	1
  4988     1523                     u4205:
  4989     1523  1003               	clrc
  4990     1524  0DC4               	rlf	??_fround+2,f
  4991     1525  3EFF               	addlw	-1
  4992     1526  1D03               	skipz
  4993     1527  2D23               	goto	u4205
  4994     1528  1003               	clrc
  4995     1529  0D44               	rlf	??_fround+2,w
  4996     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4997     152B  0084               	movwf	4
  4998     152C  160A  118A  2000  160A  118A  	fcall	stringdir
  4999     1531  00C5               	movwf	??_fround+3
  5000     1532  160A  118A  2000  160A  118A  	fcall	stringdir
  5001     1537  00C6               	movwf	??_fround+4
  5002     1538  160A  118A  2000  160A  118A  	fcall	stringdir
  5003     153D  00C7               	movwf	??_fround+5
  5004     153E  160A  118A  2000  160A  118A  	fcall	stringdir
  5005     1543  00C8               	movwf	??_fround+6
  5006     1544  0848               	movf	??_fround+6,w
  5007     1545  00A7               	movwf	___flmul@b+3
  5008     1546  0847               	movf	??_fround+5,w
  5009     1547  00A6               	movwf	___flmul@b+2
  5010     1548  0846               	movf	??_fround+4,w
  5011     1549  00A5               	movwf	___flmul@b+1
  5012     154A  0845               	movf	??_fround+3,w
  5013     154B  00A4               	movwf	___flmul@b
  5014     154C  0850               	movf	_fround$1372+3,w
  5015     154D  00AB               	movwf	___flmul@a+3
  5016     154E  084F               	movf	_fround$1372+2,w
  5017     154F  00AA               	movwf	___flmul@a+2
  5018     1550  084E               	movf	_fround$1372+1,w
  5019     1551  00A9               	movwf	___flmul@a+1
  5020     1552  084D               	movf	_fround$1372,w
  5021     1553  00A8               	movwf	___flmul@a
  5022     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5023     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5024     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5025     155B  0827               	movf	?___flmul+3,w
  5026     155C  00C1               	movwf	?_fround+3
  5027     155D  0826               	movf	?___flmul+2,w
  5028     155E  00C0               	movwf	?_fround+2
  5029     155F  0825               	movf	?___flmul+1,w
  5030     1560  00BF               	movwf	?_fround+1
  5031     1561  0824               	movf	?___flmul,w
  5032     1562  00BE               	movwf	?_fround
  5033     1563  2DA7               	goto	l347
  5034     1564                     l2945:
  5035                           
  5036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5037     1564  303F               	movlw	63
  5038     1565  00A7               	movwf	___flmul@b+3
  5039     1566  3000               	movlw	0
  5040     1567  00A6               	movwf	___flmul@b+2
  5041     1568  3000               	movlw	0
  5042     1569  00A5               	movwf	___flmul@b+1
  5043     156A  3000               	movlw	0
  5044     156B  00A4               	movwf	___flmul@b
  5045     156C  0851               	movf	fround@prec,w
  5046     156D  00C2               	movwf	??_fround
  5047     156E  3001               	movlw	1
  5048     156F                     u4215:
  5049     156F  1003               	clrc
  5050     1570  0DC2               	rlf	??_fround,f
  5051     1571  3EFF               	addlw	-1
  5052     1572  1D03               	skipz
  5053     1573  2D6F               	goto	u4215
  5054     1574  1003               	clrc
  5055     1575  0D42               	rlf	??_fround,w
  5056     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5057     1577  0084               	movwf	4
  5058     1578  160A  118A  2000  160A  118A  	fcall	stringdir
  5059     157D  00C3               	movwf	??_fround+1
  5060     157E  160A  118A  2000  160A  118A  	fcall	stringdir
  5061     1583  00C4               	movwf	??_fround+2
  5062     1584  160A  118A  2000  160A  118A  	fcall	stringdir
  5063     1589  00C5               	movwf	??_fround+3
  5064     158A  160A  118A  2000  160A  118A  	fcall	stringdir
  5065     158F  00C6               	movwf	??_fround+4
  5066     1590  0846               	movf	??_fround+4,w
  5067     1591  00AB               	movwf	___flmul@a+3
  5068     1592  0845               	movf	??_fround+3,w
  5069     1593  00AA               	movwf	___flmul@a+2
  5070     1594  0844               	movf	??_fround+2,w
  5071     1595  00A9               	movwf	___flmul@a+1
  5072     1596  0843               	movf	??_fround+1,w
  5073     1597  00A8               	movwf	___flmul@a
  5074     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5075     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5076     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5077     159F  0827               	movf	?___flmul+3,w
  5078     15A0  00C1               	movwf	?_fround+3
  5079     15A1  0826               	movf	?___flmul+2,w
  5080     15A2  00C0               	movwf	?_fround+2
  5081     15A3  0825               	movf	?___flmul+1,w
  5082     15A4  00BF               	movwf	?_fround+1
  5083     15A5  0824               	movf	?___flmul,w
  5084     15A6  00BE               	movwf	?_fround
  5085     15A7                     l347:
  5086     15A7  0008               	return
  5087     15A8                     __end_of_fround:
  5088                           
  5089                           	psect	text7
  5090     0003                     __ptext7:	
  5091 ;; *************** function ___lwmod *****************
  5092 ;; Defined at:
  5093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  divisor         2    0[COMMON] unsigned int 
  5096 ;;  dividend        2    2[COMMON] unsigned int 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  counter         1    5[COMMON] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  2    0[COMMON] unsigned int 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         4       0       0       0       0
  5109 ;;      Locals:         1       0       0       0       0
  5110 ;;      Temps:          1       0       0       0       0
  5111 ;;      Totals:         6       0       0       0       0
  5112 ;;Total ram usage:        6 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_fround
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121     0003                     ___lwmod:	
  5122                           ;psect for function ___lwmod
  5123                           
  5124     0003                     l2525:	
  5125                           ;incstack = 0
  5126                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5127                           
  5128     0003  0870               	movf	___lwmod@divisor,w
  5129     0004  0471               	iorwf	___lwmod@divisor+1,w
  5130     0005  1903               	btfsc	3,2
  5131     0006  2808               	goto	u3211
  5132     0007  2809               	goto	u3210
  5133     0008                     u3211:
  5134     0008  2838               	goto	l2543
  5135     0009                     u3210:
  5136     0009                     l2527:
  5137     0009  01F5               	clrf	___lwmod@counter
  5138     000A  0AF5               	incf	___lwmod@counter,f
  5139     000B  2817               	goto	l2533
  5140     000C                     l2529:
  5141     000C  3001               	movlw	1
  5142     000D                     u3225:
  5143     000D  1003               	clrc
  5144     000E  0DF0               	rlf	___lwmod@divisor,f
  5145     000F  0DF1               	rlf	___lwmod@divisor+1,f
  5146     0010  3EFF               	addlw	-1
  5147     0011  1D03               	skipz
  5148     0012  280D               	goto	u3225
  5149     0013                     l2531:
  5150     0013  3001               	movlw	1
  5151     0014  00F4               	movwf	??___lwmod
  5152     0015  0874               	movf	??___lwmod,w
  5153     0016  07F5               	addwf	___lwmod@counter,f
  5154     0017                     l2533:
  5155     0017  1FF1               	btfss	___lwmod@divisor+1,7
  5156     0018  281A               	goto	u3231
  5157     0019  281B               	goto	u3230
  5158     001A                     u3231:
  5159     001A  280C               	goto	l2529
  5160     001B                     u3230:
  5161     001B                     l2535:
  5162     001B  0871               	movf	___lwmod@divisor+1,w
  5163     001C  0273               	subwf	___lwmod@dividend+1,w
  5164     001D  1D03               	skipz
  5165     001E  2821               	goto	u3245
  5166     001F  0870               	movf	___lwmod@divisor,w
  5167     0020  0272               	subwf	___lwmod@dividend,w
  5168     0021                     u3245:
  5169     0021  1C03               	skipc
  5170     0022  2824               	goto	u3241
  5171     0023  2825               	goto	u3240
  5172     0024                     u3241:
  5173     0024  282B               	goto	l2539
  5174     0025                     u3240:
  5175     0025                     l2537:
  5176     0025  0870               	movf	___lwmod@divisor,w
  5177     0026  02F2               	subwf	___lwmod@dividend,f
  5178     0027  0871               	movf	___lwmod@divisor+1,w
  5179     0028  1C03               	skipc
  5180     0029  03F3               	decf	___lwmod@dividend+1,f
  5181     002A  02F3               	subwf	___lwmod@dividend+1,f
  5182     002B                     l2539:
  5183     002B  3001               	movlw	1
  5184     002C                     u3255:
  5185     002C  1003               	clrc
  5186     002D  0CF1               	rrf	___lwmod@divisor+1,f
  5187     002E  0CF0               	rrf	___lwmod@divisor,f
  5188     002F  3EFF               	addlw	-1
  5189     0030  1D03               	skipz
  5190     0031  282C               	goto	u3255
  5191     0032                     l2541:
  5192     0032  3001               	movlw	1
  5193     0033  02F5               	subwf	___lwmod@counter,f
  5194     0034  1D03               	btfss	3,2
  5195     0035  2837               	goto	u3261
  5196     0036  2838               	goto	u3260
  5197     0037                     u3261:
  5198     0037  281B               	goto	l2535
  5199     0038                     u3260:
  5200     0038                     l2543:
  5201     0038  0873               	movf	___lwmod@dividend+1,w
  5202     0039  00F1               	movwf	?___lwmod+1
  5203     003A  0872               	movf	___lwmod@dividend,w
  5204     003B  00F0               	movwf	?___lwmod
  5205     003C                     l740:
  5206     003C  0008               	return
  5207     003D                     __end_of___lwmod:
  5208                           
  5209                           	psect	text8
  5210     1F28                     __ptext8:	
  5211 ;; *************** function ___lwdiv *****************
  5212 ;; Defined at:
  5213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  divisor         2    6[COMMON] unsigned int 
  5216 ;;  dividend        2    8[COMMON] unsigned int 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  quotient        2   11[COMMON] unsigned int 
  5219 ;;  counter         1   13[COMMON] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    6[COMMON] unsigned int 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         4       0       0       0       0
  5230 ;;      Locals:         3       0       0       0       0
  5231 ;;      Temps:          1       0       0       0       0
  5232 ;;      Totals:         8       0       0       0       0
  5233 ;;Total ram usage:        8 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_fround
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242     1F28                     ___lwdiv:	
  5243                           ;psect for function ___lwdiv
  5244                           
  5245     1F28                     l2499:	
  5246                           ;incstack = 0
  5247                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5248                           
  5249     1F28  01FB               	clrf	___lwdiv@quotient
  5250     1F29  01FC               	clrf	___lwdiv@quotient+1
  5251     1F2A                     l2501:
  5252     1F2A  0876               	movf	___lwdiv@divisor,w
  5253     1F2B  0477               	iorwf	___lwdiv@divisor+1,w
  5254     1F2C  1903               	btfsc	3,2
  5255     1F2D  2F2F               	goto	u3141
  5256     1F2E  2F30               	goto	u3140
  5257     1F2F                     u3141:
  5258     1F2F  2F67               	goto	l2521
  5259     1F30                     u3140:
  5260     1F30                     l2503:
  5261     1F30  01FD               	clrf	___lwdiv@counter
  5262     1F31  0AFD               	incf	___lwdiv@counter,f
  5263     1F32  2F3E               	goto	l2509
  5264     1F33                     l2505:
  5265     1F33  3001               	movlw	1
  5266     1F34                     u3155:
  5267     1F34  1003               	clrc
  5268     1F35  0DF6               	rlf	___lwdiv@divisor,f
  5269     1F36  0DF7               	rlf	___lwdiv@divisor+1,f
  5270     1F37  3EFF               	addlw	-1
  5271     1F38  1D03               	skipz
  5272     1F39  2F34               	goto	u3155
  5273     1F3A                     l2507:
  5274     1F3A  3001               	movlw	1
  5275     1F3B  00FA               	movwf	??___lwdiv
  5276     1F3C  087A               	movf	??___lwdiv,w
  5277     1F3D  07FD               	addwf	___lwdiv@counter,f
  5278     1F3E                     l2509:
  5279     1F3E  1FF7               	btfss	___lwdiv@divisor+1,7
  5280     1F3F  2F41               	goto	u3161
  5281     1F40  2F42               	goto	u3160
  5282     1F41                     u3161:
  5283     1F41  2F33               	goto	l2505
  5284     1F42                     u3160:
  5285     1F42                     l2511:
  5286     1F42  3001               	movlw	1
  5287     1F43                     u3175:
  5288     1F43  1003               	clrc
  5289     1F44  0DFB               	rlf	___lwdiv@quotient,f
  5290     1F45  0DFC               	rlf	___lwdiv@quotient+1,f
  5291     1F46  3EFF               	addlw	-1
  5292     1F47  1D03               	skipz
  5293     1F48  2F43               	goto	u3175
  5294     1F49  0877               	movf	___lwdiv@divisor+1,w
  5295     1F4A  0279               	subwf	___lwdiv@dividend+1,w
  5296     1F4B  1D03               	skipz
  5297     1F4C  2F4F               	goto	u3185
  5298     1F4D  0876               	movf	___lwdiv@divisor,w
  5299     1F4E  0278               	subwf	___lwdiv@dividend,w
  5300     1F4F                     u3185:
  5301     1F4F  1C03               	skipc
  5302     1F50  2F52               	goto	u3181
  5303     1F51  2F53               	goto	u3180
  5304     1F52                     u3181:
  5305     1F52  2F5A               	goto	l2517
  5306     1F53                     u3180:
  5307     1F53                     l2513:
  5308     1F53  0876               	movf	___lwdiv@divisor,w
  5309     1F54  02F8               	subwf	___lwdiv@dividend,f
  5310     1F55  0877               	movf	___lwdiv@divisor+1,w
  5311     1F56  1C03               	skipc
  5312     1F57  03F9               	decf	___lwdiv@dividend+1,f
  5313     1F58  02F9               	subwf	___lwdiv@dividend+1,f
  5314     1F59                     l2515:
  5315     1F59  147B               	bsf	___lwdiv@quotient,0
  5316     1F5A                     l2517:
  5317     1F5A  3001               	movlw	1
  5318     1F5B                     u3195:
  5319     1F5B  1003               	clrc
  5320     1F5C  0CF7               	rrf	___lwdiv@divisor+1,f
  5321     1F5D  0CF6               	rrf	___lwdiv@divisor,f
  5322     1F5E  3EFF               	addlw	-1
  5323     1F5F  1D03               	skipz
  5324     1F60  2F5B               	goto	u3195
  5325     1F61                     l2519:
  5326     1F61  3001               	movlw	1
  5327     1F62  02FD               	subwf	___lwdiv@counter,f
  5328     1F63  1D03               	btfss	3,2
  5329     1F64  2F66               	goto	u3201
  5330     1F65  2F67               	goto	u3200
  5331     1F66                     u3201:
  5332     1F66  2F42               	goto	l2511
  5333     1F67                     u3200:
  5334     1F67                     l2521:
  5335     1F67  087C               	movf	___lwdiv@quotient+1,w
  5336     1F68  00F7               	movwf	?___lwdiv+1
  5337     1F69  087B               	movf	___lwdiv@quotient,w
  5338     1F6A  00F6               	movwf	?___lwdiv
  5339     1F6B                     l730:
  5340     1F6B  0008               	return
  5341     1F6C                     __end_of___lwdiv:
  5342                           
  5343                           	psect	text9
  5344     095C                     __ptext9:	
  5345 ;; *************** function ___flmul *****************
  5346 ;; Defined at:
  5347 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  b               4    4[BANK0 ] unsigned int 
  5350 ;;  a               4    8[BANK0 ] unsigned int 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  prod            4   24[BANK0 ] struct .
  5353 ;;  grs             4   18[BANK0 ] unsigned long 
  5354 ;;  temp            2   28[BANK0 ] struct .
  5355 ;;  bexp            1   23[BANK0 ] unsigned char 
  5356 ;;  aexp            1   22[BANK0 ] unsigned char 
  5357 ;;  sign            1   17[BANK0 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  4    4[BANK0 ] unsigned char 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5367 ;;      Params:         0       8       0       0       0
  5368 ;;      Locals:         0      13       0       0       0
  5369 ;;      Temps:          0       5       0       0       0
  5370 ;;      Totals:         0      26       0       0       0
  5371 ;;Total ram usage:       26 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 1
  5374 ;; This function calls:
  5375 ;;		__Umul8_16
  5376 ;; This function is called by:
  5377 ;;		_fround
  5378 ;;		_scale
  5379 ;;		_sprintf
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383     095C                     ___flmul:	
  5384                           ;psect for function ___flmul
  5385                           
  5386     095C                     l2741:	
  5387                           ;incstack = 0
  5388                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5389                           
  5390     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5391     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5392     095E  0827               	movf	___flmul@b+3,w
  5393     095F  3980               	andlw	128
  5394     0960  00B1               	movwf	___flmul@sign
  5395     0961                     l2743:
  5396     0961  0827               	movf	___flmul@b+3,w
  5397     0962  00AC               	movwf	??___flmul
  5398     0963  072C               	addwf	??___flmul,w
  5399     0964  00B7               	movwf	___flmul@bexp
  5400     0965                     l2745:
  5401     0965  1FA6               	btfss	___flmul@b+2,7
  5402     0966  2968               	goto	u3731
  5403     0967  2969               	goto	u3730
  5404     0968                     u3731:
  5405     0968  296A               	goto	l2749
  5406     0969                     u3730:
  5407     0969                     l2747:
  5408     0969  1437               	bsf	___flmul@bexp,0
  5409     096A                     l2749:
  5410     096A  0837               	movf	___flmul@bexp,w
  5411     096B  1903               	btfsc	3,2
  5412     096C  296E               	goto	u3741
  5413     096D  296F               	goto	u3740
  5414     096E                     u3741:
  5415     096E  297E               	goto	l2757
  5416     096F                     u3740:
  5417     096F                     l2751:
  5418     096F  0A37               	incf	___flmul@bexp,w
  5419     0970  1D03               	btfss	3,2
  5420     0971  2973               	goto	u3751
  5421     0972  2974               	goto	u3750
  5422     0973                     u3751:
  5423     0973  297C               	goto	l2755
  5424     0974                     u3750:
  5425     0974                     l2753:
  5426     0974  3000               	movlw	0
  5427     0975  00A7               	movwf	___flmul@b+3
  5428     0976  3000               	movlw	0
  5429     0977  00A6               	movwf	___flmul@b+2
  5430     0978  3000               	movlw	0
  5431     0979  00A5               	movwf	___flmul@b+1
  5432     097A  3000               	movlw	0
  5433     097B  00A4               	movwf	___flmul@b
  5434     097C                     l2755:
  5435     097C  17A6               	bsf	___flmul@b+2,7
  5436     097D  2986               	goto	l2759
  5437     097E                     l2757:
  5438     097E  3000               	movlw	0
  5439     097F  00A7               	movwf	___flmul@b+3
  5440     0980  3000               	movlw	0
  5441     0981  00A6               	movwf	___flmul@b+2
  5442     0982  3000               	movlw	0
  5443     0983  00A5               	movwf	___flmul@b+1
  5444     0984  3000               	movlw	0
  5445     0985  00A4               	movwf	___flmul@b
  5446     0986                     l2759:
  5447     0986  082B               	movf	___flmul@a+3,w
  5448     0987  3980               	andlw	128
  5449     0988  00AC               	movwf	??___flmul
  5450     0989  082C               	movf	??___flmul,w
  5451     098A  06B1               	xorwf	___flmul@sign,f
  5452     098B                     l2761:
  5453     098B  082B               	movf	___flmul@a+3,w
  5454     098C  00AC               	movwf	??___flmul
  5455     098D  072C               	addwf	??___flmul,w
  5456     098E  00B6               	movwf	___flmul@aexp
  5457     098F                     l2763:
  5458     098F  1FAA               	btfss	___flmul@a+2,7
  5459     0990  2992               	goto	u3761
  5460     0991  2993               	goto	u3760
  5461     0992                     u3761:
  5462     0992  2994               	goto	l2767
  5463     0993                     u3760:
  5464     0993                     l2765:
  5465     0993  1436               	bsf	___flmul@aexp,0
  5466     0994                     l2767:
  5467     0994  0836               	movf	___flmul@aexp,w
  5468     0995  1903               	btfsc	3,2
  5469     0996  2998               	goto	u3771
  5470     0997  2999               	goto	u3770
  5471     0998                     u3771:
  5472     0998  29A8               	goto	l2775
  5473     0999                     u3770:
  5474     0999                     l2769:
  5475     0999  0A36               	incf	___flmul@aexp,w
  5476     099A  1D03               	btfss	3,2
  5477     099B  299D               	goto	u3781
  5478     099C  299E               	goto	u3780
  5479     099D                     u3781:
  5480     099D  29A6               	goto	l2773
  5481     099E                     u3780:
  5482     099E                     l2771:
  5483     099E  3000               	movlw	0
  5484     099F  00AB               	movwf	___flmul@a+3
  5485     09A0  3000               	movlw	0
  5486     09A1  00AA               	movwf	___flmul@a+2
  5487     09A2  3000               	movlw	0
  5488     09A3  00A9               	movwf	___flmul@a+1
  5489     09A4  3000               	movlw	0
  5490     09A5  00A8               	movwf	___flmul@a
  5491     09A6                     l2773:
  5492     09A6  17AA               	bsf	___flmul@a+2,7
  5493     09A7  29B0               	goto	l2777
  5494     09A8                     l2775:
  5495     09A8  3000               	movlw	0
  5496     09A9  00AB               	movwf	___flmul@a+3
  5497     09AA  3000               	movlw	0
  5498     09AB  00AA               	movwf	___flmul@a+2
  5499     09AC  3000               	movlw	0
  5500     09AD  00A9               	movwf	___flmul@a+1
  5501     09AE  3000               	movlw	0
  5502     09AF  00A8               	movwf	___flmul@a
  5503     09B0                     l2777:
  5504     09B0  0836               	movf	___flmul@aexp,w
  5505     09B1  1903               	btfsc	3,2
  5506     09B2  29B4               	goto	u3791
  5507     09B3  29B5               	goto	u3790
  5508     09B4                     u3791:
  5509     09B4  29BA               	goto	l2781
  5510     09B5                     u3790:
  5511     09B5                     l2779:
  5512     09B5  0837               	movf	___flmul@bexp,w
  5513     09B6  1D03               	btfss	3,2
  5514     09B7  29B9               	goto	u3801
  5515     09B8  29BA               	goto	u3800
  5516     09B9                     u3801:
  5517     09B9  29C3               	goto	l2785
  5518     09BA                     u3800:
  5519     09BA                     l2781:
  5520     09BA  3000               	movlw	0
  5521     09BB  00A7               	movwf	?___flmul+3
  5522     09BC  3000               	movlw	0
  5523     09BD  00A6               	movwf	?___flmul+2
  5524     09BE  3000               	movlw	0
  5525     09BF  00A5               	movwf	?___flmul+1
  5526     09C0  3000               	movlw	0
  5527     09C1  00A4               	movwf	?___flmul
  5528     09C2  2CA0               	goto	l847
  5529     09C3                     l2785:
  5530     09C3  0824               	movf	___flmul@b,w
  5531     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5532     09C5  082A               	movf	___flmul@a+2,w
  5533     09C6  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5534     09CB  0871               	movf	?__Umul8_16+1,w
  5535     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5536     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5537     09CE  00BD               	movwf	___flmul@temp+1
  5538     09CF  0870               	movf	?__Umul8_16,w
  5539     09D0  00BC               	movwf	___flmul@temp
  5540     09D1                     l2787:
  5541     09D1  083C               	movf	___flmul@temp,w
  5542     09D2  00AC               	movwf	??___flmul
  5543     09D3  01AD               	clrf	??___flmul+1
  5544     09D4  01AE               	clrf	??___flmul+2
  5545     09D5  01AF               	clrf	??___flmul+3
  5546     09D6  082F               	movf	??___flmul+3,w
  5547     09D7  00B5               	movwf	___flmul@grs+3
  5548     09D8  082E               	movf	??___flmul+2,w
  5549     09D9  00B4               	movwf	___flmul@grs+2
  5550     09DA  082D               	movf	??___flmul+1,w
  5551     09DB  00B3               	movwf	___flmul@grs+1
  5552     09DC  082C               	movf	??___flmul,w
  5553     09DD  00B2               	movwf	___flmul@grs
  5554     09DE                     l2789:
  5555     09DE  083D               	movf	___flmul@temp+1,w
  5556     09DF  00AC               	movwf	??___flmul
  5557     09E0  01AD               	clrf	??___flmul+1
  5558     09E1  01AE               	clrf	??___flmul+2
  5559     09E2  01AF               	clrf	??___flmul+3
  5560     09E3  082F               	movf	??___flmul+3,w
  5561     09E4  00BB               	movwf	___flmul@prod+3
  5562     09E5  082E               	movf	??___flmul+2,w
  5563     09E6  00BA               	movwf	___flmul@prod+2
  5564     09E7  082D               	movf	??___flmul+1,w
  5565     09E8  00B9               	movwf	___flmul@prod+1
  5566     09E9  082C               	movf	??___flmul,w
  5567     09EA  00B8               	movwf	___flmul@prod
  5568     09EB  0825               	movf	___flmul@b+1,w
  5569     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5570     09ED  0829               	movf	___flmul@a+1,w
  5571     09EE  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5572     09F3  0871               	movf	?__Umul8_16+1,w
  5573     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5574     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5575     09F6  00BD               	movwf	___flmul@temp+1
  5576     09F7  0870               	movf	?__Umul8_16,w
  5577     09F8  00BC               	movwf	___flmul@temp
  5578     09F9                     l2791:
  5579     09F9  083C               	movf	___flmul@temp,w
  5580     09FA  00AC               	movwf	??___flmul
  5581     09FB  01AD               	clrf	??___flmul+1
  5582     09FC  01AE               	clrf	??___flmul+2
  5583     09FD  01AF               	clrf	??___flmul+3
  5584     09FE  082C               	movf	??___flmul,w
  5585     09FF  07B2               	addwf	___flmul@grs,f
  5586     0A00  082D               	movf	??___flmul+1,w
  5587     0A01  1103               	clrz
  5588     0A02  1803               	skipnc
  5589     0A03  3E01               	addlw	1
  5590     0A04  1903               	skipnz
  5591     0A05  2A07               	goto	u3811
  5592     0A06  07B3               	addwf	___flmul@grs+1,f
  5593     0A07                     u3811:
  5594     0A07  082E               	movf	??___flmul+2,w
  5595     0A08  1103               	clrz
  5596     0A09  1803               	skipnc
  5597     0A0A  3E01               	addlw	1
  5598     0A0B  1903               	skipnz
  5599     0A0C  2A0E               	goto	u3812
  5600     0A0D  07B4               	addwf	___flmul@grs+2,f
  5601     0A0E                     u3812:
  5602     0A0E  082F               	movf	??___flmul+3,w
  5603     0A0F  1103               	clrz
  5604     0A10  1803               	skipnc
  5605     0A11  3E01               	addlw	1
  5606     0A12  1903               	skipnz
  5607     0A13  2A15               	goto	u3813
  5608     0A14  07B5               	addwf	___flmul@grs+3,f
  5609     0A15                     u3813:
  5610     0A15                     l2793:
  5611     0A15  083D               	movf	___flmul@temp+1,w
  5612     0A16  00AC               	movwf	??___flmul
  5613     0A17  01AD               	clrf	??___flmul+1
  5614     0A18  01AE               	clrf	??___flmul+2
  5615     0A19  01AF               	clrf	??___flmul+3
  5616     0A1A  082C               	movf	??___flmul,w
  5617     0A1B  07B8               	addwf	___flmul@prod,f
  5618     0A1C  082D               	movf	??___flmul+1,w
  5619     0A1D  1103               	clrz
  5620     0A1E  1803               	skipnc
  5621     0A1F  3E01               	addlw	1
  5622     0A20  1903               	skipnz
  5623     0A21  2A23               	goto	u3821
  5624     0A22  07B9               	addwf	___flmul@prod+1,f
  5625     0A23                     u3821:
  5626     0A23  082E               	movf	??___flmul+2,w
  5627     0A24  1103               	clrz
  5628     0A25  1803               	skipnc
  5629     0A26  3E01               	addlw	1
  5630     0A27  1903               	skipnz
  5631     0A28  2A2A               	goto	u3822
  5632     0A29  07BA               	addwf	___flmul@prod+2,f
  5633     0A2A                     u3822:
  5634     0A2A  082F               	movf	??___flmul+3,w
  5635     0A2B  1103               	clrz
  5636     0A2C  1803               	skipnc
  5637     0A2D  3E01               	addlw	1
  5638     0A2E  1903               	skipnz
  5639     0A2F  2A31               	goto	u3823
  5640     0A30  07BB               	addwf	___flmul@prod+3,f
  5641     0A31                     u3823:
  5642     0A31  0826               	movf	___flmul@b+2,w
  5643     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5644     0A33  0828               	movf	___flmul@a,w
  5645     0A34  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5646     0A39  0871               	movf	?__Umul8_16+1,w
  5647     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5648     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5649     0A3C  00BD               	movwf	___flmul@temp+1
  5650     0A3D  0870               	movf	?__Umul8_16,w
  5651     0A3E  00BC               	movwf	___flmul@temp
  5652     0A3F                     l2795:
  5653     0A3F  083C               	movf	___flmul@temp,w
  5654     0A40  00AC               	movwf	??___flmul
  5655     0A41  01AD               	clrf	??___flmul+1
  5656     0A42  01AE               	clrf	??___flmul+2
  5657     0A43  01AF               	clrf	??___flmul+3
  5658     0A44  082C               	movf	??___flmul,w
  5659     0A45  07B2               	addwf	___flmul@grs,f
  5660     0A46  082D               	movf	??___flmul+1,w
  5661     0A47  1103               	clrz
  5662     0A48  1803               	skipnc
  5663     0A49  3E01               	addlw	1
  5664     0A4A  1903               	skipnz
  5665     0A4B  2A4D               	goto	u3831
  5666     0A4C  07B3               	addwf	___flmul@grs+1,f
  5667     0A4D                     u3831:
  5668     0A4D  082E               	movf	??___flmul+2,w
  5669     0A4E  1103               	clrz
  5670     0A4F  1803               	skipnc
  5671     0A50  3E01               	addlw	1
  5672     0A51  1903               	skipnz
  5673     0A52  2A54               	goto	u3832
  5674     0A53  07B4               	addwf	___flmul@grs+2,f
  5675     0A54                     u3832:
  5676     0A54  082F               	movf	??___flmul+3,w
  5677     0A55  1103               	clrz
  5678     0A56  1803               	skipnc
  5679     0A57  3E01               	addlw	1
  5680     0A58  1903               	skipnz
  5681     0A59  2A5B               	goto	u3833
  5682     0A5A  07B5               	addwf	___flmul@grs+3,f
  5683     0A5B                     u3833:
  5684     0A5B                     l2797:
  5685     0A5B  083D               	movf	___flmul@temp+1,w
  5686     0A5C  00AC               	movwf	??___flmul
  5687     0A5D  01AD               	clrf	??___flmul+1
  5688     0A5E  01AE               	clrf	??___flmul+2
  5689     0A5F  01AF               	clrf	??___flmul+3
  5690     0A60  082C               	movf	??___flmul,w
  5691     0A61  07B8               	addwf	___flmul@prod,f
  5692     0A62  082D               	movf	??___flmul+1,w
  5693     0A63  1103               	clrz
  5694     0A64  1803               	skipnc
  5695     0A65  3E01               	addlw	1
  5696     0A66  1903               	skipnz
  5697     0A67  2A69               	goto	u3841
  5698     0A68  07B9               	addwf	___flmul@prod+1,f
  5699     0A69                     u3841:
  5700     0A69  082E               	movf	??___flmul+2,w
  5701     0A6A  1103               	clrz
  5702     0A6B  1803               	skipnc
  5703     0A6C  3E01               	addlw	1
  5704     0A6D  1903               	skipnz
  5705     0A6E  2A70               	goto	u3842
  5706     0A6F  07BA               	addwf	___flmul@prod+2,f
  5707     0A70                     u3842:
  5708     0A70  082F               	movf	??___flmul+3,w
  5709     0A71  1103               	clrz
  5710     0A72  1803               	skipnc
  5711     0A73  3E01               	addlw	1
  5712     0A74  1903               	skipnz
  5713     0A75  2A77               	goto	u3843
  5714     0A76  07BB               	addwf	___flmul@prod+3,f
  5715     0A77                     u3843:
  5716     0A77                     l2799:
  5717     0A77  3008               	movlw	8
  5718     0A78  00AC               	movwf	??___flmul
  5719     0A79                     u3855:
  5720     0A79  1003               	clrc
  5721     0A7A  0DB2               	rlf	___flmul@grs,f
  5722     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5723     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5724     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5725     0A7E  0BAC               	decfsz	??___flmul,f
  5726     0A7F  2A79               	goto	u3855
  5727     0A80                     l2801:
  5728     0A80  0825               	movf	___flmul@b+1,w
  5729     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5730     0A82  0828               	movf	___flmul@a,w
  5731     0A83  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5732     0A88  0871               	movf	?__Umul8_16+1,w
  5733     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5734     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5735     0A8B  00BD               	movwf	___flmul@temp+1
  5736     0A8C  0870               	movf	?__Umul8_16,w
  5737     0A8D  00BC               	movwf	___flmul@temp
  5738     0A8E                     l2803:
  5739     0A8E  083C               	movf	___flmul@temp,w
  5740     0A8F  00AC               	movwf	??___flmul
  5741     0A90  083D               	movf	___flmul@temp+1,w
  5742     0A91  00AD               	movwf	??___flmul+1
  5743     0A92  01AE               	clrf	??___flmul+2
  5744     0A93  01AF               	clrf	??___flmul+3
  5745     0A94  082C               	movf	??___flmul,w
  5746     0A95  07B2               	addwf	___flmul@grs,f
  5747     0A96  082D               	movf	??___flmul+1,w
  5748     0A97  1103               	clrz
  5749     0A98  1803               	skipnc
  5750     0A99  3E01               	addlw	1
  5751     0A9A  1903               	skipnz
  5752     0A9B  2A9D               	goto	u3861
  5753     0A9C  07B3               	addwf	___flmul@grs+1,f
  5754     0A9D                     u3861:
  5755     0A9D  082E               	movf	??___flmul+2,w
  5756     0A9E  1103               	clrz
  5757     0A9F  1803               	skipnc
  5758     0AA0  3E01               	addlw	1
  5759     0AA1  1903               	skipnz
  5760     0AA2  2AA4               	goto	u3862
  5761     0AA3  07B4               	addwf	___flmul@grs+2,f
  5762     0AA4                     u3862:
  5763     0AA4  082F               	movf	??___flmul+3,w
  5764     0AA5  1103               	clrz
  5765     0AA6  1803               	skipnc
  5766     0AA7  3E01               	addlw	1
  5767     0AA8  1903               	skipnz
  5768     0AA9  2AAB               	goto	u3863
  5769     0AAA  07B5               	addwf	___flmul@grs+3,f
  5770     0AAB                     u3863:
  5771     0AAB                     l2805:
  5772     0AAB  0824               	movf	___flmul@b,w
  5773     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5774     0AAD  0829               	movf	___flmul@a+1,w
  5775     0AAE  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5776     0AB3  0871               	movf	?__Umul8_16+1,w
  5777     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5778     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5779     0AB6  00BD               	movwf	___flmul@temp+1
  5780     0AB7  0870               	movf	?__Umul8_16,w
  5781     0AB8  00BC               	movwf	___flmul@temp
  5782     0AB9                     l2807:
  5783     0AB9  083C               	movf	___flmul@temp,w
  5784     0ABA  00AC               	movwf	??___flmul
  5785     0ABB  083D               	movf	___flmul@temp+1,w
  5786     0ABC  00AD               	movwf	??___flmul+1
  5787     0ABD  01AE               	clrf	??___flmul+2
  5788     0ABE  01AF               	clrf	??___flmul+3
  5789     0ABF  082C               	movf	??___flmul,w
  5790     0AC0  07B2               	addwf	___flmul@grs,f
  5791     0AC1  082D               	movf	??___flmul+1,w
  5792     0AC2  1103               	clrz
  5793     0AC3  1803               	skipnc
  5794     0AC4  3E01               	addlw	1
  5795     0AC5  1903               	skipnz
  5796     0AC6  2AC8               	goto	u3871
  5797     0AC7  07B3               	addwf	___flmul@grs+1,f
  5798     0AC8                     u3871:
  5799     0AC8  082E               	movf	??___flmul+2,w
  5800     0AC9  1103               	clrz
  5801     0ACA  1803               	skipnc
  5802     0ACB  3E01               	addlw	1
  5803     0ACC  1903               	skipnz
  5804     0ACD  2ACF               	goto	u3872
  5805     0ACE  07B4               	addwf	___flmul@grs+2,f
  5806     0ACF                     u3872:
  5807     0ACF  082F               	movf	??___flmul+3,w
  5808     0AD0  1103               	clrz
  5809     0AD1  1803               	skipnc
  5810     0AD2  3E01               	addlw	1
  5811     0AD3  1903               	skipnz
  5812     0AD4  2AD6               	goto	u3873
  5813     0AD5  07B5               	addwf	___flmul@grs+3,f
  5814     0AD6                     u3873:
  5815     0AD6                     l2809:
  5816     0AD6  3008               	movlw	8
  5817     0AD7  00AC               	movwf	??___flmul
  5818     0AD8                     u3885:
  5819     0AD8  1003               	clrc
  5820     0AD9  0DB2               	rlf	___flmul@grs,f
  5821     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5822     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5823     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5824     0ADD  0BAC               	decfsz	??___flmul,f
  5825     0ADE  2AD8               	goto	u3885
  5826     0ADF  0824               	movf	___flmul@b,w
  5827     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5828     0AE1  0828               	movf	___flmul@a,w
  5829     0AE2  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5830     0AE7  0871               	movf	?__Umul8_16+1,w
  5831     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5832     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5833     0AEA  00BD               	movwf	___flmul@temp+1
  5834     0AEB  0870               	movf	?__Umul8_16,w
  5835     0AEC  00BC               	movwf	___flmul@temp
  5836     0AED                     l2811:
  5837     0AED  083C               	movf	___flmul@temp,w
  5838     0AEE  00AC               	movwf	??___flmul
  5839     0AEF  083D               	movf	___flmul@temp+1,w
  5840     0AF0  00AD               	movwf	??___flmul+1
  5841     0AF1  01AE               	clrf	??___flmul+2
  5842     0AF2  01AF               	clrf	??___flmul+3
  5843     0AF3  082C               	movf	??___flmul,w
  5844     0AF4  07B2               	addwf	___flmul@grs,f
  5845     0AF5  082D               	movf	??___flmul+1,w
  5846     0AF6  1103               	clrz
  5847     0AF7  1803               	skipnc
  5848     0AF8  3E01               	addlw	1
  5849     0AF9  1903               	skipnz
  5850     0AFA  2AFC               	goto	u3891
  5851     0AFB  07B3               	addwf	___flmul@grs+1,f
  5852     0AFC                     u3891:
  5853     0AFC  082E               	movf	??___flmul+2,w
  5854     0AFD  1103               	clrz
  5855     0AFE  1803               	skipnc
  5856     0AFF  3E01               	addlw	1
  5857     0B00  1903               	skipnz
  5858     0B01  2B03               	goto	u3892
  5859     0B02  07B4               	addwf	___flmul@grs+2,f
  5860     0B03                     u3892:
  5861     0B03  082F               	movf	??___flmul+3,w
  5862     0B04  1103               	clrz
  5863     0B05  1803               	skipnc
  5864     0B06  3E01               	addlw	1
  5865     0B07  1903               	skipnz
  5866     0B08  2B0A               	goto	u3893
  5867     0B09  07B5               	addwf	___flmul@grs+3,f
  5868     0B0A                     u3893:
  5869     0B0A                     l2813:
  5870     0B0A  0825               	movf	___flmul@b+1,w
  5871     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5872     0B0C  082A               	movf	___flmul@a+2,w
  5873     0B0D  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5874     0B12  0871               	movf	?__Umul8_16+1,w
  5875     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5876     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5877     0B15  00BD               	movwf	___flmul@temp+1
  5878     0B16  0870               	movf	?__Umul8_16,w
  5879     0B17  00BC               	movwf	___flmul@temp
  5880     0B18  083C               	movf	___flmul@temp,w
  5881     0B19  00AC               	movwf	??___flmul
  5882     0B1A  083D               	movf	___flmul@temp+1,w
  5883     0B1B  00AD               	movwf	??___flmul+1
  5884     0B1C  01AE               	clrf	??___flmul+2
  5885     0B1D  01AF               	clrf	??___flmul+3
  5886     0B1E  082C               	movf	??___flmul,w
  5887     0B1F  07B8               	addwf	___flmul@prod,f
  5888     0B20  082D               	movf	??___flmul+1,w
  5889     0B21  1103               	clrz
  5890     0B22  1803               	skipnc
  5891     0B23  3E01               	addlw	1
  5892     0B24  1903               	skipnz
  5893     0B25  2B27               	goto	u3901
  5894     0B26  07B9               	addwf	___flmul@prod+1,f
  5895     0B27                     u3901:
  5896     0B27  082E               	movf	??___flmul+2,w
  5897     0B28  1103               	clrz
  5898     0B29  1803               	skipnc
  5899     0B2A  3E01               	addlw	1
  5900     0B2B  1903               	skipnz
  5901     0B2C  2B2E               	goto	u3902
  5902     0B2D  07BA               	addwf	___flmul@prod+2,f
  5903     0B2E                     u3902:
  5904     0B2E  082F               	movf	??___flmul+3,w
  5905     0B2F  1103               	clrz
  5906     0B30  1803               	skipnc
  5907     0B31  3E01               	addlw	1
  5908     0B32  1903               	skipnz
  5909     0B33  2B35               	goto	u3903
  5910     0B34  07BB               	addwf	___flmul@prod+3,f
  5911     0B35                     u3903:
  5912     0B35                     l2815:
  5913     0B35  0826               	movf	___flmul@b+2,w
  5914     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5915     0B37  0829               	movf	___flmul@a+1,w
  5916     0B38  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5917     0B3D  0871               	movf	?__Umul8_16+1,w
  5918     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5919     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5920     0B40  00BD               	movwf	___flmul@temp+1
  5921     0B41  0870               	movf	?__Umul8_16,w
  5922     0B42  00BC               	movwf	___flmul@temp
  5923     0B43                     l2817:
  5924     0B43  083C               	movf	___flmul@temp,w
  5925     0B44  00AC               	movwf	??___flmul
  5926     0B45  083D               	movf	___flmul@temp+1,w
  5927     0B46  00AD               	movwf	??___flmul+1
  5928     0B47  01AE               	clrf	??___flmul+2
  5929     0B48  01AF               	clrf	??___flmul+3
  5930     0B49  082C               	movf	??___flmul,w
  5931     0B4A  07B8               	addwf	___flmul@prod,f
  5932     0B4B  082D               	movf	??___flmul+1,w
  5933     0B4C  1103               	clrz
  5934     0B4D  1803               	skipnc
  5935     0B4E  3E01               	addlw	1
  5936     0B4F  1903               	skipnz
  5937     0B50  2B52               	goto	u3911
  5938     0B51  07B9               	addwf	___flmul@prod+1,f
  5939     0B52                     u3911:
  5940     0B52  082E               	movf	??___flmul+2,w
  5941     0B53  1103               	clrz
  5942     0B54  1803               	skipnc
  5943     0B55  3E01               	addlw	1
  5944     0B56  1903               	skipnz
  5945     0B57  2B59               	goto	u3912
  5946     0B58  07BA               	addwf	___flmul@prod+2,f
  5947     0B59                     u3912:
  5948     0B59  082F               	movf	??___flmul+3,w
  5949     0B5A  1103               	clrz
  5950     0B5B  1803               	skipnc
  5951     0B5C  3E01               	addlw	1
  5952     0B5D  1903               	skipnz
  5953     0B5E  2B60               	goto	u3913
  5954     0B5F  07BB               	addwf	___flmul@prod+3,f
  5955     0B60                     u3913:
  5956     0B60  0826               	movf	___flmul@b+2,w
  5957     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5958     0B62  082A               	movf	___flmul@a+2,w
  5959     0B63  160A  158A  2666  120A  158A  	fcall	__Umul8_16
  5960     0B68  0871               	movf	?__Umul8_16+1,w
  5961     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5962     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5963     0B6B  00BD               	movwf	___flmul@temp+1
  5964     0B6C  0870               	movf	?__Umul8_16,w
  5965     0B6D  00BC               	movwf	___flmul@temp
  5966     0B6E                     l2819:
  5967     0B6E  083C               	movf	___flmul@temp,w
  5968     0B6F  00AC               	movwf	??___flmul
  5969     0B70  083D               	movf	___flmul@temp+1,w
  5970     0B71  00AD               	movwf	??___flmul+1
  5971     0B72  01AE               	clrf	??___flmul+2
  5972     0B73  01AF               	clrf	??___flmul+3
  5973     0B74  3008               	movlw	8
  5974     0B75                     u3925:
  5975     0B75  1003               	clrc
  5976     0B76  0DAC               	rlf	??___flmul,f
  5977     0B77  0DAD               	rlf	??___flmul+1,f
  5978     0B78  0DAE               	rlf	??___flmul+2,f
  5979     0B79  0DAF               	rlf	??___flmul+3,f
  5980     0B7A                     u3920:
  5981     0B7A  3EFF               	addlw	-1
  5982     0B7B  1D03               	skipz
  5983     0B7C  2B75               	goto	u3925
  5984     0B7D  082C               	movf	??___flmul,w
  5985     0B7E  07B8               	addwf	___flmul@prod,f
  5986     0B7F  082D               	movf	??___flmul+1,w
  5987     0B80  1103               	clrz
  5988     0B81  1803               	skipnc
  5989     0B82  3E01               	addlw	1
  5990     0B83  1903               	skipnz
  5991     0B84  2B86               	goto	u3931
  5992     0B85  07B9               	addwf	___flmul@prod+1,f
  5993     0B86                     u3931:
  5994     0B86  082E               	movf	??___flmul+2,w
  5995     0B87  1103               	clrz
  5996     0B88  1803               	skipnc
  5997     0B89  3E01               	addlw	1
  5998     0B8A  1903               	skipnz
  5999     0B8B  2B8D               	goto	u3932
  6000     0B8C  07BA               	addwf	___flmul@prod+2,f
  6001     0B8D                     u3932:
  6002     0B8D  082F               	movf	??___flmul+3,w
  6003     0B8E  1103               	clrz
  6004     0B8F  1803               	skipnc
  6005     0B90  3E01               	addlw	1
  6006     0B91  1903               	skipnz
  6007     0B92  2B94               	goto	u3933
  6008     0B93  07BB               	addwf	___flmul@prod+3,f
  6009     0B94                     u3933:
  6010     0B94                     l2821:
  6011     0B94  0832               	movf	___flmul@grs,w
  6012     0B95  00AC               	movwf	??___flmul
  6013     0B96  0833               	movf	___flmul@grs+1,w
  6014     0B97  00AD               	movwf	??___flmul+1
  6015     0B98  0834               	movf	___flmul@grs+2,w
  6016     0B99  00AE               	movwf	??___flmul+2
  6017     0B9A  0835               	movf	___flmul@grs+3,w
  6018     0B9B  00AF               	movwf	??___flmul+3
  6019     0B9C  3018               	movlw	24
  6020     0B9D                     u3945:
  6021     0B9D  1003               	clrc
  6022     0B9E  0CAF               	rrf	??___flmul+3,f
  6023     0B9F  0CAE               	rrf	??___flmul+2,f
  6024     0BA0  0CAD               	rrf	??___flmul+1,f
  6025     0BA1  0CAC               	rrf	??___flmul,f
  6026     0BA2                     u3940:
  6027     0BA2  3EFF               	addlw	-1
  6028     0BA3  1D03               	skipz
  6029     0BA4  2B9D               	goto	u3945
  6030     0BA5  082C               	movf	??___flmul,w
  6031     0BA6  07B8               	addwf	___flmul@prod,f
  6032     0BA7  082D               	movf	??___flmul+1,w
  6033     0BA8  1103               	clrz
  6034     0BA9  1803               	skipnc
  6035     0BAA  3E01               	addlw	1
  6036     0BAB  1903               	skipnz
  6037     0BAC  2BAE               	goto	u3951
  6038     0BAD  07B9               	addwf	___flmul@prod+1,f
  6039     0BAE                     u3951:
  6040     0BAE  082E               	movf	??___flmul+2,w
  6041     0BAF  1103               	clrz
  6042     0BB0  1803               	skipnc
  6043     0BB1  3E01               	addlw	1
  6044     0BB2  1903               	skipnz
  6045     0BB3  2BB5               	goto	u3952
  6046     0BB4  07BA               	addwf	___flmul@prod+2,f
  6047     0BB5                     u3952:
  6048     0BB5  082F               	movf	??___flmul+3,w
  6049     0BB6  1103               	clrz
  6050     0BB7  1803               	skipnc
  6051     0BB8  3E01               	addlw	1
  6052     0BB9  1903               	skipnz
  6053     0BBA  2BBC               	goto	u3953
  6054     0BBB  07BB               	addwf	___flmul@prod+3,f
  6055     0BBC                     u3953:
  6056     0BBC                     l2823:
  6057     0BBC  3008               	movlw	8
  6058     0BBD  00AC               	movwf	??___flmul
  6059     0BBE                     u3965:
  6060     0BBE  1003               	clrc
  6061     0BBF  0DB2               	rlf	___flmul@grs,f
  6062     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6063     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6064     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6065     0BC3  0BAC               	decfsz	??___flmul,f
  6066     0BC4  2BBE               	goto	u3965
  6067     0BC5                     l2825:
  6068     0BC5  0837               	movf	___flmul@bexp,w
  6069     0BC6  0736               	addwf	___flmul@aexp,w
  6070     0BC7  00AC               	movwf	??___flmul
  6071     0BC8  01AD               	clrf	??___flmul+1
  6072     0BC9  0DAD               	rlf	??___flmul+1,f
  6073     0BCA  082C               	movf	??___flmul,w
  6074     0BCB  3E82               	addlw	130
  6075     0BCC  00BC               	movwf	___flmul@temp
  6076     0BCD  082D               	movf	??___flmul+1,w
  6077     0BCE  1803               	skipnc
  6078     0BCF  3E01               	addlw	1
  6079     0BD0  3EFF               	addlw	255
  6080     0BD1  00BD               	movwf	___flmul@temp+1
  6081     0BD2  2BF0               	goto	l2837
  6082     0BD3                     l2827:
  6083     0BD3  3001               	movlw	1
  6084     0BD4  00AC               	movwf	??___flmul
  6085     0BD5                     u3975:
  6086     0BD5  1003               	clrc
  6087     0BD6  0DB8               	rlf	___flmul@prod,f
  6088     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6089     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6090     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6091     0BDA  0BAC               	decfsz	??___flmul,f
  6092     0BDB  2BD5               	goto	u3975
  6093     0BDC                     l2829:
  6094     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6095     0BDD  2BDF               	goto	u3981
  6096     0BDE  2BE0               	goto	u3980
  6097     0BDF                     u3981:
  6098     0BDF  2BE1               	goto	l2833
  6099     0BE0                     u3980:
  6100     0BE0                     l2831:
  6101     0BE0  1438               	bsf	___flmul@prod,0
  6102     0BE1                     l2833:
  6103     0BE1  3001               	movlw	1
  6104     0BE2  00AC               	movwf	??___flmul
  6105     0BE3                     u3995:
  6106     0BE3  1003               	clrc
  6107     0BE4  0DB2               	rlf	___flmul@grs,f
  6108     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6109     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6110     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6111     0BE8  0BAC               	decfsz	??___flmul,f
  6112     0BE9  2BE3               	goto	u3995
  6113     0BEA                     l2835:
  6114     0BEA  30FF               	movlw	255
  6115     0BEB  07BC               	addwf	___flmul@temp,f
  6116     0BEC  1803               	skipnc
  6117     0BED  0ABD               	incf	___flmul@temp+1,f
  6118     0BEE  30FF               	movlw	255
  6119     0BEF  07BD               	addwf	___flmul@temp+1,f
  6120     0BF0                     l2837:
  6121     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6122     0BF1  2BF3               	goto	u4001
  6123     0BF2  2BF4               	goto	u4000
  6124     0BF3                     u4001:
  6125     0BF3  2BD3               	goto	l2827
  6126     0BF4                     u4000:
  6127     0BF4                     l2839:
  6128     0BF4  01B6               	clrf	___flmul@aexp
  6129     0BF5                     l2841:
  6130     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6131     0BF6  2BF8               	goto	u4011
  6132     0BF7  2BF9               	goto	u4010
  6133     0BF8                     u4011:
  6134     0BF8  2C15               	goto	l2849
  6135     0BF9                     u4010:
  6136     0BF9                     l2843:
  6137     0BF9  30FF               	movlw	255
  6138     0BFA  0532               	andwf	___flmul@grs,w
  6139     0BFB  00AC               	movwf	??___flmul
  6140     0BFC  30FF               	movlw	255
  6141     0BFD  0533               	andwf	___flmul@grs+1,w
  6142     0BFE  00AD               	movwf	??___flmul+1
  6143     0BFF  30FF               	movlw	255
  6144     0C00  0534               	andwf	___flmul@grs+2,w
  6145     0C01  00AE               	movwf	??___flmul+2
  6146     0C02  307F               	movlw	127
  6147     0C03  0535               	andwf	___flmul@grs+3,w
  6148     0C04  00AF               	movwf	??___flmul+3
  6149     0C05  082F               	movf	??___flmul+3,w
  6150     0C06  042E               	iorwf	??___flmul+2,w
  6151     0C07  042D               	iorwf	??___flmul+1,w
  6152     0C08  042C               	iorwf	??___flmul,w
  6153     0C09  1903               	skipnz
  6154     0C0A  2C0C               	goto	u4021
  6155     0C0B  2C0D               	goto	u4020
  6156     0C0C                     u4021:
  6157     0C0C  2C10               	goto	l853
  6158     0C0D                     u4020:
  6159     0C0D                     l2845:
  6160     0C0D  01B6               	clrf	___flmul@aexp
  6161     0C0E  0AB6               	incf	___flmul@aexp,f
  6162     0C0F  2C15               	goto	l2849
  6163     0C10                     l853:
  6164     0C10  1C38               	btfss	___flmul@prod,0
  6165     0C11  2C13               	goto	u4031
  6166     0C12  2C14               	goto	u4030
  6167     0C13                     u4031:
  6168     0C13  2C15               	goto	l2849
  6169     0C14                     u4030:
  6170     0C14  2C0D               	goto	l2845
  6171     0C15                     l2849:
  6172     0C15  0836               	movf	___flmul@aexp,w
  6173     0C16  1903               	btfsc	3,2
  6174     0C17  2C19               	goto	u4041
  6175     0C18  2C1A               	goto	u4040
  6176     0C19                     u4041:
  6177     0C19  2C4B               	goto	l2859
  6178     0C1A                     u4040:
  6179     0C1A                     l2851:
  6180     0C1A  3001               	movlw	1
  6181     0C1B  07B8               	addwf	___flmul@prod,f
  6182     0C1C  3000               	movlw	0
  6183     0C1D  1803               	skipnc
  6184     0C1E  3001               	movlw	1
  6185     0C1F  07B9               	addwf	___flmul@prod+1,f
  6186     0C20  3000               	movlw	0
  6187     0C21  1803               	skipnc
  6188     0C22  3001               	movlw	1
  6189     0C23  07BA               	addwf	___flmul@prod+2,f
  6190     0C24  3000               	movlw	0
  6191     0C25  1803               	skipnc
  6192     0C26  3001               	movlw	1
  6193     0C27  07BB               	addwf	___flmul@prod+3,f
  6194     0C28                     l2853:
  6195     0C28  1C3B               	btfss	___flmul@prod+3,0
  6196     0C29  2C2B               	goto	u4051
  6197     0C2A  2C2C               	goto	u4050
  6198     0C2B                     u4051:
  6199     0C2B  2C4B               	goto	l2859
  6200     0C2C                     u4050:
  6201     0C2C                     l2855:
  6202     0C2C  0838               	movf	___flmul@prod,w
  6203     0C2D  00AC               	movwf	??___flmul
  6204     0C2E  0839               	movf	___flmul@prod+1,w
  6205     0C2F  00AD               	movwf	??___flmul+1
  6206     0C30  083A               	movf	___flmul@prod+2,w
  6207     0C31  00AE               	movwf	??___flmul+2
  6208     0C32  083B               	movf	___flmul@prod+3,w
  6209     0C33  00AF               	movwf	??___flmul+3
  6210     0C34  3001               	movlw	1
  6211     0C35  00B0               	movwf	??___flmul+4
  6212     0C36                     u4065:
  6213     0C36  0D2F               	rlf	??___flmul+3,w
  6214     0C37  0CAF               	rrf	??___flmul+3,f
  6215     0C38  0CAE               	rrf	??___flmul+2,f
  6216     0C39  0CAD               	rrf	??___flmul+1,f
  6217     0C3A  0CAC               	rrf	??___flmul,f
  6218     0C3B                     u4060:
  6219     0C3B  0BB0               	decfsz	??___flmul+4,f
  6220     0C3C  2C36               	goto	u4065
  6221     0C3D  082F               	movf	??___flmul+3,w
  6222     0C3E  00BB               	movwf	___flmul@prod+3
  6223     0C3F  082E               	movf	??___flmul+2,w
  6224     0C40  00BA               	movwf	___flmul@prod+2
  6225     0C41  082D               	movf	??___flmul+1,w
  6226     0C42  00B9               	movwf	___flmul@prod+1
  6227     0C43  082C               	movf	??___flmul,w
  6228     0C44  00B8               	movwf	___flmul@prod
  6229     0C45                     l2857:
  6230     0C45  3001               	movlw	1
  6231     0C46  07BC               	addwf	___flmul@temp,f
  6232     0C47  1803               	skipnc
  6233     0C48  0ABD               	incf	___flmul@temp+1,f
  6234     0C49  3000               	movlw	0
  6235     0C4A  07BD               	addwf	___flmul@temp+1,f
  6236     0C4B                     l2859:
  6237     0C4B  083D               	movf	___flmul@temp+1,w
  6238     0C4C  3A80               	xorlw	128
  6239     0C4D  00FF               	movwf	btemp+1
  6240     0C4E  3080               	movlw	128
  6241     0C4F  027F               	subwf	btemp+1,w
  6242     0C50  1D03               	skipz
  6243     0C51  2C54               	goto	u4075
  6244     0C52  30FF               	movlw	255
  6245     0C53  023C               	subwf	___flmul@temp,w
  6246     0C54                     u4075:
  6247     0C54  1C03               	skipc
  6248     0C55  2C57               	goto	u4071
  6249     0C56  2C58               	goto	u4070
  6250     0C57                     u4071:
  6251     0C57  2C63               	goto	l2863
  6252     0C58                     u4070:
  6253     0C58                     l2861:
  6254     0C58  307F               	movlw	127
  6255     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6256     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6257     0C5B  00BB               	movwf	___flmul@prod+3
  6258     0C5C  3080               	movlw	128
  6259     0C5D  00BA               	movwf	___flmul@prod+2
  6260     0C5E  3000               	movlw	0
  6261     0C5F  00B9               	movwf	___flmul@prod+1
  6262     0C60  3000               	movlw	0
  6263     0C61  00B8               	movwf	___flmul@prod
  6264     0C62  2C94               	goto	l859
  6265     0C63                     l2863:
  6266     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6267     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6268     0C65  083D               	movf	___flmul@temp+1,w
  6269     0C66  3A80               	xorlw	128
  6270     0C67  00FF               	movwf	btemp+1
  6271     0C68  3080               	movlw	128
  6272     0C69  027F               	subwf	btemp+1,w
  6273     0C6A  1D03               	skipz
  6274     0C6B  2C6E               	goto	u4085
  6275     0C6C  3001               	movlw	1
  6276     0C6D  023C               	subwf	___flmul@temp,w
  6277     0C6E                     u4085:
  6278     0C6E  1803               	skipnc
  6279     0C6F  2C71               	goto	u4081
  6280     0C70  2C72               	goto	u4080
  6281     0C71                     u4081:
  6282     0C71  2C7E               	goto	l2869
  6283     0C72                     u4080:
  6284     0C72                     l2865:
  6285     0C72  3000               	movlw	0
  6286     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6287     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6288     0C75  00BB               	movwf	___flmul@prod+3
  6289     0C76  3000               	movlw	0
  6290     0C77  00BA               	movwf	___flmul@prod+2
  6291     0C78  3000               	movlw	0
  6292     0C79  00B9               	movwf	___flmul@prod+1
  6293     0C7A  3000               	movlw	0
  6294     0C7B  00B8               	movwf	___flmul@prod
  6295     0C7C                     l2867:
  6296     0C7C  01B1               	clrf	___flmul@sign
  6297     0C7D  2C94               	goto	l859
  6298     0C7E                     l2869:
  6299     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6300     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6301     0C80  083C               	movf	___flmul@temp,w
  6302     0C81  00B7               	movwf	___flmul@bexp
  6303     0C82  30FF               	movlw	255
  6304     0C83  05B8               	andwf	___flmul@prod,f
  6305     0C84  30FF               	movlw	255
  6306     0C85  05B9               	andwf	___flmul@prod+1,f
  6307     0C86  307F               	movlw	127
  6308     0C87  05BA               	andwf	___flmul@prod+2,f
  6309     0C88  3000               	movlw	0
  6310     0C89  05BB               	andwf	___flmul@prod+3,f
  6311     0C8A                     l2871:
  6312     0C8A  1C37               	btfss	___flmul@bexp,0
  6313     0C8B  2C8D               	goto	u4091
  6314     0C8C  2C8E               	goto	u4090
  6315     0C8D                     u4091:
  6316     0C8D  2C8F               	goto	l2875
  6317     0C8E                     u4090:
  6318     0C8E                     l2873:
  6319     0C8E  17BA               	bsf	___flmul@prod+2,7
  6320     0C8F                     l2875:
  6321     0C8F  0837               	movf	___flmul@bexp,w
  6322     0C90  00AC               	movwf	??___flmul
  6323     0C91  1003               	clrc
  6324     0C92  0C2C               	rrf	??___flmul,w
  6325     0C93  00BB               	movwf	___flmul@prod+3
  6326     0C94                     l859:
  6327     0C94  0831               	movf	___flmul@sign,w
  6328     0C95  00AC               	movwf	??___flmul
  6329     0C96  082C               	movf	??___flmul,w
  6330     0C97  04BB               	iorwf	___flmul@prod+3,f
  6331     0C98                     l2877:
  6332     0C98  083B               	movf	___flmul@prod+3,w
  6333     0C99  00A7               	movwf	?___flmul+3
  6334     0C9A  083A               	movf	___flmul@prod+2,w
  6335     0C9B  00A6               	movwf	?___flmul+2
  6336     0C9C  0839               	movf	___flmul@prod+1,w
  6337     0C9D  00A5               	movwf	?___flmul+1
  6338     0C9E  0838               	movf	___flmul@prod,w
  6339     0C9F  00A4               	movwf	?___flmul
  6340     0CA0                     l847:
  6341     0CA0  0008               	return
  6342     0CA1                     __end_of___flmul:
  6343                           
  6344                           	psect	text10
  6345     1E66                     __ptext10:	
  6346 ;; *************** function __Umul8_16 *****************
  6347 ;; Defined at:
  6348 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  multiplier      1    wreg     unsigned char 
  6351 ;;  multiplicand    1    0[COMMON] unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  multiplier      1    8[COMMON] unsigned char 
  6354 ;;  word_mpld       2    6[COMMON] unsigned int 
  6355 ;;  product         2    4[COMMON] unsigned int 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  2    0[COMMON] unsigned int 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6365 ;;      Params:         2       0       0       0       0
  6366 ;;      Locals:         5       0       0       0       0
  6367 ;;      Temps:          2       0       0       0       0
  6368 ;;      Totals:         9       0       0       0       0
  6369 ;;Total ram usage:        9 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		___flmul
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378     1E66                     __Umul8_16:	
  6379                           ;psect for function __Umul8_16
  6380                           
  6381                           
  6382                           ;incstack = 0
  6383                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6384                           ;__Umul8_16@multiplier stored from wreg
  6385     1E66  00F8               	movwf	__Umul8_16@multiplier
  6386     1E67                     l2369:
  6387     1E67  01F4               	clrf	__Umul8_16@product
  6388     1E68  01F5               	clrf	__Umul8_16@product+1
  6389     1E69                     l2371:
  6390     1E69  0870               	movf	__Umul8_16@multiplicand,w
  6391     1E6A  00F2               	movwf	??__Umul8_16
  6392     1E6B  01F3               	clrf	??__Umul8_16+1
  6393     1E6C  0872               	movf	??__Umul8_16,w
  6394     1E6D  00F6               	movwf	__Umul8_16@word_mpld
  6395     1E6E  0873               	movf	??__Umul8_16+1,w
  6396     1E6F  00F7               	movwf	__Umul8_16@word_mpld+1
  6397     1E70                     l2373:
  6398     1E70  1C78               	btfss	__Umul8_16@multiplier,0
  6399     1E71  2E73               	goto	u2851
  6400     1E72  2E74               	goto	u2850
  6401     1E73                     u2851:
  6402     1E73  2E7A               	goto	l866
  6403     1E74                     u2850:
  6404     1E74                     l2375:
  6405     1E74  0876               	movf	__Umul8_16@word_mpld,w
  6406     1E75  07F4               	addwf	__Umul8_16@product,f
  6407     1E76  1803               	skipnc
  6408     1E77  0AF5               	incf	__Umul8_16@product+1,f
  6409     1E78  0877               	movf	__Umul8_16@word_mpld+1,w
  6410     1E79  07F5               	addwf	__Umul8_16@product+1,f
  6411     1E7A                     l866:
  6412     1E7A  3001               	movlw	1
  6413     1E7B                     u2865:
  6414     1E7B  1003               	clrc
  6415     1E7C  0DF6               	rlf	__Umul8_16@word_mpld,f
  6416     1E7D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6417     1E7E  3EFF               	addlw	-1
  6418     1E7F  1D03               	skipz
  6419     1E80  2E7B               	goto	u2865
  6420     1E81  1003               	clrc
  6421     1E82  0CF8               	rrf	__Umul8_16@multiplier,f
  6422     1E83                     l2377:
  6423     1E83  0878               	movf	__Umul8_16@multiplier,w
  6424     1E84  1D03               	btfss	3,2
  6425     1E85  2E87               	goto	u2871
  6426     1E86  2E88               	goto	u2870
  6427     1E87                     u2871:
  6428     1E87  2E70               	goto	l2373
  6429     1E88                     u2870:
  6430     1E88                     l2379:
  6431     1E88  0875               	movf	__Umul8_16@product+1,w
  6432     1E89  00F1               	movwf	?__Umul8_16+1
  6433     1E8A  0874               	movf	__Umul8_16@product,w
  6434     1E8B  00F0               	movwf	?__Umul8_16
  6435     1E8C                     l868:
  6436     1E8C  0008               	return
  6437     1E8D                     __end_of__Umul8_16:
  6438                           
  6439                           	psect	text11
  6440     08A5                     __ptext11:	
  6441 ;; *************** function __tdiv_to_l_ *****************
  6442 ;; Defined at:
  6443 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  f1              4    0[COMMON] float 
  6446 ;;  f2              4    4[COMMON] float 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  quot            4    0[BANK0 ] unsigned long 
  6449 ;;  exp1            1    5[BANK0 ] unsigned char 
  6450 ;;  cntr            1    4[BANK0 ] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  4    0[COMMON] unsigned long 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6460 ;;      Params:         8       0       0       0       0
  6461 ;;      Locals:         0       6       0       0       0
  6462 ;;      Temps:          3       0       0       0       0
  6463 ;;      Totals:        11       6       0       0       0
  6464 ;;Total ram usage:       17 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_sprintf
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473     08A5                     __tdiv_to_l_:	
  6474                           ;psect for function __tdiv_to_l_
  6475                           
  6476     08A5                     l3001:	
  6477                           ;incstack = 0
  6478                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6479                           
  6480     08A5  0870               	movf	__tdiv_to_l_@f1,w
  6481     08A6  00F8               	movwf	??__tdiv_to_l_
  6482     08A7  0871               	movf	__tdiv_to_l_@f1+1,w
  6483     08A8  00F9               	movwf	??__tdiv_to_l_+1
  6484     08A9  0872               	movf	__tdiv_to_l_@f1+2,w
  6485     08AA  00FA               	movwf	??__tdiv_to_l_+2
  6486     08AB  1003               	clrc
  6487     08AC  0D79               	rlf	??__tdiv_to_l_+1,w
  6488     08AD  0D7A               	rlf	??__tdiv_to_l_+2,w
  6489     08AE  1283               	bcf	3,5	;RP0=0, select bank0
  6490     08AF  1303               	bcf	3,6	;RP1=0, select bank0
  6491     08B0  00A5               	movwf	__tdiv_to_l_@exp1
  6492     08B1  0825               	movf	__tdiv_to_l_@exp1,w
  6493     08B2  1D03               	btfss	3,2
  6494     08B3  28B5               	goto	u4411
  6495     08B4  28B6               	goto	u4410
  6496     08B5                     u4411:
  6497     08B5  28BF               	goto	l3007
  6498     08B6                     u4410:
  6499     08B6                     l3003:
  6500     08B6  3000               	movlw	0
  6501     08B7  00F3               	movwf	?__tdiv_to_l_+3
  6502     08B8  3000               	movlw	0
  6503     08B9  00F2               	movwf	?__tdiv_to_l_+2
  6504     08BA  3000               	movlw	0
  6505     08BB  00F1               	movwf	?__tdiv_to_l_+1
  6506     08BC  3000               	movlw	0
  6507     08BD  00F0               	movwf	?__tdiv_to_l_
  6508     08BE  295B               	goto	l641
  6509     08BF                     l3007:
  6510     08BF  0874               	movf	__tdiv_to_l_@f2,w
  6511     08C0  00F8               	movwf	??__tdiv_to_l_
  6512     08C1  0875               	movf	__tdiv_to_l_@f2+1,w
  6513     08C2  00F9               	movwf	??__tdiv_to_l_+1
  6514     08C3  0876               	movf	__tdiv_to_l_@f2+2,w
  6515     08C4  00FA               	movwf	??__tdiv_to_l_+2
  6516     08C5  1003               	clrc
  6517     08C6  0D79               	rlf	??__tdiv_to_l_+1,w
  6518     08C7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6519     08C8  00A4               	movwf	__tdiv_to_l_@cntr
  6520     08C9  0824               	movf	__tdiv_to_l_@cntr,w
  6521     08CA  1D03               	btfss	3,2
  6522     08CB  28CD               	goto	u4421
  6523     08CC  28CE               	goto	u4420
  6524     08CD                     u4421:
  6525     08CD  28CF               	goto	l642
  6526     08CE                     u4420:
  6527     08CE  28B6               	goto	l3003
  6528     08CF                     l642:
  6529     08CF  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6530     08D0                     l3013:
  6531     08D0  30FF               	movlw	255
  6532     08D1  05F0               	andwf	__tdiv_to_l_@f1,f
  6533     08D2  30FF               	movlw	255
  6534     08D3  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6535     08D4  3000               	movlw	0
  6536     08D5  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6537     08D6                     l3015:
  6538     08D6  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6539     08D7  30FF               	movlw	255
  6540     08D8  05F4               	andwf	__tdiv_to_l_@f2,f
  6541     08D9  30FF               	movlw	255
  6542     08DA  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6543     08DB  3000               	movlw	0
  6544     08DC  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6545     08DD  3000               	movlw	0
  6546     08DE  00A3               	movwf	__tdiv_to_l_@quot+3
  6547     08DF  3000               	movlw	0
  6548     08E0  00A2               	movwf	__tdiv_to_l_@quot+2
  6549     08E1  3000               	movlw	0
  6550     08E2  00A1               	movwf	__tdiv_to_l_@quot+1
  6551     08E3  3000               	movlw	0
  6552     08E4  00A0               	movwf	__tdiv_to_l_@quot
  6553     08E5                     l3017:
  6554     08E5  307F               	movlw	127
  6555     08E6  02A5               	subwf	__tdiv_to_l_@exp1,f
  6556     08E7                     l3019:
  6557     08E7  3098               	movlw	152
  6558     08E8  0724               	addwf	__tdiv_to_l_@cntr,w
  6559     08E9  00F8               	movwf	??__tdiv_to_l_
  6560     08EA  0878               	movf	??__tdiv_to_l_,w
  6561     08EB  02A5               	subwf	__tdiv_to_l_@exp1,f
  6562     08EC  3018               	movlw	24
  6563     08ED  00A4               	movwf	__tdiv_to_l_@cntr
  6564     08EE                     l3021:
  6565     08EE  3001               	movlw	1
  6566     08EF  00F8               	movwf	??__tdiv_to_l_
  6567     08F0                     u4435:
  6568     08F0  1003               	clrc
  6569     08F1  0DA0               	rlf	__tdiv_to_l_@quot,f
  6570     08F2  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6571     08F3  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6572     08F4  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6573     08F5  0BF8               	decfsz	??__tdiv_to_l_,f
  6574     08F6  28F0               	goto	u4435
  6575     08F7                     l3023:
  6576     08F7  0876               	movf	__tdiv_to_l_@f2+2,w
  6577     08F8  0272               	subwf	__tdiv_to_l_@f1+2,w
  6578     08F9  1D03               	skipz
  6579     08FA  2901               	goto	u4445
  6580     08FB  0875               	movf	__tdiv_to_l_@f2+1,w
  6581     08FC  0271               	subwf	__tdiv_to_l_@f1+1,w
  6582     08FD  1D03               	skipz
  6583     08FE  2901               	goto	u4445
  6584     08FF  0874               	movf	__tdiv_to_l_@f2,w
  6585     0900  0270               	subwf	__tdiv_to_l_@f1,w
  6586     0901                     u4445:
  6587     0901  1C03               	skipc
  6588     0902  2904               	goto	u4441
  6589     0903  2905               	goto	u4440
  6590     0904                     u4441:
  6591     0904  2910               	goto	l3029
  6592     0905                     u4440:
  6593     0905                     l3025:
  6594     0905  0874               	movf	__tdiv_to_l_@f2,w
  6595     0906  02F0               	subwf	__tdiv_to_l_@f1,f
  6596     0907  0875               	movf	__tdiv_to_l_@f2+1,w
  6597     0908  1C03               	skipc
  6598     0909  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6599     090A  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6600     090B  0876               	movf	__tdiv_to_l_@f2+2,w
  6601     090C  1C03               	skipc
  6602     090D  0A76               	incf	__tdiv_to_l_@f2+2,w
  6603     090E  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6604     090F                     l3027:
  6605     090F  1420               	bsf	__tdiv_to_l_@quot,0
  6606     0910                     l3029:
  6607     0910  3001               	movlw	1
  6608     0911                     u4455:
  6609     0911  1003               	clrc
  6610     0912  0DF0               	rlf	__tdiv_to_l_@f1,f
  6611     0913  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6612     0914  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6613     0915  3EFF               	addlw	-1
  6614     0916  1D03               	skipz
  6615     0917  2911               	goto	u4455
  6616     0918                     l3031:
  6617     0918  3001               	movlw	1
  6618     0919  02A4               	subwf	__tdiv_to_l_@cntr,f
  6619     091A  1D03               	btfss	3,2
  6620     091B  291D               	goto	u4461
  6621     091C  291E               	goto	u4460
  6622     091D                     u4461:
  6623     091D  28EE               	goto	l3021
  6624     091E                     u4460:
  6625     091E                     l645:
  6626     091E  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6627     091F  2921               	goto	u4471
  6628     0920  2922               	goto	u4470
  6629     0921                     u4471:
  6630     0921  293C               	goto	l3041
  6631     0922                     u4470:
  6632     0922                     l3033:
  6633     0922  0825               	movf	__tdiv_to_l_@exp1,w
  6634     0923  3A80               	xorlw	128
  6635     0924  3E97               	addlw	151
  6636     0925  1803               	skipnc
  6637     0926  2928               	goto	u4481
  6638     0927  2929               	goto	u4480
  6639     0928                     u4481:
  6640     0928  292A               	goto	l3039
  6641     0929                     u4480:
  6642     0929  28B6               	goto	l3003
  6643     092A                     l3039:
  6644     092A  3001               	movlw	1
  6645     092B                     u4495:
  6646     092B  1003               	clrc
  6647     092C  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6648     092D  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6649     092E  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6650     092F  0CA0               	rrf	__tdiv_to_l_@quot,f
  6651     0930  3EFF               	addlw	-1
  6652     0931  1D03               	skipz
  6653     0932  292B               	goto	u4495
  6654     0933  3001               	movlw	1
  6655     0934  00F8               	movwf	??__tdiv_to_l_
  6656     0935  0878               	movf	??__tdiv_to_l_,w
  6657     0936  07A5               	addwf	__tdiv_to_l_@exp1,f
  6658     0937  1D03               	btfss	3,2
  6659     0938  293A               	goto	u4501
  6660     0939  293B               	goto	u4500
  6661     093A                     u4501:
  6662     093A  292A               	goto	l3039
  6663     093B                     u4500:
  6664     093B  2953               	goto	l3049
  6665     093C                     l3041:
  6666     093C  3018               	movlw	24
  6667     093D  0225               	subwf	__tdiv_to_l_@exp1,w
  6668     093E  1C03               	skipc
  6669     093F  2941               	goto	u4511
  6670     0940  2942               	goto	u4510
  6671     0941                     u4511:
  6672     0941  294E               	goto	l652
  6673     0942                     u4510:
  6674     0942  28B6               	goto	l3003
  6675     0943                     l3047:
  6676     0943  3001               	movlw	1
  6677     0944  00F8               	movwf	??__tdiv_to_l_
  6678     0945                     u4525:
  6679     0945  1003               	clrc
  6680     0946  0DA0               	rlf	__tdiv_to_l_@quot,f
  6681     0947  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6682     0948  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6683     0949  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6684     094A  0BF8               	decfsz	??__tdiv_to_l_,f
  6685     094B  2945               	goto	u4525
  6686     094C  3001               	movlw	1
  6687     094D  02A5               	subwf	__tdiv_to_l_@exp1,f
  6688     094E                     l652:
  6689     094E  0825               	movf	__tdiv_to_l_@exp1,w
  6690     094F  1D03               	btfss	3,2
  6691     0950  2952               	goto	u4531
  6692     0951  2953               	goto	u4530
  6693     0952                     u4531:
  6694     0952  2943               	goto	l3047
  6695     0953                     u4530:
  6696     0953                     l3049:
  6697     0953  0823               	movf	__tdiv_to_l_@quot+3,w
  6698     0954  00F3               	movwf	?__tdiv_to_l_+3
  6699     0955  0822               	movf	__tdiv_to_l_@quot+2,w
  6700     0956  00F2               	movwf	?__tdiv_to_l_+2
  6701     0957  0821               	movf	__tdiv_to_l_@quot+1,w
  6702     0958  00F1               	movwf	?__tdiv_to_l_+1
  6703     0959  0820               	movf	__tdiv_to_l_@quot,w
  6704     095A  00F0               	movwf	?__tdiv_to_l_
  6705     095B                     l641:
  6706     095B  0008               	return
  6707     095C                     __end_of__tdiv_to_l_:
  6708                           
  6709                           	psect	text12
  6710     003D                     __ptext12:	
  6711 ;; *************** function __div_to_l_ *****************
  6712 ;; Defined at:
  6713 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  f1              4    0[COMMON] unsigned long 
  6716 ;;  f2              4    4[COMMON] unsigned long 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  quot            4    0[BANK0 ] unsigned long 
  6719 ;;  exp1            1    5[BANK0 ] unsigned char 
  6720 ;;  cntr            1    4[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  4    0[COMMON] unsigned long 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6730 ;;      Params:         8       0       0       0       0
  6731 ;;      Locals:         0       6       0       0       0
  6732 ;;      Temps:          1       0       0       0       0
  6733 ;;      Totals:         9       6       0       0       0
  6734 ;;Total ram usage:       15 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_sprintf
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743     003D                     __div_to_l_:	
  6744                           ;psect for function __div_to_l_
  6745                           
  6746     003D                     l3053:	
  6747                           ;incstack = 0
  6748                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6749                           
  6750     003D  1003               	clrc
  6751     003E  0D72               	rlf	__div_to_l_@f1+2,w
  6752     003F  0D73               	rlf	__div_to_l_@f1+3,w
  6753     0040  1283               	bcf	3,5	;RP0=0, select bank0
  6754     0041  1303               	bcf	3,6	;RP1=0, select bank0
  6755     0042  00A5               	movwf	__div_to_l_@exp1
  6756     0043  0825               	movf	__div_to_l_@exp1,w
  6757     0044  1D03               	btfss	3,2
  6758     0045  2847               	goto	u4541
  6759     0046  2848               	goto	u4540
  6760     0047                     u4541:
  6761     0047  2851               	goto	l3059
  6762     0048                     u4540:
  6763     0048                     l3055:
  6764     0048  3000               	movlw	0
  6765     0049  00F3               	movwf	?__div_to_l_+3
  6766     004A  3000               	movlw	0
  6767     004B  00F2               	movwf	?__div_to_l_+2
  6768     004C  3000               	movlw	0
  6769     004D  00F1               	movwf	?__div_to_l_+1
  6770     004E  3000               	movlw	0
  6771     004F  00F0               	movwf	?__div_to_l_
  6772     0050  28F4               	goto	l594
  6773     0051                     l3059:
  6774     0051  1003               	clrc
  6775     0052  0D76               	rlf	__div_to_l_@f2+2,w
  6776     0053  0D77               	rlf	__div_to_l_@f2+3,w
  6777     0054  00A4               	movwf	__div_to_l_@cntr
  6778     0055  0824               	movf	__div_to_l_@cntr,w
  6779     0056  1D03               	btfss	3,2
  6780     0057  2859               	goto	u4551
  6781     0058  285A               	goto	u4550
  6782     0059                     u4551:
  6783     0059  285B               	goto	l595
  6784     005A                     u4550:
  6785     005A  2848               	goto	l3055
  6786     005B                     l595:
  6787     005B  17F2               	bsf	__div_to_l_@f1+2,7
  6788     005C                     l3065:
  6789     005C  30FF               	movlw	255
  6790     005D  05F0               	andwf	__div_to_l_@f1,f
  6791     005E  30FF               	movlw	255
  6792     005F  05F1               	andwf	__div_to_l_@f1+1,f
  6793     0060  30FF               	movlw	255
  6794     0061  05F2               	andwf	__div_to_l_@f1+2,f
  6795     0062  3000               	movlw	0
  6796     0063  05F3               	andwf	__div_to_l_@f1+3,f
  6797     0064                     l3067:
  6798     0064  17F6               	bsf	__div_to_l_@f2+2,7
  6799     0065  30FF               	movlw	255
  6800     0066  05F4               	andwf	__div_to_l_@f2,f
  6801     0067  30FF               	movlw	255
  6802     0068  05F5               	andwf	__div_to_l_@f2+1,f
  6803     0069  30FF               	movlw	255
  6804     006A  05F6               	andwf	__div_to_l_@f2+2,f
  6805     006B  3000               	movlw	0
  6806     006C  05F7               	andwf	__div_to_l_@f2+3,f
  6807     006D  3000               	movlw	0
  6808     006E  00A3               	movwf	__div_to_l_@quot+3
  6809     006F  3000               	movlw	0
  6810     0070  00A2               	movwf	__div_to_l_@quot+2
  6811     0071  3000               	movlw	0
  6812     0072  00A1               	movwf	__div_to_l_@quot+1
  6813     0073  3000               	movlw	0
  6814     0074  00A0               	movwf	__div_to_l_@quot
  6815     0075                     l3069:
  6816     0075  307F               	movlw	127
  6817     0076  02A5               	subwf	__div_to_l_@exp1,f
  6818     0077                     l3071:
  6819     0077  30A0               	movlw	160
  6820     0078  0724               	addwf	__div_to_l_@cntr,w
  6821     0079  00F8               	movwf	??__div_to_l_
  6822     007A  0878               	movf	??__div_to_l_,w
  6823     007B  02A5               	subwf	__div_to_l_@exp1,f
  6824     007C  3020               	movlw	32
  6825     007D  00A4               	movwf	__div_to_l_@cntr
  6826     007E                     l3073:
  6827     007E  3001               	movlw	1
  6828     007F  00F8               	movwf	??__div_to_l_
  6829     0080                     u4565:
  6830     0080  1003               	clrc
  6831     0081  0DA0               	rlf	__div_to_l_@quot,f
  6832     0082  0DA1               	rlf	__div_to_l_@quot+1,f
  6833     0083  0DA2               	rlf	__div_to_l_@quot+2,f
  6834     0084  0DA3               	rlf	__div_to_l_@quot+3,f
  6835     0085  0BF8               	decfsz	??__div_to_l_,f
  6836     0086  2880               	goto	u4565
  6837     0087                     l3075:
  6838     0087  0877               	movf	__div_to_l_@f2+3,w
  6839     0088  0273               	subwf	__div_to_l_@f1+3,w
  6840     0089  1D03               	skipz
  6841     008A  2895               	goto	u4575
  6842     008B  0876               	movf	__div_to_l_@f2+2,w
  6843     008C  0272               	subwf	__div_to_l_@f1+2,w
  6844     008D  1D03               	skipz
  6845     008E  2895               	goto	u4575
  6846     008F  0875               	movf	__div_to_l_@f2+1,w
  6847     0090  0271               	subwf	__div_to_l_@f1+1,w
  6848     0091  1D03               	skipz
  6849     0092  2895               	goto	u4575
  6850     0093  0874               	movf	__div_to_l_@f2,w
  6851     0094  0270               	subwf	__div_to_l_@f1,w
  6852     0095                     u4575:
  6853     0095  1C03               	skipc
  6854     0096  2898               	goto	u4571
  6855     0097  2899               	goto	u4570
  6856     0098                     u4571:
  6857     0098  28A8               	goto	l3081
  6858     0099                     u4570:
  6859     0099                     l3077:
  6860     0099  0874               	movf	__div_to_l_@f2,w
  6861     009A  02F0               	subwf	__div_to_l_@f1,f
  6862     009B  0875               	movf	__div_to_l_@f2+1,w
  6863     009C  1C03               	skipc
  6864     009D  0F75               	incfsz	__div_to_l_@f2+1,w
  6865     009E  02F1               	subwf	__div_to_l_@f1+1,f
  6866     009F  0876               	movf	__div_to_l_@f2+2,w
  6867     00A0  1C03               	skipc
  6868     00A1  0F76               	incfsz	__div_to_l_@f2+2,w
  6869     00A2  02F2               	subwf	__div_to_l_@f1+2,f
  6870     00A3  0877               	movf	__div_to_l_@f2+3,w
  6871     00A4  1C03               	skipc
  6872     00A5  0F77               	incfsz	__div_to_l_@f2+3,w
  6873     00A6  02F3               	subwf	__div_to_l_@f1+3,f
  6874     00A7                     l3079:
  6875     00A7  1420               	bsf	__div_to_l_@quot,0
  6876     00A8                     l3081:
  6877     00A8  3001               	movlw	1
  6878     00A9  00F8               	movwf	??__div_to_l_
  6879     00AA                     u4585:
  6880     00AA  1003               	clrc
  6881     00AB  0DF0               	rlf	__div_to_l_@f1,f
  6882     00AC  0DF1               	rlf	__div_to_l_@f1+1,f
  6883     00AD  0DF2               	rlf	__div_to_l_@f1+2,f
  6884     00AE  0DF3               	rlf	__div_to_l_@f1+3,f
  6885     00AF  0BF8               	decfsz	??__div_to_l_,f
  6886     00B0  28AA               	goto	u4585
  6887     00B1                     l3083:
  6888     00B1  3001               	movlw	1
  6889     00B2  02A4               	subwf	__div_to_l_@cntr,f
  6890     00B3  1D03               	btfss	3,2
  6891     00B4  28B6               	goto	u4591
  6892     00B5  28B7               	goto	u4590
  6893     00B6                     u4591:
  6894     00B6  287E               	goto	l3073
  6895     00B7                     u4590:
  6896     00B7                     l598:
  6897     00B7  1FA5               	btfss	__div_to_l_@exp1,7
  6898     00B8  28BA               	goto	u4601
  6899     00B9  28BB               	goto	u4600
  6900     00BA                     u4601:
  6901     00BA  28D5               	goto	l3093
  6902     00BB                     u4600:
  6903     00BB                     l3085:
  6904     00BB  0825               	movf	__div_to_l_@exp1,w
  6905     00BC  3A80               	xorlw	128
  6906     00BD  3E9F               	addlw	159
  6907     00BE  1803               	skipnc
  6908     00BF  28C1               	goto	u4611
  6909     00C0  28C2               	goto	u4610
  6910     00C1                     u4611:
  6911     00C1  28C3               	goto	l3091
  6912     00C2                     u4610:
  6913     00C2  2848               	goto	l3055
  6914     00C3                     l3091:
  6915     00C3  3001               	movlw	1
  6916     00C4                     u4625:
  6917     00C4  1003               	clrc
  6918     00C5  0CA3               	rrf	__div_to_l_@quot+3,f
  6919     00C6  0CA2               	rrf	__div_to_l_@quot+2,f
  6920     00C7  0CA1               	rrf	__div_to_l_@quot+1,f
  6921     00C8  0CA0               	rrf	__div_to_l_@quot,f
  6922     00C9  3EFF               	addlw	-1
  6923     00CA  1D03               	skipz
  6924     00CB  28C4               	goto	u4625
  6925     00CC  3001               	movlw	1
  6926     00CD  00F8               	movwf	??__div_to_l_
  6927     00CE  0878               	movf	??__div_to_l_,w
  6928     00CF  07A5               	addwf	__div_to_l_@exp1,f
  6929     00D0  1D03               	btfss	3,2
  6930     00D1  28D3               	goto	u4631
  6931     00D2  28D4               	goto	u4630
  6932     00D3                     u4631:
  6933     00D3  28C3               	goto	l3091
  6934     00D4                     u4630:
  6935     00D4  28EC               	goto	l3101
  6936     00D5                     l3093:
  6937     00D5  3020               	movlw	32
  6938     00D6  0225               	subwf	__div_to_l_@exp1,w
  6939     00D7  1C03               	skipc
  6940     00D8  28DA               	goto	u4641
  6941     00D9  28DB               	goto	u4640
  6942     00DA                     u4641:
  6943     00DA  28E7               	goto	l605
  6944     00DB                     u4640:
  6945     00DB  2848               	goto	l3055
  6946     00DC                     l3099:
  6947     00DC  3001               	movlw	1
  6948     00DD  00F8               	movwf	??__div_to_l_
  6949     00DE                     u4655:
  6950     00DE  1003               	clrc
  6951     00DF  0DA0               	rlf	__div_to_l_@quot,f
  6952     00E0  0DA1               	rlf	__div_to_l_@quot+1,f
  6953     00E1  0DA2               	rlf	__div_to_l_@quot+2,f
  6954     00E2  0DA3               	rlf	__div_to_l_@quot+3,f
  6955     00E3  0BF8               	decfsz	??__div_to_l_,f
  6956     00E4  28DE               	goto	u4655
  6957     00E5  3001               	movlw	1
  6958     00E6  02A5               	subwf	__div_to_l_@exp1,f
  6959     00E7                     l605:
  6960     00E7  0825               	movf	__div_to_l_@exp1,w
  6961     00E8  1D03               	btfss	3,2
  6962     00E9  28EB               	goto	u4661
  6963     00EA  28EC               	goto	u4660
  6964     00EB                     u4661:
  6965     00EB  28DC               	goto	l3099
  6966     00EC                     u4660:
  6967     00EC                     l3101:
  6968     00EC  0823               	movf	__div_to_l_@quot+3,w
  6969     00ED  00F3               	movwf	?__div_to_l_+3
  6970     00EE  0822               	movf	__div_to_l_@quot+2,w
  6971     00EF  00F2               	movwf	?__div_to_l_+2
  6972     00F0  0821               	movf	__div_to_l_@quot+1,w
  6973     00F1  00F1               	movwf	?__div_to_l_+1
  6974     00F2  0820               	movf	__div_to_l_@quot,w
  6975     00F3  00F0               	movwf	?__div_to_l_
  6976     00F4                     l594:
  6977     00F4  0008               	return
  6978     00F5                     __end_of__div_to_l_:
  6979                           
  6980                           	psect	text13
  6981     00F5                     __ptext13:	
  6982 ;; *************** function ___xxtofl *****************
  6983 ;; Defined at:
  6984 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  sign            1    wreg     unsigned char 
  6987 ;;  val             4    6[COMMON] long 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  sign            1    0[BANK0 ] unsigned char 
  6990 ;;  arg             4    2[BANK0 ] unsigned long 
  6991 ;;  exp             1    1[BANK0 ] unsigned char 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  4    6[COMMON] unsigned char 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7001 ;;      Params:         4       0       0       0       0
  7002 ;;      Locals:         0       6       0       0       0
  7003 ;;      Temps:          4       0       0       0       0
  7004 ;;      Totals:         8       6       0       0       0
  7005 ;;Total ram usage:       14 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_main
  7011 ;;		_sprintf
  7012 ;;		_medir_distancia
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016     00F5                     ___xxtofl:	
  7017                           ;psect for function ___xxtofl
  7018                           
  7019                           
  7020                           ;incstack = 0
  7021                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7022                           ;___xxtofl@sign stored from wreg
  7023     00F5  1283               	bcf	3,5	;RP0=0, select bank0
  7024     00F6  1303               	bcf	3,6	;RP1=0, select bank0
  7025     00F7  00A0               	movwf	___xxtofl@sign
  7026     00F8                     l3221:
  7027     00F8  0820               	movf	___xxtofl@sign,w
  7028     00F9  1903               	btfsc	3,2
  7029     00FA  28FC               	goto	u4981
  7030     00FB  28FD               	goto	u4980
  7031     00FC                     u4981:
  7032     00FC  2911               	goto	l3227
  7033     00FD                     u4980:
  7034     00FD                     l3223:
  7035     00FD  1FF9               	btfss	___xxtofl@val+3,7
  7036     00FE  2900               	goto	u4991
  7037     00FF  2901               	goto	u4990
  7038     0100                     u4991:
  7039     0100  2911               	goto	l3227
  7040     0101                     u4990:
  7041     0101                     l3225:
  7042     0101  0976               	comf	___xxtofl@val,w
  7043     0102  00A2               	movwf	___xxtofl@arg
  7044     0103  0977               	comf	___xxtofl@val+1,w
  7045     0104  00A3               	movwf	___xxtofl@arg+1
  7046     0105  0978               	comf	___xxtofl@val+2,w
  7047     0106  00A4               	movwf	___xxtofl@arg+2
  7048     0107  0979               	comf	___xxtofl@val+3,w
  7049     0108  00A5               	movwf	___xxtofl@arg+3
  7050     0109  0AA2               	incf	___xxtofl@arg,f
  7051     010A  1903               	skipnz
  7052     010B  0AA3               	incf	___xxtofl@arg+1,f
  7053     010C  1903               	skipnz
  7054     010D  0AA4               	incf	___xxtofl@arg+2,f
  7055     010E  1903               	skipnz
  7056     010F  0AA5               	incf	___xxtofl@arg+3,f
  7057     0110  2919               	goto	l891
  7058     0111                     l3227:
  7059     0111  0879               	movf	___xxtofl@val+3,w
  7060     0112  00A5               	movwf	___xxtofl@arg+3
  7061     0113  0878               	movf	___xxtofl@val+2,w
  7062     0114  00A4               	movwf	___xxtofl@arg+2
  7063     0115  0877               	movf	___xxtofl@val+1,w
  7064     0116  00A3               	movwf	___xxtofl@arg+1
  7065     0117  0876               	movf	___xxtofl@val,w
  7066     0118  00A2               	movwf	___xxtofl@arg
  7067     0119                     l891:
  7068     0119  0879               	movf	___xxtofl@val+3,w
  7069     011A  0478               	iorwf	___xxtofl@val+2,w
  7070     011B  0477               	iorwf	___xxtofl@val+1,w
  7071     011C  0476               	iorwf	___xxtofl@val,w
  7072     011D  1D03               	skipz
  7073     011E  2920               	goto	u5001
  7074     011F  2921               	goto	u5000
  7075     0120                     u5001:
  7076     0120  292A               	goto	l3233
  7077     0121                     u5000:
  7078     0121                     l3229:
  7079     0121  3000               	movlw	0
  7080     0122  00F9               	movwf	?___xxtofl+3
  7081     0123  3000               	movlw	0
  7082     0124  00F8               	movwf	?___xxtofl+2
  7083     0125  3000               	movlw	0
  7084     0126  00F7               	movwf	?___xxtofl+1
  7085     0127  3000               	movlw	0
  7086     0128  00F6               	movwf	?___xxtofl
  7087     0129  29AE               	goto	l893
  7088     012A                     l3233:
  7089     012A  3096               	movlw	150
  7090     012B  00A1               	movwf	___xxtofl@exp
  7091     012C  293A               	goto	l3237
  7092     012D                     l3235:
  7093     012D  3001               	movlw	1
  7094     012E  00FA               	movwf	??___xxtofl
  7095     012F  087A               	movf	??___xxtofl,w
  7096     0130  07A1               	addwf	___xxtofl@exp,f
  7097     0131  3001               	movlw	1
  7098     0132                     u5015:
  7099     0132  1003               	clrc
  7100     0133  0CA5               	rrf	___xxtofl@arg+3,f
  7101     0134  0CA4               	rrf	___xxtofl@arg+2,f
  7102     0135  0CA3               	rrf	___xxtofl@arg+1,f
  7103     0136  0CA2               	rrf	___xxtofl@arg,f
  7104     0137  3EFF               	addlw	-1
  7105     0138  1D03               	skipz
  7106     0139  2932               	goto	u5015
  7107     013A                     l3237:
  7108     013A  30FE               	movlw	254
  7109     013B  0525               	andwf	___xxtofl@arg+3,w
  7110     013C  1D03               	btfss	3,2
  7111     013D  293F               	goto	u5021
  7112     013E  2940               	goto	u5020
  7113     013F                     u5021:
  7114     013F  292D               	goto	l3235
  7115     0140                     u5020:
  7116     0140  295C               	goto	l897
  7117     0141                     l3239:
  7118     0141  3001               	movlw	1
  7119     0142  00FA               	movwf	??___xxtofl
  7120     0143  087A               	movf	??___xxtofl,w
  7121     0144  07A1               	addwf	___xxtofl@exp,f
  7122     0145                     l3241:
  7123     0145  3001               	movlw	1
  7124     0146  07A2               	addwf	___xxtofl@arg,f
  7125     0147  3000               	movlw	0
  7126     0148  1803               	skipnc
  7127     0149  3001               	movlw	1
  7128     014A  07A3               	addwf	___xxtofl@arg+1,f
  7129     014B  3000               	movlw	0
  7130     014C  1803               	skipnc
  7131     014D  3001               	movlw	1
  7132     014E  07A4               	addwf	___xxtofl@arg+2,f
  7133     014F  3000               	movlw	0
  7134     0150  1803               	skipnc
  7135     0151  3001               	movlw	1
  7136     0152  07A5               	addwf	___xxtofl@arg+3,f
  7137     0153                     l3243:
  7138     0153  3001               	movlw	1
  7139     0154                     u5035:
  7140     0154  1003               	clrc
  7141     0155  0CA5               	rrf	___xxtofl@arg+3,f
  7142     0156  0CA4               	rrf	___xxtofl@arg+2,f
  7143     0157  0CA3               	rrf	___xxtofl@arg+1,f
  7144     0158  0CA2               	rrf	___xxtofl@arg,f
  7145     0159  3EFF               	addlw	-1
  7146     015A  1D03               	skipz
  7147     015B  2954               	goto	u5035
  7148     015C                     l897:
  7149     015C  30FF               	movlw	255
  7150     015D  0525               	andwf	___xxtofl@arg+3,w
  7151     015E  1D03               	btfss	3,2
  7152     015F  2961               	goto	u5041
  7153     0160  2962               	goto	u5040
  7154     0161                     u5041:
  7155     0161  2941               	goto	l3239
  7156     0162                     u5040:
  7157     0162  296E               	goto	l3247
  7158     0163                     l3245:
  7159     0163  3001               	movlw	1
  7160     0164  02A1               	subwf	___xxtofl@exp,f
  7161     0165  3001               	movlw	1
  7162     0166  00FA               	movwf	??___xxtofl
  7163     0167                     u5055:
  7164     0167  1003               	clrc
  7165     0168  0DA2               	rlf	___xxtofl@arg,f
  7166     0169  0DA3               	rlf	___xxtofl@arg+1,f
  7167     016A  0DA4               	rlf	___xxtofl@arg+2,f
  7168     016B  0DA5               	rlf	___xxtofl@arg+3,f
  7169     016C  0BFA               	decfsz	??___xxtofl,f
  7170     016D  2967               	goto	u5055
  7171     016E                     l3247:
  7172     016E  1BA4               	btfsc	___xxtofl@arg+2,7
  7173     016F  2971               	goto	u5061
  7174     0170  2972               	goto	u5060
  7175     0171                     u5061:
  7176     0171  2978               	goto	l904
  7177     0172                     u5060:
  7178     0172                     l3249:
  7179     0172  3002               	movlw	2
  7180     0173  0221               	subwf	___xxtofl@exp,w
  7181     0174  1803               	skipnc
  7182     0175  2977               	goto	u5071
  7183     0176  2978               	goto	u5070
  7184     0177                     u5071:
  7185     0177  2963               	goto	l3245
  7186     0178                     u5070:
  7187     0178                     l904:
  7188     0178  1821               	btfsc	___xxtofl@exp,0
  7189     0179  297B               	goto	u5081
  7190     017A  297C               	goto	u5080
  7191     017B                     u5081:
  7192     017B  2984               	goto	l905
  7193     017C                     u5080:
  7194     017C                     l3251:
  7195     017C  30FF               	movlw	255
  7196     017D  05A2               	andwf	___xxtofl@arg,f
  7197     017E  30FF               	movlw	255
  7198     017F  05A3               	andwf	___xxtofl@arg+1,f
  7199     0180  307F               	movlw	127
  7200     0181  05A4               	andwf	___xxtofl@arg+2,f
  7201     0182  30FF               	movlw	255
  7202     0183  05A5               	andwf	___xxtofl@arg+3,f
  7203     0184                     l905:
  7204     0184  1003               	clrc
  7205     0185  0CA1               	rrf	___xxtofl@exp,f
  7206     0186                     l3253:
  7207     0186  0821               	movf	___xxtofl@exp,w
  7208     0187  00FA               	movwf	??___xxtofl
  7209     0188  01FB               	clrf	??___xxtofl+1
  7210     0189  01FC               	clrf	??___xxtofl+2
  7211     018A  01FD               	clrf	??___xxtofl+3
  7212     018B  3018               	movlw	24
  7213     018C                     u5095:
  7214     018C  1003               	clrc
  7215     018D  0DFA               	rlf	??___xxtofl,f
  7216     018E  0DFB               	rlf	??___xxtofl+1,f
  7217     018F  0DFC               	rlf	??___xxtofl+2,f
  7218     0190  0DFD               	rlf	??___xxtofl+3,f
  7219     0191                     u5090:
  7220     0191  3EFF               	addlw	-1
  7221     0192  1D03               	skipz
  7222     0193  298C               	goto	u5095
  7223     0194  087A               	movf	??___xxtofl,w
  7224     0195  04A2               	iorwf	___xxtofl@arg,f
  7225     0196  087B               	movf	??___xxtofl+1,w
  7226     0197  04A3               	iorwf	___xxtofl@arg+1,f
  7227     0198  087C               	movf	??___xxtofl+2,w
  7228     0199  04A4               	iorwf	___xxtofl@arg+2,f
  7229     019A  087D               	movf	??___xxtofl+3,w
  7230     019B  04A5               	iorwf	___xxtofl@arg+3,f
  7231     019C                     l3255:
  7232     019C  0820               	movf	___xxtofl@sign,w
  7233     019D  1903               	btfsc	3,2
  7234     019E  29A0               	goto	u5101
  7235     019F  29A1               	goto	u5100
  7236     01A0                     u5101:
  7237     01A0  29A6               	goto	l3261
  7238     01A1                     u5100:
  7239     01A1                     l3257:
  7240     01A1  1FF9               	btfss	___xxtofl@val+3,7
  7241     01A2  29A4               	goto	u5111
  7242     01A3  29A5               	goto	u5110
  7243     01A4                     u5111:
  7244     01A4  29A6               	goto	l3261
  7245     01A5                     u5110:
  7246     01A5                     l3259:
  7247     01A5  17A5               	bsf	___xxtofl@arg+3,7
  7248     01A6                     l3261:
  7249     01A6  0825               	movf	___xxtofl@arg+3,w
  7250     01A7  00F9               	movwf	?___xxtofl+3
  7251     01A8  0824               	movf	___xxtofl@arg+2,w
  7252     01A9  00F8               	movwf	?___xxtofl+2
  7253     01AA  0823               	movf	___xxtofl@arg+1,w
  7254     01AB  00F7               	movwf	?___xxtofl+1
  7255     01AC  0822               	movf	___xxtofl@arg,w
  7256     01AD  00F6               	movwf	?___xxtofl
  7257     01AE                     l893:
  7258     01AE  0008               	return
  7259     01AF                     __end_of___xxtofl:
  7260                           
  7261                           	psect	text14
  7262     1E41                     __ptext14:	
  7263 ;; *************** function ___wmul *****************
  7264 ;; Defined at:
  7265 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  multiplier      2    0[COMMON] unsigned int 
  7268 ;;  multiplicand    2    2[COMMON] unsigned int 
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  product         2    4[COMMON] unsigned int 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  2    0[COMMON] unsigned int 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7280 ;;      Params:         4       0       0       0       0
  7281 ;;      Locals:         2       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0
  7283 ;;      Totals:         6       0       0       0       0
  7284 ;;Total ram usage:        6 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_sprintf
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293     1E41                     ___wmul:	
  7294                           ;psect for function ___wmul
  7295                           
  7296     1E41                     l3105:	
  7297                           ;incstack = 0
  7298                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7299                           
  7300     1E41  01F4               	clrf	___wmul@product
  7301     1E42  01F5               	clrf	___wmul@product+1
  7302     1E43                     l3107:
  7303     1E43  1C70               	btfss	___wmul@multiplier,0
  7304     1E44  2E46               	goto	u4671
  7305     1E45  2E47               	goto	u4670
  7306     1E46                     u4671:
  7307     1E46  2E4D               	goto	l424
  7308     1E47                     u4670:
  7309     1E47                     l3109:
  7310     1E47  0872               	movf	___wmul@multiplicand,w
  7311     1E48  07F4               	addwf	___wmul@product,f
  7312     1E49  1803               	skipnc
  7313     1E4A  0AF5               	incf	___wmul@product+1,f
  7314     1E4B  0873               	movf	___wmul@multiplicand+1,w
  7315     1E4C  07F5               	addwf	___wmul@product+1,f
  7316     1E4D                     l424:
  7317     1E4D  3001               	movlw	1
  7318     1E4E                     u4685:
  7319     1E4E  1003               	clrc
  7320     1E4F  0DF2               	rlf	___wmul@multiplicand,f
  7321     1E50  0DF3               	rlf	___wmul@multiplicand+1,f
  7322     1E51  3EFF               	addlw	-1
  7323     1E52  1D03               	skipz
  7324     1E53  2E4E               	goto	u4685
  7325     1E54                     l3111:
  7326     1E54  3001               	movlw	1
  7327     1E55                     u4695:
  7328     1E55  1003               	clrc
  7329     1E56  0CF1               	rrf	___wmul@multiplier+1,f
  7330     1E57  0CF0               	rrf	___wmul@multiplier,f
  7331     1E58  3EFF               	addlw	-1
  7332     1E59  1D03               	skipz
  7333     1E5A  2E55               	goto	u4695
  7334     1E5B                     l3113:
  7335     1E5B  0870               	movf	___wmul@multiplier,w
  7336     1E5C  0471               	iorwf	___wmul@multiplier+1,w
  7337     1E5D  1D03               	btfss	3,2
  7338     1E5E  2E60               	goto	u4701
  7339     1E5F  2E61               	goto	u4700
  7340     1E60                     u4701:
  7341     1E60  2E43               	goto	l3107
  7342     1E61                     u4700:
  7343     1E61                     l3115:
  7344     1E61  0875               	movf	___wmul@product+1,w
  7345     1E62  00F1               	movwf	?___wmul+1
  7346     1E63  0874               	movf	___wmul@product,w
  7347     1E64  00F0               	movwf	?___wmul
  7348     1E65                     l426:
  7349     1E65  0008               	return
  7350     1E66                     __end_of___wmul:
  7351                           
  7352                           	psect	text15
  7353     10D4                     __ptext15:	
  7354 ;; *************** function ___llmod *****************
  7355 ;; Defined at:
  7356 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  divisor         4    0[COMMON] unsigned long 
  7359 ;;  dividend        4    4[COMMON] unsigned long 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  counter         1    9[COMMON] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  4    0[COMMON] unsigned long 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7371 ;;      Params:         8       0       0       0       0
  7372 ;;      Locals:         1       0       0       0       0
  7373 ;;      Temps:          1       0       0       0       0
  7374 ;;      Totals:        10       0       0       0       0
  7375 ;;Total ram usage:       10 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_sprintf
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384     10D4                     ___llmod:	
  7385                           ;psect for function ___llmod
  7386                           
  7387     10D4                     l3195:	
  7388                           ;incstack = 0
  7389                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7390                           
  7391     10D4  0873               	movf	___llmod@divisor+3,w
  7392     10D5  0472               	iorwf	___llmod@divisor+2,w
  7393     10D6  0471               	iorwf	___llmod@divisor+1,w
  7394     10D7  0470               	iorwf	___llmod@divisor,w
  7395     10D8  1903               	skipnz
  7396     10D9  28DB               	goto	u4921
  7397     10DA  28DC               	goto	u4920
  7398     10DB                     u4921:
  7399     10DB  291F               	goto	l3211
  7400     10DC                     u4920:
  7401     10DC                     l3197:
  7402     10DC  01F9               	clrf	___llmod@counter
  7403     10DD  0AF9               	incf	___llmod@counter,f
  7404     10DE  28EC               	goto	l3201
  7405     10DF                     l3199:
  7406     10DF  3001               	movlw	1
  7407     10E0  00F8               	movwf	??___llmod
  7408     10E1                     u4935:
  7409     10E1  1003               	clrc
  7410     10E2  0DF0               	rlf	___llmod@divisor,f
  7411     10E3  0DF1               	rlf	___llmod@divisor+1,f
  7412     10E4  0DF2               	rlf	___llmod@divisor+2,f
  7413     10E5  0DF3               	rlf	___llmod@divisor+3,f
  7414     10E6  0BF8               	decfsz	??___llmod,f
  7415     10E7  28E1               	goto	u4935
  7416     10E8  3001               	movlw	1
  7417     10E9  00F8               	movwf	??___llmod
  7418     10EA  0878               	movf	??___llmod,w
  7419     10EB  07F9               	addwf	___llmod@counter,f
  7420     10EC                     l3201:
  7421     10EC  1FF3               	btfss	___llmod@divisor+3,7
  7422     10ED  28EF               	goto	u4941
  7423     10EE  28F0               	goto	u4940
  7424     10EF                     u4941:
  7425     10EF  28DF               	goto	l3199
  7426     10F0                     u4940:
  7427     10F0                     l3203:
  7428     10F0  0873               	movf	___llmod@divisor+3,w
  7429     10F1  0277               	subwf	___llmod@dividend+3,w
  7430     10F2  1D03               	skipz
  7431     10F3  28FE               	goto	u4955
  7432     10F4  0872               	movf	___llmod@divisor+2,w
  7433     10F5  0276               	subwf	___llmod@dividend+2,w
  7434     10F6  1D03               	skipz
  7435     10F7  28FE               	goto	u4955
  7436     10F8  0871               	movf	___llmod@divisor+1,w
  7437     10F9  0275               	subwf	___llmod@dividend+1,w
  7438     10FA  1D03               	skipz
  7439     10FB  28FE               	goto	u4955
  7440     10FC  0870               	movf	___llmod@divisor,w
  7441     10FD  0274               	subwf	___llmod@dividend,w
  7442     10FE                     u4955:
  7443     10FE  1C03               	skipc
  7444     10FF  2901               	goto	u4951
  7445     1100  2902               	goto	u4950
  7446     1101                     u4951:
  7447     1101  2910               	goto	l3207
  7448     1102                     u4950:
  7449     1102                     l3205:
  7450     1102  0870               	movf	___llmod@divisor,w
  7451     1103  02F4               	subwf	___llmod@dividend,f
  7452     1104  0871               	movf	___llmod@divisor+1,w
  7453     1105  1C03               	skipc
  7454     1106  0F71               	incfsz	___llmod@divisor+1,w
  7455     1107  02F5               	subwf	___llmod@dividend+1,f
  7456     1108  0872               	movf	___llmod@divisor+2,w
  7457     1109  1C03               	skipc
  7458     110A  0F72               	incfsz	___llmod@divisor+2,w
  7459     110B  02F6               	subwf	___llmod@dividend+2,f
  7460     110C  0873               	movf	___llmod@divisor+3,w
  7461     110D  1C03               	skipc
  7462     110E  0F73               	incfsz	___llmod@divisor+3,w
  7463     110F  02F7               	subwf	___llmod@dividend+3,f
  7464     1110                     l3207:
  7465     1110  3001               	movlw	1
  7466     1111                     u4965:
  7467     1111  1003               	clrc
  7468     1112  0CF3               	rrf	___llmod@divisor+3,f
  7469     1113  0CF2               	rrf	___llmod@divisor+2,f
  7470     1114  0CF1               	rrf	___llmod@divisor+1,f
  7471     1115  0CF0               	rrf	___llmod@divisor,f
  7472     1116  3EFF               	addlw	-1
  7473     1117  1D03               	skipz
  7474     1118  2911               	goto	u4965
  7475     1119                     l3209:
  7476     1119  3001               	movlw	1
  7477     111A  02F9               	subwf	___llmod@counter,f
  7478     111B  1D03               	btfss	3,2
  7479     111C  291E               	goto	u4971
  7480     111D  291F               	goto	u4970
  7481     111E                     u4971:
  7482     111E  28F0               	goto	l3203
  7483     111F                     u4970:
  7484     111F                     l3211:
  7485     111F  0877               	movf	___llmod@dividend+3,w
  7486     1120  00F3               	movwf	?___llmod+3
  7487     1121  0876               	movf	___llmod@dividend+2,w
  7488     1122  00F2               	movwf	?___llmod+2
  7489     1123  0875               	movf	___llmod@dividend+1,w
  7490     1124  00F1               	movwf	?___llmod+1
  7491     1125  0874               	movf	___llmod@dividend,w
  7492     1126  00F0               	movwf	?___llmod
  7493     1127                     l680:
  7494     1127  0008               	return
  7495     1128                     __end_of___llmod:
  7496                           
  7497                           	psect	text16
  7498     12AD                     __ptext16:	
  7499 ;; *************** function ___fltol *****************
  7500 ;; Defined at:
  7501 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  f1              4   49[BANK0 ] unsigned long 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  exp1            1   58[BANK0 ] unsigned char 
  7506 ;;  sign1           1   57[BANK0 ] unsigned char 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  4   49[BANK0 ] long 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7516 ;;      Params:         0       4       0       0       0
  7517 ;;      Locals:         0       2       0       0       0
  7518 ;;      Temps:          0       4       0       0       0
  7519 ;;      Totals:         0      10       0       0       0
  7520 ;;Total ram usage:       10 bytes
  7521 ;; Hardware stack levels used: 1
  7522 ;; This function calls:
  7523 ;;		Nothing
  7524 ;; This function is called by:
  7525 ;;		_sprintf
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529     12AD                     ___fltol:	
  7530                           ;psect for function ___fltol
  7531                           
  7532     12AD                     l3159:	
  7533                           ;incstack = 0
  7534                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7535                           
  7536     12AD  1003               	clrc
  7537     12AE  1283               	bcf	3,5	;RP0=0, select bank0
  7538     12AF  1303               	bcf	3,6	;RP1=0, select bank0
  7539     12B0  0D53               	rlf	___fltol@f1+2,w
  7540     12B1  0D54               	rlf	___fltol@f1+3,w
  7541     12B2  00DA               	movwf	___fltol@exp1
  7542     12B3  085A               	movf	___fltol@exp1,w
  7543     12B4  1D03               	btfss	3,2
  7544     12B5  2AB7               	goto	u4821
  7545     12B6  2AB8               	goto	u4820
  7546     12B7                     u4821:
  7547     12B7  2AC1               	goto	l3165
  7548     12B8                     u4820:
  7549     12B8                     l3161:
  7550     12B8  3000               	movlw	0
  7551     12B9  00D4               	movwf	?___fltol+3
  7552     12BA  3000               	movlw	0
  7553     12BB  00D3               	movwf	?___fltol+2
  7554     12BC  3000               	movlw	0
  7555     12BD  00D2               	movwf	?___fltol+1
  7556     12BE  3000               	movlw	0
  7557     12BF  00D1               	movwf	?___fltol
  7558     12C0  2B24               	goto	l627
  7559     12C1                     l3165:
  7560     12C1  0851               	movf	___fltol@f1,w
  7561     12C2  00D5               	movwf	??___fltol
  7562     12C3  0852               	movf	___fltol@f1+1,w
  7563     12C4  00D6               	movwf	??___fltol+1
  7564     12C5  0853               	movf	___fltol@f1+2,w
  7565     12C6  00D7               	movwf	??___fltol+2
  7566     12C7  0854               	movf	___fltol@f1+3,w
  7567     12C8  00D8               	movwf	??___fltol+3
  7568     12C9  301F               	movlw	31
  7569     12CA                     u4835:
  7570     12CA  1003               	clrc
  7571     12CB  0CD8               	rrf	??___fltol+3,f
  7572     12CC  0CD7               	rrf	??___fltol+2,f
  7573     12CD  0CD6               	rrf	??___fltol+1,f
  7574     12CE  0CD5               	rrf	??___fltol,f
  7575     12CF                     u4830:
  7576     12CF  3EFF               	addlw	-1
  7577     12D0  1D03               	skipz
  7578     12D1  2ACA               	goto	u4835
  7579     12D2  0855               	movf	??___fltol,w
  7580     12D3  00D9               	movwf	___fltol@sign1
  7581     12D4                     l3167:
  7582     12D4  17D3               	bsf	___fltol@f1+2,7
  7583     12D5                     l3169:
  7584     12D5  30FF               	movlw	255
  7585     12D6  05D1               	andwf	___fltol@f1,f
  7586     12D7  30FF               	movlw	255
  7587     12D8  05D2               	andwf	___fltol@f1+1,f
  7588     12D9  30FF               	movlw	255
  7589     12DA  05D3               	andwf	___fltol@f1+2,f
  7590     12DB  3000               	movlw	0
  7591     12DC  05D4               	andwf	___fltol@f1+3,f
  7592     12DD                     l3171:
  7593     12DD  3096               	movlw	150
  7594     12DE  02DA               	subwf	___fltol@exp1,f
  7595     12DF                     l3173:
  7596     12DF  1FDA               	btfss	___fltol@exp1,7
  7597     12E0  2AE2               	goto	u4841
  7598     12E1  2AE3               	goto	u4840
  7599     12E2                     u4841:
  7600     12E2  2AFD               	goto	l3183
  7601     12E3                     u4840:
  7602     12E3                     l3175:
  7603     12E3  085A               	movf	___fltol@exp1,w
  7604     12E4  3A80               	xorlw	128
  7605     12E5  3E97               	addlw	151
  7606     12E6  1803               	skipnc
  7607     12E7  2AE9               	goto	u4851
  7608     12E8  2AEA               	goto	u4850
  7609     12E9                     u4851:
  7610     12E9  2AEB               	goto	l3181
  7611     12EA                     u4850:
  7612     12EA  2AB8               	goto	l3161
  7613     12EB                     l3181:
  7614     12EB  3001               	movlw	1
  7615     12EC                     u4865:
  7616     12EC  1003               	clrc
  7617     12ED  0CD4               	rrf	___fltol@f1+3,f
  7618     12EE  0CD3               	rrf	___fltol@f1+2,f
  7619     12EF  0CD2               	rrf	___fltol@f1+1,f
  7620     12F0  0CD1               	rrf	___fltol@f1,f
  7621     12F1  3EFF               	addlw	-1
  7622     12F2  1D03               	skipz
  7623     12F3  2AEC               	goto	u4865
  7624     12F4  3001               	movlw	1
  7625     12F5  00D5               	movwf	??___fltol
  7626     12F6  0855               	movf	??___fltol,w
  7627     12F7  07DA               	addwf	___fltol@exp1,f
  7628     12F8  1D03               	btfss	3,2
  7629     12F9  2AFB               	goto	u4871
  7630     12FA  2AFC               	goto	u4870
  7631     12FB                     u4871:
  7632     12FB  2AEB               	goto	l3181
  7633     12FC                     u4870:
  7634     12FC  2B14               	goto	l3191
  7635     12FD                     l3183:
  7636     12FD  3020               	movlw	32
  7637     12FE  025A               	subwf	___fltol@exp1,w
  7638     12FF  1C03               	skipc
  7639     1300  2B02               	goto	u4881
  7640     1301  2B03               	goto	u4880
  7641     1302                     u4881:
  7642     1302  2B0F               	goto	l634
  7643     1303                     u4880:
  7644     1303  2AB8               	goto	l3161
  7645     1304                     l3189:
  7646     1304  3001               	movlw	1
  7647     1305  00D5               	movwf	??___fltol
  7648     1306                     u4895:
  7649     1306  1003               	clrc
  7650     1307  0DD1               	rlf	___fltol@f1,f
  7651     1308  0DD2               	rlf	___fltol@f1+1,f
  7652     1309  0DD3               	rlf	___fltol@f1+2,f
  7653     130A  0DD4               	rlf	___fltol@f1+3,f
  7654     130B  0BD5               	decfsz	??___fltol,f
  7655     130C  2B06               	goto	u4895
  7656     130D  3001               	movlw	1
  7657     130E  02DA               	subwf	___fltol@exp1,f
  7658     130F                     l634:
  7659     130F  085A               	movf	___fltol@exp1,w
  7660     1310  1D03               	btfss	3,2
  7661     1311  2B13               	goto	u4901
  7662     1312  2B14               	goto	u4900
  7663     1313                     u4901:
  7664     1313  2B04               	goto	l3189
  7665     1314                     u4900:
  7666     1314                     l3191:
  7667     1314  0859               	movf	___fltol@sign1,w
  7668     1315  1903               	btfsc	3,2
  7669     1316  2B18               	goto	u4911
  7670     1317  2B19               	goto	u4910
  7671     1318                     u4911:
  7672     1318  2B24               	goto	l637
  7673     1319                     u4910:
  7674     1319                     l3193:
  7675     1319  09D1               	comf	___fltol@f1,f
  7676     131A  09D2               	comf	___fltol@f1+1,f
  7677     131B  09D3               	comf	___fltol@f1+2,f
  7678     131C  09D4               	comf	___fltol@f1+3,f
  7679     131D  0AD1               	incf	___fltol@f1,f
  7680     131E  1903               	skipnz
  7681     131F  0AD2               	incf	___fltol@f1+1,f
  7682     1320  1903               	skipnz
  7683     1321  0AD3               	incf	___fltol@f1+2,f
  7684     1322  1903               	skipnz
  7685     1323  0AD4               	incf	___fltol@f1+3,f
  7686     1324                     l637:
  7687     1324                     l627:
  7688     1324  0008               	return
  7689     1325                     __end_of___fltol:
  7690                           
  7691                           	psect	text17
  7692     1E1D                     __ptext17:	
  7693 ;; *************** function ___flsub *****************
  7694 ;; Defined at:
  7695 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  a               4   70[BANK0 ] long 
  7698 ;;  b               4   74[BANK0 ] long 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  4   70[BANK0 ] long 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7710 ;;      Params:         0       8       0       0       0
  7711 ;;      Locals:         0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0
  7713 ;;      Totals:         0       8       0       0       0
  7714 ;;Total ram usage:        8 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 1
  7717 ;; This function calls:
  7718 ;;		___fladd
  7719 ;; This function is called by:
  7720 ;;		_sprintf
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724     1E1D                     ___flsub:	
  7725                           ;psect for function ___flsub
  7726                           
  7727     1E1D                     l3215:	
  7728                           ;incstack = 0
  7729                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7730                           
  7731     1E1D  3080               	movlw	128
  7732     1E1E  1283               	bcf	3,5	;RP0=0, select bank0
  7733     1E1F  1303               	bcf	3,6	;RP1=0, select bank0
  7734     1E20  06E9               	xorwf	___flsub@a+3,f
  7735     1E21                     l3217:
  7736     1E21  086D               	movf	___flsub@b+3,w
  7737     1E22  00D5               	movwf	___fladd@b+3
  7738     1E23  086C               	movf	___flsub@b+2,w
  7739     1E24  00D4               	movwf	___fladd@b+2
  7740     1E25  086B               	movf	___flsub@b+1,w
  7741     1E26  00D3               	movwf	___fladd@b+1
  7742     1E27  086A               	movf	___flsub@b,w
  7743     1E28  00D2               	movwf	___fladd@b
  7744     1E29  0869               	movf	___flsub@a+3,w
  7745     1E2A  00D9               	movwf	___fladd@a+3
  7746     1E2B  0868               	movf	___flsub@a+2,w
  7747     1E2C  00D8               	movwf	___fladd@a+2
  7748     1E2D  0867               	movf	___flsub@a+1,w
  7749     1E2E  00D7               	movwf	___fladd@a+1
  7750     1E2F  0866               	movf	___flsub@a,w
  7751     1E30  00D6               	movwf	___fladd@a
  7752     1E31  160A  118A  25A8  160A  158A  	fcall	___fladd
  7753     1E36  1283               	bcf	3,5	;RP0=0, select bank0
  7754     1E37  1303               	bcf	3,6	;RP1=0, select bank0
  7755     1E38  0855               	movf	?___fladd+3,w
  7756     1E39  00E9               	movwf	?___flsub+3
  7757     1E3A  0854               	movf	?___fladd+2,w
  7758     1E3B  00E8               	movwf	?___flsub+2
  7759     1E3C  0853               	movf	?___fladd+1,w
  7760     1E3D  00E7               	movwf	?___flsub+1
  7761     1E3E  0852               	movf	?___fladd,w
  7762     1E3F  00E6               	movwf	?___flsub
  7763     1E40                     l797:
  7764     1E40  0008               	return
  7765     1E41                     __end_of___flsub:
  7766                           
  7767                           	psect	text18
  7768     15A8                     __ptext18:	
  7769 ;; *************** function ___fladd *****************
  7770 ;; Defined at:
  7771 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  b               4   50[BANK0 ] long 
  7774 ;;  a               4   54[BANK0 ] long 
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  grs             1   69[BANK0 ] unsigned char 
  7777 ;;  bexp            1   68[BANK0 ] unsigned char 
  7778 ;;  aexp            1   67[BANK0 ] unsigned char 
  7779 ;;  signs           1   66[BANK0 ] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  4   50[BANK0 ] unsigned char 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0, btemp+1
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7789 ;;      Params:         0       8       0       0       0
  7790 ;;      Locals:         0       4       0       0       0
  7791 ;;      Temps:          0       8       0       0       0
  7792 ;;      Totals:         0      20       0       0       0
  7793 ;;Total ram usage:       20 bytes
  7794 ;; Hardware stack levels used: 1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_sprintf
  7799 ;;		___flsub
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803     15A8                     ___fladd:	
  7804                           ;psect for function ___fladd
  7805                           
  7806     15A8                     l2547:	
  7807                           ;incstack = 0
  7808                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7809                           
  7810     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  7811     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  7812     15AA  0855               	movf	___fladd@b+3,w
  7813     15AB  3980               	andlw	128
  7814     15AC  00E2               	movwf	___fladd@signs
  7815     15AD                     l2549:
  7816     15AD  0855               	movf	___fladd@b+3,w
  7817     15AE  00DA               	movwf	??___fladd
  7818     15AF  075A               	addwf	??___fladd,w
  7819     15B0  00E4               	movwf	___fladd@bexp
  7820     15B1                     l2551:
  7821     15B1  1FD4               	btfss	___fladd@b+2,7
  7822     15B2  2DB4               	goto	u3271
  7823     15B3  2DB5               	goto	u3270
  7824     15B4                     u3271:
  7825     15B4  2DB6               	goto	l2555
  7826     15B5                     u3270:
  7827     15B5                     l2553:
  7828     15B5  1464               	bsf	___fladd@bexp,0
  7829     15B6                     l2555:
  7830     15B6  0864               	movf	___fladd@bexp,w
  7831     15B7  1903               	btfsc	3,2
  7832     15B8  2DBA               	goto	u3281
  7833     15B9  2DBB               	goto	u3280
  7834     15BA                     u3281:
  7835     15BA  2DCB               	goto	l2565
  7836     15BB                     u3280:
  7837     15BB                     l2557:
  7838     15BB  0A64               	incf	___fladd@bexp,w
  7839     15BC  1D03               	btfss	3,2
  7840     15BD  2DBF               	goto	u3291
  7841     15BE  2DC0               	goto	u3290
  7842     15BF                     u3291:
  7843     15BF  2DC8               	goto	l2561
  7844     15C0                     u3290:
  7845     15C0                     l2559:
  7846     15C0  3000               	movlw	0
  7847     15C1  00D5               	movwf	___fladd@b+3
  7848     15C2  3000               	movlw	0
  7849     15C3  00D4               	movwf	___fladd@b+2
  7850     15C4  3000               	movlw	0
  7851     15C5  00D3               	movwf	___fladd@b+1
  7852     15C6  3000               	movlw	0
  7853     15C7  00D2               	movwf	___fladd@b
  7854     15C8                     l2561:
  7855     15C8  17D4               	bsf	___fladd@b+2,7
  7856     15C9                     l2563:
  7857     15C9  01D5               	clrf	___fladd@b+3
  7858     15CA  2DD3               	goto	l2567
  7859     15CB                     l2565:
  7860     15CB  3000               	movlw	0
  7861     15CC  00D5               	movwf	___fladd@b+3
  7862     15CD  3000               	movlw	0
  7863     15CE  00D4               	movwf	___fladd@b+2
  7864     15CF  3000               	movlw	0
  7865     15D0  00D3               	movwf	___fladd@b+1
  7866     15D1  3000               	movlw	0
  7867     15D2  00D2               	movwf	___fladd@b
  7868     15D3                     l2567:
  7869     15D3  0859               	movf	___fladd@a+3,w
  7870     15D4  3980               	andlw	128
  7871     15D5  00E3               	movwf	___fladd@aexp
  7872     15D6                     l2569:
  7873     15D6  0863               	movf	___fladd@aexp,w
  7874     15D7  0662               	xorwf	___fladd@signs,w
  7875     15D8  1903               	skipnz
  7876     15D9  2DDB               	goto	u3301
  7877     15DA  2DDC               	goto	u3300
  7878     15DB                     u3301:
  7879     15DB  2DDD               	goto	l2573
  7880     15DC                     u3300:
  7881     15DC                     l2571:
  7882     15DC  1762               	bsf	___fladd@signs,6
  7883     15DD                     l2573:
  7884     15DD  0859               	movf	___fladd@a+3,w
  7885     15DE  00DA               	movwf	??___fladd
  7886     15DF  075A               	addwf	??___fladd,w
  7887     15E0  00E3               	movwf	___fladd@aexp
  7888     15E1                     l2575:
  7889     15E1  1FD8               	btfss	___fladd@a+2,7
  7890     15E2  2DE4               	goto	u3311
  7891     15E3  2DE5               	goto	u3310
  7892     15E4                     u3311:
  7893     15E4  2DE6               	goto	l2579
  7894     15E5                     u3310:
  7895     15E5                     l2577:
  7896     15E5  1463               	bsf	___fladd@aexp,0
  7897     15E6                     l2579:
  7898     15E6  0863               	movf	___fladd@aexp,w
  7899     15E7  1903               	btfsc	3,2
  7900     15E8  2DEA               	goto	u3321
  7901     15E9  2DEB               	goto	u3320
  7902     15EA                     u3321:
  7903     15EA  2DFB               	goto	l2589
  7904     15EB                     u3320:
  7905     15EB                     l2581:
  7906     15EB  0A63               	incf	___fladd@aexp,w
  7907     15EC  1D03               	btfss	3,2
  7908     15ED  2DEF               	goto	u3331
  7909     15EE  2DF0               	goto	u3330
  7910     15EF                     u3331:
  7911     15EF  2DF8               	goto	l2585
  7912     15F0                     u3330:
  7913     15F0                     l2583:
  7914     15F0  3000               	movlw	0
  7915     15F1  00D9               	movwf	___fladd@a+3
  7916     15F2  3000               	movlw	0
  7917     15F3  00D8               	movwf	___fladd@a+2
  7918     15F4  3000               	movlw	0
  7919     15F5  00D7               	movwf	___fladd@a+1
  7920     15F6  3000               	movlw	0
  7921     15F7  00D6               	movwf	___fladd@a
  7922     15F8                     l2585:
  7923     15F8  17D8               	bsf	___fladd@a+2,7
  7924     15F9                     l2587:
  7925     15F9  01D9               	clrf	___fladd@a+3
  7926     15FA  2E03               	goto	l751
  7927     15FB                     l2589:
  7928     15FB  3000               	movlw	0
  7929     15FC  00D9               	movwf	___fladd@a+3
  7930     15FD  3000               	movlw	0
  7931     15FE  00D8               	movwf	___fladd@a+2
  7932     15FF  3000               	movlw	0
  7933     1600  00D7               	movwf	___fladd@a+1
  7934     1601  3000               	movlw	0
  7935     1602  00D6               	movwf	___fladd@a
  7936     1603                     l751:
  7937     1603  0864               	movf	___fladd@bexp,w
  7938     1604  0263               	subwf	___fladd@aexp,w
  7939     1605  1803               	skipnc
  7940     1606  2E08               	goto	u3341
  7941     1607  2E09               	goto	u3340
  7942     1608                     u3341:
  7943     1608  2E2F               	goto	l2625
  7944     1609                     u3340:
  7945     1609                     l2591:
  7946     1609  1F62               	btfss	___fladd@signs,6
  7947     160A  2E0C               	goto	u3351
  7948     160B  2E0D               	goto	u3350
  7949     160C                     u3351:
  7950     160C  2E11               	goto	l2595
  7951     160D                     u3350:
  7952     160D                     l2593:
  7953     160D  3080               	movlw	128
  7954     160E  00DA               	movwf	??___fladd
  7955     160F  085A               	movf	??___fladd,w
  7956     1610  06E2               	xorwf	___fladd@signs,f
  7957     1611                     l2595:
  7958     1611  0864               	movf	___fladd@bexp,w
  7959     1612  00E5               	movwf	___fladd@grs
  7960     1613                     l2597:
  7961     1613  0863               	movf	___fladd@aexp,w
  7962     1614  00E4               	movwf	___fladd@bexp
  7963     1615                     l2599:
  7964     1615  0865               	movf	___fladd@grs,w
  7965     1616  00E3               	movwf	___fladd@aexp
  7966     1617                     l2601:
  7967     1617  0852               	movf	___fladd@b,w
  7968     1618  00E5               	movwf	___fladd@grs
  7969     1619                     l2603:
  7970     1619  0856               	movf	___fladd@a,w
  7971     161A  00D2               	movwf	___fladd@b
  7972     161B                     l2605:
  7973     161B  0865               	movf	___fladd@grs,w
  7974     161C  00D6               	movwf	___fladd@a
  7975     161D                     l2607:
  7976     161D  0853               	movf	___fladd@b+1,w
  7977     161E  00E5               	movwf	___fladd@grs
  7978     161F                     l2609:
  7979     161F  0857               	movf	___fladd@a+1,w
  7980     1620  00D3               	movwf	___fladd@b+1
  7981     1621                     l2611:
  7982     1621  0865               	movf	___fladd@grs,w
  7983     1622  00D7               	movwf	___fladd@a+1
  7984     1623                     l2613:
  7985     1623  0854               	movf	___fladd@b+2,w
  7986     1624  00E5               	movwf	___fladd@grs
  7987     1625                     l2615:
  7988     1625  0858               	movf	___fladd@a+2,w
  7989     1626  00D4               	movwf	___fladd@b+2
  7990     1627                     l2617:
  7991     1627  0865               	movf	___fladd@grs,w
  7992     1628  00D8               	movwf	___fladd@a+2
  7993     1629                     l2619:
  7994     1629  0855               	movf	___fladd@b+3,w
  7995     162A  00E5               	movwf	___fladd@grs
  7996     162B                     l2621:
  7997     162B  0859               	movf	___fladd@a+3,w
  7998     162C  00D5               	movwf	___fladd@b+3
  7999     162D                     l2623:
  8000     162D  0865               	movf	___fladd@grs,w
  8001     162E  00D9               	movwf	___fladd@a+3
  8002     162F                     l2625:
  8003     162F  01E5               	clrf	___fladd@grs
  8004     1630                     l2627:
  8005     1630  0863               	movf	___fladd@aexp,w
  8006     1631  00DA               	movwf	??___fladd
  8007     1632  01DB               	clrf	??___fladd+1
  8008     1633  085B               	movf	??___fladd+1,w
  8009     1634  00DD               	movwf	??___fladd+3
  8010     1635  0864               	movf	___fladd@bexp,w
  8011     1636  025A               	subwf	??___fladd,w
  8012     1637  00DC               	movwf	??___fladd+2
  8013     1638  1C03               	skipc
  8014     1639  03DD               	decf	??___fladd+3,f
  8015     163A  085D               	movf	??___fladd+3,w
  8016     163B  3A80               	xorlw	128
  8017     163C  00FF               	movwf	btemp+1
  8018     163D  3080               	movlw	128
  8019     163E  027F               	subwf	btemp+1,w
  8020     163F  1D03               	skipz
  8021     1640  2E43               	goto	u3365
  8022     1641  301A               	movlw	26
  8023     1642  025C               	subwf	??___fladd+2,w
  8024     1643                     u3365:
  8025     1643  1C03               	skipc
  8026     1644  2E46               	goto	u3361
  8027     1645  2E47               	goto	u3360
  8028     1646                     u3361:
  8029     1646  2E7E               	goto	l2643
  8030     1647                     u3360:
  8031     1647                     l2629:
  8032     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8033     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8034     1649  0855               	movf	___fladd@b+3,w
  8035     164A  0454               	iorwf	___fladd@b+2,w
  8036     164B  0453               	iorwf	___fladd@b+1,w
  8037     164C  0452               	iorwf	___fladd@b,w
  8038     164D  1D03               	skipz
  8039     164E  2E50               	goto	u3371
  8040     164F  2E52               	goto	u3370
  8041     1650                     u3371:
  8042     1650  3001               	movlw	1
  8043     1651  2E53               	goto	u3380
  8044     1652                     u3370:
  8045     1652  3000               	movlw	0
  8046     1653                     u3380:
  8047     1653  00E5               	movwf	___fladd@grs
  8048     1654  3000               	movlw	0
  8049     1655  00D5               	movwf	___fladd@b+3
  8050     1656  3000               	movlw	0
  8051     1657  00D4               	movwf	___fladd@b+2
  8052     1658  3000               	movlw	0
  8053     1659  00D3               	movwf	___fladd@b+1
  8054     165A  3000               	movlw	0
  8055     165B  00D2               	movwf	___fladd@b
  8056     165C  0863               	movf	___fladd@aexp,w
  8057     165D  00E4               	movwf	___fladd@bexp
  8058     165E  2E86               	goto	l755
  8059     165F                     l757:
  8060     165F  1C65               	btfss	___fladd@grs,0
  8061     1660  2E62               	goto	u3391
  8062     1661  2E63               	goto	u3390
  8063     1662                     u3391:
  8064     1662  2E6A               	goto	l2633
  8065     1663                     u3390:
  8066     1663                     l2631:
  8067     1663  0865               	movf	___fladd@grs,w
  8068     1664  00DA               	movwf	??___fladd
  8069     1665  1003               	clrc
  8070     1666  0C5A               	rrf	??___fladd,w
  8071     1667  3801               	iorlw	1
  8072     1668  00E5               	movwf	___fladd@grs
  8073     1669  2E6C               	goto	l2635
  8074     166A                     l2633:
  8075     166A  1003               	clrc
  8076     166B  0CE5               	rrf	___fladd@grs,f
  8077     166C                     l2635:
  8078     166C  1C52               	btfss	___fladd@b,0
  8079     166D  2E6F               	goto	u3401
  8080     166E  2E70               	goto	u3400
  8081     166F                     u3401:
  8082     166F  2E71               	goto	l2639
  8083     1670                     u3400:
  8084     1670                     l2637:
  8085     1670  17E5               	bsf	___fladd@grs,7
  8086     1671                     l2639:
  8087     1671  3001               	movlw	1
  8088     1672  00DA               	movwf	??___fladd
  8089     1673                     u3415:
  8090     1673  0D55               	rlf	___fladd@b+3,w
  8091     1674  0CD5               	rrf	___fladd@b+3,f
  8092     1675  0CD4               	rrf	___fladd@b+2,f
  8093     1676  0CD3               	rrf	___fladd@b+1,f
  8094     1677  0CD2               	rrf	___fladd@b,f
  8095     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8096     1679  2E73               	goto	u3415
  8097     167A                     l2641:
  8098     167A  3001               	movlw	1
  8099     167B  00DA               	movwf	??___fladd
  8100     167C  085A               	movf	??___fladd,w
  8101     167D  07E4               	addwf	___fladd@bexp,f
  8102     167E                     l2643:
  8103     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8104     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8105     1680  0863               	movf	___fladd@aexp,w
  8106     1681  0264               	subwf	___fladd@bexp,w
  8107     1682  1C03               	skipc
  8108     1683  2E85               	goto	u3421
  8109     1684  2E86               	goto	u3420
  8110     1685                     u3421:
  8111     1685  2E5F               	goto	l757
  8112     1686                     u3420:
  8113     1686                     l755:
  8114     1686  1B62               	btfsc	___fladd@signs,6
  8115     1687  2E89               	goto	u3431
  8116     1688  2E8A               	goto	u3430
  8117     1689                     u3431:
  8118     1689  2ED3               	goto	l2669
  8119     168A                     u3430:
  8120     168A                     l2645:
  8121     168A  0864               	movf	___fladd@bexp,w
  8122     168B  1D03               	btfss	3,2
  8123     168C  2E8E               	goto	u3441
  8124     168D  2E8F               	goto	u3440
  8125     168E                     u3441:
  8126     168E  2E98               	goto	l2651
  8127     168F                     u3440:
  8128     168F                     l2647:
  8129     168F  3000               	movlw	0
  8130     1690  00D5               	movwf	?___fladd+3
  8131     1691  3000               	movlw	0
  8132     1692  00D4               	movwf	?___fladd+2
  8133     1693  3000               	movlw	0
  8134     1694  00D3               	movwf	?___fladd+1
  8135     1695  3000               	movlw	0
  8136     1696  00D2               	movwf	?___fladd
  8137     1697  2FFF               	goto	l764
  8138     1698                     l2651:
  8139     1698  0856               	movf	___fladd@a,w
  8140     1699  07D2               	addwf	___fladd@b,f
  8141     169A  0857               	movf	___fladd@a+1,w
  8142     169B  1103               	clrz
  8143     169C  1803               	skipnc
  8144     169D  3E01               	addlw	1
  8145     169E  1903               	skipnz
  8146     169F  2EA1               	goto	u3451
  8147     16A0  07D3               	addwf	___fladd@b+1,f
  8148     16A1                     u3451:
  8149     16A1  0858               	movf	___fladd@a+2,w
  8150     16A2  1103               	clrz
  8151     16A3  1803               	skipnc
  8152     16A4  3E01               	addlw	1
  8153     16A5  1903               	skipnz
  8154     16A6  2EA8               	goto	u3452
  8155     16A7  07D4               	addwf	___fladd@b+2,f
  8156     16A8                     u3452:
  8157     16A8  0859               	movf	___fladd@a+3,w
  8158     16A9  1103               	clrz
  8159     16AA  1803               	skipnc
  8160     16AB  3E01               	addlw	1
  8161     16AC  1903               	skipnz
  8162     16AD  2EAF               	goto	u3453
  8163     16AE  07D5               	addwf	___fladd@b+3,f
  8164     16AF                     u3453:
  8165     16AF                     l2653:
  8166     16AF  1C55               	btfss	___fladd@b+3,0
  8167     16B0  2EB2               	goto	u3461
  8168     16B1  2EB3               	goto	u3460
  8169     16B2                     u3461:
  8170     16B2  2F87               	goto	l2703
  8171     16B3                     u3460:
  8172     16B3                     l2655:
  8173     16B3  1C65               	btfss	___fladd@grs,0
  8174     16B4  2EB6               	goto	u3471
  8175     16B5  2EB7               	goto	u3470
  8176     16B6                     u3471:
  8177     16B6  2EBE               	goto	l2659
  8178     16B7                     u3470:
  8179     16B7                     l2657:
  8180     16B7  0865               	movf	___fladd@grs,w
  8181     16B8  00DA               	movwf	??___fladd
  8182     16B9  1003               	clrc
  8183     16BA  0C5A               	rrf	??___fladd,w
  8184     16BB  3801               	iorlw	1
  8185     16BC  00E5               	movwf	___fladd@grs
  8186     16BD  2EC0               	goto	l2661
  8187     16BE                     l2659:
  8188     16BE  1003               	clrc
  8189     16BF  0CE5               	rrf	___fladd@grs,f
  8190     16C0                     l2661:
  8191     16C0  1C52               	btfss	___fladd@b,0
  8192     16C1  2EC3               	goto	u3481
  8193     16C2  2EC4               	goto	u3480
  8194     16C3                     u3481:
  8195     16C3  2EC5               	goto	l2665
  8196     16C4                     u3480:
  8197     16C4                     l2663:
  8198     16C4  17E5               	bsf	___fladd@grs,7
  8199     16C5                     l2665:
  8200     16C5  3001               	movlw	1
  8201     16C6  00DA               	movwf	??___fladd
  8202     16C7                     u3495:
  8203     16C7  0D55               	rlf	___fladd@b+3,w
  8204     16C8  0CD5               	rrf	___fladd@b+3,f
  8205     16C9  0CD4               	rrf	___fladd@b+2,f
  8206     16CA  0CD3               	rrf	___fladd@b+1,f
  8207     16CB  0CD2               	rrf	___fladd@b,f
  8208     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8209     16CD  2EC7               	goto	u3495
  8210     16CE                     l2667:
  8211     16CE  3001               	movlw	1
  8212     16CF  00DA               	movwf	??___fladd
  8213     16D0  085A               	movf	??___fladd,w
  8214     16D1  07E4               	addwf	___fladd@bexp,f
  8215     16D2  2F87               	goto	l2703
  8216     16D3                     l2669:
  8217     16D3  0855               	movf	___fladd@b+3,w
  8218     16D4  3A80               	xorlw	128
  8219     16D5  00FF               	movwf	btemp+1
  8220     16D6  0859               	movf	___fladd@a+3,w
  8221     16D7  3A80               	xorlw	128
  8222     16D8  027F               	subwf	btemp+1,w
  8223     16D9  1D03               	skipz
  8224     16DA  2EE5               	goto	u3503
  8225     16DB  0858               	movf	___fladd@a+2,w
  8226     16DC  0254               	subwf	___fladd@b+2,w
  8227     16DD  1D03               	skipz
  8228     16DE  2EE5               	goto	u3503
  8229     16DF  0857               	movf	___fladd@a+1,w
  8230     16E0  0253               	subwf	___fladd@b+1,w
  8231     16E1  1D03               	skipz
  8232     16E2  2EE5               	goto	u3503
  8233     16E3  0856               	movf	___fladd@a,w
  8234     16E4  0252               	subwf	___fladd@b,w
  8235     16E5                     u3503:
  8236     16E5  1803               	skipnc
  8237     16E6  2EE8               	goto	u3501
  8238     16E7  2EE9               	goto	u3500
  8239     16E8                     u3501:
  8240     16E8  2F41               	goto	l2679
  8241     16E9                     u3500:
  8242     16E9                     l2671:
  8243     16E9  30FF               	movlw	255
  8244     16EA  00DA               	movwf	??___fladd
  8245     16EB  30FF               	movlw	255
  8246     16EC  00DB               	movwf	??___fladd+1
  8247     16ED  30FF               	movlw	255
  8248     16EE  00DC               	movwf	??___fladd+2
  8249     16EF  30FF               	movlw	255
  8250     16F0  00DD               	movwf	??___fladd+3
  8251     16F1  0856               	movf	___fladd@a,w
  8252     16F2  00DE               	movwf	??___fladd+4
  8253     16F3  0857               	movf	___fladd@a+1,w
  8254     16F4  00DF               	movwf	??___fladd+5
  8255     16F5  0858               	movf	___fladd@a+2,w
  8256     16F6  00E0               	movwf	??___fladd+6
  8257     16F7  0859               	movf	___fladd@a+3,w
  8258     16F8  00E1               	movwf	??___fladd+7
  8259     16F9  0852               	movf	___fladd@b,w
  8260     16FA  02DE               	subwf	??___fladd+4,f
  8261     16FB  0853               	movf	___fladd@b+1,w
  8262     16FC  1C03               	skipc
  8263     16FD  0F53               	incfsz	___fladd@b+1,w
  8264     16FE  2F00               	goto	u3511
  8265     16FF  2F01               	goto	u3512
  8266     1700                     u3511:
  8267     1700  02DF               	subwf	??___fladd+5,f
  8268     1701                     u3512:
  8269     1701  0854               	movf	___fladd@b+2,w
  8270     1702  1C03               	skipc
  8271     1703  0F54               	incfsz	___fladd@b+2,w
  8272     1704  2F06               	goto	u3513
  8273     1705  2F07               	goto	u3514
  8274     1706                     u3513:
  8275     1706  02E0               	subwf	??___fladd+6,f
  8276     1707                     u3514:
  8277     1707  0855               	movf	___fladd@b+3,w
  8278     1708  1C03               	skipc
  8279     1709  0F55               	incfsz	___fladd@b+3,w
  8280     170A  2F0C               	goto	u3515
  8281     170B  2F0D               	goto	u3516
  8282     170C                     u3515:
  8283     170C  02E1               	subwf	??___fladd+7,f
  8284     170D                     u3516:
  8285     170D  085E               	movf	??___fladd+4,w
  8286     170E  07DA               	addwf	??___fladd,f
  8287     170F  085F               	movf	??___fladd+5,w
  8288     1710  1803               	skipnc
  8289     1711  0F5F               	incfsz	??___fladd+5,w
  8290     1712  2F14               	goto	u3520
  8291     1713  2F15               	goto	u3521
  8292     1714                     u3520:
  8293     1714  07DB               	addwf	??___fladd+1,f
  8294     1715                     u3521:
  8295     1715  0860               	movf	??___fladd+6,w
  8296     1716  1803               	skipnc
  8297     1717  0F60               	incfsz	??___fladd+6,w
  8298     1718  2F1A               	goto	u3522
  8299     1719  2F1B               	goto	u3523
  8300     171A                     u3522:
  8301     171A  07DC               	addwf	??___fladd+2,f
  8302     171B                     u3523:
  8303     171B  0861               	movf	??___fladd+7,w
  8304     171C  1803               	skipnc
  8305     171D  0A61               	incf	??___fladd+7,w
  8306     171E  07DD               	addwf	??___fladd+3,f
  8307     171F  085D               	movf	??___fladd+3,w
  8308     1720  00D5               	movwf	___fladd@b+3
  8309     1721  085C               	movf	??___fladd+2,w
  8310     1722  00D4               	movwf	___fladd@b+2
  8311     1723  085B               	movf	??___fladd+1,w
  8312     1724  00D3               	movwf	___fladd@b+1
  8313     1725  085A               	movf	??___fladd,w
  8314     1726  00D2               	movwf	___fladd@b
  8315     1727                     l2673:
  8316     1727  3080               	movlw	128
  8317     1728  00DA               	movwf	??___fladd
  8318     1729  085A               	movf	??___fladd,w
  8319     172A  06E2               	xorwf	___fladd@signs,f
  8320     172B  09E5               	comf	___fladd@grs,f
  8321     172C  0AE5               	incf	___fladd@grs,f
  8322     172D                     l2675:
  8323     172D  0865               	movf	___fladd@grs,w
  8324     172E  1D03               	btfss	3,2
  8325     172F  2F31               	goto	u3531
  8326     1730  2F32               	goto	u3530
  8327     1731                     u3531:
  8328     1731  2F4F               	goto	l772
  8329     1732                     u3530:
  8330     1732                     l2677:
  8331     1732  3001               	movlw	1
  8332     1733  07D2               	addwf	___fladd@b,f
  8333     1734  3000               	movlw	0
  8334     1735  1803               	skipnc
  8335     1736  3001               	movlw	1
  8336     1737  07D3               	addwf	___fladd@b+1,f
  8337     1738  3000               	movlw	0
  8338     1739  1803               	skipnc
  8339     173A  3001               	movlw	1
  8340     173B  07D4               	addwf	___fladd@b+2,f
  8341     173C  3000               	movlw	0
  8342     173D  1803               	skipnc
  8343     173E  3001               	movlw	1
  8344     173F  07D5               	addwf	___fladd@b+3,f
  8345     1740  2F4F               	goto	l772
  8346     1741                     l2679:
  8347     1741  0856               	movf	___fladd@a,w
  8348     1742  02D2               	subwf	___fladd@b,f
  8349     1743  0857               	movf	___fladd@a+1,w
  8350     1744  1C03               	skipc
  8351     1745  0F57               	incfsz	___fladd@a+1,w
  8352     1746  02D3               	subwf	___fladd@b+1,f
  8353     1747  0858               	movf	___fladd@a+2,w
  8354     1748  1C03               	skipc
  8355     1749  0F58               	incfsz	___fladd@a+2,w
  8356     174A  02D4               	subwf	___fladd@b+2,f
  8357     174B  0859               	movf	___fladd@a+3,w
  8358     174C  1C03               	skipc
  8359     174D  0F59               	incfsz	___fladd@a+3,w
  8360     174E  02D5               	subwf	___fladd@b+3,f
  8361     174F                     l772:
  8362     174F  0855               	movf	___fladd@b+3,w
  8363     1750  0454               	iorwf	___fladd@b+2,w
  8364     1751  0453               	iorwf	___fladd@b+1,w
  8365     1752  0452               	iorwf	___fladd@b,w
  8366     1753  1D03               	skipz
  8367     1754  2F56               	goto	u3541
  8368     1755  2F57               	goto	u3540
  8369     1756                     u3541:
  8370     1756  2F83               	goto	l2701
  8371     1757                     u3540:
  8372     1757                     l2681:
  8373     1757  0865               	movf	___fladd@grs,w
  8374     1758  1D03               	btfss	3,2
  8375     1759  2F5B               	goto	u3551
  8376     175A  2F5C               	goto	u3550
  8377     175B                     u3551:
  8378     175B  2F83               	goto	l2701
  8379     175C                     u3550:
  8380     175C                     l2683:
  8381     175C  3000               	movlw	0
  8382     175D  00D5               	movwf	?___fladd+3
  8383     175E  3000               	movlw	0
  8384     175F  00D4               	movwf	?___fladd+2
  8385     1760  3000               	movlw	0
  8386     1761  00D3               	movwf	?___fladd+1
  8387     1762  3000               	movlw	0
  8388     1763  00D2               	movwf	?___fladd
  8389     1764  2FFF               	goto	l764
  8390     1765                     l2687:
  8391     1765  3001               	movlw	1
  8392     1766  00DA               	movwf	??___fladd
  8393     1767                     u3565:
  8394     1767  1003               	clrc
  8395     1768  0DD2               	rlf	___fladd@b,f
  8396     1769  0DD3               	rlf	___fladd@b+1,f
  8397     176A  0DD4               	rlf	___fladd@b+2,f
  8398     176B  0DD5               	rlf	___fladd@b+3,f
  8399     176C  0BDA               	decfsz	??___fladd,f
  8400     176D  2F67               	goto	u3565
  8401     176E                     l2689:
  8402     176E  1FE5               	btfss	___fladd@grs,7
  8403     176F  2F71               	goto	u3571
  8404     1770  2F72               	goto	u3570
  8405     1771                     u3571:
  8406     1771  2F73               	goto	l776
  8407     1772                     u3570:
  8408     1772                     l2691:
  8409     1772  1452               	bsf	___fladd@b,0
  8410     1773                     l776:
  8411     1773  1C65               	btfss	___fladd@grs,0
  8412     1774  2F76               	goto	u3581
  8413     1775  2F77               	goto	u3580
  8414     1776                     u3581:
  8415     1776  2F7A               	goto	l2695
  8416     1777                     u3580:
  8417     1777                     l2693:
  8418     1777  1403               	setc
  8419     1778  0DE5               	rlf	___fladd@grs,f
  8420     1779  2F7C               	goto	l2697
  8421     177A                     l2695:
  8422     177A  1003               	clrc
  8423     177B  0DE5               	rlf	___fladd@grs,f
  8424     177C                     l2697:
  8425     177C  0864               	movf	___fladd@bexp,w
  8426     177D  1903               	btfsc	3,2
  8427     177E  2F80               	goto	u3591
  8428     177F  2F81               	goto	u3590
  8429     1780                     u3591:
  8430     1780  2F83               	goto	l2701
  8431     1781                     u3590:
  8432     1781                     l2699:
  8433     1781  3001               	movlw	1
  8434     1782  02E4               	subwf	___fladd@bexp,f
  8435     1783                     l2701:
  8436     1783  1FD4               	btfss	___fladd@b+2,7
  8437     1784  2F86               	goto	u3601
  8438     1785  2F87               	goto	u3600
  8439     1786                     u3601:
  8440     1786  2F65               	goto	l2687
  8441     1787                     u3600:
  8442     1787                     l2703:
  8443     1787  01E3               	clrf	___fladd@aexp
  8444     1788                     l2705:
  8445     1788  1FE5               	btfss	___fladd@grs,7
  8446     1789  2F8B               	goto	u3611
  8447     178A  2F8C               	goto	u3610
  8448     178B                     u3611:
  8449     178B  2F9A               	goto	l2713
  8450     178C                     u3610:
  8451     178C                     l2707:
  8452     178C  0865               	movf	___fladd@grs,w
  8453     178D  397F               	andlw	127
  8454     178E  1903               	btfsc	3,2
  8455     178F  2F91               	goto	u3621
  8456     1790  2F92               	goto	u3620
  8457     1791                     u3621:
  8458     1791  2F95               	goto	l782
  8459     1792                     u3620:
  8460     1792                     l2709:
  8461     1792  01E3               	clrf	___fladd@aexp
  8462     1793  0AE3               	incf	___fladd@aexp,f
  8463     1794  2F9A               	goto	l2713
  8464     1795                     l782:
  8465     1795  1C52               	btfss	___fladd@b,0
  8466     1796  2F98               	goto	u3631
  8467     1797  2F99               	goto	u3630
  8468     1798                     u3631:
  8469     1798  2F9A               	goto	l2713
  8470     1799                     u3630:
  8471     1799  2F92               	goto	l2709
  8472     179A                     l2713:
  8473     179A  0863               	movf	___fladd@aexp,w
  8474     179B  1903               	btfsc	3,2
  8475     179C  2F9E               	goto	u3641
  8476     179D  2F9F               	goto	u3640
  8477     179E                     u3641:
  8478     179E  2FD3               	goto	l785
  8479     179F                     u3640:
  8480     179F                     l2715:
  8481     179F  3001               	movlw	1
  8482     17A0  07D2               	addwf	___fladd@b,f
  8483     17A1  3000               	movlw	0
  8484     17A2  1803               	skipnc
  8485     17A3  3001               	movlw	1
  8486     17A4  07D3               	addwf	___fladd@b+1,f
  8487     17A5  3000               	movlw	0
  8488     17A6  1803               	skipnc
  8489     17A7  3001               	movlw	1
  8490     17A8  07D4               	addwf	___fladd@b+2,f
  8491     17A9  3000               	movlw	0
  8492     17AA  1803               	skipnc
  8493     17AB  3001               	movlw	1
  8494     17AC  07D5               	addwf	___fladd@b+3,f
  8495     17AD                     l2717:
  8496     17AD  1C55               	btfss	___fladd@b+3,0
  8497     17AE  2FB0               	goto	u3651
  8498     17AF  2FB1               	goto	u3650
  8499     17B0                     u3651:
  8500     17B0  2FD3               	goto	l785
  8501     17B1                     u3650:
  8502     17B1                     l2719:
  8503     17B1  0852               	movf	___fladd@b,w
  8504     17B2  00DA               	movwf	??___fladd
  8505     17B3  0853               	movf	___fladd@b+1,w
  8506     17B4  00DB               	movwf	??___fladd+1
  8507     17B5  0854               	movf	___fladd@b+2,w
  8508     17B6  00DC               	movwf	??___fladd+2
  8509     17B7  0855               	movf	___fladd@b+3,w
  8510     17B8  00DD               	movwf	??___fladd+3
  8511     17B9  3001               	movlw	1
  8512     17BA  00DE               	movwf	??___fladd+4
  8513     17BB                     u3665:
  8514     17BB  0D5D               	rlf	??___fladd+3,w
  8515     17BC  0CDD               	rrf	??___fladd+3,f
  8516     17BD  0CDC               	rrf	??___fladd+2,f
  8517     17BE  0CDB               	rrf	??___fladd+1,f
  8518     17BF  0CDA               	rrf	??___fladd,f
  8519     17C0                     u3660:
  8520     17C0  0BDE               	decfsz	??___fladd+4,f
  8521     17C1  2FBB               	goto	u3665
  8522     17C2  085D               	movf	??___fladd+3,w
  8523     17C3  00D5               	movwf	___fladd@b+3
  8524     17C4  085C               	movf	??___fladd+2,w
  8525     17C5  00D4               	movwf	___fladd@b+2
  8526     17C6  085B               	movf	??___fladd+1,w
  8527     17C7  00D3               	movwf	___fladd@b+1
  8528     17C8  085A               	movf	??___fladd,w
  8529     17C9  00D2               	movwf	___fladd@b
  8530     17CA  0A64               	incf	___fladd@bexp,w
  8531     17CB  1903               	btfsc	3,2
  8532     17CC  2FCE               	goto	u3671
  8533     17CD  2FCF               	goto	u3670
  8534     17CE                     u3671:
  8535     17CE  2FD3               	goto	l785
  8536     17CF                     u3670:
  8537     17CF                     l2721:
  8538     17CF  3001               	movlw	1
  8539     17D0  00DA               	movwf	??___fladd
  8540     17D1  085A               	movf	??___fladd,w
  8541     17D2  07E4               	addwf	___fladd@bexp,f
  8542     17D3                     l785:
  8543     17D3  0A64               	incf	___fladd@bexp,w
  8544     17D4  1903               	btfsc	3,2
  8545     17D5  2FD7               	goto	u3681
  8546     17D6  2FD8               	goto	u3680
  8547     17D7                     u3681:
  8548     17D7  2FDD               	goto	l2725
  8549     17D8                     u3680:
  8550     17D8                     l2723:
  8551     17D8  0864               	movf	___fladd@bexp,w
  8552     17D9  1D03               	btfss	3,2
  8553     17DA  2FDC               	goto	u3691
  8554     17DB  2FDD               	goto	u3690
  8555     17DC                     u3691:
  8556     17DC  2FEB               	goto	l2731
  8557     17DD                     u3690:
  8558     17DD                     l2725:
  8559     17DD  3000               	movlw	0
  8560     17DE  00D5               	movwf	___fladd@b+3
  8561     17DF  3000               	movlw	0
  8562     17E0  00D4               	movwf	___fladd@b+2
  8563     17E1  3000               	movlw	0
  8564     17E2  00D3               	movwf	___fladd@b+1
  8565     17E3  3000               	movlw	0
  8566     17E4  00D2               	movwf	___fladd@b
  8567     17E5                     l2727:
  8568     17E5  0864               	movf	___fladd@bexp,w
  8569     17E6  1D03               	btfss	3,2
  8570     17E7  2FE9               	goto	u3701
  8571     17E8  2FEA               	goto	u3700
  8572     17E9                     u3701:
  8573     17E9  2FEB               	goto	l2731
  8574     17EA                     u3700:
  8575     17EA                     l2729:
  8576     17EA  01E2               	clrf	___fladd@signs
  8577     17EB                     l2731:
  8578     17EB  1C64               	btfss	___fladd@bexp,0
  8579     17EC  2FEE               	goto	u3711
  8580     17ED  2FEF               	goto	u3710
  8581     17EE                     u3711:
  8582     17EE  2FF1               	goto	l2735
  8583     17EF                     u3710:
  8584     17EF                     l2733:
  8585     17EF  17D4               	bsf	___fladd@b+2,7
  8586     17F0  2FF5               	goto	l793
  8587     17F1                     l2735:
  8588     17F1  307F               	movlw	127
  8589     17F2  00DA               	movwf	??___fladd
  8590     17F3  085A               	movf	??___fladd,w
  8591     17F4  05D4               	andwf	___fladd@b+2,f
  8592     17F5                     l793:
  8593     17F5  0864               	movf	___fladd@bexp,w
  8594     17F6  00DA               	movwf	??___fladd
  8595     17F7  1003               	clrc
  8596     17F8  0C5A               	rrf	??___fladd,w
  8597     17F9  00D5               	movwf	___fladd@b+3
  8598     17FA                     l2737:
  8599     17FA  1FE2               	btfss	___fladd@signs,7
  8600     17FB  2FFD               	goto	u3721
  8601     17FC  2FFE               	goto	u3720
  8602     17FD                     u3721:
  8603     17FD  2FFF               	goto	l794
  8604     17FE                     u3720:
  8605     17FE                     l2739:
  8606     17FE  17D5               	bsf	___fladd@b+3,7
  8607     17FF                     l794:
  8608     17FF                     l764:
  8609     17FF  0008               	return
  8610     1800                     __end_of___fladd:
  8611                           
  8612                           	psect	text19
  8613     1D7C                     __ptext19:	
  8614 ;; *************** function ___flneg *****************
  8615 ;; Defined at:
  8616 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  f1              4    0[COMMON] unsigned char 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  4    0[COMMON] unsigned char 
  8623 ;; Registers used:
  8624 ;;		wreg
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8630 ;;      Params:         4       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0
  8633 ;;      Totals:         4       0       0       0       0
  8634 ;;Total ram usage:        4 bytes
  8635 ;; Hardware stack levels used: 1
  8636 ;; This function calls:
  8637 ;;		Nothing
  8638 ;; This function is called by:
  8639 ;;		_sprintf
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643     1D7C                     ___flneg:	
  8644                           ;psect for function ___flneg
  8645                           
  8646     1D7C                     l3151:	
  8647                           ;incstack = 0
  8648                           ; Regs used in ___flneg: [wreg]
  8649                           
  8650     1D7C  0873               	movf	___flneg@f1+3,w
  8651     1D7D  0472               	iorwf	___flneg@f1+2,w
  8652     1D7E  0471               	iorwf	___flneg@f1+1,w
  8653     1D7F  0470               	iorwf	___flneg@f1,w
  8654     1D80  1903               	skipnz
  8655     1D81  2D83               	goto	u4811
  8656     1D82  2D84               	goto	u4810
  8657     1D83                     u4811:
  8658     1D83  2D86               	goto	l3155
  8659     1D84                     u4810:
  8660     1D84                     l3153:
  8661     1D84  3080               	movlw	128
  8662     1D85  06F3               	xorwf	___flneg@f1+3,f
  8663     1D86                     l3155:
  8664     1D86                     l623:
  8665     1D86  0008               	return
  8666     1D87                     __end_of___flneg:
  8667                           
  8668                           	psect	text20
  8669     0803                     __ptext20:	
  8670 ;; *************** function ___flge *****************
  8671 ;; Defined at:
  8672 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  ff1             4    0[COMMON] unsigned char 
  8675 ;;  ff2             4    4[COMMON] unsigned char 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;		None               void
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8687 ;;      Params:         8       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0
  8689 ;;      Temps:          4       0       0       0       0
  8690 ;;      Totals:        12       0       0       0       0
  8691 ;;Total ram usage:       12 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_sprintf
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700     0803                     ___flge:	
  8701                           ;psect for function ___flge
  8702                           
  8703     0803                     l3131:	
  8704                           ;incstack = 0
  8705                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8706                           
  8707     0803  3000               	movlw	0
  8708     0804  0570               	andwf	___flge@ff1,w
  8709     0805  00F8               	movwf	??___flge
  8710     0806  3000               	movlw	0
  8711     0807  0571               	andwf	___flge@ff1+1,w
  8712     0808  00F9               	movwf	??___flge+1
  8713     0809  3080               	movlw	128
  8714     080A  0572               	andwf	___flge@ff1+2,w
  8715     080B  00FA               	movwf	??___flge+2
  8716     080C  307F               	movlw	127
  8717     080D  0573               	andwf	___flge@ff1+3,w
  8718     080E  00FB               	movwf	??___flge+3
  8719     080F  087B               	movf	??___flge+3,w
  8720     0810  047A               	iorwf	??___flge+2,w
  8721     0811  0479               	iorwf	??___flge+1,w
  8722     0812  0478               	iorwf	??___flge,w
  8723     0813  1D03               	skipz
  8724     0814  2816               	goto	u4741
  8725     0815  2817               	goto	u4740
  8726     0816                     u4741:
  8727     0816  281F               	goto	l615
  8728     0817                     u4740:
  8729     0817                     l3133:
  8730     0817  3000               	movlw	0
  8731     0818  00F3               	movwf	___flge@ff1+3
  8732     0819  3000               	movlw	0
  8733     081A  00F2               	movwf	___flge@ff1+2
  8734     081B  3000               	movlw	0
  8735     081C  00F1               	movwf	___flge@ff1+1
  8736     081D  3000               	movlw	0
  8737     081E  00F0               	movwf	___flge@ff1
  8738     081F                     l615:
  8739     081F  3000               	movlw	0
  8740     0820  0574               	andwf	___flge@ff2,w
  8741     0821  00F8               	movwf	??___flge
  8742     0822  3000               	movlw	0
  8743     0823  0575               	andwf	___flge@ff2+1,w
  8744     0824  00F9               	movwf	??___flge+1
  8745     0825  3080               	movlw	128
  8746     0826  0576               	andwf	___flge@ff2+2,w
  8747     0827  00FA               	movwf	??___flge+2
  8748     0828  307F               	movlw	127
  8749     0829  0577               	andwf	___flge@ff2+3,w
  8750     082A  00FB               	movwf	??___flge+3
  8751     082B  087B               	movf	??___flge+3,w
  8752     082C  047A               	iorwf	??___flge+2,w
  8753     082D  0479               	iorwf	??___flge+1,w
  8754     082E  0478               	iorwf	??___flge,w
  8755     082F  1D03               	skipz
  8756     0830  2832               	goto	u4751
  8757     0831  2833               	goto	u4750
  8758     0832                     u4751:
  8759     0832  283B               	goto	l3137
  8760     0833                     u4750:
  8761     0833                     l3135:
  8762     0833  3000               	movlw	0
  8763     0834  00F7               	movwf	___flge@ff2+3
  8764     0835  3000               	movlw	0
  8765     0836  00F6               	movwf	___flge@ff2+2
  8766     0837  3000               	movlw	0
  8767     0838  00F5               	movwf	___flge@ff2+1
  8768     0839  3000               	movlw	0
  8769     083A  00F4               	movwf	___flge@ff2
  8770     083B                     l3137:
  8771     083B  1FF3               	btfss	___flge@ff1+3,7
  8772     083C  283E               	goto	u4761
  8773     083D  283F               	goto	u4760
  8774     083E                     u4761:
  8775     083E  2863               	goto	l3141
  8776     083F                     u4760:
  8777     083F                     l3139:
  8778     083F  3000               	movlw	0
  8779     0840  00F8               	movwf	??___flge
  8780     0841  3000               	movlw	0
  8781     0842  00F9               	movwf	??___flge+1
  8782     0843  3000               	movlw	0
  8783     0844  00FA               	movwf	??___flge+2
  8784     0845  3080               	movlw	128
  8785     0846  00FB               	movwf	??___flge+3
  8786     0847  0870               	movf	___flge@ff1,w
  8787     0848  02F8               	subwf	??___flge,f
  8788     0849  0871               	movf	___flge@ff1+1,w
  8789     084A  1C03               	skipc
  8790     084B  0F71               	incfsz	___flge@ff1+1,w
  8791     084C  284E               	goto	u4771
  8792     084D  284F               	goto	u4772
  8793     084E                     u4771:
  8794     084E  02F9               	subwf	??___flge+1,f
  8795     084F                     u4772:
  8796     084F  0872               	movf	___flge@ff1+2,w
  8797     0850  1C03               	skipc
  8798     0851  0F72               	incfsz	___flge@ff1+2,w
  8799     0852  2854               	goto	u4773
  8800     0853  2855               	goto	u4774
  8801     0854                     u4773:
  8802     0854  02FA               	subwf	??___flge+2,f
  8803     0855                     u4774:
  8804     0855  0873               	movf	___flge@ff1+3,w
  8805     0856  1C03               	skipc
  8806     0857  0F73               	incfsz	___flge@ff1+3,w
  8807     0858  285A               	goto	u4775
  8808     0859  285B               	goto	u4776
  8809     085A                     u4775:
  8810     085A  02FB               	subwf	??___flge+3,f
  8811     085B                     u4776:
  8812     085B  087B               	movf	??___flge+3,w
  8813     085C  00F3               	movwf	___flge@ff1+3
  8814     085D  087A               	movf	??___flge+2,w
  8815     085E  00F2               	movwf	___flge@ff1+2
  8816     085F  0879               	movf	??___flge+1,w
  8817     0860  00F1               	movwf	___flge@ff1+1
  8818     0861  0878               	movf	??___flge,w
  8819     0862  00F0               	movwf	___flge@ff1
  8820     0863                     l3141:
  8821     0863  1FF7               	btfss	___flge@ff2+3,7
  8822     0864  2866               	goto	u4781
  8823     0865  2867               	goto	u4780
  8824     0866                     u4781:
  8825     0866  288B               	goto	l618
  8826     0867                     u4780:
  8827     0867                     l3143:
  8828     0867  3000               	movlw	0
  8829     0868  00F8               	movwf	??___flge
  8830     0869  3000               	movlw	0
  8831     086A  00F9               	movwf	??___flge+1
  8832     086B  3000               	movlw	0
  8833     086C  00FA               	movwf	??___flge+2
  8834     086D  3080               	movlw	128
  8835     086E  00FB               	movwf	??___flge+3
  8836     086F  0874               	movf	___flge@ff2,w
  8837     0870  02F8               	subwf	??___flge,f
  8838     0871  0875               	movf	___flge@ff2+1,w
  8839     0872  1C03               	skipc
  8840     0873  0F75               	incfsz	___flge@ff2+1,w
  8841     0874  2876               	goto	u4791
  8842     0875  2877               	goto	u4792
  8843     0876                     u4791:
  8844     0876  02F9               	subwf	??___flge+1,f
  8845     0877                     u4792:
  8846     0877  0876               	movf	___flge@ff2+2,w
  8847     0878  1C03               	skipc
  8848     0879  0F76               	incfsz	___flge@ff2+2,w
  8849     087A  287C               	goto	u4793
  8850     087B  287D               	goto	u4794
  8851     087C                     u4793:
  8852     087C  02FA               	subwf	??___flge+2,f
  8853     087D                     u4794:
  8854     087D  0877               	movf	___flge@ff2+3,w
  8855     087E  1C03               	skipc
  8856     087F  0F77               	incfsz	___flge@ff2+3,w
  8857     0880  2882               	goto	u4795
  8858     0881  2883               	goto	u4796
  8859     0882                     u4795:
  8860     0882  02FB               	subwf	??___flge+3,f
  8861     0883                     u4796:
  8862     0883  087B               	movf	??___flge+3,w
  8863     0884  00F7               	movwf	___flge@ff2+3
  8864     0885  087A               	movf	??___flge+2,w
  8865     0886  00F6               	movwf	___flge@ff2+2
  8866     0887  0879               	movf	??___flge+1,w
  8867     0888  00F5               	movwf	___flge@ff2+1
  8868     0889  0878               	movf	??___flge,w
  8869     088A  00F4               	movwf	___flge@ff2
  8870     088B                     l618:
  8871     088B  3080               	movlw	128
  8872     088C  06F3               	xorwf	___flge@ff1+3,f
  8873     088D  3080               	movlw	128
  8874     088E  06F7               	xorwf	___flge@ff2+3,f
  8875     088F  0877               	movf	___flge@ff2+3,w
  8876     0890  0273               	subwf	___flge@ff1+3,w
  8877     0891  1D03               	skipz
  8878     0892  289D               	goto	u4805
  8879     0893  0876               	movf	___flge@ff2+2,w
  8880     0894  0272               	subwf	___flge@ff1+2,w
  8881     0895  1D03               	skipz
  8882     0896  289D               	goto	u4805
  8883     0897  0875               	movf	___flge@ff2+1,w
  8884     0898  0271               	subwf	___flge@ff1+1,w
  8885     0899  1D03               	skipz
  8886     089A  289D               	goto	u4805
  8887     089B  0874               	movf	___flge@ff2,w
  8888     089C  0270               	subwf	___flge@ff1,w
  8889     089D                     u4805:
  8890     089D  1803               	skipnc
  8891     089E  28A0               	goto	u4801
  8892     089F  28A1               	goto	u4800
  8893     08A0                     u4801:
  8894     08A0  28A3               	goto	l3147
  8895     08A1                     u4800:
  8896     08A1                     l3145:
  8897     08A1  1003               	clrc
  8898     08A2  28A4               	goto	l619
  8899     08A3                     l3147:
  8900     08A3  1403               	setc
  8901     08A4                     l619:
  8902     08A4  0008               	return
  8903     08A5                     __end_of___flge:
  8904                           
  8905                           	psect	text21
  8906     1FB2                     __ptext21:	
  8907 ;; *************** function ___fleq *****************
  8908 ;; Defined at:
  8909 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  ff1             4    0[COMMON] unsigned char 
  8912 ;;  ff2             4    4[COMMON] unsigned char 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;		None               void
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8924 ;;      Params:         8       0       0       0       0
  8925 ;;      Locals:         0       0       0       0       0
  8926 ;;      Temps:          4       0       0       0       0
  8927 ;;      Totals:        12       0       0       0       0
  8928 ;;Total ram usage:       12 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; This function calls:
  8931 ;;		Nothing
  8932 ;; This function is called by:
  8933 ;;		_sprintf
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937     1FB2                     ___fleq:	
  8938                           ;psect for function ___fleq
  8939                           
  8940     1FB2                     l3119:	
  8941                           ;incstack = 0
  8942                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8943                           
  8944     1FB2  3000               	movlw	0
  8945     1FB3  0570               	andwf	___fleq@ff1,w
  8946     1FB4  00F8               	movwf	??___fleq
  8947     1FB5  3000               	movlw	0
  8948     1FB6  0571               	andwf	___fleq@ff1+1,w
  8949     1FB7  00F9               	movwf	??___fleq+1
  8950     1FB8  3080               	movlw	128
  8951     1FB9  0572               	andwf	___fleq@ff1+2,w
  8952     1FBA  00FA               	movwf	??___fleq+2
  8953     1FBB  307F               	movlw	127
  8954     1FBC  0573               	andwf	___fleq@ff1+3,w
  8955     1FBD  00FB               	movwf	??___fleq+3
  8956     1FBE  087B               	movf	??___fleq+3,w
  8957     1FBF  047A               	iorwf	??___fleq+2,w
  8958     1FC0  0479               	iorwf	??___fleq+1,w
  8959     1FC1  0478               	iorwf	??___fleq,w
  8960     1FC2  1D03               	skipz
  8961     1FC3  2FC5               	goto	u4711
  8962     1FC4  2FC6               	goto	u4710
  8963     1FC5                     u4711:
  8964     1FC5  2FCE               	goto	l610
  8965     1FC6                     u4710:
  8966     1FC6                     l3121:
  8967     1FC6  3000               	movlw	0
  8968     1FC7  00F3               	movwf	___fleq@ff1+3
  8969     1FC8  3000               	movlw	0
  8970     1FC9  00F2               	movwf	___fleq@ff1+2
  8971     1FCA  3000               	movlw	0
  8972     1FCB  00F1               	movwf	___fleq@ff1+1
  8973     1FCC  3000               	movlw	0
  8974     1FCD  00F0               	movwf	___fleq@ff1
  8975     1FCE                     l610:
  8976     1FCE  3000               	movlw	0
  8977     1FCF  0574               	andwf	___fleq@ff2,w
  8978     1FD0  00F8               	movwf	??___fleq
  8979     1FD1  3000               	movlw	0
  8980     1FD2  0575               	andwf	___fleq@ff2+1,w
  8981     1FD3  00F9               	movwf	??___fleq+1
  8982     1FD4  3080               	movlw	128
  8983     1FD5  0576               	andwf	___fleq@ff2+2,w
  8984     1FD6  00FA               	movwf	??___fleq+2
  8985     1FD7  307F               	movlw	127
  8986     1FD8  0577               	andwf	___fleq@ff2+3,w
  8987     1FD9  00FB               	movwf	??___fleq+3
  8988     1FDA  087B               	movf	??___fleq+3,w
  8989     1FDB  047A               	iorwf	??___fleq+2,w
  8990     1FDC  0479               	iorwf	??___fleq+1,w
  8991     1FDD  0478               	iorwf	??___fleq,w
  8992     1FDE  1D03               	skipz
  8993     1FDF  2FE1               	goto	u4721
  8994     1FE0  2FE2               	goto	u4720
  8995     1FE1                     u4721:
  8996     1FE1  2FEA               	goto	l611
  8997     1FE2                     u4720:
  8998     1FE2                     l3123:
  8999     1FE2  3000               	movlw	0
  9000     1FE3  00F7               	movwf	___fleq@ff2+3
  9001     1FE4  3000               	movlw	0
  9002     1FE5  00F6               	movwf	___fleq@ff2+2
  9003     1FE6  3000               	movlw	0
  9004     1FE7  00F5               	movwf	___fleq@ff2+1
  9005     1FE8  3000               	movlw	0
  9006     1FE9  00F4               	movwf	___fleq@ff2
  9007     1FEA                     l611:
  9008     1FEA  0877               	movf	___fleq@ff2+3,w
  9009     1FEB  0673               	xorwf	___fleq@ff1+3,w
  9010     1FEC  1D03               	skipz
  9011     1FED  2FF8               	goto	u4735
  9012     1FEE  0876               	movf	___fleq@ff2+2,w
  9013     1FEF  0672               	xorwf	___fleq@ff1+2,w
  9014     1FF0  1D03               	skipz
  9015     1FF1  2FF8               	goto	u4735
  9016     1FF2  0875               	movf	___fleq@ff2+1,w
  9017     1FF3  0671               	xorwf	___fleq@ff1+1,w
  9018     1FF4  1D03               	skipz
  9019     1FF5  2FF8               	goto	u4735
  9020     1FF6  0874               	movf	___fleq@ff2,w
  9021     1FF7  0670               	xorwf	___fleq@ff1,w
  9022     1FF8                     u4735:
  9023     1FF8  1903               	skipnz
  9024     1FF9  2FFB               	goto	u4731
  9025     1FFA  2FFC               	goto	u4730
  9026     1FFB                     u4731:
  9027     1FFB  2FFE               	goto	l3127
  9028     1FFC                     u4730:
  9029     1FFC                     l3125:
  9030     1FFC  1003               	clrc
  9031     1FFD  2FFF               	goto	l612
  9032     1FFE                     l3127:
  9033     1FFE  1403               	setc
  9034     1FFF                     l612:
  9035     1FFF  0008               	return
  9036     2000                     __end_of___fleq:
  9037                           
  9038                           	psect	text22
  9039     10AC                     __ptext22:	
  9040 ;; *************** function _setup *****************
  9041 ;; Defined at:
  9042 ;;		line 100 in file "main_M.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0, pclath, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9056 ;;      Params:         0       0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0
  9059 ;;      Totals:         0       0       0       0       0
  9060 ;;Total ram usage:        0 bytes
  9061 ;; Hardware stack levels used: 1
  9062 ;; Hardware stack levels required when called: 3
  9063 ;; This function calls:
  9064 ;;		_I2C_Master_Init
  9065 ;;		_Lcd_Init_4bits
  9066 ;;		_setupINTOSC
  9067 ;; This function is called by:
  9068 ;;		_main
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072     10AC                     _setup:	
  9073                           ;psect for function _setup
  9074                           
  9075     10AC                     l3323:	
  9076                           ;incstack = 0
  9077                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9078                           
  9079                           
  9080                           ;main_M.c: 102:     ANSEL = 0;
  9081     10AC  1683               	bsf	3,5	;RP0=1, select bank3
  9082     10AD  1703               	bsf	3,6	;RP1=1, select bank3
  9083     10AE  0188               	clrf	8	;volatile
  9084                           
  9085                           ;main_M.c: 103:     ANSELH = 0;
  9086     10AF  0189               	clrf	9	;volatile
  9087                           
  9088                           ;main_M.c: 105:     TRISA = 0;
  9089     10B0  1683               	bsf	3,5	;RP0=1, select bank1
  9090     10B1  1303               	bcf	3,6	;RP1=0, select bank1
  9091     10B2  0185               	clrf	5	;volatile
  9092     10B3                     l3325:
  9093                           
  9094                           ;main_M.c: 106:     TRISB = 0b00000010;
  9095     10B3  3002               	movlw	2
  9096     10B4  0086               	movwf	6	;volatile
  9097     10B5                     l3327:
  9098                           
  9099                           ;main_M.c: 107:     TRISD = 0;
  9100     10B5  0188               	clrf	8	;volatile
  9101     10B6                     l3329:
  9102                           
  9103                           ;main_M.c: 115:     PORTA = 0;
  9104     10B6  1283               	bcf	3,5	;RP0=0, select bank0
  9105     10B7  1303               	bcf	3,6	;RP1=0, select bank0
  9106     10B8  0185               	clrf	5	;volatile
  9107     10B9                     l3331:
  9108                           
  9109                           ;main_M.c: 116:     PORTB = 0;
  9110     10B9  0186               	clrf	6	;volatile
  9111     10BA                     l3333:
  9112                           
  9113                           ;main_M.c: 117:     PORTD = 0;
  9114     10BA  0188               	clrf	8	;volatile
  9115     10BB                     l3335:
  9116                           
  9117                           ;main_M.c: 119:     I2C_Master_Init(100000);
  9118     10BB  3000               	movlw	0
  9119     10BC  00A3               	movwf	I2C_Master_Init@c+3
  9120     10BD  3001               	movlw	1
  9121     10BE  00A2               	movwf	I2C_Master_Init@c+2
  9122     10BF  3086               	movlw	134
  9123     10C0  00A1               	movwf	I2C_Master_Init@c+1
  9124     10C1  30A0               	movlw	160
  9125     10C2  00A0               	movwf	I2C_Master_Init@c
  9126     10C3  160A  158A  26F0  160A  118A  	fcall	_I2C_Master_Init
  9127     10C8                     l3337:
  9128                           
  9129                           ;main_M.c: 120:     setupINTOSC(FOSC_8MHZ);
  9130     10C8  3007               	movlw	7
  9131     10C9  160A  158A  25A1  160A  118A  	fcall	_setupINTOSC
  9132     10CE                     l3339:
  9133                           
  9134                           ;main_M.c: 121:     Lcd_Init_4bits();
  9135     10CE  160A  118A  2181  160A  118A  	fcall	_Lcd_Init_4bits
  9136     10D3                     l162:
  9137     10D3  0008               	return
  9138     10D4                     __end_of_setup:
  9139                           
  9140                           	psect	text23
  9141     1DA1                     __ptext23:	
  9142 ;; *************** function _setupINTOSC *****************
  9143 ;; Defined at:
  9144 ;;		line 11 in file "configINTOSC.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  F               1    wreg     enum E1292
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  F               1    1[COMMON] enum E1292
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9158 ;;      Params:         0       0       0       0       0
  9159 ;;      Locals:         1       0       0       0       0
  9160 ;;      Temps:          1       0       0       0       0
  9161 ;;      Totals:         2       0       0       0       0
  9162 ;;Total ram usage:        2 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_setup
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171     1DA1                     _setupINTOSC:	
  9172                           ;psect for function _setupINTOSC
  9173                           
  9174                           
  9175                           ;incstack = 0
  9176                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9177                           ;setupINTOSC@F stored from wreg
  9178     1DA1  00F1               	movwf	setupINTOSC@F
  9179     1DA2                     l2897:
  9180                           
  9181                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  9182     1DA2  0871               	movf	setupINTOSC@F,w
  9183     1DA3  00F0               	movwf	??_setupINTOSC
  9184     1DA4  0EF0               	swapf	??_setupINTOSC,f
  9185     1DA5  1683               	bsf	3,5	;RP0=1, select bank1
  9186     1DA6  1303               	bcf	3,6	;RP1=0, select bank1
  9187     1DA7  080F               	movf	15,w	;volatile
  9188     1DA8  0670               	xorwf	??_setupINTOSC,w
  9189     1DA9  398F               	andlw	-113
  9190     1DAA  0670               	xorwf	??_setupINTOSC,w
  9191     1DAB  008F               	movwf	15	;volatile
  9192     1DAC                     l2899:
  9193                           
  9194                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  9195     1DAC  140F               	bsf	15,0	;volatile
  9196     1DAD                     l60:
  9197     1DAD  0008               	return
  9198     1DAE                     __end_of_setupINTOSC:
  9199                           
  9200                           	psect	text24
  9201     1181                     __ptext24:	
  9202 ;; *************** function _Lcd_Init_4bits *****************
  9203 ;; Defined at:
  9204 ;;		line 66 in file "configLCD_4bits.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, status,2, status,0, pclath, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9218 ;;      Params:         0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0
  9220 ;;      Temps:          2       0       0       0       0
  9221 ;;      Totals:         2       0       0       0       0
  9222 ;;Total ram usage:        2 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; Hardware stack levels required when called: 2
  9225 ;; This function calls:
  9226 ;;		_Lcd_Cmd_4bits
  9227 ;;		_Lcd_Port_4bits
  9228 ;; This function is called by:
  9229 ;;		_setup
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233     1181                     _Lcd_Init_4bits:	
  9234                           ;psect for function _Lcd_Init_4bits
  9235                           
  9236     1181                     l2901:	
  9237                           ;incstack = 0
  9238                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  9239                           
  9240                           
  9241                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  9242     1181  3000               	movlw	0
  9243     1182  160A  158A  25FB  160A  118A  	fcall	_Lcd_Port_4bits
  9244     1187                     l2903:
  9245                           
  9246                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9247     1187  3034               	movlw	52
  9248     1188  00F5               	movwf	??_Lcd_Init_4bits+1
  9249     1189  30F1               	movlw	241
  9250     118A  00F4               	movwf	??_Lcd_Init_4bits
  9251     118B                     u5567:
  9252     118B  0BF4               	decfsz	??_Lcd_Init_4bits,f
  9253     118C  298B               	goto	u5567
  9254     118D  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  9255     118E  298B               	goto	u5567
  9256     118F  2990               	nop2
  9257     1190                     l2905:
  9258                           
  9259                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  9260     1190  3003               	movlw	3
  9261     1191  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9262                           
  9263                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9264     1196  300D               	movlw	13
  9265     1197  00F5               	movwf	??_Lcd_Init_4bits+1
  9266     1198  30FB               	movlw	251
  9267     1199  00F4               	movwf	??_Lcd_Init_4bits
  9268     119A                     u5577:
  9269     119A  0BF4               	decfsz	??_Lcd_Init_4bits,f
  9270     119B  299A               	goto	u5577
  9271     119C  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  9272     119D  299A               	goto	u5577
  9273     119E  299F               	nop2
  9274     119F                     l2907:
  9275                           
  9276                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  9277     119F  3003               	movlw	3
  9278     11A0  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9279     11A5                     l2909:
  9280                           
  9281                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9282     11A5  301D               	movlw	29
  9283     11A6  00F5               	movwf	??_Lcd_Init_4bits+1
  9284     11A7  3091               	movlw	145
  9285     11A8  00F4               	movwf	??_Lcd_Init_4bits
  9286     11A9                     u5587:
  9287     11A9  0BF4               	decfsz	??_Lcd_Init_4bits,f
  9288     11AA  29A9               	goto	u5587
  9289     11AB  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  9290     11AC  29A9               	goto	u5587
  9291                           
  9292                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  9293     11AD  3003               	movlw	3
  9294     11AE  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9295                           
  9296                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  9297     11B3  3002               	movlw	2
  9298     11B4  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9299                           
  9300                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  9301     11B9  3002               	movlw	2
  9302     11BA  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9303                           
  9304                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  9305     11BF  3008               	movlw	8
  9306     11C0  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9307                           
  9308                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  9309     11C5  3000               	movlw	0
  9310     11C6  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9311                           
  9312                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  9313     11CB  300C               	movlw	12
  9314     11CC  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9315                           
  9316                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  9317     11D1  3000               	movlw	0
  9318     11D2  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9319                           
  9320                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  9321     11D7  3006               	movlw	6
  9322     11D8  160A  158A  25C0  160A  118A  	fcall	_Lcd_Cmd_4bits
  9323     11DD                     l90:
  9324     11DD  0008               	return
  9325     11DE                     __end_of_Lcd_Init_4bits:
  9326                           
  9327                           	psect	text25
  9328     1EF0                     __ptext25:	
  9329 ;; *************** function _I2C_Master_Init *****************
  9330 ;; Defined at:
  9331 ;;		line 13 in file "configI2C.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  c               4    0[BANK0 ] const unsigned long 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0, pclath, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9345 ;;      Params:         0       4       0       0       0
  9346 ;;      Locals:         0       0       0       0       0
  9347 ;;      Temps:          0       4       0       0       0
  9348 ;;      Totals:         0       8       0       0       0
  9349 ;;Total ram usage:        8 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 1
  9352 ;; This function calls:
  9353 ;;		___lldiv
  9354 ;; This function is called by:
  9355 ;;		_setup
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359     1EF0                     _I2C_Master_Init:	
  9360                           ;psect for function _I2C_Master_Init
  9361                           
  9362     1EF0                     l2881:	
  9363                           ;incstack = 0
  9364                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9365                           
  9366                           
  9367                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  9368     1EF0  3028               	movlw	40
  9369     1EF1  1283               	bcf	3,5	;RP0=0, select bank0
  9370     1EF2  1303               	bcf	3,6	;RP1=0, select bank0
  9371     1EF3  0094               	movwf	20	;volatile
  9372     1EF4                     l2883:
  9373                           
  9374                           ;configI2C.c: 16:     SSPCON2 = 0;
  9375     1EF4  1683               	bsf	3,5	;RP0=1, select bank1
  9376     1EF5  1303               	bcf	3,6	;RP1=0, select bank1
  9377     1EF6  0191               	clrf	17	;volatile
  9378     1EF7                     l2885:
  9379                           
  9380                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  9381     1EF7  1283               	bcf	3,5	;RP0=0, select bank0
  9382     1EF8  1303               	bcf	3,6	;RP1=0, select bank0
  9383     1EF9  0820               	movf	I2C_Master_Init@c,w
  9384     1EFA  00A4               	movwf	??_I2C_Master_Init
  9385     1EFB  0821               	movf	I2C_Master_Init@c+1,w
  9386     1EFC  00A5               	movwf	??_I2C_Master_Init+1
  9387     1EFD  0822               	movf	I2C_Master_Init@c+2,w
  9388     1EFE  00A6               	movwf	??_I2C_Master_Init+2
  9389     1EFF  0823               	movf	I2C_Master_Init@c+3,w
  9390     1F00  00A7               	movwf	??_I2C_Master_Init+3
  9391     1F01  3002               	movlw	2
  9392     1F02                     u4105:
  9393     1F02  1003               	clrc
  9394     1F03  0DA4               	rlf	??_I2C_Master_Init,f
  9395     1F04  0DA5               	rlf	??_I2C_Master_Init+1,f
  9396     1F05  0DA6               	rlf	??_I2C_Master_Init+2,f
  9397     1F06  0DA7               	rlf	??_I2C_Master_Init+3,f
  9398     1F07                     u4100:
  9399     1F07  3EFF               	addlw	-1
  9400     1F08  1D03               	skipz
  9401     1F09  2F02               	goto	u4105
  9402     1F0A  0827               	movf	??_I2C_Master_Init+3,w
  9403     1F0B  00F3               	movwf	___lldiv@divisor+3
  9404     1F0C  0826               	movf	??_I2C_Master_Init+2,w
  9405     1F0D  00F2               	movwf	___lldiv@divisor+2
  9406     1F0E  0825               	movf	??_I2C_Master_Init+1,w
  9407     1F0F  00F1               	movwf	___lldiv@divisor+1
  9408     1F10  0824               	movf	??_I2C_Master_Init,w
  9409     1F11  00F0               	movwf	___lldiv@divisor
  9410     1F12  3000               	movlw	0
  9411     1F13  00F7               	movwf	___lldiv@dividend+3
  9412     1F14  307A               	movlw	122
  9413     1F15  00F6               	movwf	___lldiv@dividend+2
  9414     1F16  3012               	movlw	18
  9415     1F17  00F5               	movwf	___lldiv@dividend+1
  9416     1F18  3000               	movlw	0
  9417     1F19  00F4               	movwf	___lldiv@dividend
  9418     1F1A  160A  118A  21DE  160A  158A  	fcall	___lldiv
  9419     1F1F  0870               	movf	?___lldiv,w
  9420     1F20  3EFF               	addlw	255
  9421     1F21  1683               	bsf	3,5	;RP0=1, select bank1
  9422     1F22  1303               	bcf	3,6	;RP1=0, select bank1
  9423     1F23  0093               	movwf	19	;volatile
  9424     1F24                     l2887:
  9425                           
  9426                           ;configI2C.c: 18:     SSPSTAT = 0;
  9427     1F24  0194               	clrf	20	;volatile
  9428     1F25                     l2889:
  9429                           
  9430                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  9431     1F25  1587               	bsf	7,3	;volatile
  9432     1F26                     l2891:
  9433                           
  9434                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  9435     1F26  1607               	bsf	7,4	;volatile
  9436     1F27                     l29:
  9437     1F27  0008               	return
  9438     1F28                     __end_of_I2C_Master_Init:
  9439                           
  9440                           	psect	text26
  9441     11DE                     __ptext26:	
  9442 ;; *************** function ___lldiv *****************
  9443 ;; Defined at:
  9444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  divisor         4    0[COMMON] unsigned long 
  9447 ;;  dividend        4    4[COMMON] unsigned long 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  quotient        4    9[COMMON] unsigned long 
  9450 ;;  counter         1   13[COMMON] unsigned char 
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  4    0[COMMON] unsigned long 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9460 ;;      Params:         8       0       0       0       0
  9461 ;;      Locals:         5       0       0       0       0
  9462 ;;      Temps:          1       0       0       0       0
  9463 ;;      Totals:        14       0       0       0       0
  9464 ;;Total ram usage:       14 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_I2C_Master_Init
  9470 ;;		_sprintf
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474     11DE                     ___lldiv:	
  9475                           ;psect for function ___lldiv
  9476                           
  9477     11DE                     l2393:	
  9478                           ;incstack = 0
  9479                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9480                           
  9481     11DE  3000               	movlw	0
  9482     11DF  00FC               	movwf	___lldiv@quotient+3
  9483     11E0  3000               	movlw	0
  9484     11E1  00FB               	movwf	___lldiv@quotient+2
  9485     11E2  3000               	movlw	0
  9486     11E3  00FA               	movwf	___lldiv@quotient+1
  9487     11E4  3000               	movlw	0
  9488     11E5  00F9               	movwf	___lldiv@quotient
  9489     11E6  0873               	movf	___lldiv@divisor+3,w
  9490     11E7  0472               	iorwf	___lldiv@divisor+2,w
  9491     11E8  0471               	iorwf	___lldiv@divisor+1,w
  9492     11E9  0470               	iorwf	___lldiv@divisor,w
  9493     11EA  1903               	skipnz
  9494     11EB  29ED               	goto	u2881
  9495     11EC  29EE               	goto	u2880
  9496     11ED                     u2881:
  9497     11ED  2A3B               	goto	l2413
  9498     11EE                     u2880:
  9499     11EE                     l2395:
  9500     11EE  01FD               	clrf	___lldiv@counter
  9501     11EF  0AFD               	incf	___lldiv@counter,f
  9502     11F0  29FE               	goto	l2399
  9503     11F1                     l2397:
  9504     11F1  3001               	movlw	1
  9505     11F2  00F8               	movwf	??___lldiv
  9506     11F3                     u2895:
  9507     11F3  1003               	clrc
  9508     11F4  0DF0               	rlf	___lldiv@divisor,f
  9509     11F5  0DF1               	rlf	___lldiv@divisor+1,f
  9510     11F6  0DF2               	rlf	___lldiv@divisor+2,f
  9511     11F7  0DF3               	rlf	___lldiv@divisor+3,f
  9512     11F8  0BF8               	decfsz	??___lldiv,f
  9513     11F9  29F3               	goto	u2895
  9514     11FA  3001               	movlw	1
  9515     11FB  00F8               	movwf	??___lldiv
  9516     11FC  0878               	movf	??___lldiv,w
  9517     11FD  07FD               	addwf	___lldiv@counter,f
  9518     11FE                     l2399:
  9519     11FE  1FF3               	btfss	___lldiv@divisor+3,7
  9520     11FF  2A01               	goto	u2901
  9521     1200  2A02               	goto	u2900
  9522     1201                     u2901:
  9523     1201  29F1               	goto	l2397
  9524     1202                     u2900:
  9525     1202                     l2401:
  9526     1202  3001               	movlw	1
  9527     1203  00F8               	movwf	??___lldiv
  9528     1204                     u2915:
  9529     1204  1003               	clrc
  9530     1205  0DF9               	rlf	___lldiv@quotient,f
  9531     1206  0DFA               	rlf	___lldiv@quotient+1,f
  9532     1207  0DFB               	rlf	___lldiv@quotient+2,f
  9533     1208  0DFC               	rlf	___lldiv@quotient+3,f
  9534     1209  0BF8               	decfsz	??___lldiv,f
  9535     120A  2A04               	goto	u2915
  9536     120B                     l2403:
  9537     120B  0873               	movf	___lldiv@divisor+3,w
  9538     120C  0277               	subwf	___lldiv@dividend+3,w
  9539     120D  1D03               	skipz
  9540     120E  2A19               	goto	u2925
  9541     120F  0872               	movf	___lldiv@divisor+2,w
  9542     1210  0276               	subwf	___lldiv@dividend+2,w
  9543     1211  1D03               	skipz
  9544     1212  2A19               	goto	u2925
  9545     1213  0871               	movf	___lldiv@divisor+1,w
  9546     1214  0275               	subwf	___lldiv@dividend+1,w
  9547     1215  1D03               	skipz
  9548     1216  2A19               	goto	u2925
  9549     1217  0870               	movf	___lldiv@divisor,w
  9550     1218  0274               	subwf	___lldiv@dividend,w
  9551     1219                     u2925:
  9552     1219  1C03               	skipc
  9553     121A  2A1C               	goto	u2921
  9554     121B  2A1D               	goto	u2920
  9555     121C                     u2921:
  9556     121C  2A2C               	goto	l2409
  9557     121D                     u2920:
  9558     121D                     l2405:
  9559     121D  0870               	movf	___lldiv@divisor,w
  9560     121E  02F4               	subwf	___lldiv@dividend,f
  9561     121F  0871               	movf	___lldiv@divisor+1,w
  9562     1220  1C03               	skipc
  9563     1221  0F71               	incfsz	___lldiv@divisor+1,w
  9564     1222  02F5               	subwf	___lldiv@dividend+1,f
  9565     1223  0872               	movf	___lldiv@divisor+2,w
  9566     1224  1C03               	skipc
  9567     1225  0F72               	incfsz	___lldiv@divisor+2,w
  9568     1226  02F6               	subwf	___lldiv@dividend+2,f
  9569     1227  0873               	movf	___lldiv@divisor+3,w
  9570     1228  1C03               	skipc
  9571     1229  0F73               	incfsz	___lldiv@divisor+3,w
  9572     122A  02F7               	subwf	___lldiv@dividend+3,f
  9573     122B                     l2407:
  9574     122B  1479               	bsf	___lldiv@quotient,0
  9575     122C                     l2409:
  9576     122C  3001               	movlw	1
  9577     122D                     u2935:
  9578     122D  1003               	clrc
  9579     122E  0CF3               	rrf	___lldiv@divisor+3,f
  9580     122F  0CF2               	rrf	___lldiv@divisor+2,f
  9581     1230  0CF1               	rrf	___lldiv@divisor+1,f
  9582     1231  0CF0               	rrf	___lldiv@divisor,f
  9583     1232  3EFF               	addlw	-1
  9584     1233  1D03               	skipz
  9585     1234  2A2D               	goto	u2935
  9586     1235                     l2411:
  9587     1235  3001               	movlw	1
  9588     1236  02FD               	subwf	___lldiv@counter,f
  9589     1237  1D03               	btfss	3,2
  9590     1238  2A3A               	goto	u2941
  9591     1239  2A3B               	goto	u2940
  9592     123A                     u2941:
  9593     123A  2A02               	goto	l2401
  9594     123B                     u2940:
  9595     123B                     l2413:
  9596     123B  087C               	movf	___lldiv@quotient+3,w
  9597     123C  00F3               	movwf	?___lldiv+3
  9598     123D  087B               	movf	___lldiv@quotient+2,w
  9599     123E  00F2               	movwf	?___lldiv+2
  9600     123F  087A               	movf	___lldiv@quotient+1,w
  9601     1240  00F1               	movwf	?___lldiv+1
  9602     1241  0879               	movf	___lldiv@quotient,w
  9603     1242  00F0               	movwf	?___lldiv
  9604     1243                     l460:
  9605     1243  0008               	return
  9606     1244                     __end_of___lldiv:
  9607                           
  9608                           	psect	text27
  9609     1DDA                     __ptext27:	
  9610 ;; *************** function _Lcd_Write_String_4bits *****************
  9611 ;; Defined at:
  9612 ;;		line 99 in file "configLCD_4bits.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  a               1    wreg     PTR unsigned char 
  9615 ;;		 -> distanciaLCD(16), 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  a               1    8[COMMON] PTR unsigned char 
  9618 ;;		 -> distanciaLCD(16), 
  9619 ;;  i               2    6[COMMON] int 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9629 ;;      Params:         0       0       0       0       0
  9630 ;;      Locals:         3       0       0       0       0
  9631 ;;      Temps:          1       0       0       0       0
  9632 ;;      Totals:         4       0       0       0       0
  9633 ;;Total ram usage:        4 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 2
  9636 ;; This function calls:
  9637 ;;		_Lcd_Write_Char_4bits
  9638 ;; This function is called by:
  9639 ;;		_main
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643     1DDA                     _Lcd_Write_String_4bits:	
  9644                           ;psect for function _Lcd_Write_String_4bits
  9645                           
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9649                           ;Lcd_Write_String_4bits@a stored from wreg
  9650     1DDA  00F8               	movwf	Lcd_Write_String_4bits@a
  9651     1DDB                     l3315:
  9652                           
  9653                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  9654     1DDB  01F6               	clrf	Lcd_Write_String_4bits@i
  9655     1DDC  01F7               	clrf	Lcd_Write_String_4bits@i+1
  9656     1DDD  2DEF               	goto	l3321
  9657     1DDE                     l3317:
  9658                           
  9659                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  9660     1DDE  0876               	movf	Lcd_Write_String_4bits@i,w
  9661     1DDF  0778               	addwf	Lcd_Write_String_4bits@a,w
  9662     1DE0  00F5               	movwf	??_Lcd_Write_String_4bits
  9663     1DE1  0875               	movf	??_Lcd_Write_String_4bits,w
  9664     1DE2  0084               	movwf	4
  9665     1DE3  0800               	movf	0,w
  9666     1DE4  160A  158A  26BB  160A  158A  	fcall	_Lcd_Write_Char_4bits
  9667     1DE9                     l3319:
  9668     1DE9  3001               	movlw	1
  9669     1DEA  07F6               	addwf	Lcd_Write_String_4bits@i,f
  9670     1DEB  1803               	skipnc
  9671     1DEC  0AF7               	incf	Lcd_Write_String_4bits@i+1,f
  9672     1DED  3000               	movlw	0
  9673     1DEE  07F7               	addwf	Lcd_Write_String_4bits@i+1,f
  9674     1DEF                     l3321:
  9675     1DEF  0876               	movf	Lcd_Write_String_4bits@i,w
  9676     1DF0  0778               	addwf	Lcd_Write_String_4bits@a,w
  9677     1DF1  00F5               	movwf	??_Lcd_Write_String_4bits
  9678     1DF2  0875               	movf	??_Lcd_Write_String_4bits,w
  9679     1DF3  0084               	movwf	4
  9680     1DF4  1383               	bcf	3,7	;select IRP bank0
  9681     1DF5  0800               	movf	0,w
  9682     1DF6  1D03               	btfss	3,2
  9683     1DF7  2DF9               	goto	u5171
  9684     1DF8  2DFA               	goto	u5170
  9685     1DF9                     u5171:
  9686     1DF9  2DDE               	goto	l3317
  9687     1DFA                     u5170:
  9688     1DFA                     l99:
  9689     1DFA  0008               	return
  9690     1DFB                     __end_of_Lcd_Write_String_4bits:
  9691                           
  9692                           	psect	text28
  9693     1EBB                     __ptext28:	
  9694 ;; *************** function _Lcd_Write_Char_4bits *****************
  9695 ;; Defined at:
  9696 ;;		line 84 in file "configLCD_4bits.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  a               1    wreg     unsigned char 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;  a               1    4[COMMON] unsigned char 
  9701 ;;  y               1    3[COMMON] unsigned char 
  9702 ;;  temp            1    2[COMMON] unsigned char 
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1    wreg      void 
  9705 ;; Registers used:
  9706 ;;		wreg, status,2, status,0, pclath, cstack
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9712 ;;      Params:         0       0       0       0       0
  9713 ;;      Locals:         3       0       0       0       0
  9714 ;;      Temps:          1       0       0       0       0
  9715 ;;      Totals:         4       0       0       0       0
  9716 ;;Total ram usage:        4 bytes
  9717 ;; Hardware stack levels used: 1
  9718 ;; Hardware stack levels required when called: 1
  9719 ;; This function calls:
  9720 ;;		_Lcd_Port_4bits
  9721 ;; This function is called by:
  9722 ;;		_Lcd_Write_String_4bits
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726     1EBB                     _Lcd_Write_Char_4bits:	
  9727                           ;psect for function _Lcd_Write_Char_4bits
  9728                           
  9729                           
  9730                           ;incstack = 0
  9731                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  9732                           ;Lcd_Write_Char_4bits@a stored from wreg
  9733     1EBB  00F4               	movwf	Lcd_Write_Char_4bits@a
  9734     1EBC                     l2911:
  9735                           
  9736                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  9737     1EBC  0874               	movf	Lcd_Write_Char_4bits@a,w
  9738     1EBD  390F               	andlw	15
  9739     1EBE  00F2               	movwf	Lcd_Write_Char_4bits@temp
  9740                           
  9741                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  9742     1EBF  0874               	movf	Lcd_Write_Char_4bits@a,w
  9743     1EC0  39F0               	andlw	240
  9744     1EC1  00F3               	movwf	Lcd_Write_Char_4bits@y
  9745     1EC2                     l2913:
  9746                           
  9747                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  9748     1EC2  1283               	bcf	3,5	;RP0=0, select bank0
  9749     1EC3  1303               	bcf	3,6	;RP1=0, select bank0
  9750     1EC4  1508               	bsf	8,2	;volatile
  9751     1EC5                     l2915:
  9752                           
  9753                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  9754     1EC5  0873               	movf	Lcd_Write_Char_4bits@y,w
  9755     1EC6  00F1               	movwf	??_Lcd_Write_Char_4bits
  9756     1EC7  3004               	movlw	4
  9757     1EC8                     u4135:
  9758     1EC8  1003               	clrc
  9759     1EC9  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  9760     1ECA  3EFF               	addlw	-1
  9761     1ECB  1D03               	skipz
  9762     1ECC  2EC8               	goto	u4135
  9763     1ECD  0871               	movf	??_Lcd_Write_Char_4bits,w
  9764     1ECE  160A  158A  25FB  160A  158A  	fcall	_Lcd_Port_4bits
  9765     1ED3                     l2917:
  9766                           
  9767                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  9768     1ED3  1283               	bcf	3,5	;RP0=0, select bank0
  9769     1ED4  1303               	bcf	3,6	;RP1=0, select bank0
  9770     1ED5  1588               	bsf	8,3	;volatile
  9771     1ED6                     l2919:
  9772                           
  9773                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9774     1ED6  301A               	movlw	26
  9775     1ED7  00F1               	movwf	??_Lcd_Write_Char_4bits
  9776     1ED8                     u5597:
  9777     1ED8  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  9778     1ED9  2ED8               	goto	u5597
  9779     1EDA  0000               	nop
  9780     1EDB                     l2921:
  9781                           
  9782                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  9783     1EDB  1283               	bcf	3,5	;RP0=0, select bank0
  9784     1EDC  1303               	bcf	3,6	;RP1=0, select bank0
  9785     1EDD  1188               	bcf	8,3	;volatile
  9786     1EDE                     l2923:
  9787                           
  9788                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  9789     1EDE  0872               	movf	Lcd_Write_Char_4bits@temp,w
  9790     1EDF  160A  158A  25FB  160A  158A  	fcall	_Lcd_Port_4bits
  9791     1EE4                     l2925:
  9792                           
  9793                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  9794     1EE4  1283               	bcf	3,5	;RP0=0, select bank0
  9795     1EE5  1303               	bcf	3,6	;RP1=0, select bank0
  9796     1EE6  1588               	bsf	8,3	;volatile
  9797     1EE7                     l2927:
  9798                           
  9799                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9800     1EE7  301A               	movlw	26
  9801     1EE8  00F1               	movwf	??_Lcd_Write_Char_4bits
  9802     1EE9                     u5607:
  9803     1EE9  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  9804     1EEA  2EE9               	goto	u5607
  9805     1EEB  0000               	nop
  9806     1EEC                     l2929:
  9807                           
  9808                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  9809     1EEC  1283               	bcf	3,5	;RP0=0, select bank0
  9810     1EED  1303               	bcf	3,6	;RP1=0, select bank0
  9811     1EEE  1188               	bcf	8,3	;volatile
  9812     1EEF                     l93:
  9813     1EEF  0008               	return
  9814     1EF0                     __end_of_Lcd_Write_Char_4bits:
  9815                           
  9816                           	psect	text29
  9817     1F6C                     __ptext29:	
  9818 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  9819 ;; Defined at:
  9820 ;;		line 49 in file "configLCD_4bits.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  a               1    wreg     unsigned char 
  9823 ;;  b               1    4[COMMON] unsigned char 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  a               1    6[COMMON] unsigned char 
  9826 ;;  temp            1    9[COMMON] unsigned char 
  9827 ;;  y               1    8[COMMON] unsigned char 
  9828 ;;  z               1    7[COMMON] unsigned char 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0, pclath, cstack
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9838 ;;      Params:         1       0       0       0       0
  9839 ;;      Locals:         4       0       0       0       0
  9840 ;;      Temps:          1       0       0       0       0
  9841 ;;      Totals:         6       0       0       0       0
  9842 ;;Total ram usage:        6 bytes
  9843 ;; Hardware stack levels used: 1
  9844 ;; Hardware stack levels required when called: 2
  9845 ;; This function calls:
  9846 ;;		_Lcd_Cmd_4bits
  9847 ;; This function is called by:
  9848 ;;		_main
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852     1F6C                     _Lcd_Set_Cursor_4bits:	
  9853                           ;psect for function _Lcd_Set_Cursor_4bits
  9854                           
  9855                           
  9856                           ;incstack = 0
  9857                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  9858                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  9859     1F6C  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  9860     1F6D                     l3295:
  9861                           
  9862                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  9863     1F6D  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  9864     1F6E  1D03               	btfss	3,2
  9865     1F6F  2F71               	goto	u5131
  9866     1F70  2F72               	goto	u5130
  9867     1F71                     u5131:
  9868     1F71  2F8F               	goto	l3305
  9869     1F72                     u5130:
  9870     1F72                     l3297:
  9871                           
  9872                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  9873     1F72  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  9874     1F73  3E7F               	addlw	127
  9875     1F74  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  9876                           
  9877                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  9878     1F75  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  9879     1F76  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  9880     1F77  3004               	movlw	4
  9881     1F78                     u5145:
  9882     1F78  1003               	clrc
  9883     1F79  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  9884     1F7A  3EFF               	addlw	-1
  9885     1F7B  1D03               	skipz
  9886     1F7C  2F78               	goto	u5145
  9887     1F7D  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  9888     1F7E  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  9889     1F7F                     l3299:
  9890                           
  9891                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  9892     1F7F  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  9893     1F80  390F               	andlw	15
  9894     1F81  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  9895     1F82                     l3301:
  9896                           
  9897                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  9898     1F82  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  9899     1F83  160A  158A  25C0  160A  158A  	fcall	_Lcd_Cmd_4bits
  9900     1F88                     l3303:
  9901                           
  9902                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  9903     1F88  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  9904     1F89  160A  158A  25C0  160A  158A  	fcall	_Lcd_Cmd_4bits
  9905                           
  9906                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  9907     1F8E  2FB1               	goto	l87
  9908     1F8F                     l3305:
  9909     1F8F  3002               	movlw	2
  9910     1F90  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  9911     1F91  1D03               	btfss	3,2
  9912     1F92  2F94               	goto	u5151
  9913     1F93  2F95               	goto	u5150
  9914     1F94                     u5151:
  9915     1F94  2FB1               	goto	l87
  9916     1F95                     u5150:
  9917     1F95                     l3307:
  9918                           
  9919                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  9920     1F95  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  9921     1F96  3EBF               	addlw	191
  9922     1F97  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  9923                           
  9924                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  9925     1F98  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  9926     1F99  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  9927     1F9A  3004               	movlw	4
  9928     1F9B                     u5165:
  9929     1F9B  1003               	clrc
  9930     1F9C  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  9931     1F9D  3EFF               	addlw	-1
  9932     1F9E  1D03               	skipz
  9933     1F9F  2F9B               	goto	u5165
  9934     1FA0  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  9935     1FA1  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  9936     1FA2                     l3309:
  9937                           
  9938                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  9939     1FA2  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  9940     1FA3  390F               	andlw	15
  9941     1FA4  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  9942     1FA5                     l3311:
  9943                           
  9944                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  9945     1FA5  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  9946     1FA6  160A  158A  25C0  160A  158A  	fcall	_Lcd_Cmd_4bits
  9947     1FAB                     l3313:
  9948                           
  9949                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  9950     1FAB  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  9951     1FAC  160A  158A  25C0  160A  158A  	fcall	_Lcd_Cmd_4bits
  9952     1FB1                     l87:
  9953     1FB1  0008               	return
  9954     1FB2                     __end_of_Lcd_Set_Cursor_4bits:
  9955                           
  9956                           	psect	text30
  9957     1D94                     __ptext30:	
  9958 ;; *************** function _Lcd_Clear_4bits *****************
  9959 ;; Defined at:
  9960 ;;		line 44 in file "configLCD_4bits.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      void 
  9967 ;; Registers used:
  9968 ;;		wreg, status,2, status,0, pclath, cstack
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9974 ;;      Params:         0       0       0       0       0
  9975 ;;      Locals:         0       0       0       0       0
  9976 ;;      Temps:          0       0       0       0       0
  9977 ;;      Totals:         0       0       0       0       0
  9978 ;;Total ram usage:        0 bytes
  9979 ;; Hardware stack levels used: 1
  9980 ;; Hardware stack levels required when called: 2
  9981 ;; This function calls:
  9982 ;;		_Lcd_Cmd_4bits
  9983 ;; This function is called by:
  9984 ;;		_main
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988     1D94                     _Lcd_Clear_4bits:	
  9989                           ;psect for function _Lcd_Clear_4bits
  9990                           
  9991     1D94                     l3293:	
  9992                           ;incstack = 0
  9993                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  9994                           
  9995                           
  9996                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  9997     1D94  3000               	movlw	0
  9998     1D95  160A  158A  25C0  160A  158A  	fcall	_Lcd_Cmd_4bits
  9999                           
 10000                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
 10001     1D9A  3001               	movlw	1
 10002     1D9B  160A  158A  25C0  160A  158A  	fcall	_Lcd_Cmd_4bits
 10003     1DA0                     l81:
 10004     1DA0  0008               	return
 10005     1DA1                     __end_of_Lcd_Clear_4bits:
 10006                           
 10007                           	psect	text31
 10008     1DC0                     __ptext31:	
 10009 ;; *************** function _Lcd_Cmd_4bits *****************
 10010 ;; Defined at:
 10011 ;;		line 36 in file "configLCD_4bits.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;  a               1    wreg     unsigned char 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  a               1    3[COMMON] unsigned char 
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  1    wreg      void 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0, pclath, cstack
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10025 ;;      Params:         0       0       0       0       0
 10026 ;;      Locals:         1       0       0       0       0
 10027 ;;      Temps:          2       0       0       0       0
 10028 ;;      Totals:         3       0       0       0       0
 10029 ;;Total ram usage:        3 bytes
 10030 ;; Hardware stack levels used: 1
 10031 ;; Hardware stack levels required when called: 1
 10032 ;; This function calls:
 10033 ;;		_Lcd_Port_4bits
 10034 ;; This function is called by:
 10035 ;;		_Lcd_Clear_4bits
 10036 ;;		_Lcd_Set_Cursor_4bits
 10037 ;;		_Lcd_Init_4bits
 10038 ;;		_Lcd_Shift_Right_4bits
 10039 ;;		_Lcd_Shift_Left_4bits
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043     1DC0                     _Lcd_Cmd_4bits:	
 10044                           ;psect for function _Lcd_Cmd_4bits
 10045                           
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
 10049                           ;Lcd_Cmd_4bits@a stored from wreg
 10050     1DC0  00F3               	movwf	Lcd_Cmd_4bits@a
 10051     1DC1                     l2383:
 10052                           
 10053                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
 10054     1DC1  1283               	bcf	3,5	;RP0=0, select bank0
 10055     1DC2  1303               	bcf	3,6	;RP1=0, select bank0
 10056     1DC3  1108               	bcf	8,2	;volatile
 10057     1DC4                     l2385:
 10058                           
 10059                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
 10060     1DC4  0873               	movf	Lcd_Cmd_4bits@a,w
 10061     1DC5  160A  158A  25FB  160A  158A  	fcall	_Lcd_Port_4bits
 10062     1DCA                     l2387:
 10063                           
 10064                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
 10065     1DCA  1283               	bcf	3,5	;RP0=0, select bank0
 10066     1DCB  1303               	bcf	3,6	;RP1=0, select bank0
 10067     1DCC  1588               	bsf	8,3	;volatile
 10068     1DCD                     l2389:
 10069                           
 10070                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10071     1DCD  300B               	movlw	11
 10072     1DCE  00F2               	movwf	??_Lcd_Cmd_4bits+1
 10073     1DCF  3062               	movlw	98
 10074     1DD0  00F1               	movwf	??_Lcd_Cmd_4bits
 10075     1DD1                     u5617:
 10076     1DD1  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
 10077     1DD2  2DD1               	goto	u5617
 10078     1DD3  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
 10079     1DD4  2DD1               	goto	u5617
 10080     1DD5  0000               	nop
 10081     1DD6                     l2391:
 10082                           
 10083                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
 10084     1DD6  1283               	bcf	3,5	;RP0=0, select bank0
 10085     1DD7  1303               	bcf	3,6	;RP1=0, select bank0
 10086     1DD8  1188               	bcf	8,3	;volatile
 10087     1DD9                     l78:
 10088     1DD9  0008               	return
 10089     1DDA                     __end_of_Lcd_Cmd_4bits:
 10090                           
 10091                           	psect	text32
 10092     1DFB                     __ptext32:	
 10093 ;; *************** function _Lcd_Port_4bits *****************
 10094 ;; Defined at:
 10095 ;;		line 14 in file "configLCD_4bits.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;  a               1    wreg     unsigned char 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  a               1    0[COMMON] unsigned char 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10109 ;;      Params:         0       0       0       0       0
 10110 ;;      Locals:         1       0       0       0       0
 10111 ;;      Temps:          0       0       0       0       0
 10112 ;;      Totals:         1       0       0       0       0
 10113 ;;Total ram usage:        1 bytes
 10114 ;; Hardware stack levels used: 1
 10115 ;; This function calls:
 10116 ;;		Nothing
 10117 ;; This function is called by:
 10118 ;;		_Lcd_Cmd_4bits
 10119 ;;		_Lcd_Init_4bits
 10120 ;;		_Lcd_Write_Char_4bits
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124     1DFB                     _Lcd_Port_4bits:	
 10125                           ;psect for function _Lcd_Port_4bits
 10126                           
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in _Lcd_Port_4bits: [wreg]
 10130                           ;Lcd_Port_4bits@a stored from wreg
 10131     1DFB  00F0               	movwf	Lcd_Port_4bits@a
 10132     1DFC                     l2359:
 10133                           
 10134                           ;configLCD_4bits.c: 15:     if (a & 1)
 10135     1DFC  1C70               	btfss	Lcd_Port_4bits@a,0
 10136     1DFD  2DFF               	goto	u2811
 10137     1DFE  2E00               	goto	u2810
 10138     1DFF                     u2811:
 10139     1DFF  2E04               	goto	l67
 10140     1E00                     u2810:
 10141     1E00                     l2361:
 10142                           
 10143                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
 10144     1E00  1283               	bcf	3,5	;RP0=0, select bank0
 10145     1E01  1303               	bcf	3,6	;RP1=0, select bank0
 10146     1E02  1608               	bsf	8,4	;volatile
 10147     1E03  2E07               	goto	l68
 10148     1E04                     l67:	
 10149                           ;configLCD_4bits.c: 17:     else
 10150                           
 10151                           
 10152                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
 10153     1E04  1283               	bcf	3,5	;RP0=0, select bank0
 10154     1E05  1303               	bcf	3,6	;RP1=0, select bank0
 10155     1E06  1208               	bcf	8,4	;volatile
 10156     1E07                     l68:
 10157                           
 10158                           ;configLCD_4bits.c: 20:     if (a & 2)
 10159     1E07  1CF0               	btfss	Lcd_Port_4bits@a,1
 10160     1E08  2E0A               	goto	u2821
 10161     1E09  2E0B               	goto	u2820
 10162     1E0A                     u2821:
 10163     1E0A  2E0D               	goto	l69
 10164     1E0B                     u2820:
 10165     1E0B                     l2363:
 10166                           
 10167                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
 10168     1E0B  1688               	bsf	8,5	;volatile
 10169     1E0C  2E0E               	goto	l70
 10170     1E0D                     l69:	
 10171                           ;configLCD_4bits.c: 22:     else
 10172                           
 10173                           
 10174                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
 10175     1E0D  1288               	bcf	8,5	;volatile
 10176     1E0E                     l70:
 10177                           
 10178                           ;configLCD_4bits.c: 25:     if (a & 4)
 10179     1E0E  1D70               	btfss	Lcd_Port_4bits@a,2
 10180     1E0F  2E11               	goto	u2831
 10181     1E10  2E12               	goto	u2830
 10182     1E11                     u2831:
 10183     1E11  2E14               	goto	l71
 10184     1E12                     u2830:
 10185     1E12                     l2365:
 10186                           
 10187                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
 10188     1E12  1708               	bsf	8,6	;volatile
 10189     1E13  2E15               	goto	l72
 10190     1E14                     l71:	
 10191                           ;configLCD_4bits.c: 27:     else
 10192                           
 10193                           
 10194                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
 10195     1E14  1308               	bcf	8,6	;volatile
 10196     1E15                     l72:
 10197                           
 10198                           ;configLCD_4bits.c: 30:     if (a & 8)
 10199     1E15  1DF0               	btfss	Lcd_Port_4bits@a,3
 10200     1E16  2E18               	goto	u2841
 10201     1E17  2E19               	goto	u2840
 10202     1E18                     u2841:
 10203     1E18  2E1B               	goto	l73
 10204     1E19                     u2840:
 10205     1E19                     l2367:
 10206                           
 10207                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
 10208     1E19  1788               	bsf	8,7	;volatile
 10209     1E1A  2E1C               	goto	l75
 10210     1E1B                     l73:	
 10211                           ;configLCD_4bits.c: 32:     else
 10212                           
 10213                           
 10214                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
 10215     1E1B  1388               	bcf	8,7	;volatile
 10216     1E1C                     l75:
 10217     1E1C  0008               	return
 10218     1E1D                     __end_of_Lcd_Port_4bits:
 10219                           
 10220                           	psect	text33
 10221     1D72                     __ptext33:	
 10222 ;; *************** function _I2C_Master_Write *****************
 10223 ;; Defined at:
 10224 ;;		line 62 in file "configI2C.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  d               2    0[COMMON] unsigned int 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      void 
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0, pclath, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10238 ;;      Params:         2       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0
 10241 ;;      Totals:         2       0       0       0       0
 10242 ;;Total ram usage:        2 bytes
 10243 ;; Hardware stack levels used: 1
 10244 ;; Hardware stack levels required when called: 1
 10245 ;; This function calls:
 10246 ;;		_I2C_Master_Wait
 10247 ;; This function is called by:
 10248 ;;		_main
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252     1D72                     _I2C_Master_Write:	
 10253                           ;psect for function _I2C_Master_Write
 10254                           
 10255     1D72                     l3273:	
 10256                           ;incstack = 0
 10257                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10258                           
 10259                           
 10260                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
 10261     1D72  160A  158A  2587  160A  158A  	fcall	_I2C_Master_Wait
 10262     1D77                     l3275:
 10263                           
 10264                           ;configI2C.c: 65:     SSPBUF = d;
 10265     1D77  0870               	movf	I2C_Master_Write@d,w
 10266     1D78  1283               	bcf	3,5	;RP0=0, select bank0
 10267     1D79  1303               	bcf	3,6	;RP1=0, select bank0
 10268     1D7A  0093               	movwf	19	;volatile
 10269     1D7B                     l47:
 10270     1D7B  0008               	return
 10271     1D7C                     __end_of_I2C_Master_Write:
 10272                           
 10273                           	psect	text34
 10274     1D69                     __ptext34:	
 10275 ;; *************** function _I2C_Master_Stop *****************
 10276 ;; Defined at:
 10277 ;;		line 52 in file "configI2C.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      void 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0, pclath, cstack
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10291 ;;      Params:         0       0       0       0       0
 10292 ;;      Locals:         0       0       0       0       0
 10293 ;;      Temps:          0       0       0       0       0
 10294 ;;      Totals:         0       0       0       0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used: 1
 10297 ;; Hardware stack levels required when called: 1
 10298 ;; This function calls:
 10299 ;;		_I2C_Master_Wait
 10300 ;; This function is called by:
 10301 ;;		_main
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305     1D69                     _I2C_Master_Stop:	
 10306                           ;psect for function _I2C_Master_Stop
 10307                           
 10308     1D69                     l3269:	
 10309                           ;incstack = 0
 10310                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10311                           
 10312                           
 10313                           ;configI2C.c: 54:     I2C_Master_Wait();
 10314     1D69  160A  158A  2587  160A  158A  	fcall	_I2C_Master_Wait
 10315     1D6E                     l3271:
 10316                           
 10317                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
 10318     1D6E  1683               	bsf	3,5	;RP0=1, select bank1
 10319     1D6F  1303               	bcf	3,6	;RP1=0, select bank1
 10320     1D70  1511               	bsf	17,2	;volatile
 10321     1D71                     l44:
 10322     1D71  0008               	return
 10323     1D72                     __end_of_I2C_Master_Stop:
 10324                           
 10325                           	psect	text35
 10326     1D60                     __ptext35:	
 10327 ;; *************** function _I2C_Master_Start *****************
 10328 ;; Defined at:
 10329 ;;		line 36 in file "configI2C.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      void 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2, status,0, pclath, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10343 ;;      Params:         0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0
 10346 ;;      Totals:         0       0       0       0       0
 10347 ;;Total ram usage:        0 bytes
 10348 ;; Hardware stack levels used: 1
 10349 ;; Hardware stack levels required when called: 1
 10350 ;; This function calls:
 10351 ;;		_I2C_Master_Wait
 10352 ;; This function is called by:
 10353 ;;		_main
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357     1D60                     _I2C_Master_Start:	
 10358                           ;psect for function _I2C_Master_Start
 10359                           
 10360     1D60                     l3265:	
 10361                           ;incstack = 0
 10362                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10363                           
 10364                           
 10365                           ;configI2C.c: 38:     I2C_Master_Wait();
 10366     1D60  160A  158A  2587  160A  158A  	fcall	_I2C_Master_Wait
 10367     1D65                     l3267:
 10368                           
 10369                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
 10370     1D65  1683               	bsf	3,5	;RP0=1, select bank1
 10371     1D66  1303               	bcf	3,6	;RP1=0, select bank1
 10372     1D67  1411               	bsf	17,0	;volatile
 10373     1D68                     l38:
 10374     1D68  0008               	return
 10375     1D69                     __end_of_I2C_Master_Start:
 10376                           
 10377                           	psect	text36
 10378     1E8D                     __ptext36:	
 10379 ;; *************** function _I2C_Master_Read *****************
 10380 ;; Defined at:
 10381 ;;		line 71 in file "configI2C.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;  a               2    0[COMMON] unsigned short 
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  temp            2    4[COMMON] unsigned short 
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  2    0[COMMON] unsigned short 
 10388 ;; Registers used:
 10389 ;;		wreg, status,2, status,0, pclath, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10395 ;;      Params:         2       0       0       0       0
 10396 ;;      Locals:         2       0       0       0       0
 10397 ;;      Temps:          2       0       0       0       0
 10398 ;;      Totals:         6       0       0       0       0
 10399 ;;Total ram usage:        6 bytes
 10400 ;; Hardware stack levels used: 1
 10401 ;; Hardware stack levels required when called: 1
 10402 ;; This function calls:
 10403 ;;		_I2C_Master_Wait
 10404 ;; This function is called by:
 10405 ;;		_main
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409     1E8D                     _I2C_Master_Read:	
 10410                           ;psect for function _I2C_Master_Read
 10411                           
 10412     1E8D                     l3277:	
 10413                           ;incstack = 0
 10414                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10415                           
 10416                           
 10417                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
 10418     1E8D  160A  158A  2587  160A  158A  	fcall	_I2C_Master_Wait
 10419     1E92                     l3279:
 10420                           
 10421                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
 10422     1E92  1683               	bsf	3,5	;RP0=1, select bank1
 10423     1E93  1303               	bcf	3,6	;RP1=0, select bank1
 10424     1E94  1591               	bsf	17,3	;volatile
 10425                           
 10426                           ;configI2C.c: 76:     I2C_Master_Wait();
 10427     1E95  160A  158A  2587  160A  158A  	fcall	_I2C_Master_Wait
 10428     1E9A                     l3281:
 10429                           
 10430                           ;configI2C.c: 77:     temp = SSPBUF;
 10431     1E9A  1283               	bcf	3,5	;RP0=0, select bank0
 10432     1E9B  1303               	bcf	3,6	;RP1=0, select bank0
 10433     1E9C  0813               	movf	19,w	;volatile
 10434     1E9D  00F2               	movwf	??_I2C_Master_Read
 10435     1E9E  01F3               	clrf	??_I2C_Master_Read+1
 10436     1E9F  0872               	movf	??_I2C_Master_Read,w
 10437     1EA0  00F4               	movwf	I2C_Master_Read@temp
 10438     1EA1  0873               	movf	??_I2C_Master_Read+1,w
 10439     1EA2  00F5               	movwf	I2C_Master_Read@temp+1
 10440     1EA3                     l3283:
 10441                           
 10442                           ;configI2C.c: 78:     I2C_Master_Wait();
 10443     1EA3  160A  158A  2587  160A  158A  	fcall	_I2C_Master_Wait
 10444     1EA8                     l3285:
 10445                           
 10446                           ;configI2C.c: 79:     if(a == 1){
 10447     1EA8  0370               	decf	I2C_Master_Read@a,w
 10448     1EA9  0471               	iorwf	I2C_Master_Read@a+1,w
 10449     1EAA  1D03               	btfss	3,2
 10450     1EAB  2EAD               	goto	u5121
 10451     1EAC  2EAE               	goto	u5120
 10452     1EAD                     u5121:
 10453     1EAD  2EB2               	goto	l50
 10454     1EAE                     u5120:
 10455     1EAE                     l3287:
 10456                           
 10457                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
 10458     1EAE  1683               	bsf	3,5	;RP0=1, select bank1
 10459     1EAF  1303               	bcf	3,6	;RP1=0, select bank1
 10460     1EB0  1291               	bcf	17,5	;volatile
 10461                           
 10462                           ;configI2C.c: 81:     }else{
 10463     1EB1  2EB5               	goto	l51
 10464     1EB2                     l50:
 10465                           
 10466                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
 10467     1EB2  1683               	bsf	3,5	;RP0=1, select bank1
 10468     1EB3  1303               	bcf	3,6	;RP1=0, select bank1
 10469     1EB4  1691               	bsf	17,5	;volatile
 10470     1EB5                     l51:	
 10471                           ;configI2C.c: 83:     }
 10472                           
 10473                           
 10474                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
 10475     1EB5  1611               	bsf	17,4	;volatile
 10476     1EB6                     l3289:
 10477                           
 10478                           ;configI2C.c: 85:     return temp;
 10479     1EB6  0875               	movf	I2C_Master_Read@temp+1,w
 10480     1EB7  00F1               	movwf	?_I2C_Master_Read+1
 10481     1EB8  0874               	movf	I2C_Master_Read@temp,w
 10482     1EB9  00F0               	movwf	?_I2C_Master_Read
 10483     1EBA                     l52:
 10484     1EBA  0008               	return
 10485     1EBB                     __end_of_I2C_Master_Read:
 10486                           
 10487                           	psect	text37
 10488     1D87                     __ptext37:	
 10489 ;; *************** function _I2C_Master_Wait *****************
 10490 ;; Defined at:
 10491 ;;		line 29 in file "configI2C.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;		None
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg, status,2
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10505 ;;      Params:         0       0       0       0       0
 10506 ;;      Locals:         0       0       0       0       0
 10507 ;;      Temps:          0       0       0       0       0
 10508 ;;      Totals:         0       0       0       0       0
 10509 ;;Total ram usage:        0 bytes
 10510 ;; Hardware stack levels used: 1
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_I2C_Master_Start
 10515 ;;		_I2C_Master_Stop
 10516 ;;		_I2C_Master_Write
 10517 ;;		_I2C_Master_Read
 10518 ;;		_I2C_Master_RepeatedStart
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522     1D87                     _I2C_Master_Wait:	
 10523                           ;psect for function _I2C_Master_Wait
 10524                           
 10525     1D87                     l2893:	
 10526                           ;incstack = 0
 10527                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10528                           
 10529     1D87                     l32:	
 10530                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10531                           
 10532     1D87  1683               	bsf	3,5	;RP0=1, select bank1
 10533     1D88  1303               	bcf	3,6	;RP1=0, select bank1
 10534     1D89  1914               	btfsc	20,2	;volatile
 10535     1D8A  2D8C               	goto	u4111
 10536     1D8B  2D8D               	goto	u4110
 10537     1D8C                     u4111:
 10538     1D8C  2D87               	goto	l32
 10539     1D8D                     u4110:
 10540     1D8D                     l2895:
 10541     1D8D  0811               	movf	17,w	;volatile
 10542     1D8E  391F               	andlw	31
 10543     1D8F  1D03               	btfss	3,2
 10544     1D90  2D92               	goto	u4121
 10545     1D91  2D93               	goto	u4120
 10546     1D92                     u4121:
 10547     1D92  2D87               	goto	l32
 10548     1D93                     u4120:
 10549     1D93                     l35:
 10550     1D93  0008               	return
 10551     1D94                     __end_of_I2C_Master_Wait:
 10552     007E                     btemp	set	126	;btemp
 10553     007E                     wtemp0	set	126
 10554                           
 10555                           	psect	idloc
 10556                           
 10557                           ;Config register IDLOC0 @ 0x2000
 10558                           ;	unspecified, using default values
 10559     2000                     	org	8192
 10560     2000  3FFF               	dw	16383
 10561                           
 10562                           ;Config register IDLOC1 @ 0x2001
 10563                           ;	unspecified, using default values
 10564     2001                     	org	8193
 10565     2001  3FFF               	dw	16383
 10566                           
 10567                           ;Config register IDLOC2 @ 0x2002
 10568                           ;	unspecified, using default values
 10569     2002                     	org	8194
 10570     2002  3FFF               	dw	16383
 10571                           
 10572                           ;Config register IDLOC3 @ 0x2003
 10573                           ;	unspecified, using default values
 10574     2003                     	org	8195
 10575     2003  3FFF               	dw	16383
 10576                           
 10577                           	psect	config
 10578                           
 10579                           ;Config register CONFIG1 @ 0x2007
 10580                           ;	Oscillator Selection bits
 10581                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10582                           ;	Watchdog Timer Enable bit
 10583                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10584                           ;	Power-up Timer Enable bit
 10585                           ;	PWRTE = OFF, PWRT disabled
 10586                           ;	RE3/MCLR pin function select bit
 10587                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10588                           ;	Code Protection bit
 10589                           ;	CP = OFF, Program memory code protection is disabled
 10590                           ;	Data Code Protection bit
 10591                           ;	CPD = OFF, Data memory code protection is disabled
 10592                           ;	Brown Out Reset Selection bits
 10593                           ;	BOREN = OFF, BOR disabled
 10594                           ;	Internal External Switchover bit
 10595                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10596                           ;	Fail-Safe Clock Monitor Enabled bit
 10597                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10598                           ;	Low Voltage Programming Enable bit
 10599                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10600                           ;	In-Circuit Debugger Mode bit
 10601                           ;	DEBUG = 0x1, unprogramme 10602     2007                     	org	8199
 10603     2007  20D4               	dw	8404
 10604                           
 10605                           ;Config register CONFIG2 @ 0x2008
 10606                           ;	Brown-out Reset Selection bit
 10607                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10608                           ;	Flash Program Memory Self Write Enable bits
 10609                           ;	WRT = OFF, Write protection off
 10610     2008                     	org	8200
 10611     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    144
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     39      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> distanciaLCD(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(1) Largest target is 16
		 -> distanciaLCD(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_I2C_Master_Read
    ___flsub->___xxtofl
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   33298
                                             35 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30726
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     936
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               4     4      0     301
                                              5 COMMON     4     4      0
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     456
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      99       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3B       7       73.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      99      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 17:41:23 2023

                             pc 0002                              l32 1D87                              l50 1EB2  
                            l35 1D93                              l51 1EB5                              l52 1EBA  
                            l44 1D71                              l60 1DAD                              l29 1F27  
                            l38 1D68                              l70 1E0E                              l47 1D7B  
                            l71 1E14                              l72 1E15                              l73 1E1B  
                            l81 1DA0                              l90 11DD                              l75 1E1C  
                            l67 1E04                              l68 1E07                              l69 1E0D  
                            l93 1EEF                              l78 1DD9                              l87 1FB1  
                            l99 1DFA                    ___awdiv@sign 0021                              fsr 0004  
           ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076                             l162 10D3  
                           l420 07EE                             l156 132F                             l414 07AB  
                           l406 064A                             l424 1E4D                             l610 1FCE  
                           l426 1E65                             l354 0FFF                             l611 1FEA  
                           l347 15A7                             l460 1243                             l612 1FFF  
                           l605 00E7                             l373 021C                             l615 081F  
                           l623 1D86                             l641 095B                             l618 088B  
                           l634 130F                             l642 08CF                             l730 1F6B  
                           l619 08A4                             l627 1324                             l652 094E  
                           l740 003C                             l637 1324                             l645 091E  
                           l590 1180                             l751 1603                             l911 1DBF  
                           l399 060C                             l680 1127                             l904 0178  
                           l905 0184                             l577 12AC                             l594 00F4  
                           l755 1686                             l595 005B                             l772 174F  
                           l764 17FF                             l757 165F                             l853 0C10  
                           l782 1795                             l598 00B7                             l847 0CA0  
                           l776 1773                             l793 17F5                             l785 17D3  
                           l794 17FF                             l866 1E7A                             l891 0119  
                           l859 0C94                             l868 1E8C                             l797 1E40  
                           l893 01AE                             l897 015C                             _GIE 005F  
                           _PR2 0092                             fsr0 0004                             indf 0000  
                  ___awmod@sign 0076                    ___flmul@aexp 0036                    ___flmul@bexp 0037  
                  ___flmul@sign 0031                    ___flmul@temp 003C                    ___flmul@prod 0038  
                  ___fltol@exp1 005A                            l3001 08A5                            l3003 08B6  
                          l3101 00EC                            l3021 08EE                            l3013 08D0  
                          l3111 1E54                            l3031 0918                            l3023 08F7  
                          l3015 08D6                            l3007 08BF                            l2401 1202  
                          l3121 1FC6                            l3201 10EC                            l3113 1E5B  
                          l3105 1E41                            l3033 0922                            l3041 093C  
                          l3025 0905                            l3017 08E5                            l2411 1235  
                          l2403 120B                            l3123 1FE2                            l3131 0803  
                          l3203 10F0                            l3211 111F                            l3115 1E61  
                          l3107 1E43                            l3027 090F                            l3019 08E7  
                          l3301 1F82                            l2405 121D                            l2413 123B  
                          l3125 1FFC                            l3141 0863                            l3133 0817  
                          l3205 1102                            l3109 1E47                            l3221 00F8  
                          l3053 003D                            l3029 0910                            l2501 1F2A  
                          l2421 124B                            l3311 1FA5                            l3303 1F88  
                          l2407 122B                            l3127 1FFE                            l3119 1FB2  
                          l3143 0867                            l3135 0833                            l3151 1D7C  
                          l3215 1E1D                            l3207 1110                            l3223 00FD  
                          l3071 0077                            l3055 0048                            l3047 0943  
                          l3039 092A                            l2511 1F42                            l2503 1F30  
                          l2431 125F                            l2423 1250                            l2361 1E00  
                          l3313 1FAB                            l3305 1F8F                            l3321 1DEF  
                          l2409 122C                            l3145 08A1                            l3137 083B  
                          l3153 1D84                            l2601 1617                            l3217 1E21  
                          l3161 12B8                            l3209 1119                            l3241 0145  
                          l3233 012A                            l3225 0101                            l3081 00A8  
                          l3073 007E                            l3065 005C                            l3049 0953  
                          l2513 1F53                            l2505 1F33                            l2521 1F67  
                          l2441 1275                            l2433 1261                            l2425 1252  
                          l2417 1244                            l3401 02D7                            l2363 1E0B  
                          l3307 1F95                            l3315 1DDB                            l3331 10B9  
                          l3323 10AC                            l3147 08A3                            l3139 083F  
                          l3155 1D86                            l2611 1621                            l2603 1619  
                          l3171 12DD                            l3251 017C                            l3243 0153  
                          l3235 012D                            l3227 0111                            l3091 00C3  
                          l3083 00B1                            l3075 0087                            l3067 0064  
                          l3059 0051                            l2371 1E69                            l2515 1F59  
                          l2507 1F3A                            l2531 0013                            l2451 1298  
                          l2443 1279                            l2435 1267                            l2427 1256  
                          l2419 1247                            l3411 035E                            l3403 02EA  
                          l2365 1E12                            l3309 1FA2                            l3317 1DDE  
                          l3333 10BA                            l3325 10B3                            l2701 1783  
                          l2621 162B                            l2613 1623                            l2605 161B  
                          l3181 12EB                            l3173 12DF                            l3165 12C1  
                          l3261 01A6                            l3253 0186                            l3245 0163  
                          l3237 013A                            l3229 0121                            l3085 00BB  
                          l3093 00D5                            l3077 0099                            l3069 0075  
                          l2373 1E70                            l2517 1F5A                            l2509 1F3E  
                          l2541 0032                            l2533 0017                            l2525 0003  
                          l2445 128A                            l2437 126A                            l2453 129E  
                          l2429 125B                            l2461 1128                            l3501 0715  
                          l3421 03B2                            l3413 0377                            l3405 02EE  
                          l3341 01B2                            l3271 1D6E                            l2367 1E19  
                          l2359 1DFC                            l2391 1DD6                            l2383 1DC1  
                          l3319 1DE9                            l3335 10BB                            l3327 10B5  
                          l2703 1787                            l2631 1663                            l2623 162D  
                          l2615 1625                            l2607 161D                            l2551 15B1  
                          l3191 1314                            l3175 12E3                            l3183 12FD  
                          l3167 12D4                            l3159 12AD                            l3255 019C  
                          l3247 016E                            l3239 0141                            l3079 00A7  
                          l2375 1E74                            l2519 1F61                            l2535 001B  
                          l2527 0009                            l2543 0038                            l2455 12A3  
                          l2447 1290                            l2439 1271                            l2471 1138  
                          l2463 1129                            l3511 0786                            l3503 0734  
                          l3431 0459                            l3423 03F9                            l3415 0380  
                          l3407 02F4                            l3351 01C7                            l3343 01B5  
                          l3281 1E9A                            l3265 1D60                            l3273 1D72  
                          l2385 1DC4                            l2393 11DE                            l3337 10C8  
                          l3329 10B6                            l2721 17CF                            l2713 179A  
                          l2705 1788                            l2641 167A                            l2633 166A  
                          l2617 1627                            l2609 161F                            l2625 162F  
                          l2561 15C8                            l2553 15B5                            l3193 1319  
                          l3169 12D5                            l3257 01A1                            l3249 0172  
                          l2377 1E83                            l2369 1E67                            l2801 0A80  
                          l2537 0025                            l2529 000C                            l2457 12A8  
                          l2449 1291                            l2481 1151                            l2473 113D  
                          l2465 112D                            l3521 07A5                            l3513 078A  
                          l3505 073E                            l3433 0474                            l3425 0408  
                          l3417 039B                            l3409 0313                            l3361 01F0  
                          l3353 01D3                            l3345 01BB                            l3283 1EA3  
                          l3267 1D65                            l3275 1D77                            l2387 1DCA  
                          l2395 11EE                            l3339 10CE                            l2731 17EB  
                          l2723 17D8                            l2715 179F                            l2707 178C  
                          l2651 1698                            l2635 166C                            l2643 167E  
                          l2627 1630                            l2619 1629                            l2571 15DC  
                          l2563 15C9                            l2555 15B6                            l2547 15A8  
                          l3195 10D4                            l3259 01A5                            l3099 00DC  
                          l2379 1E88                            l2811 0AED                            l2803 0A8E  
                          l2539 002B                            l2483 1155                            l2475 1143  
                          l2491 1172                            l2467 1132                            l3531 07D4  
                          l3523 07B6                            l3515 0790                            l3507 0779  
                          l3451 054F                            l3443 04C2                            l3435 047D  
                          l3427 0423                            l3419 03A3                            l3363 0203  
                          l3355 01D4                            l3347 01C0                            l3285 1EA8  
                          l3277 1E8D                            l3269 1D69                            l2389 1DCD  
                          l3293 1D94                            l2397 11F1                            l2901 1181  
                          l2733 17EF                            l2725 17DD                            l2717 17AD  
                          l2709 1792                            l2661 16C0                            l2653 16AF  
                          l2645 168A                            l2637 1670                            l2629 1647  
                          l2581 15EB                            l2573 15DD                            l2557 15BB  
                          l2565 15CB                            l2549 15AD                            l3189 1304  
                          l3197 10DC                            l2821 0B94                            l2813 0B0A  
                          l2805 0AAB                            l2741 095C                            l2493 1177  
                          l2485 115F                            l2477 1146                            l2469 1134  
                          l3525 07B7                            l3509 0781                            l3461 0588  
                          l3437 0485                            l3429 044A                            l3445 04CB  
                          l3381 024E                            l3517 0797                            l3373 021E  
                          l3365 0207                            l3357 01D8                            l3349 01C5  
                          l3287 1EAE                            l3279 1E92                            l3295 1F6D  
                          l2911 1EBC                            l2399 11FE                            l2903 1187  
                          l2735 17F1                            l2727 17E5                            l2719 17B1  
                          l2671 16E9                            l2663 16C4                            l2655 16B3  
                          l2647 168F                            l2639 1671                            l2591 1609  
                          l2583 15F0                            l2575 15E1                            l2567 15D3  
                          l2559 15C0                            l3199 10DF                            l2831 0BE0  
                          l2823 0BBC                            l2815 0B35                            l2807 0AB9  
                          l2751 096F                            l2743 0961                            l2495 117C  
                          l2487 1165                            l2479 114D                            l3527 07C6  
                          l3519 079D                            l3471 05E3                            l3463 0592  
                          l3447 0500                            l3439 04A3                            l3391 0296  
                          l3383 025C                            l3615 0232                            l3375 023A  
                          l3359 01DB                            l3367 0218                            l3535 07DA  
                          l3289 1EB6                            l3297 1F72                            l2921 1EDB  
                          l2913 1EC2                            l2905 1190                            l2737 17FA  
                          l2729 17EA                            l2681 1757                            l2673 1727  
                          l2665 16C5                            l2657 16B7                            l2593 160D  
                          l2585 15F8                            l2577 15E5                            l2569 15D6  
                          l2841 0BF5                            l2833 0BE1                            l2825 0BC5  
                          l2817 0B43                            l2809 0AD6                            l2761 098B  
                          l2753 0974                            l2745 0965                            l2489 116C  
                          l3529 07C6                            l3481 0625                            l3473 0602  
                          l3465 059E                            l3457 0551                            l3449 054D  
                          l3393 029A                            l3385 0260                            l3377 0246  
                          l3537 07EA                            l3369 021A                            l3561 138B  
                          l3299 1F7F                            l2923 1EDE                            l2915 1EC5  
                          l2907 119F                            l2739 17FE                            l2691 1772  
                          l2683 175C                            l2675 172D                            l2667 16CE  
                          l2659 16BE                            l2595 1611                            l2587 15F9  
                          l2579 15E6                            l2851 0C1A                            l2843 0BF9  
                          l2835 0BEA                            l2827 0BD3                            l2819 0B6E  
                          l2771 099E                            l2763 098F                            l2755 097C  
                          l2747 0969                            l2499 1F28                            l2931 13A0  
                          l3491 0658                            l3483 0632                            l3475 0614  
                          l3467 05A3                            l3395 02B3                            l3387 0279  
                          l3379 024A                            l3563 1393                            l3555 1325  
                          l2925 1EE4                            l2917 1ED3                            l2909 11A5  
                          l2693 1777                            l2677 1732                            l2669 16D3  
                          l2597 1613                            l2589 15FB                            l2861 0C58  
                          l2853 0C28                            l2845 0C0D                            l2829 0BDC  
                          l2837 0BF0                            l2781 09BA                            l2773 09A6  
                          l2765 0993                            l2757 097E                            l2749 096A  
                          l2941 14B9                            l2933 13A6                            l3493 065D  
                          l3485 0641                            l3477 061B                            l3469 05A8  
                          l3397 02BE                            l3389 0292                            l3557 136A  
                          l2927 1EE7                            l2919 1ED6                            l2695 177A  
                          l2687 1765                            l2679 1741                            l2599 1615  
                          l2871 0C8A                            l2863 0C63                            l2855 0C2C  
                          l2839 0BF4                            l2791 09F9                            l2775 09A8  
                          l2767 0994                            l2759 0986                            l2951 0CA8  
                          l3495 0661                            l3487 0646                            l3479 061F  
                          l3399 02C4                            l3559 1379                            l2929 1EEC  
                          l2881 1EF0                            l2697 177C                            l2689 176E  
                          l2873 0C8E                            l2865 0C72                            l2857 0C45  
                          l2849 0C15                            l2793 0A15                            l2785 09C3  
                          l2777 09B0                            l2769 0999                            l2945 1564  
                          l2961 0D99                            l2953 0CAA                            l3497 067F  
                          l3489 0653                            l2891 1F26                            l2883 1EF4  
                          l2699 1781                            l2875 0C8F                            l2867 0C7C  
                          l2859 0C4B                            l2795 0A3F                            l2787 09D1  
                          l2779 09B5                            l2939 14B3                            l2963 0DA0  
                          l2955 0CB1                            l2971 0E55                            l3499 06DA  
                          l2893 1D87                            l2885 1EF7                            l2877 0C98  
                          l2869 0C7E                            l2797 0A5B                            l2789 09DE  
                          l2981 0F4B                            l2973 0E5C                            l2949 0CA4  
                          l2895 1D8D                            l2887 1F24                            l2799 0A77  
                          l2991 1DB0                            l2967 0E28                            l2889 1F25  
                          l2897 1DA2                            l2993 1DB6                            l2985 0FD3  
                          l2899 1DAC                            l2995 1DBC                            l2979 0F44  
                          l2997 1DBE                            l2989 1DAF                            STR_1 1096  
                          u3010 128A                            u3011 1289                            u3100 115F  
                          _IOCB 0096                            u3005 127A                            u3101 115E  
                          u3030 129E                            u3031 129D                            u3015 1286  
                          u4000 0BF4                            u3200 1F67                            u3040 12A3  
                          u3120 1172                            u4001 0BF3                            u3201 1F66  
                          u3041 12A2                            u3025 1292                            u3121 1171  
                          u3105 115B                            u4010 0BF9                            u3210 0009  
                          u3130 1177                            u3050 112D                            u4011 0BF8  
                          u3211 0008                            u3131 1176                            u3115 1166  
                          u3051 112C                            u4100 1F07                            u3300 15DC  
                          u4020 0C0D                            u3140 1F30                            u3060 1138  
                          u3301 15DB                            u4021 0C0C                            u3141 1F2F  
                          u3061 1137                            u4110 1D8D                            u3310 15E5  
                          u4030 0C14                            u3230 001B                            u3070 1143  
                          u4111 1D8C                            u3311 15E4                            u4031 0C13  
                          u3231 001A                            u3071 1142                            u4120 1D93  
                          u3400 1670                            u3320 15EB                            u5000 0121  
                          u4040 0C1A                            u3160 1F42                            u3240 0025  
                          u4121 1D92                            u4105 1F02                            u3401 166F  
                          u3321 15EA                            u5001 0120                            u4041 0C19  
                          u3161 1F41                            u3241 0024                            u3225 000D  
                          u3330 15F0                            u4050 0C2C                            u3090 1155  
                          u3331 15EF                            u4051 0C2B                            u3155 1F34  
                          u3091 1154                            u3500 16E9                            u3420 1686  
                          u3340 1609                            u5100 01A1                            u5020 0140  
                          u4060 0C3B                            u3180 1F53                            u3260 0038  
                          u4140 13A6                            u4220 0CA8                            u3501 16E8  
                          u3421 1685                            u3341 1608                            u5101 01A0  
                          u5021 013F                            u3181 1F52                            u3261 0037  
                          u3245 0021                            u4205 1523                            u4141 13A5  
                          u3085 1147                            u4221 0CA7                            u3430 168A  
                          u3350 160D                            u3270 15B5                            u5110 01A5  
                          u4070 0C58                            u4310 0E5C                            u4230 0CB1  
                          u4135 1EC8                            u3511 1700                            u3503 16E5  
                          u3431 1689                            u3415 1673                            u3351 160C  
                          u3271 15B4                            u5111 01A4                            u5015 0132  
                          u4071 0C57                            u3175 1F43                            u3255 002C  
                          u4215 156F                            u4311 0E5B                            u4231 0CB0  
                          u5120 1EAE                            u3600 1787                            u3520 1714  
                          u3512 1701                            u3440 168F                            u3360 1647  
                          u3280 15BB                            u5040 0162                            u4080 0C72  
                          u4400 1DBC                            u5200 0217                            u5121 1EAD  
                          u3601 1786                            u3521 1715                            u3513 1706  
                          u3441 168E                            u3361 1646                            u3281 15BA  
                          u5041 0161                            u4081 0C71                            u4065 0C36  
                          u3185 1F4F                            u4401 1DBB                            u4305 0E2B  
                          u5201 0216                            u2810 1E00                            u5130 1F72  
                          u3610 178C                            u3530 1732                            u3522 171A  
                          u3514 1707                            u3370 1652                            u3290 15C0  
                          u4410 08B6                            u4090 0C8E                            u5210 0246  
                          u2811 1DFF                            u5131 1F71                            u3611 178B  
                          u3531 1731                            u3523 171B                            u3515 170C  
                          u3451 16A1                            u3371 1650                            u3291 15BF  
                          u5035 0154                            u4411 08B5                            u4091 0C8D  
                          u4075 0C54                            u3195 1F5B                            u4155 13C3  
                          u5211 0245                            u2820 1E0B                            u2900 1202  
                          u3700 17EA                            u3620 1792                            u3540 1757  
                          u3516 170D                            u3460 16B3                            u3452 16A8  
                          u3380 1653                            u5060 0172                            u4500 093B  
                          u4420 08CE                            u4180 14B9                            u5300 0423  
                          u5220 024A                            u2821 1E0A                            u2901 1201  
                          u3701 17E9                            u3621 1791                            u3541 1756  
                          u3461 16B2                            u3453 16AF                            u3365 1643  
                          u5061 0171                            u4501 093A                            u4421 08CD  
                          u4085 0C6E                            u4181 14B8                            u4165 141D  
                          u4325 0E7C                            u4245 0CD1                            u5301 0422  
                          u5221 0249                            u2830 1E12                            u5150 1F95  
                          u3710 17EF                            u3630 1799                            u3550 175C  
                          u3470 16B7                            u3390 1663                            u5070 0178  
                          u4510 0942                            u4350 0F4B                            u4270 0DA0  
                          u5310 044A                            u5230 0279                            u2831 1E11  
                          u5151 1F94                            u3711 17EE                            u3631 1798  
                          u3551 175B                            u3471 16B6                            u3391 1662  
                          u5071 0177                            u5055 0167                            u4511 0941  
                          u4175 1472                            u4351 0F4A                            u4335 0EB8  
                          u4271 0D9F                            u4255 0D0D                            u5311 0449  
                          u5231 0278                            u2840 1E19                            u2920 121D  
                          u3720 17FE                            u3640 179F                            u3480 16C4  
                          u5080 017C                            u4600 00BB                            u4440 0905  
                          u3800 09BA                            u5400 0632                            u5320 0459  
                          u5240 02B3                            u2841 1E18                            u5145 1F78  
                          u2921 121C                            u3721 17FD                            u3641 179E  
                          u3481 16C3                            u5081 017B                            u4601 00BA  
                          u4441 0904                            u3801 09B9                            u4345 0F03  
                          u4265 0D58                            u5401 0631                            u5321 0458  
                          u5241 02B2                            u5170 1DFA                            u3650 17B1  
                          u3570 1772                            u5090 0191                            u4610 00C2  
                          u4530 0953                            u2850 1E74                            u3730 0969  
                          u5410 0641                            u5330 0474                            u5250 02EE  
                          u5171 1DF9                            u2915 1204                            u3651 17B0  
                          u3571 1771                            u4611 00C1                            u4531 0952  
                          u4435 08F0                            u2851 1E73                            u3811 0A07  
                          u3731 0968                            u4195 14D6                            u5411 0640  
                          u5331 0473                            u5251 02ED                            _PEIE 005E  
                          u2940 123B                            u3660 17C0                            u3580 1777  
                          u4700 1E61                            u4540 0048                            u4460 091E  
                          u3812 0A0E                            u3740 096F                            u5500 07C6  
                          u5420 0658                            u5260 0377                            u5180 01BB  
                          u5165 1F9B                            u2941 123A                            u2925 1219  
                          u3581 1776                            u3565 1767                            u4701 1E60  
                          u4541 0047                            u4525 0945                            u4461 091D  
                          u4445 0901                            u3901 0B27                            u3821 0A23  
                          u3813 0A15                            u3741 096E                            u4365 0F5E  
                          u4285 0DB3                            u5501 07C5                            u5421 0657  
                          u5405 062E                            u5325 0455                            u5261 0376  
                          u5181 01BA                            u4710 1FC6                            u3670 17CF  
                          u3590 1781                            u4630 00D4                            u4550 005A  
                          u4470 0922                            u2870 1E88                            u3902 0B2E  
                          u3822 0A2A                            u3750 0974                            u4390 1DB6  
                          u2950 124B                            u5510 07D4                            u5350 0587  
                          u5270 039B                            u5190 01D3                            u2935 122D  
                          u4711 1FC5                            u3671 17CE                            u3591 1780  
                          u3495 16C7                            u5095 018C                            u4631 00D3  
                          u4551 0059                            u4471 0921                            u4455 0911  
                          u2871 1E87                            u3911 0B52                            u3903 0B35  
                          u3831 0A4D                            u3823 0A31                            u3751 0973  
                          u4391 1DB5                            u2951 124A                            u4375 0F9A  
                          u4295 0DEF                            u5511 07D3                            u5415 063D  
                          u5351 0586                            u5271 039A                            u5191 01D2  
                          u2880 11EE                            u4720 1FE2                            u4800 08A1  
                          u3680 17D8                            u4640 00DB                            u4480 0929  
                          u3920 0B7A                            u3912 0B59                            u3832 0A54  
                          u3760 0993                            u2960 1256                            u5520 07EA  
                          u5360 0592                            u5280 03B2                            u2881 11ED  
                          u4721 1FE1                            u4801 08A0                            u3681 17D7  
                          u3665 17BB                            u4641 00DA                            u4625 00C4  
                          u4481 0928                            u2865 1E7B                            u3913 0B60  
                          u3841 0A69                            u3833 0A5B                            u3761 0992  
                          u2961 1255                            u4385 0FD6                            u5521 07E9  
                          u5505 07C2                            u5361 0591                            u5345 0554  
                          u5281 03B1                            u4730 1FFC                            u4810 1D84  
                          u3690 17DD                            u4570 0099                            u3842 0A70  
                          u3770 0999                            u2970 1267                            u5450 0780  
                          u5370 059E                            u5290 0408                            u4731 1FFB  
                          u4811 1D83                            u3691 17DC                            u4571 0098  
                          u3931 0B86                            u3843 0A77                            u3771 0998  
                          u2971 1266                            u5451 077F                            u5435 06DD  
                          u5371 059D                            u5355 0583                            u5291 0407  
                          u4740 0817                            u4900 1314                            u4820 12B8  
                          u4660 00EC                            u3940 0BA2                            u3932 0B8D  
                          u3780 099E                            u5460 0796                            u4805 089D  
                          u4741 0816                            u4901 1313                            u4821 12B7  
                          u4661 00EB                            u4565 0080                            u3933 0B94  
                          u3925 0B75                            u3861 0A9D                            u3781 099D  
                          u5461 0795                            u5445 0741                            u5285 03AE  
                          u4750 0833                            u4910 1319                            u4830 12CF  
                          u4670 1E47                            u4590 00B7                            u3862 0AA4  
                          u3790 09B5                            u2990 1279                            u5470 079D  
                          u5390 0613                            u5607 1EE9                            u2895 11F3  
                          u4735 1FF8                            u4751 0832                            u4911 1318  
                          u4671 1E46                            u4655 00DE                            u4591 00B6  
                          u4575 0095                            u4495 092B                            u3951 0BAE  
                          u3871 0AC8                            u3863 0AAB                            u3855 0A79  
                          u3791 09B4                            u2991 1278                            u5471 079C  
                          u5391 0612                            u5295 0404                            u4760 083F  
                          u4840 12E3                            u4920 10DC                            u3952 0BB5  
                          u3872 0ACF                            u5480 07A5                            u5617 1DD1  
                          u4761 083E                            u4841 12E2                            u4921 10DB  
                          u4585 00AA                            u3953 0BBC                            u3945 0B9D  
                          u3873 0AD6                            u2985 126B                            u5481 07A4  
                          u5385 05AB                            u4850 12EA                            u5490 07B6  
                          u4771 084E                            u4851 12E9                            u4835 12CA  
                          u3891 0AFC                            u5491 07B5                            u4780 0867  
                          u4772 084F                            u4940 10F0                            u3980 0BE0  
                          u3892 0B03                            u4781 0866                            u4773 0854  
                          u4941 10EF                            u4685 1E4E                            u3981 0BDF  
                          u3965 0BBE                            u3893 0B0A                            u3885 0AD8  
                          u5557 1372                            u4774 0855                            u4870 12FC  
                          u4950 1102                            u5567 118B                            u4791 0876  
                          u4775 085A                            u4871 12FB                            u4951 1101  
                          u4935 10E1                            u4695 1E55                            u3975 0BD5  
                          u5495 07B2                            u4792 0877                            u4776 085B  
                          u4880 1303                            u5577 119A                            u4793 087C  
                          u4881 1302                            u4865 12EC                            u4794 087D  
                          u4970 111F                            u5587 11A9                            u4795 0882  
                          u4971 111E                            u4955 10FE                            u3995 0BE3  
                          u4796 0883                            u4980 00FD                            u5597 1ED8  
                          u4965 1111                            u4981 00FC                            u4990 0101  
                          u4895 1306                            u4991 0100                            _TMR1 000E  
                          _main 1325          _Lcd_Write_String_4bits 1DDA                            btemp 007E  
                          start 0000                    _sprintf$1375 00AA                ?_I2C_Master_Init 0020  
              ?_I2C_Master_Read 0070                ?_I2C_Master_Wait 0070                ?_I2C_Master_Stop 0070  
                 ___fltol@sign1 0059                 __end_of___fladd 1800                           ?_main 0070  
             ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 12AD                 __end_of___flneg 1D87  
               __end_of___awmod 1181                 __end_of___flmul 0CA1                 __end_of___flsub 1E41  
               __end_of___fltol 1325                           _ANSEL 0188                 __end_of___lldiv 1244  
               ___awdiv@divisor 0077                 __end_of___llmod 1128                 __end_of___lwdiv 1F6C  
               __end_of___lwmod 003D                 ___awdiv@counter 0020                           _PORTA 0005  
                         _PORTB 0006                           _PORTD 0008                           _TRISA 0085  
                         _TRISB 0086                           _TRISD 0088                           _SSPIE 0463  
                         _SSPIF 0063           __end_of_Lcd_Cmd_4bits 1DDA                 __end_of_dpowers 1096  
                         _scale 0CA1                 __end_of_isdigit 1DC0                           _setup 10AC  
                         pclath 000A                           status 0003                           wtemp0 007E  
               __end_of_sprintf 07EF                 __initialization 07EF                    __end_of_main 139D  
                        ??_main 00C3               ?_I2C_Master_Start 0070               ?_I2C_Master_Write 0070  
            ??_I2C_Master_Start 0070              ??_I2C_Master_Write 0072                ___llmod@dividend 0074  
                        ?_scale 003E                          _CCPR1L 0015                          _CCPR2L 001B  
              ___awdiv@dividend 0079                          ?_setup 0070                          _ANSELH 0189  
                        _SSPADD 0093                          _TRISC3 043B                          _TRISC4 043C  
                        _SSPCON 0014                          _SSPBUF 0013                __end_of___xxtofl 01AF  
      Lcd_Write_Char_4bits@temp 0072                __end_of__powers_ 103A                          ___flge 0803  
                        ___fleq 1FB2                       ??___fladd 005A                          ___wmul 1E41  
                     ??___awdiv 007B                       ??___flneg 0074                       ??___awmod 0074  
                     ??___flmul 002C                       ??___flsub 007E                       ??___fltol 0055  
                     ??___lldiv 0078                       ??___llmod 0078                       ??___lwdiv 007A  
                     ??___lwmod 0074                          _fround 139D                ___awdiv@quotient 0022  
               ___awmod@divisor 0070                 ___awmod@counter 0075                    ?_setupINTOSC 0070  
                     ??_isdigit 0070                  _Lcd_Init_4bits 1181                       ??_sprintf 00A5  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 0022  
                  ___xxtofl@exp 0021                    ___xxtofl@val 0076                      ___fleq@ff1 0070  
                    ___fleq@ff2 0074         __end_of__initialization 07FC                      ___flneg@f1 0070  
                    ___fltol@f1 0051                  __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074  
         Lcd_Write_Char_4bits@y 0073                   __end_of_scale 1000                   __end_of_setup 10D4  
                    __div_to_l_ 003D                  _OPTION_REGbits 0081          __end_of_Lcd_Init_4bits 11DE  
               __div_to_l_@exp1 0025                 __div_to_l_@cntr 0024                         ??_scale 0042  
               __div_to_l_@quot 0020         ?_Lcd_Write_String_4bits 0070                         ??_setup 007E  
                    __pbssBANK0 006E                      __pbssBANK1 00C7                  _Lcd_Port_4bits 1DFB  
                 __div_to_l_@f1 0070                   __div_to_l_@f2 0074               __end_of__Umul8_16 1E8D  
               _Lcd_Clear_4bits 1D94                      __pmaintext 1325                         ?___flge 0070  
                       ?___fleq 0070                         ?___wmul 0070                         ?_fround 003E  
                     ?___xxtofl 0076    __end_of_Lcd_Write_Char_4bits 1EF0                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 1DFB                         _SSPCON2 0091  
                       _SSPSTAT 0094                      __stringtab 1000          __end_of_Lcd_Port_4bits 1E1D  
             __end_of__npowers_ 106E                      _scale$1374 004C                         ___fladd 15A8  
                       ___awdiv 1244                         ___flneg 1D7C                         ___awmod 1128  
                       ___flmul 095C                         ___flsub 1E1D                         ___fltol 12AD  
                       ___lldiv 11DE                         ___llmod 10D4                         ___lwdiv 1F28  
                       ___lwmod 0003                         __ptext1 01AF                         __ptext2 0CA1  
                       __ptext3 1128                         __ptext4 1244                         __ptext5 1DAE  
                       __ptext6 139D                         __ptext7 0003                         __ptext8 1F28  
                       __ptext9 095C                       _T1CONbits 0010                     ?__div_to_l_ 0070  
                       _dpowers 106E                       _T2CONbits 0012                         _isdigit 1DAE  
                    ??___xxtofl 007A                ___awmod@dividend 0072    __end_of_Lcd_Set_Cursor_4bits 1FB2  
                       _sprintf 01AF                         clrloop0 1D59            end_of_initialization 07FC  
               ?_Lcd_Port_4bits 0070         __end_of_Lcd_Clear_4bits 1DA1                 ___lldiv@divisor 0070  
               ___lldiv@counter 007D                I2C_Master_Init@c 0020                I2C_Master_Read@a 0070  
                __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074                   ??__tdiv_to_l_ 0078  
                  _distanciaLCD 00CB                       _PORTAbits 0005                       _PORTBbits 0006  
                     _PORTDbits 0008                     ___fladd@grs 0065                   ___xxtofl@sign 0020  
                     _TRISAbits 0085                       _TRISCbits 0087                     ___flmul@grs 0032  
                   _CCP1CONbits 0017                     _CCP2CONbits 001D            _Lcd_Write_Char_4bits 1EBB  
                __end_of___flge 08A5                  __end_of___fleq 2000                  __end_of___wmul 1E66  
                __end_of_fround 15A8             start_initialization 07EF             __end_of__tdiv_to_l_ 095C  
                 _Lcd_Cmd_4bits 1DC0           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
             ??_I2C_Master_Init 0024               ??_I2C_Master_Read 0072               ??_I2C_Master_Wait 0070  
             ??_I2C_Master_Stop 0070                 ___llmod@divisor 0070                 ___llmod@counter 0079  
         ?_Lcd_Write_Char_4bits 0070                        ??___flge 0078                        ??___fleq 0078  
                      ??___wmul 0074        Lcd_Set_Cursor_4bits@temp 0079            _Lcd_Set_Cursor_4bits 1F6C  
                     __Umul8_16 1E66                        ??_fround 0042                ??_Lcd_Init_4bits 0074  
                 sprintf@tmpval 00B7                       ___fladd@a 0056                       ___fladd@b 0052  
                    fround@prec 0051                       ___flmul@a 0028                       ___flmul@b 0024  
                     ___flsub@a 0066                       ___flsub@b 006A                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                  ?_Lcd_Cmd_4bits 0070  
                  _isdigit$1152 0070                     sprintf@flag 00AF                     sprintf@eexp 00B5  
                   sprintf@fval 00BE                     sprintf@prec 00BC                _I2C_Master_Start 1D60  
              _I2C_Master_Write 1D72                ___lwdiv@dividend 0078                        ?___fladd 0052  
         ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0077                        ?___flneg 0070  
                      ?___awmod 0070                        ?___flmul 0024                        ?___flsub 0066  
                      ?___fltol 0051                        ?___lldiv 0070                        ?___llmod 0070  
                     __npowers_ 103A                      ?__Umul8_16 0070                        ?___lwdiv 0076  
                      ?___lwmod 0070                       __pstrings 1000                     __tdiv_to_l_ 08A5  
                     _distancia 00C7                    ??__div_to_l_ 0078                        ?_isdigit 0070  
              ??_Lcd_Port_4bits 0070                ___lwdiv@quotient 007B                        ?_sprintf 00A0  
                ___wmul@product 0074                       clear_ram0 1D58          ??_Lcd_Write_Char_4bits 0071  
                      _PIR1bits 000C              __end_of__div_to_l_ 00F5                       _velocidad 006E  
                   __stringbase 1005                   ??_setupINTOSC 0070               ___wmul@multiplier 0070  
               ??_Lcd_Cmd_4bits 0071                        _WPUBbits 0095             I2C_Master_Read@temp 0074  
       Lcd_Write_String_4bits@a 0078         Lcd_Write_String_4bits@i 0076          ??_Lcd_Set_Cursor_4bits 0075  
                   ??__Umul8_16 0072                     _fround$1372 004D                     _fround$1373 0049  
            __end_of__stringtab 1006        ??_Lcd_Write_String_4bits 0075                  Lcd_Cmd_4bits@a 0073  
                    sprintf@val 00B1                 _I2C_Master_Init 1EF0                 _I2C_Master_Read 1E8D  
                      ___xxtofl 00F5                 _I2C_Master_Wait 1D87                 _I2C_Master_Stop 1D69  
               ___lwdiv@divisor 0076                 ___lwdiv@counter 007D                        __ptext10 1E66  
                      __ptext11 08A5                        __ptext20 0803                        __ptext12 003D  
                      __ptext21 1FB2                        __ptext13 00F5                        __ptext30 1D94  
                      __ptext22 10AC                        __ptext14 1E41                        __ptext31 1DC0  
                      __ptext23 1DA1                        __ptext15 10D4                        __ptext32 1DFB  
                      __ptext24 1181                        __ptext16 12AD                        __ptext33 1D72  
                      __ptext25 1EF0                        __ptext17 1E1D                        __ptext34 1D69  
                      __ptext26 11DE                        __ptext18 15A8                        __ptext35 1D60  
                      __ptext27 1DDA                        __ptext19 1D7C                        __ptext36 1E8D  
                      __ptext28 1EBB                        __ptext37 1D87                        __ptext29 1F6C  
           __end_of_setupINTOSC 1DAE                        __powers_ 1006        __end_of_I2C_Master_Start 1D69  
      __end_of_I2C_Master_Write 1D7C                        isdigit@c 0071                        scale@scl 0050  
                     sprintf@ap 00AE                __tdiv_to_l_@exp1 0025                __tdiv_to_l_@cntr 0024  
                     sprintf@sp 00BB                __tdiv_to_l_@quot 0020                ___lwmod@dividend 0072  
              ___lldiv@dividend 0074                       stringcode 1000                      _OSCCONbits 008F  
       __end_of_I2C_Master_Init 1F28         __end_of_I2C_Master_Read 1EBB         __end_of_I2C_Master_Wait 1D94  
       __end_of_I2C_Master_Stop 1D72                    ?__tdiv_to_l_ 0070          __Umul8_16@multiplicand 0070  
                   _setupINTOSC 1DA1                        sprintf@c 00C2                        sprintf@f 00A0  
                  setupINTOSC@F 0071                ___lldiv@quotient 0079               I2C_Master_Write@d 0070  
               ___lwmod@divisor 0070                 ___lwmod@counter 0075                        stringdir 1000  
                      stringtab 1000                     _SSPCON2bits 0091                   ___fladd@signs 0062  
                  ___fladd@aexp 0063                    ___fladd@bexp 0064            __Umul8_16@multiplier 0078  
             __Umul8_16@product 0074  

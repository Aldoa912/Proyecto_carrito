

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 09:19:06 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     008F                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0094                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     0105                     	;# 
   155     0107                     	;# 
   156     0108                     	;# 
   157     0109                     	;# 
   158     010C                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0185                     	;# 
   164     0187                     	;# 
   165     0188                     	;# 
   166     0189                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     008F                     	;# 
   214     0090                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     0105                     	;# 
   233     0107                     	;# 
   234     0108                     	;# 
   235     0109                     	;# 
   236     010C                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     0185                     	;# 
   242     0187                     	;# 
   243     0188                     	;# 
   244     0189                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000D                     	;# 
   261     000E                     	;# 
   262     000E                     	;# 
   263     000F                     	;# 
   264     0010                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001D                     	;# 
   280     001E                     	;# 
   281     001F                     	;# 
   282     0081                     	;# 
   283     0085                     	;# 
   284     0086                     	;# 
   285     0087                     	;# 
   286     0088                     	;# 
   287     0089                     	;# 
   288     008C                     	;# 
   289     008D                     	;# 
   290     008E                     	;# 
   291     008F                     	;# 
   292     0090                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     0105                     	;# 
   311     0107                     	;# 
   312     0108                     	;# 
   313     0109                     	;# 
   314     010C                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0185                     	;# 
   320     0187                     	;# 
   321     0188                     	;# 
   322     0189                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325     0000                     	;# 
   326     0001                     	;# 
   327     0002                     	;# 
   328     0003                     	;# 
   329     0004                     	;# 
   330     0005                     	;# 
   331     0006                     	;# 
   332     0007                     	;# 
   333     0008                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000D                     	;# 
   339     000E                     	;# 
   340     000E                     	;# 
   341     000F                     	;# 
   342     0010                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0013                     	;# 
   346     0014                     	;# 
   347     0015                     	;# 
   348     0015                     	;# 
   349     0016                     	;# 
   350     0017                     	;# 
   351     0018                     	;# 
   352     0019                     	;# 
   353     001A                     	;# 
   354     001B                     	;# 
   355     001B                     	;# 
   356     001C                     	;# 
   357     001D                     	;# 
   358     001E                     	;# 
   359     001F                     	;# 
   360     0081                     	;# 
   361     0085                     	;# 
   362     0086                     	;# 
   363     0087                     	;# 
   364     0088                     	;# 
   365     0089                     	;# 
   366     008C                     	;# 
   367     008D                     	;# 
   368     008E                     	;# 
   369     008F                     	;# 
   370     0090                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0093                     	;# 
   376     0094                     	;# 
   377     0095                     	;# 
   378     0096                     	;# 
   379     0097                     	;# 
   380     0098                     	;# 
   381     0099                     	;# 
   382     009A                     	;# 
   383     009B                     	;# 
   384     009C                     	;# 
   385     009D                     	;# 
   386     009E                     	;# 
   387     009F                     	;# 
   388     0105                     	;# 
   389     0107                     	;# 
   390     0108                     	;# 
   391     0109                     	;# 
   392     010C                     	;# 
   393     010C                     	;# 
   394     010D                     	;# 
   395     010E                     	;# 
   396     010F                     	;# 
   397     0185                     	;# 
   398     0187                     	;# 
   399     0188                     	;# 
   400     0189                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0000                     	;# 
   404     0001                     	;# 
   405     0002                     	;# 
   406     0003                     	;# 
   407     0004                     	;# 
   408     0005                     	;# 
   409     0006                     	;# 
   410     0007                     	;# 
   411     0008                     	;# 
   412     0009                     	;# 
   413     000A                     	;# 
   414     000B                     	;# 
   415     000C                     	;# 
   416     000D                     	;# 
   417     000E                     	;# 
   418     000E                     	;# 
   419     000F                     	;# 
   420     0010                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0015                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001B                     	;# 
   434     001C                     	;# 
   435     001D                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     0081                     	;# 
   439     0085                     	;# 
   440     0086                     	;# 
   441     0087                     	;# 
   442     0088                     	;# 
   443     0089                     	;# 
   444     008C                     	;# 
   445     008D                     	;# 
   446     008E                     	;# 
   447     008F                     	;# 
   448     0090                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0093                     	;# 
   454     0094                     	;# 
   455     0095                     	;# 
   456     0096                     	;# 
   457     0097                     	;# 
   458     0098                     	;# 
   459     0099                     	;# 
   460     009A                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     009F                     	;# 
   466     0105                     	;# 
   467     0107                     	;# 
   468     0108                     	;# 
   469     0109                     	;# 
   470     010C                     	;# 
   471     010C                     	;# 
   472     010D                     	;# 
   473     010E                     	;# 
   474     010F                     	;# 
   475     0185                     	;# 
   476     0187                     	;# 
   477     0188                     	;# 
   478     0189                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0000                     	;# 
   482     0001                     	;# 
   483     0002                     	;# 
   484     0003                     	;# 
   485     0004                     	;# 
   486     0005                     	;# 
   487     0006                     	;# 
   488     0007                     	;# 
   489     0008                     	;# 
   490     0009                     	;# 
   491     000A                     	;# 
   492     000B                     	;# 
   493     000C                     	;# 
   494     000D                     	;# 
   495     000E                     	;# 
   496     000E                     	;# 
   497     000F                     	;# 
   498     0010                     	;# 
   499     0011                     	;# 
   500     0012                     	;# 
   501     0013                     	;# 
   502     0014                     	;# 
   503     0015                     	;# 
   504     0015                     	;# 
   505     0016                     	;# 
   506     0017                     	;# 
   507     0018                     	;# 
   508     0019                     	;# 
   509     001A                     	;# 
   510     001B                     	;# 
   511     001B                     	;# 
   512     001C                     	;# 
   513     001D                     	;# 
   514     001E                     	;# 
   515     001F                     	;# 
   516     0081                     	;# 
   517     0085                     	;# 
   518     0086                     	;# 
   519     0087                     	;# 
   520     0088                     	;# 
   521     0089                     	;# 
   522     008C                     	;# 
   523     008D                     	;# 
   524     008E                     	;# 
   525     008F                     	;# 
   526     0090                     	;# 
   527     0091                     	;# 
   528     0092                     	;# 
   529     0093                     	;# 
   530     0093                     	;# 
   531     0093                     	;# 
   532     0094                     	;# 
   533     0095                     	;# 
   534     0096                     	;# 
   535     0097                     	;# 
   536     0098                     	;# 
   537     0099                     	;# 
   538     009A                     	;# 
   539     009B                     	;# 
   540     009C                     	;# 
   541     009D                     	;# 
   542     009E                     	;# 
   543     009F                     	;# 
   544     0105                     	;# 
   545     0107                     	;# 
   546     0108                     	;# 
   547     0109                     	;# 
   548     010C                     	;# 
   549     010C                     	;# 
   550     010D                     	;# 
   551     010E                     	;# 
   552     010F                     	;# 
   553     0185                     	;# 
   554     0187                     	;# 
   555     0188                     	;# 
   556     0189                     	;# 
   557     018C                     	;# 
   558     018D                     	;# 
   559     0000                     	;# 
   560     0001                     	;# 
   561     0002                     	;# 
   562     0003                     	;# 
   563     0004                     	;# 
   564     0005                     	;# 
   565     0006                     	;# 
   566     0007                     	;# 
   567     0008                     	;# 
   568     0009                     	;# 
   569     000A                     	;# 
   570     000B                     	;# 
   571     000C                     	;# 
   572     000D                     	;# 
   573     000E                     	;# 
   574     000E                     	;# 
   575     000F                     	;# 
   576     0010                     	;# 
   577     0011                     	;# 
   578     0012                     	;# 
   579     0013                     	;# 
   580     0014                     	;# 
   581     0015                     	;# 
   582     0015                     	;# 
   583     0016                     	;# 
   584     0017                     	;# 
   585     0018                     	;# 
   586     0019                     	;# 
   587     001A                     	;# 
   588     001B                     	;# 
   589     001B                     	;# 
   590     001C                     	;# 
   591     001D                     	;# 
   592     001E                     	;# 
   593     001F                     	;# 
   594     0081                     	;# 
   595     0085                     	;# 
   596     0086                     	;# 
   597     0087                     	;# 
   598     0088                     	;# 
   599     0089                     	;# 
   600     008C                     	;# 
   601     008D                     	;# 
   602     008E                     	;# 
   603     008F                     	;# 
   604     0090                     	;# 
   605     0091                     	;# 
   606     0092                     	;# 
   607     0093                     	;# 
   608     0093                     	;# 
   609     0093                     	;# 
   610     0094                     	;# 
   611     0095                     	;# 
   612     0096                     	;# 
   613     0097                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009C                     	;# 
   619     009D                     	;# 
   620     009E                     	;# 
   621     009F                     	;# 
   622     0105                     	;# 
   623     0107                     	;# 
   624     0108                     	;# 
   625     0109                     	;# 
   626     010C                     	;# 
   627     010C                     	;# 
   628     010D                     	;# 
   629     010E                     	;# 
   630     010F                     	;# 
   631     0185                     	;# 
   632     0187                     	;# 
   633     0188                     	;# 
   634     0189                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637                           
   638                           	psect	strings
   639     0003                     __pstrings:
   640     0003                     stringtab:
   641     0003                     __stringtab:
   642                           
   643                           ;	String table - string pointers are 1 byte each
   644     0003  1BFF               	btfsc	btemp+1,7
   645     0004  280D               	ljmp	stringcode
   646     0005  1383               	bcf	3,7
   647     0006  187F               	btfsc	btemp+1,0
   648     0007  1783               	bsf	3,7
   649     0008  0800               	movf	0,w
   650     0009  0A84               	incf	4,f
   651     000A  1903               	skipnz
   652     000B  0AFF               	incf	btemp+1,f
   653     000C  0008               	return
   654     000D                     stringcode:
   655     000D                     stringdir:
   656     000D  3000               	movlw	high stringdir
   657     000E  008A               	movwf	10
   658     000F  0804               	movf	4,w
   659     0010  0A84               	incf	4,f
   660     0011  0782               	addwf	2,f
   661     0012                     __stringbase:
   662     0012  3400               	retlw	0
   663     0013                     __end_of__stringtab:
   664     0013                     __powers_:
   665     0013  3400               	retlw	0
   666     0014  3400               	retlw	0
   667     0015  3480               	retlw	128
   668     0016  343F               	retlw	63
   669     0017  3400               	retlw	0
   670     0018  3400               	retlw	0
   671     0019  3420               	retlw	32
   672     001A  3441               	retlw	65
   673     001B  3400               	retlw	0
   674     001C  3400               	retlw	0
   675     001D  34C8               	retlw	200
   676     001E  3442               	retlw	66
   677     001F  3400               	retlw	0
   678     0020  3400               	retlw	0
   679     0021  347A               	retlw	122
   680     0022  3444               	retlw	68
   681     0023  3400               	retlw	0
   682     0024  3440               	retlw	64
   683     0025  341C               	retlw	28
   684     0026  3446               	retlw	70
   685     0027  3400               	retlw	0
   686     0028  3450               	retlw	80
   687     0029  34C3               	retlw	195
   688     002A  3447               	retlw	71
   689     002B  3400               	retlw	0
   690     002C  3424               	retlw	36
   691     002D  3474               	retlw	116
   692     002E  3449               	retlw	73
   693     002F  3480               	retlw	128
   694     0030  3496               	retlw	150
   695     0031  3418               	retlw	24
   696     0032  344B               	retlw	75
   697     0033  3420               	retlw	32
   698     0034  34BC               	retlw	188
   699     0035  34BE               	retlw	190
   700     0036  344C               	retlw	76
   701     0037  3428               	retlw	40
   702     0038  346B               	retlw	107
   703     0039  346E               	retlw	110
   704     003A  344E               	retlw	78
   705     003B  34F9               	retlw	249
   706     003C  3402               	retlw	2
   707     003D  3415               	retlw	21
   708     003E  3450               	retlw	80
   709     003F  34EC               	retlw	236
   710     0040  3478               	retlw	120
   711     0041  34AD               	retlw	173
   712     0042  3460               	retlw	96
   713     0043  34CA               	retlw	202
   714     0044  34F2               	retlw	242
   715     0045  3449               	retlw	73
   716     0046  3471               	retlw	113
   717     0047                     __end_of__powers_:
   718     0047                     __npowers_:
   719     0047  3400               	retlw	0
   720     0048  3400               	retlw	0
   721     0049  3480               	retlw	128
   722     004A  343F               	retlw	63
   723     004B  34CD               	retlw	205
   724     004C  34CC               	retlw	204
   725     004D  34CC               	retlw	204
   726     004E  343D               	retlw	61
   727     004F  340A               	retlw	10
   728     0050  34D7               	retlw	215
   729     0051  3423               	retlw	35
   730     0052  343C               	retlw	60
   731     0053  346F               	retlw	111
   732     0054  3412               	retlw	18
   733     0055  3483               	retlw	131
   734     0056  343A               	retlw	58
   735     0057  3417               	retlw	23
   736     0058  34B7               	retlw	183
   737     0059  34D1               	retlw	209
   738     005A  3438               	retlw	56
   739     005B  34AC               	retlw	172
   740     005C  34C5               	retlw	197
   741     005D  3427               	retlw	39
   742     005E  3437               	retlw	55
   743     005F  34BD               	retlw	189
   744     0060  3437               	retlw	55
   745     0061  3486               	retlw	134
   746     0062  3435               	retlw	53
   747     0063  3495               	retlw	149
   748     0064  34BF               	retlw	191
   749     0065  34D6               	retlw	214
   750     0066  3433               	retlw	51
   751     0067  3477               	retlw	119
   752     0068  34CC               	retlw	204
   753     0069  342B               	retlw	43
   754     006A  3432               	retlw	50
   755     006B  345F               	retlw	95
   756     006C  3470               	retlw	112
   757     006D  3489               	retlw	137
   758     006E  3430               	retlw	48
   759     006F  34FF               	retlw	255
   760     0070  34E6               	retlw	230
   761     0071  34DB               	retlw	219
   762     0072  342E               	retlw	46
   763     0073  3408               	retlw	8
   764     0074  34E5               	retlw	229
   765     0075  343C               	retlw	60
   766     0076  341E               	retlw	30
   767     0077  3460               	retlw	96
   768     0078  3442               	retlw	66
   769     0079  34A2               	retlw	162
   770     007A  340D               	retlw	13
   771     007B                     __end_of__npowers_:
   772     007B                     _dpowers:
   773     007B  3401               	retlw	1
   774     007C  3400               	retlw	0
   775     007D  3400               	retlw	0
   776     007E  3400               	retlw	0
   777     007F  340A               	retlw	10
   778     0080  3400               	retlw	0
   779     0081  3400               	retlw	0
   780     0082  3400               	retlw	0
   781     0083  3464               	retlw	100
   782     0084  3400               	retlw	0
   783     0085  3400               	retlw	0
   784     0086  3400               	retlw	0
   785     0087  34E8               	retlw	232
   786     0088  3403               	retlw	3
   787     0089  3400               	retlw	0
   788     008A  3400               	retlw	0
   789     008B  3410               	retlw	16
   790     008C  3427               	retlw	39
   791     008D  3400               	retlw	0
   792     008E  3400               	retlw	0
   793     008F  34A0               	retlw	160
   794     0090  3486               	retlw	134
   795     0091  3401               	retlw	1
   796     0092  3400               	retlw	0
   797     0093  3440               	retlw	64
   798     0094  3442               	retlw	66
   799     0095  340F               	retlw	15
   800     0096  3400               	retlw	0
   801     0097  3480               	retlw	128
   802     0098  3496               	retlw	150
   803     0099  3498               	retlw	152
   804     009A  3400               	retlw	0
   805     009B  3400               	retlw	0
   806     009C  34E1               	retlw	225
   807     009D  34F5               	retlw	245
   808     009E  3405               	retlw	5
   809     009F  3400               	retlw	0
   810     00A0  34CA               	retlw	202
   811     00A1  349A               	retlw	154
   812     00A2  343B               	retlw	59
   813     00A3                     __end_of_dpowers:
   814     000E                     _TMR1	set	14
   815     0012                     _T2CONbits	set	18
   816     000C                     _PIR1bits	set	12
   817     001D                     _CCP2CONbits	set	29
   818     0017                     _CCP1CONbits	set	23
   819     0010                     _T1CONbits	set	16
   820     0008                     _PORTD	set	8
   821     0006                     _PORTB	set	6
   822     0005                     _PORTA	set	5
   823     0005                     _PORTAbits	set	5
   824     001B                     _CCPR2L	set	27
   825     0015                     _CCPR1L	set	21
   826     0008                     _PORTDbits	set	8
   827     0013                     _SSPBUF	set	19
   828     0014                     _SSPCON	set	20
   829     0063                     _SSPIF	set	99
   830     005E                     _PEIE	set	94
   831     005F                     _GIE	set	95
   832     0092                     _PR2	set	146
   833     0096                     _IOCB	set	150
   834     0095                     _WPUBbits	set	149
   835     0081                     _OPTION_REGbits	set	129
   836     0085                     _TRISAbits	set	133
   837     0088                     _TRISD	set	136
   838     0086                     _TRISB	set	134
   839     0085                     _TRISA	set	133
   840     008F                     _OSCCONbits	set	143
   841     0091                     _SSPCON2bits	set	145
   842     0087                     _TRISCbits	set	135
   843     0094                     _SSPSTAT	set	148
   844     0093                     _SSPADD	set	147
   845     0091                     _SSPCON2	set	145
   846     0463                     _SSPIE	set	1123
   847     043C                     _TRISC4	set	1084
   848     043B                     _TRISC3	set	1083
   849     0189                     _ANSELH	set	393
   850     0188                     _ANSEL	set	392
   851     00A3                     STR_1:
   852     00A3  3444               	retlw	68	;'D'
   853     00A4  3469               	retlw	105	;'i'
   854     00A5  3473               	retlw	115	;'s'
   855     00A6  3474               	retlw	116	;'t'
   856     00A7  3461               	retlw	97	;'a'
   857     00A8  346E               	retlw	110	;'n'
   858     00A9  3463               	retlw	99	;'c'
   859     00AA  3469               	retlw	105	;'i'
   860     00AB  3461               	retlw	97	;'a'
   861     00AC  343A               	retlw	58	;':'
   862     00AD  3420               	retlw	32	;' '
   863     00AE  3425               	retlw	37	;'%'
   864     00AF  342E               	retlw	46	;'.'
   865     00B0  3431               	retlw	49	;'1'
   866     00B1  3466               	retlw	102	;'f'
   867     00B2  3400               	retlw	0
   868     00B3                     STR_6:
   869     00B3  3454               	retlw	84	;'T'
   870     00B4  3441               	retlw	65	;'A'
   871     00B5  3450               	retlw	80	;'P'
   872     00B6  3441               	retlw	65	;'A'
   873     00B7  3444               	retlw	68	;'D'
   874     00B8  344F               	retlw	79	;'O'
   875     00B9  3400               	retlw	0
   876     00BA                     STR_3:
   877     00BA  3456               	retlw	86	;'V'
   878     00BB  3445               	retlw	69	;'E'
   879     00BC  3452               	retlw	82	;'R'
   880     00BD  3444               	retlw	68	;'D'
   881     00BE  3445               	retlw	69	;'E'
   882     00BF  3400               	retlw	0
   883     00C0                     STR_8:
   884     00C0  344C               	retlw	76	;'L'
   885     00C1  3449               	retlw	73	;'I'
   886     00C2  3442               	retlw	66	;'B'
   887     00C3  3452               	retlw	82	;'R'
   888     00C4  3445               	retlw	69	;'E'
   889     00C5  3400               	retlw	0
   890     00C6                     STR_2:
   891     00C6  344E               	retlw	78	;'N'
   892     00C7  3441               	retlw	65	;'A'
   893     00C8  3444               	retlw	68	;'D'
   894     00C9  3441               	retlw	65	;'A'
   895     00CA  3400               	retlw	0
   896     00CB                     STR_4:
   897     00CB  3441               	retlw	65	;'A'
   898     00CC  345A               	retlw	90	;'Z'
   899     00CD  3455               	retlw	85	;'U'
   900     00CE  344C               	retlw	76	;'L'
   901     00CF  3400               	retlw	0
   902     00D0                     STR_5:
   903     00D0  3452               	retlw	82	;'R'
   904     00D1  344F               	retlw	79	;'O'
   905     00D2  344A               	retlw	74	;'J'
   906     00D3  344F               	retlw	79	;'O'
   907     00D4  3400               	retlw	0
   908     00D5                     STR_10:
   909     00D5  3421               	retlw	33	;'!'
   910     00D6  3400               	retlw	0
   911     00D7                     STR_7:
   912     00D7  344E               	retlw	78	;'N'
   913     00D8  3400               	retlw	0
   914     00D5                     
   915                           	psect	cinit
   916     07F0                     start_initialization:	
   917                           ; #config settings
   918                           
   919     07F0                     __initialization:
   920                           
   921                           ; Clear objects allocated to BANK0
   922     07F0  1283               	bcf	3,5	;RP0=0, select bank0
   923     07F1  1303               	bcf	3,6	;RP1=0, select bank0
   924     07F2  01EE               	clrf	__pbssBANK0& (0+127)
   925                           
   926                           ; Clear objects allocated to BANK1
   927     07F3  1383               	bcf	3,7	;select IRP bank0
   928     07F4  30C7               	movlw	low __pbssBANK1
   929     07F5  0084               	movwf	4
   930     07F6  30DF               	movlw	low (__pbssBANK1+24)
   931     07F7  160A  158A  229A  120A  118A  	fcall	clear_ram0
   932     07FC                     end_of_initialization:	
   933                           ;End of C runtime variable initialization code
   934                           
   935     07FC                     __end_of__initialization:
   936     07FC  0183               	clrf	3
   937     07FD  160A  118A  2D57   	ljmp	_main	;jump to C main() function
   938                           
   939                           	psect	bssBANK0
   940     006E                     __pbssBANK0:
   941     006E                     _dis:
   942     006E                     	ds	1
   943                           
   944                           	psect	bssBANK1
   945     00C7                     __pbssBANK1:
   946     00C7                     _distancia:
   947     00C7                     	ds	4
   948     00CB                     _velocidad:
   949     00CB                     	ds	2
   950     00CD                     _linea:
   951     00CD                     	ds	1
   952     00CE                     _color:
   953     00CE                     	ds	1
   954     00CF                     _distanciaLCD:
   955     00CF                     	ds	16
   956                           
   957                           	psect	clrtext
   958     1A9A                     clear_ram0:	
   959                           ;	Called with FSR containing the base address, and
   960                           ;	W with the last address+1
   961                           
   962     1A9A  0064               	clrwdt	;clear the watchdog before getting into this loop
   963     1A9B                     clrloop0:
   964     1A9B  0180               	clrf	0	;clear RAM location pointed to by FSR
   965     1A9C  0A84               	incf	4,f	;increment pointer
   966     1A9D  0604               	xorwf	4,w	;XOR with final address
   967     1A9E  1903               	btfsc	3,2	;have we reached the end yet?
   968     1A9F  3400               	retlw	0	;all done for this memory range, return
   969     1AA0  0604               	xorwf	4,w	;XOR again to restore value
   970     1AA1  2A9B               	goto	clrloop0	;do the next byte
   971                           
   972                           	psect	cstackBANK1
   973     00A0                     __pcstackBANK1:
   974     00A0                     ?_sprintf:
   975     00A0                     sprintf@f:	
   976                           ; 2 bytes @ 0x0
   977                           
   978                           
   979                           ; 1 bytes @ 0x0
   980     00A0                     	ds	5
   981     00A5                     ??_sprintf:
   982                           
   983                           ; 1 bytes @ 0x5
   984     00A5                     	ds	5
   985     00AA                     _sprintf$1369:
   986                           
   987                           ; 4 bytes @ 0xA
   988     00AA                     	ds	4
   989     00AE                     sprintf@ap:
   990                           
   991                           ; 1 bytes @ 0xE
   992     00AE                     	ds	1
   993     00AF                     sprintf@flag:
   994                           
   995                           ; 2 bytes @ 0xF
   996     00AF                     	ds	2
   997     00B1                     sprintf@val:
   998                           
   999                           ; 4 bytes @ 0x11
  1000     00B1                     	ds	4
  1001     00B5                     sprintf@eexp:
  1002                           
  1003                           ; 2 bytes @ 0x15
  1004     00B5                     	ds	2
  1005     00B7                     sprintf@tmpval:
  1006                           
  1007                           ; 4 bytes @ 0x17
  1008     00B7                     	ds	4
  1009     00BB                     sprintf@sp:
  1010                           
  1011                           ; 1 bytes @ 0x1B
  1012     00BB                     	ds	1
  1013     00BC                     sprintf@prec:
  1014                           
  1015                           ; 2 bytes @ 0x1C
  1016     00BC                     	ds	2
  1017     00BE                     sprintf@fval:
  1018                           
  1019                           ; 4 bytes @ 0x1E
  1020     00BE                     	ds	4
  1021     00C2                     sprintf@c:
  1022                           
  1023                           ; 1 bytes @ 0x22
  1024     00C2                     	ds	1
  1025     00C3                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x23
  1028     00C3                     	ds	4
  1029                           
  1030                           	psect	cstackCOMMON
  1031     0070                     __pcstackCOMMON:
  1032     0070                     ?_isdigit:
  1033     0070                     ?___fleq:	
  1034                           ; 1 bit 
  1035                           
  1036     0070                     ?___flge:	
  1037                           ; 1 bit 
  1038                           
  1039     0070                     ?_setup:	
  1040                           ; 1 bit 
  1041                           
  1042     0070                     ?_setupMotores:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ??_setupMotores:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ?_setupPWM:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ??_setupPWM:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ??_isdigit:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057     0070                     ?_I2C_Master_Wait:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ??_I2C_Master_Wait:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ?_I2C_Master_Start:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ??_I2C_Master_Start:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ?_I2C_Master_Stop:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ??_I2C_Master_Stop:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ?_setupINTOSC:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     ??_setupINTOSC:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ?_Lcd_Port_4bits:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ??_Lcd_Port_4bits:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ?_Lcd_Cmd_4bits:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ?_Lcd_Clear_4bits:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093     0070                     ?_Lcd_Init_4bits:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096     0070                     ?_Lcd_Write_Char_4bits:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099     0070                     ?_main:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102     0070                     ?__Umul8_16:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105     0070                     ?_I2C_Master_Read:	
  1106                           ; 2 bytes @ 0x0
  1107                           
  1108     0070                     ?___wmul:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111     0070                     ?___awmod:	
  1112                           ; 2 bytes @ 0x0
  1113                           
  1114     0070                     ?___lwmod:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117     0070                     ?__tdiv_to_l_:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120     0070                     ?__div_to_l_:	
  1121                           ; 4 bytes @ 0x0
  1122                           
  1123     0070                     ?___lldiv:	
  1124                           ; 4 bytes @ 0x0
  1125                           
  1126     0070                     ?___flneg:	
  1127                           ; 4 bytes @ 0x0
  1128                           
  1129     0070                     ?___llmod:	
  1130                           ; 4 bytes @ 0x0
  1131                           
  1132     0070                     Lcd_Port_4bits@a:	
  1133                           ; 4 bytes @ 0x0
  1134                           
  1135     0070                     __Umul8_16@multiplicand:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0070                     _isdigit$1155:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0070                     I2C_Master_Read@a:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0070                     ___wmul@multiplier:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147     0070                     ___awmod@divisor:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150     0070                     ___lwmod@divisor:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153     0070                     ___lldiv@divisor:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156     0070                     __div_to_l_@f1:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159     0070                     ___fleq@ff1:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162     0070                     ___flge@ff1:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165     0070                     ___flneg@f1:	
  1166                           ; 4 bytes @ 0x0
  1167                           
  1168     0070                     __tdiv_to_l_@f1:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171     0070                     ___llmod@divisor:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174                           
  1175                           ; 4 bytes @ 0x0
  1176     0070                     	ds	1
  1177     0071                     ??_Lcd_Cmd_4bits:
  1178     0071                     ??_Lcd_Write_Char_4bits:	
  1179                           ; 1 bytes @ 0x1
  1180                           
  1181     0071                     setupINTOSC@F:	
  1182                           ; 1 bytes @ 0x1
  1183                           
  1184     0071                     isdigit@c:	
  1185                           ; 1 bytes @ 0x1
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0x1
  1189     0071                     	ds	1
  1190     0072                     ??__Umul8_16:
  1191     0072                     ??_I2C_Master_Read:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194     0072                     Lcd_Write_Char_4bits@temp:	
  1195                           ; 1 bytes @ 0x2
  1196                           
  1197     0072                     ___wmul@multiplicand:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200     0072                     ___awmod@dividend:	
  1201                           ; 2 bytes @ 0x2
  1202                           
  1203     0072                     ___lwmod@dividend:	
  1204                           ; 2 bytes @ 0x2
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0x2
  1208     0072                     	ds	1
  1209     0073                     Lcd_Cmd_4bits@a:
  1210     0073                     Lcd_Write_Char_4bits@y:	
  1211                           ; 1 bytes @ 0x3
  1212                           
  1213                           
  1214                           ; 1 bytes @ 0x3
  1215     0073                     	ds	1
  1216     0074                     ??_Lcd_Clear_4bits:
  1217     0074                     ?_Lcd_Set_Cursor_4bits:	
  1218                           ; 1 bytes @ 0x4
  1219                           
  1220     0074                     ??_Lcd_Init_4bits:	
  1221                           ; 1 bytes @ 0x4
  1222                           
  1223     0074                     ??___wmul:	
  1224                           ; 1 bytes @ 0x4
  1225                           
  1226     0074                     ??___awmod:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229     0074                     ??___flneg:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232     0074                     ??___lwmod:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235     0074                     Lcd_Set_Cursor_4bits@b:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238     0074                     Lcd_Write_Char_4bits@a:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241     0074                     I2C_Master_Read@temp:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244     0074                     ___wmul@product:	
  1245                           ; 2 bytes @ 0x4
  1246                           
  1247     0074                     __Umul8_16@product:	
  1248                           ; 2 bytes @ 0x4
  1249                           
  1250     0074                     ___lldiv@dividend:	
  1251                           ; 2 bytes @ 0x4
  1252                           
  1253     0074                     __div_to_l_@f2:	
  1254                           ; 4 bytes @ 0x4
  1255                           
  1256     0074                     ___fleq@ff2:	
  1257                           ; 4 bytes @ 0x4
  1258                           
  1259     0074                     ___flge@ff2:	
  1260                           ; 4 bytes @ 0x4
  1261                           
  1262     0074                     __tdiv_to_l_@f2:	
  1263                           ; 4 bytes @ 0x4
  1264                           
  1265     0074                     ___llmod@dividend:	
  1266                           ; 4 bytes @ 0x4
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0x4
  1270     0074                     	ds	1
  1271     0075                     ??_Lcd_Set_Cursor_4bits:
  1272     0075                     ?_Lcd_Write_String_4bits:	
  1273                           ; 1 bytes @ 0x5
  1274                           
  1275     0075                     ___awmod@counter:	
  1276                           ; 1 bytes @ 0x5
  1277                           
  1278     0075                     ___lwmod@counter:	
  1279                           ; 1 bytes @ 0x5
  1280                           
  1281     0075                     Lcd_Write_String_4bits@a:	
  1282                           ; 1 bytes @ 0x5
  1283                           
  1284                           
  1285                           ; 2 bytes @ 0x5
  1286     0075                     	ds	1
  1287     0076                     ?___lwdiv:
  1288     0076                     ?___xxtofl:	
  1289                           ; 2 bytes @ 0x6
  1290                           
  1291     0076                     Lcd_Set_Cursor_4bits@a:	
  1292                           ; 4 bytes @ 0x6
  1293                           
  1294     0076                     ___awmod@sign:	
  1295                           ; 1 bytes @ 0x6
  1296                           
  1297     0076                     ___lwdiv@divisor:	
  1298                           ; 1 bytes @ 0x6
  1299                           
  1300     0076                     __Umul8_16@word_mpld:	
  1301                           ; 2 bytes @ 0x6
  1302                           
  1303     0076                     ___xxtofl@val:	
  1304                           ; 2 bytes @ 0x6
  1305                           
  1306                           
  1307                           ; 4 bytes @ 0x6
  1308     0076                     	ds	1
  1309     0077                     ??_Lcd_Write_String_4bits:
  1310     0077                     ?___awdiv:	
  1311                           ; 1 bytes @ 0x7
  1312                           
  1313     0077                     Lcd_Set_Cursor_4bits@z:	
  1314                           ; 2 bytes @ 0x7
  1315                           
  1316     0077                     ___awdiv@divisor:	
  1317                           ; 1 bytes @ 0x7
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0x7
  1321     0077                     	ds	1
  1322     0078                     ??__tdiv_to_l_:
  1323     0078                     ??__div_to_l_:	
  1324                           ; 1 bytes @ 0x8
  1325                           
  1326     0078                     ??___lldiv:	
  1327                           ; 1 bytes @ 0x8
  1328                           
  1329     0078                     ??___fleq:	
  1330                           ; 1 bytes @ 0x8
  1331                           
  1332     0078                     ??___flge:	
  1333                           ; 1 bytes @ 0x8
  1334                           
  1335     0078                     ??___llmod:	
  1336                           ; 1 bytes @ 0x8
  1337                           
  1338     0078                     Lcd_Set_Cursor_4bits@y:	
  1339                           ; 1 bytes @ 0x8
  1340                           
  1341     0078                     __Umul8_16@multiplier:	
  1342                           ; 1 bytes @ 0x8
  1343                           
  1344     0078                     ___lwdiv@dividend:	
  1345                           ; 1 bytes @ 0x8
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0x8
  1349     0078                     	ds	1
  1350     0079                     Lcd_Set_Cursor_4bits@temp:
  1351     0079                     ___llmod@counter:	
  1352                           ; 1 bytes @ 0x9
  1353                           
  1354     0079                     ___awdiv@dividend:	
  1355                           ; 1 bytes @ 0x9
  1356                           
  1357     0079                     ___lldiv@quotient:	
  1358                           ; 2 bytes @ 0x9
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x9
  1362     0079                     	ds	1
  1363     007A                     ??___lwdiv:
  1364     007A                     ??___xxtofl:	
  1365                           ; 1 bytes @ 0xA
  1366                           
  1367     007A                     Lcd_Write_String_4bits@i:	
  1368                           ; 1 bytes @ 0xA
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0xA
  1372     007A                     	ds	1
  1373     007B                     ??___awdiv:
  1374     007B                     ___lwdiv@quotient:	
  1375                           ; 1 bytes @ 0xB
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0xB
  1379     007B                     	ds	2
  1380     007D                     ___lldiv@counter:
  1381     007D                     ___lwdiv@counter:	
  1382                           ; 1 bytes @ 0xD
  1383                           
  1384                           
  1385                           ; 1 bytes @ 0xD
  1386     007D                     	ds	1
  1387     007E                     ??_setup:
  1388     007E                     ??_I2C_Master_Write:	
  1389                           ; 1 bytes @ 0xE
  1390                           
  1391     007E                     ??___flsub:	
  1392                           ; 1 bytes @ 0xE
  1393                           
  1394                           
  1395                           	psect	cstackBANK0
  1396     0020                     __pcstackBANK0:	
  1397                           ; 1 bytes @ 0xE
  1398                           
  1399     0020                     ?_I2C_Master_Init:
  1400     0020                     ___awdiv@counter:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403     0020                     ___xxtofl@sign:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406     0020                     I2C_Master_Init@c:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409     0020                     __div_to_l_@quot:	
  1410                           ; 4 bytes @ 0x0
  1411                           
  1412     0020                     __tdiv_to_l_@quot:	
  1413                           ; 4 bytes @ 0x0
  1414                           
  1415                           
  1416                           ; 4 bytes @ 0x0
  1417     0020                     	ds	1
  1418     0021                     ___awdiv@sign:
  1419     0021                     ___xxtofl@exp:	
  1420                           ; 1 bytes @ 0x1
  1421                           
  1422                           
  1423                           ; 1 bytes @ 0x1
  1424     0021                     	ds	1
  1425     0022                     ___awdiv@quotient:
  1426     0022                     ___xxtofl@arg:	
  1427                           ; 2 bytes @ 0x2
  1428                           
  1429                           
  1430                           ; 4 bytes @ 0x2
  1431     0022                     	ds	2
  1432     0024                     ??_I2C_Master_Init:
  1433     0024                     ?___flmul:	
  1434                           ; 1 bytes @ 0x4
  1435                           
  1436     0024                     __div_to_l_@cntr:	
  1437                           ; 4 bytes @ 0x4
  1438                           
  1439     0024                     __tdiv_to_l_@cntr:	
  1440                           ; 1 bytes @ 0x4
  1441                           
  1442     0024                     ___flmul@b:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445                           
  1446                           ; 4 bytes @ 0x4
  1447     0024                     	ds	1
  1448     0025                     __div_to_l_@exp1:
  1449     0025                     __tdiv_to_l_@exp1:	
  1450                           ; 1 bytes @ 0x5
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x5
  1454     0025                     	ds	3
  1455     0028                     ___flmul@a:
  1456                           
  1457                           ; 4 bytes @ 0x8
  1458     0028                     	ds	4
  1459     002C                     ??___flmul:
  1460                           
  1461                           ; 1 bytes @ 0xC
  1462     002C                     	ds	5
  1463     0031                     ___flmul@sign:
  1464                           
  1465                           ; 1 bytes @ 0x11
  1466     0031                     	ds	1
  1467     0032                     ___flmul@grs:
  1468                           
  1469                           ; 4 bytes @ 0x12
  1470     0032                     	ds	4
  1471     0036                     ___flmul@aexp:
  1472                           
  1473                           ; 1 bytes @ 0x16
  1474     0036                     	ds	1
  1475     0037                     ___flmul@bexp:
  1476                           
  1477                           ; 1 bytes @ 0x17
  1478     0037                     	ds	1
  1479     0038                     ___flmul@prod:
  1480                           
  1481                           ; 4 bytes @ 0x18
  1482     0038                     	ds	4
  1483     003C                     ___flmul@temp:
  1484                           
  1485                           ; 2 bytes @ 0x1C
  1486     003C                     	ds	2
  1487     003E                     ?_fround:
  1488     003E                     ?_scale:	
  1489                           ; 4 bytes @ 0x1E
  1490                           
  1491                           
  1492                           ; 4 bytes @ 0x1E
  1493     003E                     	ds	4
  1494     0042                     ??_fround:
  1495     0042                     ??_scale:	
  1496                           ; 1 bytes @ 0x22
  1497                           
  1498                           
  1499                           ; 1 bytes @ 0x22
  1500     0042                     	ds	7
  1501     0049                     _fround$1367:
  1502                           
  1503                           ; 4 bytes @ 0x29
  1504     0049                     	ds	3
  1505     004C                     _scale$1368:
  1506                           
  1507                           ; 4 bytes @ 0x2C
  1508     004C                     	ds	1
  1509     004D                     _fround$1366:
  1510                           
  1511                           ; 4 bytes @ 0x2D
  1512     004D                     	ds	3
  1513     0050                     scale@scl:
  1514                           
  1515                           ; 1 bytes @ 0x30
  1516     0050                     	ds	1
  1517     0051                     ?___fltol:
  1518     0051                     fround@prec:	
  1519                           ; 4 bytes @ 0x31
  1520                           
  1521     0051                     ___fltol@f1:	
  1522                           ; 1 bytes @ 0x31
  1523                           
  1524                           
  1525                           ; 4 bytes @ 0x31
  1526     0051                     	ds	1
  1527     0052                     ?___fladd:
  1528     0052                     ___fladd@b:	
  1529                           ; 4 bytes @ 0x32
  1530                           
  1531                           
  1532                           ; 4 bytes @ 0x32
  1533     0052                     	ds	3
  1534     0055                     ??___fltol:
  1535                           
  1536                           ; 1 bytes @ 0x35
  1537     0055                     	ds	1
  1538     0056                     ___fladd@a:
  1539                           
  1540                           ; 4 bytes @ 0x36
  1541     0056                     	ds	3
  1542     0059                     ___fltol@sign1:
  1543                           
  1544                           ; 1 bytes @ 0x39
  1545     0059                     	ds	1
  1546     005A                     ??___fladd:
  1547     005A                     ___fltol@exp1:	
  1548                           ; 1 bytes @ 0x3A
  1549                           
  1550                           
  1551                           ; 1 bytes @ 0x3A
  1552     005A                     	ds	1
  1553     005B                     ?_I2C_Master_Write:
  1554     005B                     I2C_Master_Write@d:	
  1555                           ; 1 bytes @ 0x3B
  1556                           
  1557                           
  1558                           ; 2 bytes @ 0x3B
  1559     005B                     	ds	7
  1560     0062                     ___fladd@signs:
  1561                           
  1562                           ; 1 bytes @ 0x42
  1563     0062                     	ds	1
  1564     0063                     ___fladd@aexp:
  1565                           
  1566                           ; 1 bytes @ 0x43
  1567     0063                     	ds	1
  1568     0064                     ___fladd@bexp:
  1569                           
  1570                           ; 1 bytes @ 0x44
  1571     0064                     	ds	1
  1572     0065                     ___fladd@grs:
  1573                           
  1574                           ; 1 bytes @ 0x45
  1575     0065                     	ds	1
  1576     0066                     ?___flsub:
  1577     0066                     ___flsub@a:	
  1578                           ; 4 bytes @ 0x46
  1579                           
  1580                           
  1581                           ; 4 bytes @ 0x46
  1582     0066                     	ds	4
  1583     006A                     ___flsub@b:
  1584                           
  1585                           ; 4 bytes @ 0x4A
  1586     006A                     	ds	4
  1587                           
  1588                           	psect	maintext
  1589     1557                     __pmaintext:	
  1590 ;;
  1591 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1592 ;;
  1593 ;; *************** function _main *****************
  1594 ;; Defined at:
  1595 ;;		line 69 in file "main_M.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : B00/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0
  1611 ;;      Temps:          0       0       4       0       0
  1612 ;;      Totals:         0       0       4       0       0
  1613 ;;Total ram usage:        4 bytes
  1614 ;; Hardware stack levels required when called: 4
  1615 ;; This function calls:
  1616 ;;		_I2C_Master_Read
  1617 ;;		_I2C_Master_Start
  1618 ;;		_I2C_Master_Stop
  1619 ;;		_I2C_Master_Write
  1620 ;;		_Lcd_Clear_4bits
  1621 ;;		_Lcd_Set_Cursor_4bits
  1622 ;;		_Lcd_Write_String_4bits
  1623 ;;		___flge
  1624 ;;		___fltol
  1625 ;;		___xxtofl
  1626 ;;		_setup
  1627 ;;		_setupMotores
  1628 ;;		_setupPWM
  1629 ;;		_sprintf
  1630 ;; This function is called by:
  1631 ;;		Startup code after reset
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635     1557                     _main:	
  1636                           ;psect for function _main
  1637                           
  1638     1557                     l3700:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1641                           
  1642                           
  1643                           ;main_M.c: 71:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1644     1557  3006               	movlw	6
  1645     1558  1683               	bsf	3,5	;RP0=1, select bank1
  1646     1559  1303               	bcf	3,6	;RP1=0, select bank1
  1647     155A  00C5               	movwf	(??_main^(0+128)+2)
  1648     155B  3013               	movlw	19
  1649     155C  00C4               	movwf	(??_main^(0+128)+1)
  1650     155D  30AD               	movlw	173
  1651     155E  00C3               	movwf	??_main^(0+128)
  1652     155F                     u5717:
  1653     155F  0BC3               	decfsz	??_main^(0+128),f
  1654     1560  2D5F               	goto	u5717
  1655     1561  0BC4               	decfsz	(??_main^(0+128)+1),f
  1656     1562  2D5F               	goto	u5717
  1657     1563  0BC5               	decfsz	(??_main^(0+128)+2),f
  1658     1564  2D5F               	goto	u5717
  1659     1565                     l3702:
  1660                           
  1661                           ;main_M.c: 72:     setup();
  1662     1565  160A  158A  23AC  160A  118A  	fcall	_setup
  1663     156A                     l3704:
  1664                           
  1665                           ;main_M.c: 73:     Lcd_Clear_4bits();
  1666     156A  160A  158A  22D6  160A  118A  	fcall	_Lcd_Clear_4bits
  1667     156F                     l3706:
  1668                           
  1669                           ;main_M.c: 75:     setupMotores();
  1670     156F  120A  118A  20DB  160A  118A  	fcall	_setupMotores
  1671     1574                     l3708:
  1672                           
  1673                           ;main_M.c: 76:     setupPWM();
  1674     1574  160A  158A  2362  160A  118A  	fcall	_setupPWM
  1675                           
  1676                           ;main_M.c: 79:     CCPR1L = 125;
  1677     1579  307D               	movlw	125
  1678     157A  1283               	bcf	3,5	;RP0=0, select bank0
  1679     157B  1303               	bcf	3,6	;RP1=0, select bank0
  1680     157C  0095               	movwf	21	;volatile
  1681                           
  1682                           ;main_M.c: 80:     CCPR2L = 125;
  1683     157D  307D               	movlw	125
  1684     157E  009B               	movwf	27	;volatile
  1685     157F                     l3710:
  1686                           
  1687                           ;main_M.c: 83:     {;main_M.c: 85:         I2C_Master_Start();
  1688     157F  160A  158A  22A2  160A  118A  	fcall	_I2C_Master_Start
  1689     1584                     l3712:
  1690                           
  1691                           ;main_M.c: 86:         I2C_Master_Write(0x11);
  1692     1584  3011               	movlw	17
  1693     1585  1283               	bcf	3,5	;RP0=0, select bank0
  1694     1586  1303               	bcf	3,6	;RP1=0, select bank0
  1695     1587  00DB               	movwf	I2C_Master_Write@d
  1696     1588  3000               	movlw	0
  1697     1589  00DC               	movwf	I2C_Master_Write@d+1
  1698     158A  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1699     158F                     l3714:
  1700                           
  1701                           ;main_M.c: 87:         distancia = I2C_Master_Read(0);
  1702     158F  3000               	movlw	0
  1703     1590  00F0               	movwf	I2C_Master_Read@a
  1704     1591  00F1               	movwf	I2C_Master_Read@a+1
  1705     1592  160A  158A  23FA  160A  118A  	fcall	_I2C_Master_Read
  1706     1597  0870               	movf	?_I2C_Master_Read,w
  1707     1598  1683               	bsf	3,5	;RP0=1, select bank1
  1708     1599  1303               	bcf	3,6	;RP1=0, select bank1
  1709     159A  00C3               	movwf	??_main^(0+128)
  1710     159B  0871               	movf	?_I2C_Master_Read+1,w
  1711     159C  00C4               	movwf	(??_main^(0+128)+1)
  1712     159D  01C5               	clrf	(??_main^(0+128)+2)
  1713     159E  01C6               	clrf	(??_main^(0+128)+3)
  1714     159F  0846               	movf	(??_main+3)^(0+128),w
  1715     15A0  00F9               	movwf	___xxtofl@val+3
  1716     15A1  0845               	movf	(??_main+2)^(0+128),w
  1717     15A2  00F8               	movwf	___xxtofl@val+2
  1718     15A3  0844               	movf	(??_main+1)^(0+128),w
  1719     15A4  00F7               	movwf	___xxtofl@val+1
  1720     15A5  0843               	movf	??_main^(0+128),w
  1721     15A6  00F6               	movwf	___xxtofl@val
  1722     15A7  3000               	movlw	0
  1723     15A8  120A  118A  20F6  160A  118A  	fcall	___xxtofl
  1724     15AD  0879               	movf	?___xxtofl+3,w
  1725     15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1726     15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1727     15B0  00CA               	movwf	(_distancia+3)^(0+128)
  1728     15B1  0878               	movf	?___xxtofl+2,w
  1729     15B2  00C9               	movwf	(_distancia+2)^(0+128)
  1730     15B3  0877               	movf	?___xxtofl+1,w
  1731     15B4  00C8               	movwf	(_distancia+1)^(0+128)
  1732     15B5  0876               	movf	?___xxtofl,w
  1733     15B6  00C7               	movwf	_distancia^(0+128)
  1734     15B7                     l3716:
  1735                           
  1736                           ;main_M.c: 88:         I2C_Master_Stop();
  1737     15B7  160A  158A  22AB  160A  118A  	fcall	_I2C_Master_Stop
  1738                           
  1739                           ;main_M.c: 89:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1740     15BC  301A               	movlw	26
  1741     15BD  1683               	bsf	3,5	;RP0=1, select bank1
  1742     15BE  1303               	bcf	3,6	;RP1=0, select bank1
  1743     15BF  00C4               	movwf	(??_main^(0+128)+1)
  1744     15C0  30F7               	movlw	247
  1745     15C1  00C3               	movwf	??_main^(0+128)
  1746     15C2                     u5727:
  1747     15C2  0BC3               	decfsz	??_main^(0+128),f
  1748     15C3  2DC2               	goto	u5727
  1749     15C4  0BC4               	decfsz	(??_main^(0+128)+1),f
  1750     15C5  2DC2               	goto	u5727
  1751     15C6  2DC7               	nop2
  1752     15C7                     l3718:
  1753                           
  1754                           ;main_M.c: 90:         I2C_Master_Start();
  1755     15C7  160A  158A  22A2  160A  118A  	fcall	_I2C_Master_Start
  1756     15CC                     l3720:
  1757                           
  1758                           ;main_M.c: 91:         I2C_Master_Write(0x31);
  1759     15CC  3031               	movlw	49
  1760     15CD  1283               	bcf	3,5	;RP0=0, select bank0
  1761     15CE  1303               	bcf	3,6	;RP1=0, select bank0
  1762     15CF  00DB               	movwf	I2C_Master_Write@d
  1763     15D0  3000               	movlw	0
  1764     15D1  00DC               	movwf	I2C_Master_Write@d+1
  1765     15D2  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1766     15D7                     l3722:
  1767                           
  1768                           ;main_M.c: 92:         color = I2C_Master_Read(0);
  1769     15D7  3000               	movlw	0
  1770     15D8  00F0               	movwf	I2C_Master_Read@a
  1771     15D9  00F1               	movwf	I2C_Master_Read@a+1
  1772     15DA  160A  158A  23FA  160A  118A  	fcall	_I2C_Master_Read
  1773     15DF  0870               	movf	?_I2C_Master_Read,w
  1774     15E0  1683               	bsf	3,5	;RP0=1, select bank1
  1775     15E1  1303               	bcf	3,6	;RP1=0, select bank1
  1776     15E2  00CE               	movwf	_color^(0+128)
  1777     15E3                     l3724:
  1778                           
  1779                           ;main_M.c: 93:         I2C_Master_Stop();
  1780     15E3  160A  158A  22AB  160A  118A  	fcall	_I2C_Master_Stop
  1781                           
  1782                           ;main_M.c: 94:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1783     15E8  301A               	movlw	26
  1784     15E9  1683               	bsf	3,5	;RP0=1, select bank1
  1785     15EA  1303               	bcf	3,6	;RP1=0, select bank1
  1786     15EB  00C4               	movwf	(??_main^(0+128)+1)
  1787     15EC  30F7               	movlw	247
  1788     15ED  00C3               	movwf	??_main^(0+128)
  1789     15EE                     u5737:
  1790     15EE  0BC3               	decfsz	??_main^(0+128),f
  1791     15EF  2DEE               	goto	u5737
  1792     15F0  0BC4               	decfsz	(??_main^(0+128)+1),f
  1793     15F1  2DEE               	goto	u5737
  1794     15F2  2DF3               	nop2
  1795     15F3                     l3726:
  1796                           
  1797                           ;main_M.c: 95:         I2C_Master_Start();
  1798     15F3  160A  158A  22A2  160A  118A  	fcall	_I2C_Master_Start
  1799     15F8                     l3728:
  1800                           
  1801                           ;main_M.c: 96:         I2C_Master_Write(0x21);
  1802     15F8  3021               	movlw	33
  1803     15F9  1283               	bcf	3,5	;RP0=0, select bank0
  1804     15FA  1303               	bcf	3,6	;RP1=0, select bank0
  1805     15FB  00DB               	movwf	I2C_Master_Write@d
  1806     15FC  3000               	movlw	0
  1807     15FD  00DC               	movwf	I2C_Master_Write@d+1
  1808     15FE  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1809     1603                     l3730:
  1810                           
  1811                           ;main_M.c: 97:         linea = I2C_Master_Read(0);
  1812     1603  3000               	movlw	0
  1813     1604  00F0               	movwf	I2C_Master_Read@a
  1814     1605  00F1               	movwf	I2C_Master_Read@a+1
  1815     1606  160A  158A  23FA  160A  118A  	fcall	_I2C_Master_Read
  1816     160B  0870               	movf	?_I2C_Master_Read,w
  1817     160C  1683               	bsf	3,5	;RP0=1, select bank1
  1818     160D  1303               	bcf	3,6	;RP1=0, select bank1
  1819     160E  00CD               	movwf	_linea^(0+128)
  1820     160F                     l3732:
  1821                           
  1822                           ;main_M.c: 98:         I2C_Master_Stop();
  1823     160F  160A  158A  22AB  160A  118A  	fcall	_I2C_Master_Stop
  1824                           
  1825                           ;main_M.c: 99:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1826     1614  301A               	movlw	26
  1827     1615  1683               	bsf	3,5	;RP0=1, select bank1
  1828     1616  1303               	bcf	3,6	;RP1=0, select bank1
  1829     1617  00C4               	movwf	(??_main^(0+128)+1)
  1830     1618  30F7               	movlw	247
  1831     1619  00C3               	movwf	??_main^(0+128)
  1832     161A                     u5747:
  1833     161A  0BC3               	decfsz	??_main^(0+128),f
  1834     161B  2E1A               	goto	u5747
  1835     161C  0BC4               	decfsz	(??_main^(0+128)+1),f
  1836     161D  2E1A               	goto	u5747
  1837     161E  2E1F               	nop2
  1838     161F                     l3734:
  1839                           
  1840                           ;main_M.c: 103:         I2C_Master_Start();
  1841     161F  160A  158A  22A2  160A  118A  	fcall	_I2C_Master_Start
  1842     1624                     l3736:
  1843                           
  1844                           ;main_M.c: 104:         I2C_Master_Write(0x90);
  1845     1624  3090               	movlw	144
  1846     1625  1283               	bcf	3,5	;RP0=0, select bank0
  1847     1626  1303               	bcf	3,6	;RP1=0, select bank0
  1848     1627  00DB               	movwf	I2C_Master_Write@d
  1849     1628  3000               	movlw	0
  1850     1629  00DC               	movwf	I2C_Master_Write@d+1
  1851     162A  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1852     162F                     l3738:
  1853                           
  1854                           ;main_M.c: 105:         I2C_Master_Write(color);
  1855     162F  1683               	bsf	3,5	;RP0=1, select bank1
  1856     1630  1303               	bcf	3,6	;RP1=0, select bank1
  1857     1631  084E               	movf	_color^(0+128),w
  1858     1632  00C3               	movwf	??_main^(0+128)
  1859     1633  01C4               	clrf	(??_main^(0+128)+1)
  1860     1634  0843               	movf	??_main^(0+128),w
  1861     1635  1283               	bcf	3,5	;RP0=0, select bank0
  1862     1636  1303               	bcf	3,6	;RP1=0, select bank0
  1863     1637  00DB               	movwf	I2C_Master_Write@d
  1864     1638  1683               	bsf	3,5	;RP0=1, select bank1
  1865     1639  1303               	bcf	3,6	;RP1=0, select bank1
  1866     163A  0844               	movf	(??_main+1)^(0+128),w
  1867     163B  1283               	bcf	3,5	;RP0=0, select bank0
  1868     163C  1303               	bcf	3,6	;RP1=0, select bank0
  1869     163D  00DC               	movwf	I2C_Master_Write@d+1
  1870     163E  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1871     1643                     l3740:
  1872                           
  1873                           ;main_M.c: 106:         I2C_Master_Write(distancia);
  1874     1643  1683               	bsf	3,5	;RP0=1, select bank1
  1875     1644  1303               	bcf	3,6	;RP1=0, select bank1
  1876     1645  084A               	movf	(_distancia+3)^(0+128),w
  1877     1646  1283               	bcf	3,5	;RP0=0, select bank0
  1878     1647  1303               	bcf	3,6	;RP1=0, select bank0
  1879     1648  00D4               	movwf	___fltol@f1+3
  1880     1649  1683               	bsf	3,5	;RP0=1, select bank1
  1881     164A  1303               	bcf	3,6	;RP1=0, select bank1
  1882     164B  0849               	movf	(_distancia+2)^(0+128),w
  1883     164C  1283               	bcf	3,5	;RP0=0, select bank0
  1884     164D  1303               	bcf	3,6	;RP1=0, select bank0
  1885     164E  00D3               	movwf	___fltol@f1+2
  1886     164F  1683               	bsf	3,5	;RP0=1, select bank1
  1887     1650  1303               	bcf	3,6	;RP1=0, select bank1
  1888     1651  0848               	movf	(_distancia+1)^(0+128),w
  1889     1652  1283               	bcf	3,5	;RP0=0, select bank0
  1890     1653  1303               	bcf	3,6	;RP1=0, select bank0
  1891     1654  00D2               	movwf	___fltol@f1+1
  1892     1655  1683               	bsf	3,5	;RP0=1, select bank1
  1893     1656  1303               	bcf	3,6	;RP1=0, select bank1
  1894     1657  0847               	movf	_distancia^(0+128),w
  1895     1658  1283               	bcf	3,5	;RP0=0, select bank0
  1896     1659  1303               	bcf	3,6	;RP1=0, select bank0
  1897     165A  00D1               	movwf	___fltol@f1
  1898     165B  160A  158A  2788  160A  118A  	fcall	___fltol
  1899     1660  1283               	bcf	3,5	;RP0=0, select bank0
  1900     1661  1303               	bcf	3,6	;RP1=0, select bank0
  1901     1662  0852               	movf	?___fltol+1,w
  1902     1663  00DC               	movwf	I2C_Master_Write@d+1
  1903     1664  0851               	movf	?___fltol,w
  1904     1665  00DB               	movwf	I2C_Master_Write@d
  1905     1666  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1906     166B                     l3742:
  1907                           
  1908                           ;main_M.c: 107:         I2C_Master_Write(linea);
  1909     166B  1683               	bsf	3,5	;RP0=1, select bank1
  1910     166C  1303               	bcf	3,6	;RP1=0, select bank1
  1911     166D  084D               	movf	_linea^(0+128),w
  1912     166E  00C3               	movwf	??_main^(0+128)
  1913     166F  01C4               	clrf	(??_main^(0+128)+1)
  1914     1670  0843               	movf	??_main^(0+128),w
  1915     1671  1283               	bcf	3,5	;RP0=0, select bank0
  1916     1672  1303               	bcf	3,6	;RP1=0, select bank0
  1917     1673  00DB               	movwf	I2C_Master_Write@d
  1918     1674  1683               	bsf	3,5	;RP0=1, select bank1
  1919     1675  1303               	bcf	3,6	;RP1=0, select bank1
  1920     1676  0844               	movf	(??_main+1)^(0+128),w
  1921     1677  1283               	bcf	3,5	;RP0=0, select bank0
  1922     1678  1303               	bcf	3,6	;RP1=0, select bank0
  1923     1679  00DC               	movwf	I2C_Master_Write@d+1
  1924     167A  160A  158A  22B4  160A  118A  	fcall	_I2C_Master_Write
  1925     167F                     l3744:
  1926                           
  1927                           ;main_M.c: 108:         I2C_Master_Stop();
  1928     167F  160A  158A  22AB  160A  118A  	fcall	_I2C_Master_Stop
  1929                           
  1930                           ;main_M.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1931     1684  301A               	movlw	26
  1932     1685  1683               	bsf	3,5	;RP0=1, select bank1
  1933     1686  1303               	bcf	3,6	;RP1=0, select bank1
  1934     1687  00C4               	movwf	(??_main^(0+128)+1)
  1935     1688  30F7               	movlw	247
  1936     1689  00C3               	movwf	??_main^(0+128)
  1937     168A                     u5757:
  1938     168A  0BC3               	decfsz	??_main^(0+128),f
  1939     168B  2E8A               	goto	u5757
  1940     168C  0BC4               	decfsz	(??_main^(0+128)+1),f
  1941     168D  2E8A               	goto	u5757
  1942     168E  2E8F               	nop2
  1943     168F                     l3746:
  1944                           
  1945                           ;main_M.c: 113:         sprintf(distanciaLCD, "Distancia: %.1f", distancia);
  1946     168F  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1947     1690  1683               	bsf	3,5	;RP0=1, select bank1
  1948     1691  1303               	bcf	3,6	;RP1=0, select bank1
  1949     1692  00A0               	movwf	sprintf@f^(0+128)
  1950     1693  084A               	movf	(_distancia+3)^(0+128),w
  1951     1694  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1952     1695  0849               	movf	(_distancia+2)^(0+128),w
  1953     1696  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1954     1697  0848               	movf	(_distancia+1)^(0+128),w
  1955     1698  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1956     1699  0847               	movf	_distancia^(0+128),w
  1957     169A  00A1               	movwf	(?_sprintf^(0+128)+1)
  1958     169B  30CF               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1959     169C  120A  118A  21B0  160A  118A  	fcall	_sprintf
  1960     16A1                     l3748:
  1961                           
  1962                           ;main_M.c: 115:         Lcd_Set_Cursor_4bits(1,1);
  1963     16A1  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1964     16A2  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1965     16A3  3001               	movlw	1
  1966     16A4  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1967     16A9                     l3750:
  1968                           
  1969                           ;main_M.c: 116:         Lcd_Write_String_4bits(distanciaLCD);
  1970     16A9  30CF               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1971     16AA  00F5               	movwf	Lcd_Write_String_4bits@a
  1972     16AB  3000               	movlw	0
  1973     16AC  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1974     16AD  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  1975     16B2                     l3752:
  1976                           
  1977                           ;main_M.c: 119:         if (color == 0){
  1978     16B2  1683               	bsf	3,5	;RP0=1, select bank1
  1979     16B3  1303               	bcf	3,6	;RP1=0, select bank1
  1980     16B4  084E               	movf	_color^(0+128),w
  1981     16B5  1D03               	btfss	3,2
  1982     16B6  2EB8               	goto	u5611
  1983     16B7  2EB9               	goto	u5610
  1984     16B8                     u5611:
  1985     16B8  2ECB               	goto	l3758
  1986     16B9                     u5610:
  1987     16B9                     l3754:
  1988                           
  1989                           ;main_M.c: 120:             Lcd_Set_Cursor_4bits(2,1);
  1990     16B9  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1991     16BA  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1992     16BB  3002               	movlw	2
  1993     16BC  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1994     16C1                     l3756:
  1995                           
  1996                           ;main_M.c: 121:             Lcd_Write_String_4bits("NADA");
  1997     16C1  30B4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1998     16C2  00F5               	movwf	Lcd_Write_String_4bits@a
  1999     16C3  3080               	movlw	128
  2000     16C4  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2001     16C5  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2002                           
  2003                           ;main_M.c: 123:         }
  2004     16CA  2F2E               	goto	l3786
  2005     16CB                     l3758:
  2006     16CB  034E               	decf	_color^(0+128),w
  2007     16CC  1D03               	btfss	3,2
  2008     16CD  2ECF               	goto	u5621
  2009     16CE  2ED0               	goto	u5620
  2010     16CF                     u5621:
  2011     16CF  2EE8               	goto	l3766
  2012     16D0                     u5620:
  2013     16D0                     l3760:
  2014                           
  2015                           ;main_M.c: 127:             CCPR1L = 62;
  2016     16D0  303E               	movlw	62
  2017     16D1  1283               	bcf	3,5	;RP0=0, select bank0
  2018     16D2  1303               	bcf	3,6	;RP1=0, select bank0
  2019     16D3  0095               	movwf	21	;volatile
  2020                           
  2021                           ;main_M.c: 128:             CCPR2L = 62;
  2022     16D4  303E               	movlw	62
  2023     16D5  009B               	movwf	27	;volatile
  2024     16D6                     l3762:
  2025                           
  2026                           ;main_M.c: 129:             Lcd_Set_Cursor_4bits(2,1);
  2027     16D6  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  2028     16D7  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  2029     16D8  3002               	movlw	2
  2030     16D9  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2031     16DE                     l3764:
  2032                           
  2033                           ;main_M.c: 130:             Lcd_Write_String_4bits("VERDE");
  2034     16DE  30A8               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2035     16DF  00F5               	movwf	Lcd_Write_String_4bits@a
  2036     16E0  3080               	movlw	128
  2037     16E1  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2038     16E2  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2039                           
  2040                           ;main_M.c: 131:         }
  2041     16E7  2F2E               	goto	l3786
  2042     16E8                     l3766:
  2043     16E8  3002               	movlw	2
  2044     16E9  064E               	xorwf	_color^(0+128),w
  2045     16EA  1D03               	btfss	3,2
  2046     16EB  2EED               	goto	u5631
  2047     16EC  2EEE               	goto	u5630
  2048     16ED                     u5631:
  2049     16ED  2F0B               	goto	l3776
  2050     16EE                     u5630:
  2051     16EE                     l3768:
  2052                           
  2053                           ;main_M.c: 135:             CCPR1L = 125;
  2054     16EE  307D               	movlw	125
  2055     16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2056     16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2057     16F1  0095               	movwf	21	;volatile
  2058                           
  2059                           ;main_M.c: 136:             CCPR2L = 125;
  2060     16F2  307D               	movlw	125
  2061     16F3  009B               	movwf	27	;volatile
  2062     16F4                     l3770:
  2063                           
  2064                           ;main_M.c: 137:             Lcd_Clear_4bits();
  2065     16F4  160A  158A  22D6  160A  118A  	fcall	_Lcd_Clear_4bits
  2066     16F9                     l3772:
  2067                           
  2068                           ;main_M.c: 138:             Lcd_Set_Cursor_4bits(2,1);
  2069     16F9  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  2070     16FA  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  2071     16FB  3002               	movlw	2
  2072     16FC  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2073     1701                     l3774:
  2074                           
  2075                           ;main_M.c: 139:             Lcd_Write_String_4bits("AZUL");
  2076     1701  30B9               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2077     1702  00F5               	movwf	Lcd_Write_String_4bits@a
  2078     1703  3080               	movlw	128
  2079     1704  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2080     1705  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2081                           
  2082                           ;main_M.c: 141:         }
  2083     170A  2F2E               	goto	l3786
  2084     170B                     l3776:
  2085     170B  3003               	movlw	3
  2086     170C  064E               	xorwf	_color^(0+128),w
  2087     170D  1D03               	btfss	3,2
  2088     170E  2F10               	goto	u5641
  2089     170F  2F11               	goto	u5640
  2090     1710                     u5641:
  2091     1710  2F2E               	goto	l176
  2092     1711                     u5640:
  2093     1711                     l3778:
  2094                           
  2095                           ;main_M.c: 145:             CCPR1L = 187;
  2096     1711  30BB               	movlw	187
  2097     1712  1283               	bcf	3,5	;RP0=0, select bank0
  2098     1713  1303               	bcf	3,6	;RP1=0, select bank0
  2099     1714  0095               	movwf	21	;volatile
  2100                           
  2101                           ;main_M.c: 146:             CCPR2L = 187;
  2102     1715  30BB               	movlw	187
  2103     1716  009B               	movwf	27	;volatile
  2104     1717                     l3780:
  2105                           
  2106                           ;main_M.c: 147:             Lcd_Clear_4bits();
  2107     1717  160A  158A  22D6  160A  118A  	fcall	_Lcd_Clear_4bits
  2108     171C                     l3782:
  2109                           
  2110                           ;main_M.c: 148:             Lcd_Set_Cursor_4bits(2,1);
  2111     171C  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  2112     171D  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  2113     171E  3002               	movlw	2
  2114     171F  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2115     1724                     l3784:
  2116                           
  2117                           ;main_M.c: 149:             Lcd_Write_String_4bits("ROJO");
  2118     1724  30BE               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2119     1725  00F5               	movwf	Lcd_Write_String_4bits@a
  2120     1726  3080               	movlw	128
  2121     1727  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2122     1728  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2123     172D  2F2E               	goto	l3786
  2124     172E                     l176:
  2125     172E                     l3786:
  2126                           
  2127                           ;main_M.c: 153:         if (distancia < 5){
  2128     172E  1683               	bsf	3,5	;RP0=1, select bank1
  2129     172F  1303               	bcf	3,6	;RP1=0, select bank1
  2130     1730  084A               	movf	(_distancia+3)^(0+128),w
  2131     1731  00F3               	movwf	___flge@ff1+3
  2132     1732  0849               	movf	(_distancia+2)^(0+128),w
  2133     1733  00F2               	movwf	___flge@ff1+2
  2134     1734  0848               	movf	(_distancia+1)^(0+128),w
  2135     1735  00F1               	movwf	___flge@ff1+1
  2136     1736  0847               	movf	_distancia^(0+128),w
  2137     1737  00F0               	movwf	___flge@ff1
  2138     1738  3040               	movlw	64
  2139     1739  00F7               	movwf	___flge@ff2+3
  2140     173A  30A0               	movlw	160
  2141     173B  00F6               	movwf	___flge@ff2+2
  2142     173C  3000               	movlw	0
  2143     173D  00F5               	movwf	___flge@ff2+1
  2144     173E  3000               	movlw	0
  2145     173F  00F4               	movwf	___flge@ff2
  2146     1740  120A  158A  2002  160A  118A  	fcall	___flge
  2147     1745  1803               	btfsc	3,0
  2148     1746  2F48               	goto	u5651
  2149     1747  2F49               	goto	u5650
  2150     1748                     u5651:
  2151     1748  2F71               	goto	l3796
  2152     1749                     u5650:
  2153     1749                     l3788:
  2154                           
  2155                           ;main_M.c: 155:             PORTAbits.RA0 = 0;
  2156     1749  1283               	bcf	3,5	;RP0=0, select bank0
  2157     174A  1303               	bcf	3,6	;RP1=0, select bank0
  2158     174B  1005               	bcf	5,0	;volatile
  2159                           
  2160                           ;main_M.c: 156:             PORTAbits.RA1 = 0;
  2161     174C  1085               	bcf	5,1	;volatile
  2162                           
  2163                           ;main_M.c: 157:             PORTAbits.RA2 = 0;
  2164     174D  1105               	bcf	5,2	;volatile
  2165                           
  2166                           ;main_M.c: 158:             PORTAbits.RA3 = 0;
  2167     174E  1185               	bcf	5,3	;volatile
  2168     174F                     l3790:
  2169                           
  2170                           ;main_M.c: 159:             Lcd_Set_Cursor_4bits(2,7);
  2171     174F  3007               	movlw	7
  2172     1750  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2173     1751  3002               	movlw	2
  2174     1752  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2175     1757                     l3792:
  2176                           
  2177                           ;main_M.c: 160:             Lcd_Write_String_4bits("TAPADO");
  2178     1757  30A1               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2179     1758  00F5               	movwf	Lcd_Write_String_4bits@a
  2180     1759  3080               	movlw	128
  2181     175A  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2182     175B  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2183     1760                     l3794:
  2184                           
  2185                           ;main_M.c: 161:             Lcd_Set_Cursor_4bits(2,16);
  2186     1760  3010               	movlw	16
  2187     1761  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2188     1762  3002               	movlw	2
  2189     1763  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2190                           
  2191                           ;main_M.c: 162:             Lcd_Write_String_4bits("N");
  2192     1768  30C5               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2193     1769  00F5               	movwf	Lcd_Write_String_4bits@a
  2194     176A  3080               	movlw	128
  2195     176B  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2196     176C  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2197     1771                     l3796:
  2198                           
  2199                           ;main_M.c: 166:         if (distancia > 5){
  2200     1771  3040               	movlw	64
  2201     1772  00F3               	movwf	___flge@ff1+3
  2202     1773  30A0               	movlw	160
  2203     1774  00F2               	movwf	___flge@ff1+2
  2204     1775  3000               	movlw	0
  2205     1776  00F1               	movwf	___flge@ff1+1
  2206     1777  3000               	movlw	0
  2207     1778  00F0               	movwf	___flge@ff1
  2208     1779  1683               	bsf	3,5	;RP0=1, select bank1
  2209     177A  1303               	bcf	3,6	;RP1=0, select bank1
  2210     177B  084A               	movf	(_distancia+3)^(0+128),w
  2211     177C  00F7               	movwf	___flge@ff2+3
  2212     177D  0849               	movf	(_distancia+2)^(0+128),w
  2213     177E  00F6               	movwf	___flge@ff2+2
  2214     177F  0848               	movf	(_distancia+1)^(0+128),w
  2215     1780  00F5               	movwf	___flge@ff2+1
  2216     1781  0847               	movf	_distancia^(0+128),w
  2217     1782  00F4               	movwf	___flge@ff2
  2218     1783  120A  158A  2002  160A  118A  	fcall	___flge
  2219     1788  1803               	btfsc	3,0
  2220     1789  2F8B               	goto	u5661
  2221     178A  2F8C               	goto	u5660
  2222     178B                     u5661:
  2223     178B  2FB4               	goto	l3806
  2224     178C                     u5660:
  2225     178C                     l3798:
  2226                           
  2227                           ;main_M.c: 168:             PORTAbits.RA0 = 0;
  2228     178C  1283               	bcf	3,5	;RP0=0, select bank0
  2229     178D  1303               	bcf	3,6	;RP1=0, select bank0
  2230     178E  1005               	bcf	5,0	;volatile
  2231                           
  2232                           ;main_M.c: 169:             PORTAbits.RA1 = 1;
  2233     178F  1485               	bsf	5,1	;volatile
  2234                           
  2235                           ;main_M.c: 170:             PORTAbits.RA2 = 1;
  2236     1790  1505               	bsf	5,2	;volatile
  2237                           
  2238                           ;main_M.c: 171:             PORTAbits.RA3 = 0;
  2239     1791  1185               	bcf	5,3	;volatile
  2240     1792                     l3800:
  2241                           
  2242                           ;main_M.c: 172:             Lcd_Set_Cursor_4bits(2,7);
  2243     1792  3007               	movlw	7
  2244     1793  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2245     1794  3002               	movlw	2
  2246     1795  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2247     179A                     l3802:
  2248                           
  2249                           ;main_M.c: 173:             Lcd_Write_String_4bits("LIBRE");
  2250     179A  30AE               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2251     179B  00F5               	movwf	Lcd_Write_String_4bits@a
  2252     179C  3080               	movlw	128
  2253     179D  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2254     179E  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2255     17A3                     l3804:
  2256                           
  2257                           ;main_M.c: 174:             Lcd_Set_Cursor_4bits(2,16);
  2258     17A3  3010               	movlw	16
  2259     17A4  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2260     17A5  3002               	movlw	2
  2261     17A6  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2262                           
  2263                           ;main_M.c: 175:             Lcd_Write_String_4bits("N");
  2264     17AB  30C5               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2265     17AC  00F5               	movwf	Lcd_Write_String_4bits@a
  2266     17AD  3080               	movlw	128
  2267     17AE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2268     17AF  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2269     17B4                     l3806:
  2270                           
  2271                           ;main_M.c: 178:         if (linea == 1){
  2272     17B4  1683               	bsf	3,5	;RP0=1, select bank1
  2273     17B5  1303               	bcf	3,6	;RP1=0, select bank1
  2274     17B6  034D               	decf	_linea^(0+128),w
  2275     17B7  1D03               	btfss	3,2
  2276     17B8  2FBA               	goto	u5671
  2277     17B9  2FBB               	goto	u5670
  2278     17BA                     u5671:
  2279     17BA  2FD2               	goto	l3814
  2280     17BB                     u5670:
  2281     17BB                     l3808:
  2282                           
  2283                           ;main_M.c: 180:             PORTAbits.RA0 = 0;
  2284     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  2285     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  2286     17BD  1005               	bcf	5,0	;volatile
  2287                           
  2288                           ;main_M.c: 181:             PORTAbits.RA1 = 1;
  2289     17BE  1485               	bsf	5,1	;volatile
  2290                           
  2291                           ;main_M.c: 182:             PORTAbits.RA2 = 0;
  2292     17BF  1105               	bcf	5,2	;volatile
  2293                           
  2294                           ;main_M.c: 183:             PORTAbits.RA3 = 0;
  2295     17C0  1185               	bcf	5,3	;volatile
  2296     17C1                     l3810:
  2297                           
  2298                           ;main_M.c: 184:             Lcd_Set_Cursor_4bits(2,16);
  2299     17C1  3010               	movlw	16
  2300     17C2  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2301     17C3  3002               	movlw	2
  2302     17C4  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2303     17C9                     l3812:
  2304                           
  2305                           ;main_M.c: 185:             Lcd_Write_String_4bits("!");
  2306     17C9  30C3               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2307     17CA  00F5               	movwf	Lcd_Write_String_4bits@a
  2308     17CB  3080               	movlw	128
  2309     17CC  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2310     17CD  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2311     17D2                     l3814:
  2312                           
  2313                           ;main_M.c: 189:         if (linea == 2){
  2314     17D2  3002               	movlw	2
  2315     17D3  1683               	bsf	3,5	;RP0=1, select bank1
  2316     17D4  1303               	bcf	3,6	;RP1=0, select bank1
  2317     17D5  064D               	xorwf	_linea^(0+128),w
  2318     17D6  1D03               	btfss	3,2
  2319     17D7  2FD9               	goto	u5681
  2320     17D8  2FDA               	goto	u5680
  2321     17D9                     u5681:
  2322     17D9  2FF1               	goto	l3822
  2323     17DA                     u5680:
  2324     17DA                     l3816:
  2325                           
  2326                           ;main_M.c: 191:             PORTAbits.RA0 = 0;
  2327     17DA  1283               	bcf	3,5	;RP0=0, select bank0
  2328     17DB  1303               	bcf	3,6	;RP1=0, select bank0
  2329     17DC  1005               	bcf	5,0	;volatile
  2330                           
  2331                           ;main_M.c: 192:             PORTAbits.RA1 = 0;
  2332     17DD  1085               	bcf	5,1	;volatile
  2333                           
  2334                           ;main_M.c: 193:             PORTAbits.RA2 = 1;
  2335     17DE  1505               	bsf	5,2	;volatile
  2336                           
  2337                           ;main_M.c: 194:             PORTAbits.RA3 = 0;
  2338     17DF  1185               	bcf	5,3	;volatile
  2339     17E0                     l3818:
  2340                           
  2341                           ;main_M.c: 195:             Lcd_Set_Cursor_4bits(2,16);
  2342     17E0  3010               	movlw	16
  2343     17E1  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2344     17E2  3002               	movlw	2
  2345     17E3  160A  158A  251B  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2346     17E8                     l3820:
  2347                           
  2348                           ;main_M.c: 196:             Lcd_Write_String_4bits("!");
  2349     17E8  30C3               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2350     17E9  00F5               	movwf	Lcd_Write_String_4bits@a
  2351     17EA  3080               	movlw	128
  2352     17EB  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2353     17EC  160A  158A  2495  160A  118A  	fcall	_Lcd_Write_String_4bits
  2354     17F1                     l3822:
  2355                           
  2356                           ;main_M.c: 200:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2357     17F1  301A               	movlw	26
  2358     17F2  1683               	bsf	3,5	;RP0=1, select bank1
  2359     17F3  1303               	bcf	3,6	;RP1=0, select bank1
  2360     17F4  00C4               	movwf	(??_main^(0+128)+1)
  2361     17F5  30F7               	movlw	247
  2362     17F6  00C3               	movwf	??_main^(0+128)
  2363     17F7                     u5767:
  2364     17F7  0BC3               	decfsz	??_main^(0+128),f
  2365     17F8  2FF7               	goto	u5767
  2366     17F9  0BC4               	decfsz	(??_main^(0+128)+1),f
  2367     17FA  2FF7               	goto	u5767
  2368     17FB  2FFC               	nop2
  2369     17FC  2D7F               	goto	l3710
  2370     17FD  120A  118A  2800   	ljmp	start
  2371     1800                     __end_of_main:
  2372                           
  2373                           	psect	text1
  2374     01B0                     __ptext1:	
  2375 ;; *************** function _sprintf *****************
  2376 ;; Defined at:
  2377 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  sp              1    wreg     PTR unsigned char 
  2380 ;;		 -> distanciaLCD(16), 
  2381 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2382 ;;		 -> STR_1(16), 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2385 ;;		 -> distanciaLCD(16), 
  2386 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2387 ;;  tmpval          4   23[BANK1 ] struct .
  2388 ;;  val             4   17[BANK1 ] unsigned long 
  2389 ;;  prec            2   28[BANK1 ] int 
  2390 ;;  eexp            2   21[BANK1 ] int 
  2391 ;;  flag            2   15[BANK1 ] unsigned short 
  2392 ;;  cp              2    0        PTR const unsigned char 
  2393 ;;  len             2    0        unsigned int 
  2394 ;;  width           2    0        int 
  2395 ;;  c               1   34[BANK1 ] unsigned char 
  2396 ;;  ap              1   14[BANK1 ] PTR void [1]
  2397 ;;		 -> ?_sprintf(2), 
  2398 ;;  d               1    0        unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    0[BANK1 ] int 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       5       0       0
  2409 ;;      Locals:         0       0      25       0       0
  2410 ;;      Temps:          0       0       5       0       0
  2411 ;;      Totals:         0       0      35       0       0
  2412 ;;Total ram usage:       35 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 3
  2415 ;; This function calls:
  2416 ;;		___awdiv
  2417 ;;		___fladd
  2418 ;;		___fleq
  2419 ;;		___flge
  2420 ;;		___flmul
  2421 ;;		___flneg
  2422 ;;		___flsub
  2423 ;;		___fltol
  2424 ;;		___lldiv
  2425 ;;		___llmod
  2426 ;;		___wmul
  2427 ;;		___xxtofl
  2428 ;;		__div_to_l_
  2429 ;;		__tdiv_to_l_
  2430 ;;		_fround
  2431 ;;		_isdigit
  2432 ;;		_scale
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438     01B0                     _sprintf:	
  2439                           ;psect for function _sprintf
  2440                           
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2444                           ;sprintf@sp stored from wreg
  2445     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2446     01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2447     01B2  00BB               	movwf	sprintf@sp^(0+128)
  2448     01B3                     l3486:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2451     01B3  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2452     01B4  00AE               	movwf	sprintf@ap^(0+128)
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2455     01B5  2FDB               	goto	l3680
  2456     01B6                     l3488:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2459     01B6  3025               	movlw	37
  2460     01B7  0642               	xorwf	sprintf@c^(0+128),w
  2461     01B8  1903               	btfsc	3,2
  2462     01B9  29BB               	goto	u5261
  2463     01BA  29BC               	goto	u5260
  2464     01BB                     u5261:
  2465     01BB  29C6               	goto	l3494
  2466     01BC                     u5260:
  2467     01BC                     l3490:
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2470     01BC  083B               	movf	sprintf@sp^(0+128),w
  2471     01BD  0084               	movwf	4
  2472     01BE  0842               	movf	sprintf@c^(0+128),w
  2473     01BF  1383               	bcf	3,7	;select IRP bank0
  2474     01C0  0080               	movwf	0
  2475     01C1                     l3492:
  2476     01C1  3001               	movlw	1
  2477     01C2  00A5               	movwf	??_sprintf^(0+128)
  2478     01C3  0825               	movf	??_sprintf^(0+128),w
  2479     01C4  07BB               	addwf	sprintf@sp^(0+128),f
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2482     01C5  2FDB               	goto	l3680
  2483     01C6                     l3494:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2486     01C6  01AF               	clrf	sprintf@flag^(0+128)
  2487     01C7  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2488     01C8                     l3496:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2491     01C8  0820               	movf	sprintf@f^(0+128),w
  2492     01C9  0084               	movwf	4
  2493     01CA  120A  118A  200D  120A  118A  	fcall	stringdir
  2494     01CF  3A2E               	xorlw	46
  2495     01D0  1D03               	skipz
  2496     01D1  29D3               	goto	u5271
  2497     01D2  29D4               	goto	u5270
  2498     01D3                     u5271:
  2499     01D3  2A19               	goto	l3512
  2500     01D4                     u5270:
  2501     01D4                     l3498:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2504     01D4  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2505     01D5                     l3500:
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2508     01D5  3001               	movlw	1
  2509     01D6  00A5               	movwf	??_sprintf^(0+128)
  2510     01D7  0825               	movf	??_sprintf^(0+128),w
  2511     01D8  07A0               	addwf	sprintf@f^(0+128),f
  2512     01D9                     l3502:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2515     01D9  01BC               	clrf	sprintf@prec^(0+128)
  2516     01DA  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2519     01DB  2A08               	goto	l3510
  2520     01DC                     l3504:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2523     01DC  300A               	movlw	10
  2524     01DD  00F0               	movwf	___wmul@multiplier
  2525     01DE  3000               	movlw	0
  2526     01DF  00F1               	movwf	___wmul@multiplier+1
  2527     01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2528     01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2529     01E2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2530     01E3  00F3               	movwf	___wmul@multiplicand+1
  2531     01E4  083C               	movf	sprintf@prec^(0+128),w
  2532     01E5  00F2               	movwf	___wmul@multiplicand
  2533     01E6  160A  158A  2387  120A  118A  	fcall	___wmul
  2534     01EB  0871               	movf	?___wmul+1,w
  2535     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2536     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2537     01EE  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2538     01EF  0870               	movf	?___wmul,w
  2539     01F0  00BC               	movwf	sprintf@prec^(0+128)
  2540     01F1                     l3506:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2543     01F1  0820               	movf	sprintf@f^(0+128),w
  2544     01F2  0084               	movwf	4
  2545     01F3  120A  118A  200D  120A  118A  	fcall	stringdir
  2546     01F8  3ED0               	addlw	208
  2547     01F9  00A5               	movwf	??_sprintf^(0+128)
  2548     01FA  30FF               	movlw	255
  2549     01FB  1803               	skipnc
  2550     01FC  3000               	movlw	0
  2551     01FD  00A6               	movwf	(??_sprintf^(0+128)+1)
  2552     01FE  0825               	movf	??_sprintf^(0+128),w
  2553     01FF  07BC               	addwf	sprintf@prec^(0+128),f
  2554     0200  1803               	skipnc
  2555     0201  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2556     0202  0826               	movf	(??_sprintf+1)^(0+128),w
  2557     0203  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2558     0204                     l3508:
  2559     0204  3001               	movlw	1
  2560     0205  00A5               	movwf	??_sprintf^(0+128)
  2561     0206  0825               	movf	??_sprintf^(0+128),w
  2562     0207  07A0               	addwf	sprintf@f^(0+128),f
  2563     0208                     l3510:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2566     0208  0820               	movf	sprintf@f^(0+128),w
  2567     0209  0084               	movwf	4
  2568     020A  120A  118A  200D  120A  118A  	fcall	stringdir
  2569     020F  160A  158A  22F0  120A  118A  	fcall	_isdigit
  2570     0214  1803               	btfsc	3,0
  2571     0215  2A17               	goto	u5281
  2572     0216  2A18               	goto	u5280
  2573     0217                     u5281:
  2574     0217  29DC               	goto	l3504
  2575     0218                     u5280:
  2576     0218  2A1F               	goto	l3518
  2577     0219                     l3512:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2580     0219  01BC               	clrf	sprintf@prec^(0+128)
  2581     021A  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2582     021B                     l3514:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2585     021B  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2586     021C  2A1F               	goto	l3518
  2587     021D                     l388:	
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2589                           
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2592     021D  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2595     021E  2A3B               	goto	l3520
  2596     021F                     l3518:
  2597     021F  3001               	movlw	1
  2598     0220  1683               	bsf	3,5	;RP0=1, select bank1
  2599     0221  1303               	bcf	3,6	;RP1=0, select bank1
  2600     0222  07A0               	addwf	sprintf@f^(0+128),f
  2601     0223  30FF               	movlw	-1
  2602     0224  0720               	addwf	sprintf@f^(0+128),w
  2603     0225  0084               	movwf	4
  2604     0226  120A  118A  200D  120A  118A  	fcall	stringdir
  2605     022B  00C2               	movwf	sprintf@c^(0+128)
  2606     022C  00A5               	movwf	??_sprintf^(0+128)
  2607     022D  01A6               	clrf	(??_sprintf^(0+128)+1)
  2608                           
  2609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2610                           ; Switch size 1, requested type "simple"
  2611                           ; Number of cases is 1, Range of values is 0 to 0
  2612                           ; switch strategies available:
  2613                           ; Name         Instructions Cycles
  2614                           ; simple_byte            4     3 (average)
  2615                           ; direct_byte           11     8 (fixed)
  2616                           ; jumptable            260     6 (fixed)
  2617                           ;	Chosen strategy is simple_byte
  2618     022E  0826               	movf	(??_sprintf+1)^(0+128),w
  2619     022F  3A00               	xorlw	0	; case 0
  2620     0230  1903               	skipnz
  2621     0231  2A33               	goto	l3874
  2622     0232  2FDB               	goto	l3680
  2623     0233                     l3874:
  2624                           
  2625                           ; Switch size 1, requested type "simple"
  2626                           ; Number of cases is 2, Range of values is 0 to 102
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte            7     4 (average)
  2630                           ; jumptable            260     6 (fixed)
  2631                           ;	Chosen strategy is simple_byte
  2632     0233  0825               	movf	??_sprintf^(0+128),w
  2633     0234  3A00               	xorlw	0	; case 0
  2634     0235  1903               	skipnz
  2635     0236  2FEB               	goto	l3682
  2636     0237  3A66               	xorlw	102	; case 102
  2637     0238  1903               	skipnz
  2638     0239  2A1D               	goto	l388
  2639     023A  2FDB               	goto	l3680
  2640     023B                     l3520:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2643     023B  3000               	movlw	0
  2644     023C  052F               	andwf	sprintf@flag^(0+128),w
  2645     023D  00A5               	movwf	??_sprintf^(0+128)
  2646     023E  3007               	movlw	7
  2647     023F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2648     0240  00A6               	movwf	(??_sprintf+1)^(0+128)
  2649     0241  0825               	movf	??_sprintf^(0+128),w
  2650     0242  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2651     0243  1903               	btfsc	3,2
  2652     0244  2A46               	goto	u5291
  2653     0245  2A47               	goto	u5290
  2654     0246                     u5291:
  2655     0246  2F98               	goto	l3662
  2656     0247                     u5290:
  2657     0247                     l3522:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2660     0247  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2661     0248  2A4A               	goto	u5301
  2662     0249  2A4B               	goto	u5300
  2663     024A                     u5301:
  2664     024A  2A4F               	goto	l3526
  2665     024B                     u5300:
  2666     024B                     l3524:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2669     024B  3006               	movlw	6
  2670     024C  00BC               	movwf	sprintf@prec^(0+128)
  2671     024D  3000               	movlw	0
  2672     024E  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2673     024F                     l3526:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2676     024F  082E               	movf	sprintf@ap^(0+128),w
  2677     0250  0084               	movwf	4
  2678     0251  1383               	bcf	3,7	;select IRP bank0
  2679     0252  0800               	movf	0,w
  2680     0253  00BE               	movwf	sprintf@fval^(0+128)
  2681     0254  0A84               	incf	4,f
  2682     0255  0800               	movf	0,w
  2683     0256  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2684     0257  0A84               	incf	4,f
  2685     0258  0800               	movf	0,w
  2686     0259  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2687     025A  0A84               	incf	4,f
  2688     025B  0800               	movf	0,w
  2689     025C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2690     025D                     l3528:
  2691     025D  3004               	movlw	4
  2692     025E  00A5               	movwf	??_sprintf^(0+128)
  2693     025F  0825               	movf	??_sprintf^(0+128),w
  2694     0260  07AE               	addwf	sprintf@ap^(0+128),f
  2695     0261                     l3530:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2698     0261  0841               	movf	(sprintf@fval+3)^(0+128),w
  2699     0262  00F3               	movwf	___flge@ff1+3
  2700     0263  0840               	movf	(sprintf@fval+2)^(0+128),w
  2701     0264  00F2               	movwf	___flge@ff1+2
  2702     0265  083F               	movf	(sprintf@fval+1)^(0+128),w
  2703     0266  00F1               	movwf	___flge@ff1+1
  2704     0267  083E               	movf	sprintf@fval^(0+128),w
  2705     0268  00F0               	movwf	___flge@ff1
  2706     0269  3000               	movlw	0
  2707     026A  00F7               	movwf	___flge@ff2+3
  2708     026B  3000               	movlw	0
  2709     026C  00F6               	movwf	___flge@ff2+2
  2710     026D  3000               	movlw	0
  2711     026E  00F5               	movwf	___flge@ff2+1
  2712     026F  3000               	movlw	0
  2713     0270  00F4               	movwf	___flge@ff2
  2714     0271  120A  158A  2002  120A  118A  	fcall	___flge
  2715     0276  1803               	btfsc	3,0
  2716     0277  2A79               	goto	u5311
  2717     0278  2A7A               	goto	u5310
  2718     0279                     u5311:
  2719     0279  2A97               	goto	l3536
  2720     027A                     u5310:
  2721     027A                     l3532:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2724     027A  1683               	bsf	3,5	;RP0=1, select bank1
  2725     027B  1303               	bcf	3,6	;RP1=0, select bank1
  2726     027C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2727     027D  00F3               	movwf	___flneg@f1+3
  2728     027E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2729     027F  00F2               	movwf	___flneg@f1+2
  2730     0280  083F               	movf	(sprintf@fval+1)^(0+128),w
  2731     0281  00F1               	movwf	___flneg@f1+1
  2732     0282  083E               	movf	sprintf@fval^(0+128),w
  2733     0283  00F0               	movwf	___flneg@f1
  2734     0284  160A  158A  22BE  120A  118A  	fcall	___flneg
  2735     0289  0873               	movf	?___flneg+3,w
  2736     028A  1683               	bsf	3,5	;RP0=1, select bank1
  2737     028B  1303               	bcf	3,6	;RP1=0, select bank1
  2738     028C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2739     028D  0872               	movf	?___flneg+2,w
  2740     028E  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2741     028F  0871               	movf	?___flneg+1,w
  2742     0290  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2743     0291  0870               	movf	?___flneg,w
  2744     0292  00BE               	movwf	sprintf@fval^(0+128)
  2745     0293                     l3534:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2748     0293  3003               	movlw	3
  2749     0294  04AF               	iorwf	sprintf@flag^(0+128),f
  2750     0295  3000               	movlw	0
  2751     0296  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2752     0297                     l3536:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2755     0297  1683               	bsf	3,5	;RP0=1, select bank1
  2756     0298  1303               	bcf	3,6	;RP1=0, select bank1
  2757     0299  01B5               	clrf	sprintf@eexp^(0+128)
  2758     029A  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2759     029B                     l3538:
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2762     029B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2763     029C  00F3               	movwf	___fleq@ff1+3
  2764     029D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2765     029E  00F2               	movwf	___fleq@ff1+2
  2766     029F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2767     02A0  00F1               	movwf	___fleq@ff1+1
  2768     02A1  083E               	movf	sprintf@fval^(0+128),w
  2769     02A2  00F0               	movwf	___fleq@ff1
  2770     02A3  3000               	movlw	0
  2771     02A4  00F7               	movwf	___fleq@ff2+3
  2772     02A5  3000               	movlw	0
  2773     02A6  00F6               	movwf	___fleq@ff2+2
  2774     02A7  3000               	movlw	0
  2775     02A8  00F5               	movwf	___fleq@ff2+1
  2776     02A9  3000               	movlw	0
  2777     02AA  00F4               	movwf	___fleq@ff2
  2778     02AB  160A  158A  2561  120A  118A  	fcall	___fleq
  2779     02B0  1803               	btfsc	3,0
  2780     02B1  2AB3               	goto	u5321
  2781     02B2  2AB4               	goto	u5320
  2782     02B3                     u5321:
  2783     02B3  2BA4               	goto	l3564
  2784     02B4                     u5320:
  2785     02B4                     l3540:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2788     02B4  1003               	clrc
  2789     02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2790     02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2791     02B7  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2792     02B8  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2793     02B9  3E82               	addlw	130
  2794     02BA  00B5               	movwf	sprintf@eexp^(0+128)
  2795     02BB  30FF               	movlw	255
  2796     02BC  1803               	skipnc
  2797     02BD  3000               	movlw	0
  2798     02BE  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2799     02BF                     l3542:
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2802     02BF  30FF               	movlw	255
  2803     02C0  07B5               	addwf	sprintf@eexp^(0+128),f
  2804     02C1  1803               	skipnc
  2805     02C2  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2806     02C3  30FF               	movlw	255
  2807     02C4  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2808     02C5                     l3544:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2811     02C5  3003               	movlw	3
  2812     02C6  00F0               	movwf	___wmul@multiplier
  2813     02C7  3000               	movlw	0
  2814     02C8  00F1               	movwf	___wmul@multiplier+1
  2815     02C9  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2816     02CA  00F3               	movwf	___wmul@multiplicand+1
  2817     02CB  0835               	movf	sprintf@eexp^(0+128),w
  2818     02CC  00F2               	movwf	___wmul@multiplicand
  2819     02CD  160A  158A  2387  120A  118A  	fcall	___wmul
  2820     02D2  0871               	movf	?___wmul+1,w
  2821     02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2822     02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2823     02D5  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2824     02D6  0870               	movf	?___wmul,w
  2825     02D7  00B5               	movwf	sprintf@eexp^(0+128)
  2826     02D8                     l3546:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2829     02D8  300A               	movlw	10
  2830     02D9  00F7               	movwf	___awdiv@divisor
  2831     02DA  3000               	movlw	0
  2832     02DB  00F8               	movwf	___awdiv@divisor+1
  2833     02DC  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2834     02DD  00FA               	movwf	___awdiv@dividend+1
  2835     02DE  0835               	movf	sprintf@eexp^(0+128),w
  2836     02DF  00F9               	movwf	___awdiv@dividend
  2837     02E0  160A  158A  271F  120A  118A  	fcall	___awdiv
  2838     02E5  0878               	movf	?___awdiv+1,w
  2839     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2840     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2841     02E8  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2842     02E9  0877               	movf	?___awdiv,w
  2843     02EA  00B5               	movwf	sprintf@eexp^(0+128)
  2844     02EB                     l3548:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2847     02EB  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2848     02EC  2AEE               	goto	u5331
  2849     02ED  2AEF               	goto	u5330
  2850     02EE                     u5331:
  2851     02EE  2AF5               	goto	l3552
  2852     02EF                     u5330:
  2853     02EF                     l3550:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2856     02EF  30FF               	movlw	255
  2857     02F0  07B5               	addwf	sprintf@eexp^(0+128),f
  2858     02F1  1803               	skipnc
  2859     02F2  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2860     02F3  30FF               	movlw	255
  2861     02F4  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2862     02F5                     l3552:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2865     02F5  0335               	decf	sprintf@eexp^(0+128),w
  2866     02F6  3AFF               	xorlw	255
  2867     02F7  120A  158A  24A1  120A  118A  	fcall	_scale
  2868     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2869     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2870     02FE  0841               	movf	?_scale+3,w
  2871     02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2872     0300  1303               	bcf	3,6	;RP1=0, select bank1
  2873     0301  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2874     0302  1283               	bcf	3,5	;RP0=0, select bank0
  2875     0303  1303               	bcf	3,6	;RP1=0, select bank0
  2876     0304  0840               	movf	?_scale+2,w
  2877     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2878     0306  1303               	bcf	3,6	;RP1=0, select bank1
  2879     0307  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2880     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2881     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2882     030A  083F               	movf	?_scale+1,w
  2883     030B  1683               	bsf	3,5	;RP0=1, select bank1
  2884     030C  1303               	bcf	3,6	;RP1=0, select bank1
  2885     030D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2886     030E  1283               	bcf	3,5	;RP0=0, select bank0
  2887     030F  1303               	bcf	3,6	;RP1=0, select bank0
  2888     0310  083E               	movf	?_scale,w
  2889     0311  1683               	bsf	3,5	;RP0=1, select bank1
  2890     0312  1303               	bcf	3,6	;RP1=0, select bank1
  2891     0313  00B7               	movwf	sprintf@tmpval^(0+128)
  2892     0314                     l3554:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2895     0314  0841               	movf	(sprintf@fval+3)^(0+128),w
  2896     0315  1283               	bcf	3,5	;RP0=0, select bank0
  2897     0316  1303               	bcf	3,6	;RP1=0, select bank0
  2898     0317  00A7               	movwf	___flmul@b+3
  2899     0318  1683               	bsf	3,5	;RP0=1, select bank1
  2900     0319  1303               	bcf	3,6	;RP1=0, select bank1
  2901     031A  0840               	movf	(sprintf@fval+2)^(0+128),w
  2902     031B  1283               	bcf	3,5	;RP0=0, select bank0
  2903     031C  1303               	bcf	3,6	;RP1=0, select bank0
  2904     031D  00A6               	movwf	___flmul@b+2
  2905     031E  1683               	bsf	3,5	;RP0=1, select bank1
  2906     031F  1303               	bcf	3,6	;RP1=0, select bank1
  2907     0320  083F               	movf	(sprintf@fval+1)^(0+128),w
  2908     0321  1283               	bcf	3,5	;RP0=0, select bank0
  2909     0322  1303               	bcf	3,6	;RP1=0, select bank0
  2910     0323  00A5               	movwf	___flmul@b+1
  2911     0324  1683               	bsf	3,5	;RP0=1, select bank1
  2912     0325  1303               	bcf	3,6	;RP1=0, select bank1
  2913     0326  083E               	movf	sprintf@fval^(0+128),w
  2914     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2915     0328  1303               	bcf	3,6	;RP1=0, select bank0
  2916     0329  00A4               	movwf	___flmul@b
  2917     032A  1683               	bsf	3,5	;RP0=1, select bank1
  2918     032B  1303               	bcf	3,6	;RP1=0, select bank1
  2919     032C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2920     032D  1283               	bcf	3,5	;RP0=0, select bank0
  2921     032E  1303               	bcf	3,6	;RP1=0, select bank0
  2922     032F  00AB               	movwf	___flmul@a+3
  2923     0330  1683               	bsf	3,5	;RP0=1, select bank1
  2924     0331  1303               	bcf	3,6	;RP1=0, select bank1
  2925     0332  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2926     0333  1283               	bcf	3,5	;RP0=0, select bank0
  2927     0334  1303               	bcf	3,6	;RP1=0, select bank0
  2928     0335  00AA               	movwf	___flmul@a+2
  2929     0336  1683               	bsf	3,5	;RP0=1, select bank1
  2930     0337  1303               	bcf	3,6	;RP1=0, select bank1
  2931     0338  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2932     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2933     033A  1303               	bcf	3,6	;RP1=0, select bank0
  2934     033B  00A9               	movwf	___flmul@a+1
  2935     033C  1683               	bsf	3,5	;RP0=1, select bank1
  2936     033D  1303               	bcf	3,6	;RP1=0, select bank1
  2937     033E  0837               	movf	sprintf@tmpval^(0+128),w
  2938     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2939     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2940     0341  00A8               	movwf	___flmul@a
  2941     0342  120A  158A  215C  120A  118A  	fcall	___flmul
  2942     0347  1283               	bcf	3,5	;RP0=0, select bank0
  2943     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2944     0349  0827               	movf	?___flmul+3,w
  2945     034A  1683               	bsf	3,5	;RP0=1, select bank1
  2946     034B  1303               	bcf	3,6	;RP1=0, select bank1
  2947     034C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2948     034D  1283               	bcf	3,5	;RP0=0, select bank0
  2949     034E  1303               	bcf	3,6	;RP1=0, select bank0
  2950     034F  0826               	movf	?___flmul+2,w
  2951     0350  1683               	bsf	3,5	;RP0=1, select bank1
  2952     0351  1303               	bcf	3,6	;RP1=0, select bank1
  2953     0352  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2954     0353  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0354  1303               	bcf	3,6	;RP1=0, select bank0
  2956     0355  0825               	movf	?___flmul+1,w
  2957     0356  1683               	bsf	3,5	;RP0=1, select bank1
  2958     0357  1303               	bcf	3,6	;RP1=0, select bank1
  2959     0358  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2960     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2961     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2962     035B  0824               	movf	?___flmul,w
  2963     035C  1683               	bsf	3,5	;RP0=1, select bank1
  2964     035D  1303               	bcf	3,6	;RP1=0, select bank1
  2965     035E  00B7               	movwf	sprintf@tmpval^(0+128)
  2966     035F                     l3556:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2969     035F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2970     0360  00F3               	movwf	___flge@ff1+3
  2971     0361  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2972     0362  00F2               	movwf	___flge@ff1+2
  2973     0363  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2974     0364  00F1               	movwf	___flge@ff1+1
  2975     0365  0837               	movf	sprintf@tmpval^(0+128),w
  2976     0366  00F0               	movwf	___flge@ff1
  2977     0367  303F               	movlw	63
  2978     0368  00F7               	movwf	___flge@ff2+3
  2979     0369  3080               	movlw	128
  2980     036A  00F6               	movwf	___flge@ff2+2
  2981     036B  3000               	movlw	0
  2982     036C  00F5               	movwf	___flge@ff2+1
  2983     036D  3000               	movlw	0
  2984     036E  00F4               	movwf	___flge@ff2
  2985     036F  120A  158A  2002  120A  118A  	fcall	___flge
  2986     0374  1803               	btfsc	3,0
  2987     0375  2B77               	goto	u5341
  2988     0376  2B78               	goto	u5340
  2989     0377                     u5341:
  2990     0377  2B81               	goto	l3560
  2991     0378                     u5340:
  2992     0378                     l3558:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2995     0378  30FF               	movlw	255
  2996     0379  1683               	bsf	3,5	;RP0=1, select bank1
  2997     037A  1303               	bcf	3,6	;RP1=0, select bank1
  2998     037B  07B5               	addwf	sprintf@eexp^(0+128),f
  2999     037C  1803               	skipnc
  3000     037D  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3001     037E  30FF               	movlw	255
  3002     037F  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3003     0380  2BA4               	goto	l3564
  3004     0381                     l3560:
  3005     0381  1683               	bsf	3,5	;RP0=1, select bank1
  3006     0382  1303               	bcf	3,6	;RP1=0, select bank1
  3007     0383  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3008     0384  00F3               	movwf	___flge@ff1+3
  3009     0385  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3010     0386  00F2               	movwf	___flge@ff1+2
  3011     0387  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3012     0388  00F1               	movwf	___flge@ff1+1
  3013     0389  0837               	movf	sprintf@tmpval^(0+128),w
  3014     038A  00F0               	movwf	___flge@ff1
  3015     038B  3041               	movlw	65
  3016     038C  00F7               	movwf	___flge@ff2+3
  3017     038D  3020               	movlw	32
  3018     038E  00F6               	movwf	___flge@ff2+2
  3019     038F  3000               	movlw	0
  3020     0390  00F5               	movwf	___flge@ff2+1
  3021     0391  3000               	movlw	0
  3022     0392  00F4               	movwf	___flge@ff2
  3023     0393  120A  158A  2002  120A  118A  	fcall	___flge
  3024     0398  1C03               	btfss	3,0
  3025     0399  2B9B               	goto	u5351
  3026     039A  2B9C               	goto	u5350
  3027     039B                     u5351:
  3028     039B  2BA4               	goto	l3564
  3029     039C                     u5350:
  3030     039C                     l3562:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3033     039C  3001               	movlw	1
  3034     039D  1683               	bsf	3,5	;RP0=1, select bank1
  3035     039E  1303               	bcf	3,6	;RP1=0, select bank1
  3036     039F  07B5               	addwf	sprintf@eexp^(0+128),f
  3037     03A0  1803               	skipnc
  3038     03A1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3039     03A2  3000               	movlw	0
  3040     03A3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3041     03A4                     l3564:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3044     03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3045     03A5  1303               	bcf	3,6	;RP1=0, select bank1
  3046     03A6  083D               	movf	(sprintf@prec+1)^(0+128),w
  3047     03A7  3A80               	xorlw	128
  3048     03A8  00FF               	movwf	btemp+1
  3049     03A9  3080               	movlw	128
  3050     03AA  027F               	subwf	btemp+1,w
  3051     03AB  1D03               	skipz
  3052     03AC  2BAF               	goto	u5365
  3053     03AD  300D               	movlw	13
  3054     03AE  023C               	subwf	sprintf@prec^(0+128),w
  3055     03AF                     u5365:
  3056     03AF  1803               	skipnc
  3057     03B0  2BB2               	goto	u5361
  3058     03B1  2BB3               	goto	u5360
  3059     03B2                     u5361:
  3060     03B2  2BFA               	goto	l3568
  3061     03B3                     u5360:
  3062     03B3                     l3566:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3065     03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3066     03B4  1303               	bcf	3,6	;RP1=0, select bank1
  3067     03B5  083C               	movf	sprintf@prec^(0+128),w
  3068     03B6  160A  118A  20F4  120A  118A  	fcall	_fround
  3069     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3070     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3071     03BD  0841               	movf	?_fround+3,w
  3072     03BE  00D5               	movwf	___fladd@b+3
  3073     03BF  0840               	movf	?_fround+2,w
  3074     03C0  00D4               	movwf	___fladd@b+2
  3075     03C1  083F               	movf	?_fround+1,w
  3076     03C2  00D3               	movwf	___fladd@b+1
  3077     03C3  083E               	movf	?_fround,w
  3078     03C4  00D2               	movwf	___fladd@b
  3079     03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3080     03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3081     03C7  0841               	movf	(sprintf@fval+3)^(0+128),w
  3082     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3083     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3084     03CA  00D9               	movwf	___fladd@a+3
  3085     03CB  1683               	bsf	3,5	;RP0=1, select bank1
  3086     03CC  1303               	bcf	3,6	;RP1=0, select bank1
  3087     03CD  0840               	movf	(sprintf@fval+2)^(0+128),w
  3088     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3089     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3090     03D0  00D8               	movwf	___fladd@a+2
  3091     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3092     03D2  1303               	bcf	3,6	;RP1=0, select bank1
  3093     03D3  083F               	movf	(sprintf@fval+1)^(0+128),w
  3094     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3095     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3096     03D6  00D7               	movwf	___fladd@a+1
  3097     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3098     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3099     03D9  083E               	movf	sprintf@fval^(0+128),w
  3100     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3101     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3102     03DC  00D6               	movwf	___fladd@a
  3103     03DD  160A  118A  22FF  120A  118A  	fcall	___fladd
  3104     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3105     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3106     03E4  0855               	movf	?___fladd+3,w
  3107     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  3108     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  3109     03E7  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3110     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3111     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3112     03EA  0854               	movf	?___fladd+2,w
  3113     03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3114     03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3115     03ED  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3116     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3117     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3118     03F0  0853               	movf	?___fladd+1,w
  3119     03F1  1683               	bsf	3,5	;RP0=1, select bank1
  3120     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  3121     03F3  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3122     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3123     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3124     03F6  0852               	movf	?___fladd,w
  3125     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  3126     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  3127     03F9  00BE               	movwf	sprintf@fval^(0+128)
  3128     03FA                     l3568:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3131     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3132     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3133     03FC  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3134     03FD  3A80               	xorlw	128
  3135     03FE  00FF               	movwf	btemp+1
  3136     03FF  3080               	movlw	128
  3137     0400  027F               	subwf	btemp+1,w
  3138     0401  1D03               	skipz
  3139     0402  2C05               	goto	u5375
  3140     0403  300A               	movlw	10
  3141     0404  0235               	subwf	sprintf@eexp^(0+128),w
  3142     0405                     u5375:
  3143     0405  1803               	skipnc
  3144     0406  2C08               	goto	u5371
  3145     0407  2C09               	goto	u5370
  3146     0408                     u5371:
  3147     0408  2C5A               	goto	l3576
  3148     0409                     u5370:
  3149     0409                     l3570:
  3150     0409  1683               	bsf	3,5	;RP0=1, select bank1
  3151     040A  1303               	bcf	3,6	;RP1=0, select bank1
  3152     040B  0841               	movf	(sprintf@fval+3)^(0+128),w
  3153     040C  00F3               	movwf	___fleq@ff1+3
  3154     040D  0840               	movf	(sprintf@fval+2)^(0+128),w
  3155     040E  00F2               	movwf	___fleq@ff1+2
  3156     040F  083F               	movf	(sprintf@fval+1)^(0+128),w
  3157     0410  00F1               	movwf	___fleq@ff1+1
  3158     0411  083E               	movf	sprintf@fval^(0+128),w
  3159     0412  00F0               	movwf	___fleq@ff1
  3160     0413  3000               	movlw	0
  3161     0414  00F7               	movwf	___fleq@ff2+3
  3162     0415  3000               	movlw	0
  3163     0416  00F6               	movwf	___fleq@ff2+2
  3164     0417  3000               	movlw	0
  3165     0418  00F5               	movwf	___fleq@ff2+1
  3166     0419  3000               	movlw	0
  3167     041A  00F4               	movwf	___fleq@ff2
  3168     041B  160A  158A  2561  120A  118A  	fcall	___fleq
  3169     0420  1803               	btfsc	3,0
  3170     0421  2C23               	goto	u5381
  3171     0422  2C24               	goto	u5380
  3172     0423                     u5381:
  3173     0423  2CCC               	goto	l3590
  3174     0424                     u5380:
  3175     0424                     l3572:
  3176     0424  1683               	bsf	3,5	;RP0=1, select bank1
  3177     0425  1303               	bcf	3,6	;RP1=0, select bank1
  3178     0426  0841               	movf	(sprintf@fval+3)^(0+128),w
  3179     0427  1283               	bcf	3,5	;RP0=0, select bank0
  3180     0428  1303               	bcf	3,6	;RP1=0, select bank0
  3181     0429  00D4               	movwf	___fltol@f1+3
  3182     042A  1683               	bsf	3,5	;RP0=1, select bank1
  3183     042B  1303               	bcf	3,6	;RP1=0, select bank1
  3184     042C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3185     042D  1283               	bcf	3,5	;RP0=0, select bank0
  3186     042E  1303               	bcf	3,6	;RP1=0, select bank0
  3187     042F  00D3               	movwf	___fltol@f1+2
  3188     0430  1683               	bsf	3,5	;RP0=1, select bank1
  3189     0431  1303               	bcf	3,6	;RP1=0, select bank1
  3190     0432  083F               	movf	(sprintf@fval+1)^(0+128),w
  3191     0433  1283               	bcf	3,5	;RP0=0, select bank0
  3192     0434  1303               	bcf	3,6	;RP1=0, select bank0
  3193     0435  00D2               	movwf	___fltol@f1+1
  3194     0436  1683               	bsf	3,5	;RP0=1, select bank1
  3195     0437  1303               	bcf	3,6	;RP1=0, select bank1
  3196     0438  083E               	movf	sprintf@fval^(0+128),w
  3197     0439  1283               	bcf	3,5	;RP0=0, select bank0
  3198     043A  1303               	bcf	3,6	;RP1=0, select bank0
  3199     043B  00D1               	movwf	___fltol@f1
  3200     043C  160A  158A  2788  120A  118A  	fcall	___fltol
  3201     0441  1283               	bcf	3,5	;RP0=0, select bank0
  3202     0442  1303               	bcf	3,6	;RP1=0, select bank0
  3203     0443  0854               	movf	?___fltol+3,w
  3204     0444  0453               	iorwf	?___fltol+2,w
  3205     0445  0452               	iorwf	?___fltol+1,w
  3206     0446  0451               	iorwf	?___fltol,w
  3207     0447  1D03               	skipz
  3208     0448  2C4A               	goto	u5391
  3209     0449  2C4B               	goto	u5390
  3210     044A                     u5391:
  3211     044A  2CCC               	goto	l3590
  3212     044B                     u5390:
  3213     044B                     l3574:
  3214     044B  1683               	bsf	3,5	;RP0=1, select bank1
  3215     044C  1303               	bcf	3,6	;RP1=0, select bank1
  3216     044D  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3217     044E  3A80               	xorlw	128
  3218     044F  00FF               	movwf	btemp+1
  3219     0450  3080               	movlw	128
  3220     0451  027F               	subwf	btemp+1,w
  3221     0452  1D03               	skipz
  3222     0453  2C56               	goto	u5405
  3223     0454  3002               	movlw	2
  3224     0455  0235               	subwf	sprintf@eexp^(0+128),w
  3225     0456                     u5405:
  3226     0456  1C03               	skipc
  3227     0457  2C59               	goto	u5401
  3228     0458  2C5A               	goto	u5400
  3229     0459                     u5401:
  3230     0459  2CCC               	goto	l3590
  3231     045A                     u5400:
  3232     045A                     l3576:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3235     045A  1683               	bsf	3,5	;RP0=1, select bank1
  3236     045B  1303               	bcf	3,6	;RP1=0, select bank1
  3237     045C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3238     045D  00F3               	movwf	___flge@ff1+3
  3239     045E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3240     045F  00F2               	movwf	___flge@ff1+2
  3241     0460  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3242     0461  00F1               	movwf	___flge@ff1+1
  3243     0462  0837               	movf	sprintf@tmpval^(0+128),w
  3244     0463  00F0               	movwf	___flge@ff1
  3245     0464  3040               	movlw	64
  3246     0465  00F7               	movwf	___flge@ff2+3
  3247     0466  3089               	movlw	137
  3248     0467  00F6               	movwf	___flge@ff2+2
  3249     0468  3070               	movlw	112
  3250     0469  00F5               	movwf	___flge@ff2+1
  3251     046A  305F               	movlw	95
  3252     046B  00F4               	movwf	___flge@ff2
  3253     046C  120A  158A  2002  120A  118A  	fcall	___flge
  3254     0471  1803               	btfsc	3,0
  3255     0472  2C74               	goto	u5411
  3256     0473  2C75               	goto	u5410
  3257     0474                     u5411:
  3258     0474  2C7E               	goto	l3580
  3259     0475                     u5410:
  3260     0475                     l3578:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3263     0475  30F7               	movlw	247
  3264     0476  1683               	bsf	3,5	;RP0=1, select bank1
  3265     0477  1303               	bcf	3,6	;RP1=0, select bank1
  3266     0478  07B5               	addwf	sprintf@eexp^(0+128),f
  3267     0479  1803               	skipnc
  3268     047A  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3269     047B  30FF               	movlw	255
  3270     047C  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3273     047D  2C86               	goto	l3582
  3274     047E                     l3580:
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3277     047E  30F8               	movlw	248
  3278     047F  1683               	bsf	3,5	;RP0=1, select bank1
  3279     0480  1303               	bcf	3,6	;RP1=0, select bank1
  3280     0481  07B5               	addwf	sprintf@eexp^(0+128),f
  3281     0482  1803               	skipnc
  3282     0483  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3283     0484  30FF               	movlw	255
  3284     0485  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3285     0486                     l3582:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3288     0486  0835               	movf	sprintf@eexp^(0+128),w
  3289     0487  120A  158A  24A1  120A  118A  	fcall	_scale
  3290     048C  1283               	bcf	3,5	;RP0=0, select bank0
  3291     048D  1303               	bcf	3,6	;RP1=0, select bank0
  3292     048E  0841               	movf	?_scale+3,w
  3293     048F  1683               	bsf	3,5	;RP0=1, select bank1
  3294     0490  1303               	bcf	3,6	;RP1=0, select bank1
  3295     0491  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3296     0492  1283               	bcf	3,5	;RP0=0, select bank0
  3297     0493  1303               	bcf	3,6	;RP1=0, select bank0
  3298     0494  0840               	movf	?_scale+2,w
  3299     0495  1683               	bsf	3,5	;RP0=1, select bank1
  3300     0496  1303               	bcf	3,6	;RP1=0, select bank1
  3301     0497  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3302     0498  1283               	bcf	3,5	;RP0=0, select bank0
  3303     0499  1303               	bcf	3,6	;RP1=0, select bank0
  3304     049A  083F               	movf	?_scale+1,w
  3305     049B  1683               	bsf	3,5	;RP0=1, select bank1
  3306     049C  1303               	bcf	3,6	;RP1=0, select bank1
  3307     049D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3308     049E  1283               	bcf	3,5	;RP0=0, select bank0
  3309     049F  1303               	bcf	3,6	;RP1=0, select bank0
  3310     04A0  083E               	movf	?_scale,w
  3311     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  3312     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  3313     04A3  00B7               	movwf	sprintf@tmpval^(0+128)
  3314     04A4                     l3584:
  3315     04A4  0841               	movf	(sprintf@fval+3)^(0+128),w
  3316     04A5  00F3               	movwf	__div_to_l_@f1+3
  3317     04A6  0840               	movf	(sprintf@fval+2)^(0+128),w
  3318     04A7  00F2               	movwf	__div_to_l_@f1+2
  3319     04A8  083F               	movf	(sprintf@fval+1)^(0+128),w
  3320     04A9  00F1               	movwf	__div_to_l_@f1+1
  3321     04AA  083E               	movf	sprintf@fval^(0+128),w
  3322     04AB  00F0               	movwf	__div_to_l_@f1
  3323     04AC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3324     04AD  00F7               	movwf	__div_to_l_@f2+3
  3325     04AE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3326     04AF  00F6               	movwf	__div_to_l_@f2+2
  3327     04B0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3328     04B1  00F5               	movwf	__div_to_l_@f2+1
  3329     04B2  0837               	movf	sprintf@tmpval^(0+128),w
  3330     04B3  00F4               	movwf	__div_to_l_@f2
  3331     04B4  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  3332     04B9  0873               	movf	?__div_to_l_+3,w
  3333     04BA  1683               	bsf	3,5	;RP0=1, select bank1
  3334     04BB  1303               	bcf	3,6	;RP1=0, select bank1
  3335     04BC  00B4               	movwf	(sprintf@val+3)^(0+128)
  3336     04BD  0872               	movf	?__div_to_l_+2,w
  3337     04BE  00B3               	movwf	(sprintf@val+2)^(0+128)
  3338     04BF  0871               	movf	?__div_to_l_+1,w
  3339     04C0  00B2               	movwf	(sprintf@val+1)^(0+128)
  3340     04C1  0870               	movf	?__div_to_l_,w
  3341     04C2  00B1               	movwf	sprintf@val^(0+128)
  3342     04C3                     l3588:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3345     04C3  3000               	movlw	0
  3346     04C4  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3347     04C5  3000               	movlw	0
  3348     04C6  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3349     04C7  3000               	movlw	0
  3350     04C8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3351     04C9  3000               	movlw	0
  3352     04CA  00BE               	movwf	sprintf@fval^(0+128)
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3355     04CB  2D50               	goto	l3596
  3356     04CC                     l3590:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3359     04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3360     04CD  1303               	bcf	3,6	;RP1=0, select bank1
  3361     04CE  0841               	movf	(sprintf@fval+3)^(0+128),w
  3362     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  3363     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  3364     04D1  00D4               	movwf	___fltol@f1+3
  3365     04D2  1683               	bsf	3,5	;RP0=1, select bank1
  3366     04D3  1303               	bcf	3,6	;RP1=0, select bank1
  3367     04D4  0840               	movf	(sprintf@fval+2)^(0+128),w
  3368     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  3369     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  3370     04D7  00D3               	movwf	___fltol@f1+2
  3371     04D8  1683               	bsf	3,5	;RP0=1, select bank1
  3372     04D9  1303               	bcf	3,6	;RP1=0, select bank1
  3373     04DA  083F               	movf	(sprintf@fval+1)^(0+128),w
  3374     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3375     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  3376     04DD  00D2               	movwf	___fltol@f1+1
  3377     04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3378     04DF  1303               	bcf	3,6	;RP1=0, select bank1
  3379     04E0  083E               	movf	sprintf@fval^(0+128),w
  3380     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3381     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3382     04E3  00D1               	movwf	___fltol@f1
  3383     04E4  160A  158A  2788  120A  118A  	fcall	___fltol
  3384     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  3385     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  3386     04EB  0854               	movf	?___fltol+3,w
  3387     04EC  1683               	bsf	3,5	;RP0=1, select bank1
  3388     04ED  1303               	bcf	3,6	;RP1=0, select bank1
  3389     04EE  00B4               	movwf	(sprintf@val+3)^(0+128)
  3390     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3391     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3392     04F1  0853               	movf	?___fltol+2,w
  3393     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3394     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3395     04F4  00B3               	movwf	(sprintf@val+2)^(0+128)
  3396     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3397     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3398     04F7  0852               	movf	?___fltol+1,w
  3399     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3400     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3401     04FA  00B2               	movwf	(sprintf@val+1)^(0+128)
  3402     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3403     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3404     04FD  0851               	movf	?___fltol,w
  3405     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3406     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3407     0500  00B1               	movwf	sprintf@val^(0+128)
  3408     0501                     l3592:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3411     0501  0834               	movf	(sprintf@val+3)^(0+128),w
  3412     0502  00F9               	movwf	___xxtofl@val+3
  3413     0503  0833               	movf	(sprintf@val+2)^(0+128),w
  3414     0504  00F8               	movwf	___xxtofl@val+2
  3415     0505  0832               	movf	(sprintf@val+1)^(0+128),w
  3416     0506  00F7               	movwf	___xxtofl@val+1
  3417     0507  0831               	movf	sprintf@val^(0+128),w
  3418     0508  00F6               	movwf	___xxtofl@val
  3419     0509  3000               	movlw	0
  3420     050A  120A  118A  20F6  120A  118A  	fcall	___xxtofl
  3421     050F  0879               	movf	?___xxtofl+3,w
  3422     0510  1283               	bcf	3,5	;RP0=0, select bank0
  3423     0511  1303               	bcf	3,6	;RP1=0, select bank0
  3424     0512  00E9               	movwf	___flsub@a+3
  3425     0513  0878               	movf	?___xxtofl+2,w
  3426     0514  00E8               	movwf	___flsub@a+2
  3427     0515  0877               	movf	?___xxtofl+1,w
  3428     0516  00E7               	movwf	___flsub@a+1
  3429     0517  0876               	movf	?___xxtofl,w
  3430     0518  00E6               	movwf	___flsub@a
  3431     0519  1683               	bsf	3,5	;RP0=1, select bank1
  3432     051A  1303               	bcf	3,6	;RP1=0, select bank1
  3433     051B  0841               	movf	(sprintf@fval+3)^(0+128),w
  3434     051C  1283               	bcf	3,5	;RP0=0, select bank0
  3435     051D  1303               	bcf	3,6	;RP1=0, select bank0
  3436     051E  00ED               	movwf	___flsub@b+3
  3437     051F  1683               	bsf	3,5	;RP0=1, select bank1
  3438     0520  1303               	bcf	3,6	;RP1=0, select bank1
  3439     0521  0840               	movf	(sprintf@fval+2)^(0+128),w
  3440     0522  1283               	bcf	3,5	;RP0=0, select bank0
  3441     0523  1303               	bcf	3,6	;RP1=0, select bank0
  3442     0524  00EC               	movwf	___flsub@b+2
  3443     0525  1683               	bsf	3,5	;RP0=1, select bank1
  3444     0526  1303               	bcf	3,6	;RP1=0, select bank1
  3445     0527  083F               	movf	(sprintf@fval+1)^(0+128),w
  3446     0528  1283               	bcf	3,5	;RP0=0, select bank0
  3447     0529  1303               	bcf	3,6	;RP1=0, select bank0
  3448     052A  00EB               	movwf	___flsub@b+1
  3449     052B  1683               	bsf	3,5	;RP0=1, select bank1
  3450     052C  1303               	bcf	3,6	;RP1=0, select bank1
  3451     052D  083E               	movf	sprintf@fval^(0+128),w
  3452     052E  1283               	bcf	3,5	;RP0=0, select bank0
  3453     052F  1303               	bcf	3,6	;RP1=0, select bank0
  3454     0530  00EA               	movwf	___flsub@b
  3455     0531  160A  158A  233E  120A  118A  	fcall	___flsub
  3456     0536  1283               	bcf	3,5	;RP0=0, select bank0
  3457     0537  1303               	bcf	3,6	;RP1=0, select bank0
  3458     0538  0869               	movf	?___flsub+3,w
  3459     0539  1683               	bsf	3,5	;RP0=1, select bank1
  3460     053A  1303               	bcf	3,6	;RP1=0, select bank1
  3461     053B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3462     053C  1283               	bcf	3,5	;RP0=0, select bank0
  3463     053D  1303               	bcf	3,6	;RP1=0, select bank0
  3464     053E  0868               	movf	?___flsub+2,w
  3465     053F  1683               	bsf	3,5	;RP0=1, select bank1
  3466     0540  1303               	bcf	3,6	;RP1=0, select bank1
  3467     0541  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3468     0542  1283               	bcf	3,5	;RP0=0, select bank0
  3469     0543  1303               	bcf	3,6	;RP1=0, select bank0
  3470     0544  0867               	movf	?___flsub+1,w
  3471     0545  1683               	bsf	3,5	;RP0=1, select bank1
  3472     0546  1303               	bcf	3,6	;RP1=0, select bank1
  3473     0547  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3474     0548  1283               	bcf	3,5	;RP0=0, select bank0
  3475     0549  1303               	bcf	3,6	;RP1=0, select bank0
  3476     054A  0866               	movf	?___flsub,w
  3477     054B  1683               	bsf	3,5	;RP0=1, select bank1
  3478     054C  1303               	bcf	3,6	;RP1=0, select bank1
  3479     054D  00BE               	movwf	sprintf@fval^(0+128)
  3480     054E                     l3594:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3483     054E  01B5               	clrf	sprintf@eexp^(0+128)
  3484     054F  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3485     0550                     l3596:
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3488     0550  01C2               	clrf	sprintf@c^(0+128)
  3489     0551  0AC2               	incf	sprintf@c^(0+128),f
  3490     0552                     l3602:
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3493     0552  0842               	movf	sprintf@c^(0+128),w
  3494     0553  00A5               	movwf	??_sprintf^(0+128)
  3495     0554  3001               	movlw	1
  3496     0555                     u5425:
  3497     0555  1003               	clrc
  3498     0556  0DA5               	rlf	??_sprintf^(0+128),f
  3499     0557  3EFF               	addlw	-1
  3500     0558  1D03               	skipz
  3501     0559  2D55               	goto	u5425
  3502     055A  1003               	clrc
  3503     055B  0D25               	rlf	??_sprintf^(0+128),w
  3504     055C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3505     055D  0084               	movwf	4
  3506     055E  120A  118A  200D  120A  118A  	fcall	stringdir
  3507     0563  00A6               	movwf	(??_sprintf+1)^(0+128)
  3508     0564  120A  118A  200D  120A  118A  	fcall	stringdir
  3509     0569  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3510     056A  120A  118A  200D  120A  118A  	fcall	stringdir
  3511     056F  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3512     0570  120A  118A  200D  120A  118A  	fcall	stringdir
  3513     0575  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3514     0576  0829               	movf	(??_sprintf+4)^(0+128),w
  3515     0577  0234               	subwf	(sprintf@val+3)^(0+128),w
  3516     0578  1D03               	skipz
  3517     0579  2D84               	goto	u5435
  3518     057A  0828               	movf	(??_sprintf+3)^(0+128),w
  3519     057B  0233               	subwf	(sprintf@val+2)^(0+128),w
  3520     057C  1D03               	skipz
  3521     057D  2D84               	goto	u5435
  3522     057E  0827               	movf	(??_sprintf+2)^(0+128),w
  3523     057F  0232               	subwf	(sprintf@val+1)^(0+128),w
  3524     0580  1D03               	skipz
  3525     0581  2D84               	goto	u5435
  3526     0582  0826               	movf	(??_sprintf+1)^(0+128),w
  3527     0583  0231               	subwf	sprintf@val^(0+128),w
  3528     0584                     u5435:
  3529     0584  1803               	skipnc
  3530     0585  2D87               	goto	u5431
  3531     0586  2D88               	goto	u5430
  3532     0587                     u5431:
  3533     0587  2D89               	goto	l3606
  3534     0588                     u5430:
  3535     0588  2D93               	goto	l3608
  3536     0589                     l3606:
  3537     0589  3001               	movlw	1
  3538     058A  00A5               	movwf	??_sprintf^(0+128)
  3539     058B  0825               	movf	??_sprintf^(0+128),w
  3540     058C  07C2               	addwf	sprintf@c^(0+128),f
  3541     058D  300A               	movlw	10
  3542     058E  0642               	xorwf	sprintf@c^(0+128),w
  3543     058F  1D03               	btfss	3,2
  3544     0590  2D92               	goto	u5441
  3545     0591  2D93               	goto	u5440
  3546     0592                     u5441:
  3547     0592  2D52               	goto	l3602
  3548     0593                     u5440:
  3549     0593                     l3608:
  3550                           
  3551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3552     0593  3003               	movlw	3
  3553     0594  052F               	andwf	sprintf@flag^(0+128),w
  3554     0595  00A5               	movwf	??_sprintf^(0+128)
  3555     0596  3000               	movlw	0
  3556     0597  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3557     0598  00A6               	movwf	(??_sprintf+1)^(0+128)
  3558     0599  0825               	movf	??_sprintf^(0+128),w
  3559     059A  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3560     059B  1903               	btfsc	3,2
  3561     059C  2D9E               	goto	u5451
  3562     059D  2D9F               	goto	u5450
  3563     059E                     u5451:
  3564     059E  2E0D               	goto	l414
  3565     059F                     u5450:
  3566     059F                     l3610:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3569     059F  083B               	movf	sprintf@sp^(0+128),w
  3570     05A0  0084               	movwf	4
  3571     05A1  302D               	movlw	45
  3572     05A2  1383               	bcf	3,7	;select IRP bank0
  3573     05A3  0080               	movwf	0
  3574     05A4                     l3612:
  3575     05A4  3001               	movlw	1
  3576     05A5  00A5               	movwf	??_sprintf^(0+128)
  3577     05A6  0825               	movf	??_sprintf^(0+128),w
  3578     05A7  07BB               	addwf	sprintf@sp^(0+128),f
  3579     05A8  2E0D               	goto	l414
  3580     05A9                     l3614:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3583     05A9  0842               	movf	sprintf@c^(0+128),w
  3584     05AA  00A5               	movwf	??_sprintf^(0+128)
  3585     05AB  3001               	movlw	1
  3586     05AC                     u5465:
  3587     05AC  1003               	clrc
  3588     05AD  0DA5               	rlf	??_sprintf^(0+128),f
  3589     05AE  3EFF               	addlw	-1
  3590     05AF  1D03               	skipz
  3591     05B0  2DAC               	goto	u5465
  3592     05B1  1003               	clrc
  3593     05B2  0D25               	rlf	??_sprintf^(0+128),w
  3594     05B3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3595     05B4  0084               	movwf	4
  3596     05B5  120A  118A  200D  120A  118A  	fcall	stringdir
  3597     05BA  00F0               	movwf	___lldiv@divisor
  3598     05BB  120A  118A  200D  120A  118A  	fcall	stringdir
  3599     05C0  00F1               	movwf	___lldiv@divisor+1
  3600     05C1  120A  118A  200D  120A  118A  	fcall	stringdir
  3601     05C6  00F2               	movwf	___lldiv@divisor+2
  3602     05C7  120A  118A  200D  120A  118A  	fcall	stringdir
  3603     05CC  00F3               	movwf	___lldiv@divisor+3
  3604     05CD  0834               	movf	(sprintf@val+3)^(0+128),w
  3605     05CE  00F7               	movwf	___lldiv@dividend+3
  3606     05CF  0833               	movf	(sprintf@val+2)^(0+128),w
  3607     05D0  00F6               	movwf	___lldiv@dividend+2
  3608     05D1  0832               	movf	(sprintf@val+1)^(0+128),w
  3609     05D2  00F5               	movwf	___lldiv@dividend+1
  3610     05D3  0831               	movf	sprintf@val^(0+128),w
  3611     05D4  00F4               	movwf	___lldiv@dividend
  3612     05D5  160A  158A  26B9  120A  118A  	fcall	___lldiv
  3613     05DA  0873               	movf	?___lldiv+3,w
  3614     05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3615     05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3616     05DD  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3617     05DE  0872               	movf	?___lldiv+2,w
  3618     05DF  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3619     05E0  0871               	movf	?___lldiv+1,w
  3620     05E1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3621     05E2  0870               	movf	?___lldiv,w
  3622     05E3  00B7               	movwf	sprintf@tmpval^(0+128)
  3623     05E4                     l3616:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3626     05E4  3000               	movlw	0
  3627     05E5  00F3               	movwf	___llmod@divisor+3
  3628     05E6  3000               	movlw	0
  3629     05E7  00F2               	movwf	___llmod@divisor+2
  3630     05E8  3000               	movlw	0
  3631     05E9  00F1               	movwf	___llmod@divisor+1
  3632     05EA  300A               	movlw	10
  3633     05EB  00F0               	movwf	___llmod@divisor
  3634     05EC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3635     05ED  00F7               	movwf	___llmod@dividend+3
  3636     05EE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3637     05EF  00F6               	movwf	___llmod@dividend+2
  3638     05F0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3639     05F1  00F5               	movwf	___llmod@dividend+1
  3640     05F2  0837               	movf	sprintf@tmpval^(0+128),w
  3641     05F3  00F4               	movwf	___llmod@dividend
  3642     05F4  160A  158A  25AF  120A  118A  	fcall	___llmod
  3643     05F9  0873               	movf	?___llmod+3,w
  3644     05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3645     05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3646     05FC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3647     05FD  0872               	movf	?___llmod+2,w
  3648     05FE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3649     05FF  0871               	movf	?___llmod+1,w
  3650     0600  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3651     0601  0870               	movf	?___llmod,w
  3652     0602  00B7               	movwf	sprintf@tmpval^(0+128)
  3653     0603                     l3618:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3656     0603  083B               	movf	sprintf@sp^(0+128),w
  3657     0604  0084               	movwf	4
  3658     0605  0837               	movf	sprintf@tmpval^(0+128),w
  3659     0606  3E30               	addlw	48
  3660     0607  1383               	bcf	3,7	;select IRP bank0
  3661     0608  0080               	movwf	0
  3662     0609  3001               	movlw	1
  3663     060A  00A5               	movwf	??_sprintf^(0+128)
  3664     060B  0825               	movf	??_sprintf^(0+128),w
  3665     060C  07BB               	addwf	sprintf@sp^(0+128),f
  3666     060D                     l414:	
  3667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3668                           
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3671     060D  3001               	movlw	1
  3672     060E  02C2               	subwf	sprintf@c^(0+128),f
  3673     060F  0A42               	incf	sprintf@c^(0+128),w
  3674     0610  1D03               	btfss	3,2
  3675     0611  2E13               	goto	u5471
  3676     0612  2E14               	goto	u5470
  3677     0613                     u5471:
  3678     0613  2DA9               	goto	l3614
  3679     0614                     u5470:
  3680     0614  2E26               	goto	l3626
  3681     0615                     l3620:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3684     0615  1683               	bsf	3,5	;RP0=1, select bank1
  3685     0616  1303               	bcf	3,6	;RP1=0, select bank1
  3686     0617  083B               	movf	sprintf@sp^(0+128),w
  3687     0618  0084               	movwf	4
  3688     0619  3030               	movlw	48
  3689     061A  1383               	bcf	3,7	;select IRP bank0
  3690     061B  0080               	movwf	0
  3691     061C                     l3622:
  3692     061C  3001               	movlw	1
  3693     061D  00A5               	movwf	??_sprintf^(0+128)
  3694     061E  0825               	movf	??_sprintf^(0+128),w
  3695     061F  07BB               	addwf	sprintf@sp^(0+128),f
  3696     0620                     l3624:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3699     0620  30FF               	movlw	255
  3700     0621  07B5               	addwf	sprintf@eexp^(0+128),f
  3701     0622  1803               	skipnc
  3702     0623  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3703     0624  30FF               	movlw	255
  3704     0625  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3705     0626                     l3626:
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3708     0626  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3709     0627  3A80               	xorlw	128
  3710     0628  00FF               	movwf	btemp+1
  3711     0629  3080               	movlw	128
  3712     062A  027F               	subwf	btemp+1,w
  3713     062B  1D03               	skipz
  3714     062C  2E2F               	goto	u5485
  3715     062D  3001               	movlw	1
  3716     062E  0235               	subwf	sprintf@eexp^(0+128),w
  3717     062F                     u5485:
  3718     062F  1803               	skipnc
  3719     0630  2E32               	goto	u5481
  3720     0631  2E33               	goto	u5480
  3721     0632                     u5481:
  3722     0632  2E15               	goto	l3620
  3723     0633                     u5480:
  3724     0633                     l3628:
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3727     0633  1683               	bsf	3,5	;RP0=1, select bank1
  3728     0634  1303               	bcf	3,6	;RP1=0, select bank1
  3729     0635  083D               	movf	(sprintf@prec+1)^(0+128),w
  3730     0636  3A80               	xorlw	128
  3731     0637  00FF               	movwf	btemp+1
  3732     0638  3080               	movlw	128
  3733     0639  027F               	subwf	btemp+1,w
  3734     063A  1D03               	skipz
  3735     063B  2E3E               	goto	u5495
  3736     063C  3009               	movlw	9
  3737     063D  023C               	subwf	sprintf@prec^(0+128),w
  3738     063E                     u5495:
  3739     063E  1C03               	skipc
  3740     063F  2E41               	goto	u5491
  3741     0640  2E42               	goto	u5490
  3742     0641                     u5491:
  3743     0641  2E47               	goto	l3632
  3744     0642                     u5490:
  3745     0642                     l3630:
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3748     0642  3008               	movlw	8
  3749     0643  1683               	bsf	3,5	;RP0=1, select bank1
  3750     0644  1303               	bcf	3,6	;RP1=0, select bank1
  3751     0645  00C2               	movwf	sprintf@c^(0+128)
  3752     0646  2E4B               	goto	l421
  3753     0647                     l3632:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3756     0647  1683               	bsf	3,5	;RP0=1, select bank1
  3757     0648  1303               	bcf	3,6	;RP1=0, select bank1
  3758     0649  083C               	movf	sprintf@prec^(0+128),w
  3759     064A  00C2               	movwf	sprintf@c^(0+128)
  3760     064B                     l421:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3763     064B  0842               	movf	sprintf@c^(0+128),w
  3764     064C  00A5               	movwf	??_sprintf^(0+128)
  3765     064D  01A6               	clrf	(??_sprintf^(0+128)+1)
  3766     064E  0825               	movf	??_sprintf^(0+128),w
  3767     064F  02BC               	subwf	sprintf@prec^(0+128),f
  3768     0650  0826               	movf	(??_sprintf+1)^(0+128),w
  3769     0651  1C03               	skipc
  3770     0652  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3771     0653  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3772     0654                     l3634:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3775     0654  0842               	movf	sprintf@c^(0+128),w
  3776     0655  1903               	btfsc	3,2
  3777     0656  2E58               	goto	u5501
  3778     0657  2E59               	goto	u5500
  3779     0658                     u5501:
  3780     0658  2E62               	goto	l3640
  3781     0659                     u5500:
  3782     0659                     l3636:
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3785     0659  083B               	movf	sprintf@sp^(0+128),w
  3786     065A  0084               	movwf	4
  3787     065B  302E               	movlw	46
  3788     065C  1383               	bcf	3,7	;select IRP bank0
  3789     065D  0080               	movwf	0
  3790     065E                     l3638:
  3791     065E  3001               	movlw	1
  3792     065F  00A5               	movwf	??_sprintf^(0+128)
  3793     0660  0825               	movf	??_sprintf^(0+128),w
  3794     0661  07BB               	addwf	sprintf@sp^(0+128),f
  3795     0662                     l3640:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3798     0662  0842               	movf	sprintf@c^(0+128),w
  3799     0663  120A  158A  24A1  120A  118A  	fcall	_scale
  3800     0668  1283               	bcf	3,5	;RP0=0, select bank0
  3801     0669  1303               	bcf	3,6	;RP1=0, select bank0
  3802     066A  0841               	movf	?_scale+3,w
  3803     066B  1683               	bsf	3,5	;RP0=1, select bank1
  3804     066C  1303               	bcf	3,6	;RP1=0, select bank1
  3805     066D  00AD               	movwf	(_sprintf$1369+3)^(0+128)
  3806     066E  1283               	bcf	3,5	;RP0=0, select bank0
  3807     066F  1303               	bcf	3,6	;RP1=0, select bank0
  3808     0670  0840               	movf	?_scale+2,w
  3809     0671  1683               	bsf	3,5	;RP0=1, select bank1
  3810     0672  1303               	bcf	3,6	;RP1=0, select bank1
  3811     0673  00AC               	movwf	(_sprintf$1369+2)^(0+128)
  3812     0674  1283               	bcf	3,5	;RP0=0, select bank0
  3813     0675  1303               	bcf	3,6	;RP1=0, select bank0
  3814     0676  083F               	movf	?_scale+1,w
  3815     0677  1683               	bsf	3,5	;RP0=1, select bank1
  3816     0678  1303               	bcf	3,6	;RP1=0, select bank1
  3817     0679  00AB               	movwf	(_sprintf$1369+1)^(0+128)
  3818     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3819     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3820     067C  083E               	movf	?_scale,w
  3821     067D  1683               	bsf	3,5	;RP0=1, select bank1
  3822     067E  1303               	bcf	3,6	;RP1=0, select bank1
  3823     067F  00AA               	movwf	_sprintf$1369^(0+128)
  3824     0680                     l3642:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3827     0680  082D               	movf	(_sprintf$1369+3)^(0+128),w
  3828     0681  1283               	bcf	3,5	;RP0=0, select bank0
  3829     0682  1303               	bcf	3,6	;RP1=0, select bank0
  3830     0683  00AB               	movwf	___flmul@a+3
  3831     0684  1683               	bsf	3,5	;RP0=1, select bank1
  3832     0685  1303               	bcf	3,6	;RP1=0, select bank1
  3833     0686  082C               	movf	(_sprintf$1369+2)^(0+128),w
  3834     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3835     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3836     0689  00AA               	movwf	___flmul@a+2
  3837     068A  1683               	bsf	3,5	;RP0=1, select bank1
  3838     068B  1303               	bcf	3,6	;RP1=0, select bank1
  3839     068C  082B               	movf	(_sprintf$1369+1)^(0+128),w
  3840     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3841     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3842     068F  00A9               	movwf	___flmul@a+1
  3843     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3844     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3845     0692  082A               	movf	_sprintf$1369^(0+128),w
  3846     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3847     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3848     0695  00A8               	movwf	___flmul@a
  3849     0696  1683               	bsf	3,5	;RP0=1, select bank1
  3850     0697  1303               	bcf	3,6	;RP1=0, select bank1
  3851     0698  0841               	movf	(sprintf@fval+3)^(0+128),w
  3852     0699  1283               	bcf	3,5	;RP0=0, select bank0
  3853     069A  1303               	bcf	3,6	;RP1=0, select bank0
  3854     069B  00A7               	movwf	___flmul@b+3
  3855     069C  1683               	bsf	3,5	;RP0=1, select bank1
  3856     069D  1303               	bcf	3,6	;RP1=0, select bank1
  3857     069E  0840               	movf	(sprintf@fval+2)^(0+128),w
  3858     069F  1283               	bcf	3,5	;RP0=0, select bank0
  3859     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3860     06A1  00A6               	movwf	___flmul@b+2
  3861     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3862     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3863     06A4  083F               	movf	(sprintf@fval+1)^(0+128),w
  3864     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3865     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3866     06A7  00A5               	movwf	___flmul@b+1
  3867     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3868     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3869     06AA  083E               	movf	sprintf@fval^(0+128),w
  3870     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3871     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3872     06AD  00A4               	movwf	___flmul@b
  3873     06AE  120A  158A  215C  120A  118A  	fcall	___flmul
  3874     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3875     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3876     06B5  0827               	movf	?___flmul+3,w
  3877     06B6  00D4               	movwf	___fltol@f1+3
  3878     06B7  0826               	movf	?___flmul+2,w
  3879     06B8  00D3               	movwf	___fltol@f1+2
  3880     06B9  0825               	movf	?___flmul+1,w
  3881     06BA  00D2               	movwf	___fltol@f1+1
  3882     06BB  0824               	movf	?___flmul,w
  3883     06BC  00D1               	movwf	___fltol@f1
  3884     06BD  160A  158A  2788  120A  118A  	fcall	___fltol
  3885     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3886     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3887     06C4  0854               	movf	?___fltol+3,w
  3888     06C5  1683               	bsf	3,5	;RP0=1, select bank1
  3889     06C6  1303               	bcf	3,6	;RP1=0, select bank1
  3890     06C7  00B4               	movwf	(sprintf@val+3)^(0+128)
  3891     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3892     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3893     06CA  0853               	movf	?___fltol+2,w
  3894     06CB  1683               	bsf	3,5	;RP0=1, select bank1
  3895     06CC  1303               	bcf	3,6	;RP1=0, select bank1
  3896     06CD  00B3               	movwf	(sprintf@val+2)^(0+128)
  3897     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3898     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3899     06D0  0852               	movf	?___fltol+1,w
  3900     06D1  1683               	bsf	3,5	;RP0=1, select bank1
  3901     06D2  1303               	bcf	3,6	;RP1=0, select bank1
  3902     06D3  00B2               	movwf	(sprintf@val+1)^(0+128)
  3903     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3904     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3905     06D6  0851               	movf	?___fltol,w
  3906     06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3907     06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3908     06D9  00B1               	movwf	sprintf@val^(0+128)
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3911     06DA  2F7A               	goto	l3652
  3912     06DB                     l3644:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3915     06DB  0842               	movf	sprintf@c^(0+128),w
  3916     06DC  00A5               	movwf	??_sprintf^(0+128)
  3917     06DD  3001               	movlw	1
  3918     06DE                     u5515:
  3919     06DE  1003               	clrc
  3920     06DF  0DA5               	rlf	??_sprintf^(0+128),f
  3921     06E0  3EFF               	addlw	-1
  3922     06E1  1D03               	skipz
  3923     06E2  2EDE               	goto	u5515
  3924     06E3  1003               	clrc
  3925     06E4  0D25               	rlf	??_sprintf^(0+128),w
  3926     06E5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3927     06E6  0084               	movwf	4
  3928     06E7  120A  118A  200D  120A  118A  	fcall	stringdir
  3929     06EC  00F0               	movwf	___lldiv@divisor
  3930     06ED  120A  118A  200D  120A  118A  	fcall	stringdir
  3931     06F2  00F1               	movwf	___lldiv@divisor+1
  3932     06F3  120A  118A  200D  120A  118A  	fcall	stringdir
  3933     06F8  00F2               	movwf	___lldiv@divisor+2
  3934     06F9  120A  118A  200D  120A  118A  	fcall	stringdir
  3935     06FE  00F3               	movwf	___lldiv@divisor+3
  3936     06FF  0834               	movf	(sprintf@val+3)^(0+128),w
  3937     0700  00F7               	movwf	___lldiv@dividend+3
  3938     0701  0833               	movf	(sprintf@val+2)^(0+128),w
  3939     0702  00F6               	movwf	___lldiv@dividend+2
  3940     0703  0832               	movf	(sprintf@val+1)^(0+128),w
  3941     0704  00F5               	movwf	___lldiv@dividend+1
  3942     0705  0831               	movf	sprintf@val^(0+128),w
  3943     0706  00F4               	movwf	___lldiv@dividend
  3944     0707  160A  158A  26B9  120A  118A  	fcall	___lldiv
  3945     070C  0873               	movf	?___lldiv+3,w
  3946     070D  1683               	bsf	3,5	;RP0=1, select bank1
  3947     070E  1303               	bcf	3,6	;RP1=0, select bank1
  3948     070F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3949     0710  0872               	movf	?___lldiv+2,w
  3950     0711  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3951     0712  0871               	movf	?___lldiv+1,w
  3952     0713  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3953     0714  0870               	movf	?___lldiv,w
  3954     0715  00B7               	movwf	sprintf@tmpval^(0+128)
  3955     0716                     l3646:
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3958     0716  3000               	movlw	0
  3959     0717  00F3               	movwf	___llmod@divisor+3
  3960     0718  3000               	movlw	0
  3961     0719  00F2               	movwf	___llmod@divisor+2
  3962     071A  3000               	movlw	0
  3963     071B  00F1               	movwf	___llmod@divisor+1
  3964     071C  300A               	movlw	10
  3965     071D  00F0               	movwf	___llmod@divisor
  3966     071E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3967     071F  00F7               	movwf	___llmod@dividend+3
  3968     0720  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3969     0721  00F6               	movwf	___llmod@dividend+2
  3970     0722  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3971     0723  00F5               	movwf	___llmod@dividend+1
  3972     0724  0837               	movf	sprintf@tmpval^(0+128),w
  3973     0725  00F4               	movwf	___llmod@dividend
  3974     0726  160A  158A  25AF  120A  118A  	fcall	___llmod
  3975     072B  0873               	movf	?___llmod+3,w
  3976     072C  1683               	bsf	3,5	;RP0=1, select bank1
  3977     072D  1303               	bcf	3,6	;RP1=0, select bank1
  3978     072E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3979     072F  0872               	movf	?___llmod+2,w
  3980     0730  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3981     0731  0871               	movf	?___llmod+1,w
  3982     0732  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3983     0733  0870               	movf	?___llmod,w
  3984     0734  00B7               	movwf	sprintf@tmpval^(0+128)
  3985     0735                     l3648:
  3986                           
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3988     0735  083B               	movf	sprintf@sp^(0+128),w
  3989     0736  0084               	movwf	4
  3990     0737  0837               	movf	sprintf@tmpval^(0+128),w
  3991     0738  3E30               	addlw	48
  3992     0739  1383               	bcf	3,7	;select IRP bank0
  3993     073A  0080               	movwf	0
  3994     073B  3001               	movlw	1
  3995     073C  00A5               	movwf	??_sprintf^(0+128)
  3996     073D  0825               	movf	??_sprintf^(0+128),w
  3997     073E  07BB               	addwf	sprintf@sp^(0+128),f
  3998     073F                     l3650:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4001     073F  0842               	movf	sprintf@c^(0+128),w
  4002     0740  00A5               	movwf	??_sprintf^(0+128)
  4003     0741  3001               	movlw	1
  4004     0742                     u5525:
  4005     0742  1003               	clrc
  4006     0743  0DA5               	rlf	??_sprintf^(0+128),f
  4007     0744  3EFF               	addlw	-1
  4008     0745  1D03               	skipz
  4009     0746  2F42               	goto	u5525
  4010     0747  1003               	clrc
  4011     0748  0D25               	rlf	??_sprintf^(0+128),w
  4012     0749  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4013     074A  0084               	movwf	4
  4014     074B  120A  118A  200D  120A  118A  	fcall	stringdir
  4015     0750  00F0               	movwf	___llmod@divisor
  4016     0751  120A  118A  200D  120A  118A  	fcall	stringdir
  4017     0756  00F1               	movwf	___llmod@divisor+1
  4018     0757  120A  118A  200D  120A  118A  	fcall	stringdir
  4019     075C  00F2               	movwf	___llmod@divisor+2
  4020     075D  120A  118A  200D  120A  118A  	fcall	stringdir
  4021     0762  00F3               	movwf	___llmod@divisor+3
  4022     0763  0834               	movf	(sprintf@val+3)^(0+128),w
  4023     0764  00F7               	movwf	___llmod@dividend+3
  4024     0765  0833               	movf	(sprintf@val+2)^(0+128),w
  4025     0766  00F6               	movwf	___llmod@dividend+2
  4026     0767  0832               	movf	(sprintf@val+1)^(0+128),w
  4027     0768  00F5               	movwf	___llmod@dividend+1
  4028     0769  0831               	movf	sprintf@val^(0+128),w
  4029     076A  00F4               	movwf	___llmod@dividend
  4030     076B  160A  158A  25AF  120A  118A  	fcall	___llmod
  4031     0770  0873               	movf	?___llmod+3,w
  4032     0771  1683               	bsf	3,5	;RP0=1, select bank1
  4033     0772  1303               	bcf	3,6	;RP1=0, select bank1
  4034     0773  00B4               	movwf	(sprintf@val+3)^(0+128)
  4035     0774  0872               	movf	?___llmod+2,w
  4036     0775  00B3               	movwf	(sprintf@val+2)^(0+128)
  4037     0776  0871               	movf	?___llmod+1,w
  4038     0777  00B2               	movwf	(sprintf@val+1)^(0+128)
  4039     0778  0870               	movf	?___llmod,w
  4040     0779  00B1               	movwf	sprintf@val^(0+128)
  4041     077A                     l3652:
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4044     077A  3001               	movlw	1
  4045     077B  02C2               	subwf	sprintf@c^(0+128),f
  4046     077C  0A42               	incf	sprintf@c^(0+128),w
  4047     077D  1D03               	btfss	3,2
  4048     077E  2F80               	goto	u5531
  4049     077F  2F81               	goto	u5530
  4050     0780                     u5531:
  4051     0780  2EDB               	goto	l3644
  4052     0781                     u5530:
  4053     0781  2F91               	goto	l3660
  4054     0782                     l3654:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4057     0782  083B               	movf	sprintf@sp^(0+128),w
  4058     0783  0084               	movwf	4
  4059     0784  3030               	movlw	48
  4060     0785  1383               	bcf	3,7	;select IRP bank0
  4061     0786  0080               	movwf	0
  4062     0787                     l3656:
  4063     0787  3001               	movlw	1
  4064     0788  00A5               	movwf	??_sprintf^(0+128)
  4065     0789  0825               	movf	??_sprintf^(0+128),w
  4066     078A  07BB               	addwf	sprintf@sp^(0+128),f
  4067     078B                     l3658:
  4068                           
  4069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4070     078B  30FF               	movlw	255
  4071     078C  07BC               	addwf	sprintf@prec^(0+128),f
  4072     078D  1803               	skipnc
  4073     078E  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4074     078F  30FF               	movlw	255
  4075     0790  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4076     0791                     l3660:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4079     0791  083C               	movf	sprintf@prec^(0+128),w
  4080     0792  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  4081     0793  1D03               	btfss	3,2
  4082     0794  2F96               	goto	u5541
  4083     0795  2F97               	goto	u5540
  4084     0796                     u5541:
  4085     0796  2F82               	goto	l3654
  4086     0797                     u5540:
  4087     0797  2FDB               	goto	l3680
  4088     0798                     l3662:
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4091     0798  083C               	movf	sprintf@prec^(0+128),w
  4092     0799  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  4093     079A  1D03               	btfss	3,2
  4094     079B  2F9D               	goto	u5551
  4095     079C  2F9E               	goto	u5550
  4096     079D                     u5551:
  4097     079D  2FAC               	goto	l429
  4098     079E                     u5550:
  4099     079E                     l3664:
  4100     079E  0834               	movf	(sprintf@val+3)^(0+128),w
  4101     079F  0433               	iorwf	(sprintf@val+2)^(0+128),w
  4102     07A0  0432               	iorwf	(sprintf@val+1)^(0+128),w
  4103     07A1  0431               	iorwf	sprintf@val^(0+128),w
  4104     07A2  1D03               	skipz
  4105     07A3  2FA5               	goto	u5561
  4106     07A4  2FA6               	goto	u5560
  4107     07A5                     u5561:
  4108     07A5  2FAC               	goto	l429
  4109     07A6                     u5560:
  4110     07A6                     l3666:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4113     07A6  3001               	movlw	1
  4114     07A7  07BC               	addwf	sprintf@prec^(0+128),f
  4115     07A8  1803               	skipnc
  4116     07A9  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4117     07AA  3000               	movlw	0
  4118     07AB  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4119     07AC                     l429:
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4122     07AC  083D               	movf	(sprintf@prec+1)^(0+128),w
  4123     07AD  3A80               	xorlw	128
  4124     07AE  3C80               	sublw	128
  4125     07AF  1D03               	skipz
  4126     07B0  2FB3               	goto	u5575
  4127     07B1  083C               	movf	sprintf@prec^(0+128),w
  4128     07B2  0242               	subwf	sprintf@c^(0+128),w
  4129     07B3                     u5575:
  4130     07B3  1803               	skipnc
  4131     07B4  2FB6               	goto	u5571
  4132     07B5  2FB7               	goto	u5570
  4133     07B6                     u5571:
  4134     07B6  2FB8               	goto	l3670
  4135     07B7                     u5570:
  4136     07B7                     l3668:
  4137     07B7  2FC7               	goto	l3674
  4138     07B8                     l3670:
  4139     07B8  1683               	bsf	3,5	;RP0=1, select bank1
  4140     07B9  1303               	bcf	3,6	;RP1=0, select bank1
  4141     07BA  083D               	movf	(sprintf@prec+1)^(0+128),w
  4142     07BB  3A80               	xorlw	128
  4143     07BC  00A5               	movwf	??_sprintf^(0+128)
  4144     07BD  3080               	movlw	128
  4145     07BE  0225               	subwf	??_sprintf^(0+128),w
  4146     07BF  1D03               	skipz
  4147     07C0  2FC3               	goto	u5585
  4148     07C1  0842               	movf	sprintf@c^(0+128),w
  4149     07C2  023C               	subwf	sprintf@prec^(0+128),w
  4150     07C3                     u5585:
  4151     07C3  1803               	skipnc
  4152     07C4  2FC6               	goto	u5581
  4153     07C5  2FC7               	goto	u5580
  4154     07C6                     u5581:
  4155     07C6  2FC7               	goto	l3674
  4156     07C7                     u5580:
  4157     07C7                     l3672:
  4158     07C7                     l3674:
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4161     07C7  3003               	movlw	3
  4162     07C8  1683               	bsf	3,5	;RP0=1, select bank1
  4163     07C9  1303               	bcf	3,6	;RP1=0, select bank1
  4164     07CA  052F               	andwf	sprintf@flag^(0+128),w
  4165     07CB  00A5               	movwf	??_sprintf^(0+128)
  4166     07CC  3000               	movlw	0
  4167     07CD  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4168     07CE  00A6               	movwf	(??_sprintf+1)^(0+128)
  4169     07CF  0825               	movf	??_sprintf^(0+128),w
  4170     07D0  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4171     07D1  1903               	btfsc	3,2
  4172     07D2  2FD4               	goto	u5591
  4173     07D3  2FD5               	goto	u5590
  4174     07D4                     u5591:
  4175     07D4  2FDB               	goto	l3680
  4176     07D5                     u5590:
  4177     07D5                     l3676:
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4180     07D5  083B               	movf	sprintf@sp^(0+128),w
  4181     07D6  0084               	movwf	4
  4182     07D7  302D               	movlw	45
  4183     07D8  1383               	bcf	3,7	;select IRP bank0
  4184     07D9  0080               	movwf	0
  4185     07DA  29C1               	goto	l3492
  4186     07DB                     l3680:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4189     07DB  3001               	movlw	1
  4190     07DC  07A0               	addwf	sprintf@f^(0+128),f
  4191     07DD  30FF               	movlw	-1
  4192     07DE  0720               	addwf	sprintf@f^(0+128),w
  4193     07DF  0084               	movwf	4
  4194     07E0  120A  118A  200D  120A  118A  	fcall	stringdir
  4195     07E5  00C2               	movwf	sprintf@c^(0+128)
  4196     07E6  0842               	movf	sprintf@c^(0+128),w
  4197     07E7  1D03               	btfss	3,2
  4198     07E8  2FEA               	goto	u5601
  4199     07E9  2FEB               	goto	u5600
  4200     07EA                     u5601:
  4201     07EA  29B6               	goto	l3488
  4202     07EB                     u5600:
  4203     07EB                     l3682:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4206     07EB  083B               	movf	sprintf@sp^(0+128),w
  4207     07EC  0084               	movwf	4
  4208     07ED  1383               	bcf	3,7	;select IRP bank0
  4209     07EE  0180               	clrf	0
  4210     07EF                     l435:
  4211     07EF  0008               	return
  4212     07F0                     __end_of_sprintf:
  4213                           
  4214                           	psect	text2
  4215     0CA1                     __ptext2:	
  4216 ;; *************** function _scale *****************
  4217 ;; Defined at:
  4218 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  scl             1    wreg     char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  scl             1   48[BANK0 ] char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  4   30[BANK0 ] char 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         0       4       0       0       0
  4233 ;;      Locals:         0       5       0       0       0
  4234 ;;      Temps:          0      10       0       0       0
  4235 ;;      Totals:         0      19       0       0       0
  4236 ;;Total ram usage:       19 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 2
  4239 ;; This function calls:
  4240 ;;		___awdiv
  4241 ;;		___awmod
  4242 ;;		___flmul
  4243 ;; This function is called by:
  4244 ;;		_sprintf
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248     0CA1                     _scale:	
  4249                           ;psect for function _scale
  4250                           
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4254                           ;scale@scl stored from wreg
  4255     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4256     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4257     0CA3  00D0               	movwf	scale@scl
  4258     0CA4                     l3048:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4261     0CA4  1FD0               	btfss	scale@scl,7
  4262     0CA5  2CA7               	goto	u4271
  4263     0CA6  2CA8               	goto	u4270
  4264     0CA7                     u4271:
  4265     0CA7  2E55               	goto	l3070
  4266     0CA8                     u4270:
  4267     0CA8                     l3050:
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4270     0CA8  09D0               	comf	scale@scl,f
  4271     0CA9  0AD0               	incf	scale@scl,f
  4272     0CAA                     l3052:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4275     0CAA  0850               	movf	scale@scl,w
  4276     0CAB  3A80               	xorlw	128
  4277     0CAC  3E12               	addlw	-238
  4278     0CAD  1C03               	skipc
  4279     0CAE  2CB0               	goto	u4281
  4280     0CAF  2CB1               	goto	u4280
  4281     0CB0                     u4281:
  4282     0CB0  2D99               	goto	l3060
  4283     0CB1                     u4280:
  4284     0CB1                     l3054:
  4285                           
  4286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4287     0CB1  300A               	movlw	10
  4288     0CB2  00F7               	movwf	___awdiv@divisor
  4289     0CB3  3000               	movlw	0
  4290     0CB4  00F8               	movwf	___awdiv@divisor+1
  4291     0CB5  0850               	movf	scale@scl,w
  4292     0CB6  00F2               	movwf	___awmod@dividend
  4293     0CB7  01F3               	clrf	___awmod@dividend+1
  4294     0CB8  1BF2               	btfsc	___awmod@dividend,7
  4295     0CB9  03F3               	decf	___awmod@dividend+1,f
  4296     0CBA  3064               	movlw	100
  4297     0CBB  00F0               	movwf	___awmod@divisor
  4298     0CBC  3000               	movlw	0
  4299     0CBD  00F1               	movwf	___awmod@divisor+1
  4300     0CBE  160A  158A  2603  120A  158A  	fcall	___awmod
  4301     0CC3  0871               	movf	?___awmod+1,w
  4302     0CC4  00FA               	movwf	___awdiv@dividend+1
  4303     0CC5  0870               	movf	?___awmod,w
  4304     0CC6  00F9               	movwf	___awdiv@dividend
  4305     0CC7  160A  158A  271F  120A  158A  	fcall	___awdiv
  4306     0CCC  0877               	movf	?___awdiv,w
  4307     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4308     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4309     0CCF  00C2               	movwf	??_scale
  4310     0CD0  3001               	movlw	1
  4311     0CD1                     u4295:
  4312     0CD1  1003               	clrc
  4313     0CD2  0DC2               	rlf	??_scale,f
  4314     0CD3  3EFF               	addlw	-1
  4315     0CD4  1D03               	skipz
  4316     0CD5  2CD1               	goto	u4295
  4317     0CD6  1003               	clrc
  4318     0CD7  0D42               	rlf	??_scale,w
  4319     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4320     0CD9  0084               	movwf	4
  4321     0CDA  120A  118A  200D  120A  158A  	fcall	stringdir
  4322     0CDF  00C3               	movwf	??_scale+1
  4323     0CE0  120A  118A  200D  120A  158A  	fcall	stringdir
  4324     0CE5  00C4               	movwf	??_scale+2
  4325     0CE6  120A  118A  200D  120A  158A  	fcall	stringdir
  4326     0CEB  00C5               	movwf	??_scale+3
  4327     0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  4328     0CF1  00C6               	movwf	??_scale+4
  4329     0CF2  0846               	movf	??_scale+4,w
  4330     0CF3  00A7               	movwf	___flmul@b+3
  4331     0CF4  0845               	movf	??_scale+3,w
  4332     0CF5  00A6               	movwf	___flmul@b+2
  4333     0CF6  0844               	movf	??_scale+2,w
  4334     0CF7  00A5               	movwf	___flmul@b+1
  4335     0CF8  0843               	movf	??_scale+1,w
  4336     0CF9  00A4               	movwf	___flmul@b
  4337     0CFA  3064               	movlw	100
  4338     0CFB  00F7               	movwf	___awdiv@divisor
  4339     0CFC  3000               	movlw	0
  4340     0CFD  00F8               	movwf	___awdiv@divisor+1
  4341     0CFE  0850               	movf	scale@scl,w
  4342     0CFF  00F9               	movwf	___awdiv@dividend
  4343     0D00  01FA               	clrf	___awdiv@dividend+1
  4344     0D01  1BF9               	btfsc	___awdiv@dividend,7
  4345     0D02  03FA               	decf	___awdiv@dividend+1,f
  4346     0D03  160A  158A  271F  120A  158A  	fcall	___awdiv
  4347     0D08  0877               	movf	?___awdiv,w
  4348     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4349     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4350     0D0B  00C7               	movwf	??_scale+5
  4351     0D0C  3001               	movlw	1
  4352     0D0D                     u4305:
  4353     0D0D  1003               	clrc
  4354     0D0E  0DC7               	rlf	??_scale+5,f
  4355     0D0F  3EFF               	addlw	-1
  4356     0D10  1D03               	skipz
  4357     0D11  2D0D               	goto	u4305
  4358     0D12  1003               	clrc
  4359     0D13  0D47               	rlf	??_scale+5,w
  4360     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4361     0D15  0084               	movwf	4
  4362     0D16  120A  118A  200D  120A  158A  	fcall	stringdir
  4363     0D1B  00C8               	movwf	??_scale+6
  4364     0D1C  120A  118A  200D  120A  158A  	fcall	stringdir
  4365     0D21  00C9               	movwf	??_scale+7
  4366     0D22  120A  118A  200D  120A  158A  	fcall	stringdir
  4367     0D27  00CA               	movwf	??_scale+8
  4368     0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  4369     0D2D  00CB               	movwf	??_scale+9
  4370     0D2E  084B               	movf	??_scale+9,w
  4371     0D2F  00AB               	movwf	___flmul@a+3
  4372     0D30  084A               	movf	??_scale+8,w
  4373     0D31  00AA               	movwf	___flmul@a+2
  4374     0D32  0849               	movf	??_scale+7,w
  4375     0D33  00A9               	movwf	___flmul@a+1
  4376     0D34  0848               	movf	??_scale+6,w
  4377     0D35  00A8               	movwf	___flmul@a
  4378     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4379     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4380     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4381     0D3D  0827               	movf	?___flmul+3,w
  4382     0D3E  00CF               	movwf	_scale$1368+3
  4383     0D3F  0826               	movf	?___flmul+2,w
  4384     0D40  00CE               	movwf	_scale$1368+2
  4385     0D41  0825               	movf	?___flmul+1,w
  4386     0D42  00CD               	movwf	_scale$1368+1
  4387     0D43  0824               	movf	?___flmul,w
  4388     0D44  00CC               	movwf	_scale$1368
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4391     0D45  300A               	movlw	10
  4392     0D46  00F0               	movwf	___awmod@divisor
  4393     0D47  3000               	movlw	0
  4394     0D48  00F1               	movwf	___awmod@divisor+1
  4395     0D49  0850               	movf	scale@scl,w
  4396     0D4A  00F2               	movwf	___awmod@dividend
  4397     0D4B  01F3               	clrf	___awmod@dividend+1
  4398     0D4C  1BF2               	btfsc	___awmod@dividend,7
  4399     0D4D  03F3               	decf	___awmod@dividend+1,f
  4400     0D4E  160A  158A  2603  120A  158A  	fcall	___awmod
  4401     0D53  0870               	movf	?___awmod,w
  4402     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4403     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4404     0D56  00C2               	movwf	??_scale
  4405     0D57  3001               	movlw	1
  4406     0D58                     u4315:
  4407     0D58  1003               	clrc
  4408     0D59  0DC2               	rlf	??_scale,f
  4409     0D5A  3EFF               	addlw	-1
  4410     0D5B  1D03               	skipz
  4411     0D5C  2D58               	goto	u4315
  4412     0D5D  1003               	clrc
  4413     0D5E  0D42               	rlf	??_scale,w
  4414     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4415     0D60  0084               	movwf	4
  4416     0D61  120A  118A  200D  120A  158A  	fcall	stringdir
  4417     0D66  00C3               	movwf	??_scale+1
  4418     0D67  120A  118A  200D  120A  158A  	fcall	stringdir
  4419     0D6C  00C4               	movwf	??_scale+2
  4420     0D6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4421     0D72  00C5               	movwf	??_scale+3
  4422     0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  4423     0D78  00C6               	movwf	??_scale+4
  4424     0D79  0846               	movf	??_scale+4,w
  4425     0D7A  00A7               	movwf	___flmul@b+3
  4426     0D7B  0845               	movf	??_scale+3,w
  4427     0D7C  00A6               	movwf	___flmul@b+2
  4428     0D7D  0844               	movf	??_scale+2,w
  4429     0D7E  00A5               	movwf	___flmul@b+1
  4430     0D7F  0843               	movf	??_scale+1,w
  4431     0D80  00A4               	movwf	___flmul@b
  4432     0D81  084F               	movf	_scale$1368+3,w
  4433     0D82  00AB               	movwf	___flmul@a+3
  4434     0D83  084E               	movf	_scale$1368+2,w
  4435     0D84  00AA               	movwf	___flmul@a+2
  4436     0D85  084D               	movf	_scale$1368+1,w
  4437     0D86  00A9               	movwf	___flmul@a+1
  4438     0D87  084C               	movf	_scale$1368,w
  4439     0D88  00A8               	movwf	___flmul@a
  4440     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4441     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4442     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4443     0D90  0827               	movf	?___flmul+3,w
  4444     0D91  00C1               	movwf	?_scale+3
  4445     0D92  0826               	movf	?___flmul+2,w
  4446     0D93  00C0               	movwf	?_scale+2
  4447     0D94  0825               	movf	?___flmul+1,w
  4448     0D95  00BF               	movwf	?_scale+1
  4449     0D96  0824               	movf	?___flmul,w
  4450     0D97  00BE               	movwf	?_scale
  4451     0D98  2FFF               	goto	l369
  4452     0D99                     l3060:
  4453     0D99  0850               	movf	scale@scl,w
  4454     0D9A  3A80               	xorlw	128
  4455     0D9B  3E75               	addlw	-139
  4456     0D9C  1C03               	skipc
  4457     0D9D  2D9F               	goto	u4321
  4458     0D9E  2DA0               	goto	u4320
  4459     0D9F                     u4321:
  4460     0D9F  2E28               	goto	l3066
  4461     0DA0                     u4320:
  4462     0DA0                     l3062:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4465     0DA0  300A               	movlw	10
  4466     0DA1  00F0               	movwf	___awmod@divisor
  4467     0DA2  3000               	movlw	0
  4468     0DA3  00F1               	movwf	___awmod@divisor+1
  4469     0DA4  0850               	movf	scale@scl,w
  4470     0DA5  00F2               	movwf	___awmod@dividend
  4471     0DA6  01F3               	clrf	___awmod@dividend+1
  4472     0DA7  1BF2               	btfsc	___awmod@dividend,7
  4473     0DA8  03F3               	decf	___awmod@dividend+1,f
  4474     0DA9  160A  158A  2603  120A  158A  	fcall	___awmod
  4475     0DAE  0870               	movf	?___awmod,w
  4476     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4477     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4478     0DB1  00C2               	movwf	??_scale
  4479     0DB2  3001               	movlw	1
  4480     0DB3                     u4335:
  4481     0DB3  1003               	clrc
  4482     0DB4  0DC2               	rlf	??_scale,f
  4483     0DB5  3EFF               	addlw	-1
  4484     0DB6  1D03               	skipz
  4485     0DB7  2DB3               	goto	u4335
  4486     0DB8  1003               	clrc
  4487     0DB9  0D42               	rlf	??_scale,w
  4488     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4489     0DBB  0084               	movwf	4
  4490     0DBC  120A  118A  200D  120A  158A  	fcall	stringdir
  4491     0DC1  00C3               	movwf	??_scale+1
  4492     0DC2  120A  118A  200D  120A  158A  	fcall	stringdir
  4493     0DC7  00C4               	movwf	??_scale+2
  4494     0DC8  120A  118A  200D  120A  158A  	fcall	stringdir
  4495     0DCD  00C5               	movwf	??_scale+3
  4496     0DCE  120A  118A  200D  120A  158A  	fcall	stringdir
  4497     0DD3  00C6               	movwf	??_scale+4
  4498     0DD4  0846               	movf	??_scale+4,w
  4499     0DD5  00A7               	movwf	___flmul@b+3
  4500     0DD6  0845               	movf	??_scale+3,w
  4501     0DD7  00A6               	movwf	___flmul@b+2
  4502     0DD8  0844               	movf	??_scale+2,w
  4503     0DD9  00A5               	movwf	___flmul@b+1
  4504     0DDA  0843               	movf	??_scale+1,w
  4505     0DDB  00A4               	movwf	___flmul@b
  4506     0DDC  300A               	movlw	10
  4507     0DDD  00F7               	movwf	___awdiv@divisor
  4508     0DDE  3000               	movlw	0
  4509     0DDF  00F8               	movwf	___awdiv@divisor+1
  4510     0DE0  0850               	movf	scale@scl,w
  4511     0DE1  00F9               	movwf	___awdiv@dividend
  4512     0DE2  01FA               	clrf	___awdiv@dividend+1
  4513     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  4514     0DE4  03FA               	decf	___awdiv@dividend+1,f
  4515     0DE5  160A  158A  271F  120A  158A  	fcall	___awdiv
  4516     0DEA  0877               	movf	?___awdiv,w
  4517     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4518     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4519     0DED  00C7               	movwf	??_scale+5
  4520     0DEE  3001               	movlw	1
  4521     0DEF                     u4345:
  4522     0DEF  1003               	clrc
  4523     0DF0  0DC7               	rlf	??_scale+5,f
  4524     0DF1  3EFF               	addlw	-1
  4525     0DF2  1D03               	skipz
  4526     0DF3  2DEF               	goto	u4345
  4527     0DF4  1003               	clrc
  4528     0DF5  0D47               	rlf	??_scale+5,w
  4529     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4530     0DF7  0084               	movwf	4
  4531     0DF8  120A  118A  200D  120A  158A  	fcall	stringdir
  4532     0DFD  00C8               	movwf	??_scale+6
  4533     0DFE  120A  118A  200D  120A  158A  	fcall	stringdir
  4534     0E03  00C9               	movwf	??_scale+7
  4535     0E04  120A  118A  200D  120A  158A  	fcall	stringdir
  4536     0E09  00CA               	movwf	??_scale+8
  4537     0E0A  120A  118A  200D  120A  158A  	fcall	stringdir
  4538     0E0F  00CB               	movwf	??_scale+9
  4539     0E10  084B               	movf	??_scale+9,w
  4540     0E11  00AB               	movwf	___flmul@a+3
  4541     0E12  084A               	movf	??_scale+8,w
  4542     0E13  00AA               	movwf	___flmul@a+2
  4543     0E14  0849               	movf	??_scale+7,w
  4544     0E15  00A9               	movwf	___flmul@a+1
  4545     0E16  0848               	movf	??_scale+6,w
  4546     0E17  00A8               	movwf	___flmul@a
  4547     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4548     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4549     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4550     0E1F  0827               	movf	?___flmul+3,w
  4551     0E20  00C1               	movwf	?_scale+3
  4552     0E21  0826               	movf	?___flmul+2,w
  4553     0E22  00C0               	movwf	?_scale+2
  4554     0E23  0825               	movf	?___flmul+1,w
  4555     0E24  00BF               	movwf	?_scale+1
  4556     0E25  0824               	movf	?___flmul,w
  4557     0E26  00BE               	movwf	?_scale
  4558     0E27  2FFF               	goto	l369
  4559     0E28                     l3066:
  4560                           
  4561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4562     0E28  0850               	movf	scale@scl,w
  4563     0E29  00C2               	movwf	??_scale
  4564     0E2A  3001               	movlw	1
  4565     0E2B                     u4355:
  4566     0E2B  1003               	clrc
  4567     0E2C  0DC2               	rlf	??_scale,f
  4568     0E2D  3EFF               	addlw	-1
  4569     0E2E  1D03               	skipz
  4570     0E2F  2E2B               	goto	u4355
  4571     0E30  1003               	clrc
  4572     0E31  0D42               	rlf	??_scale,w
  4573     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4574     0E33  0084               	movwf	4
  4575     0E34  120A  118A  200D  120A  158A  	fcall	stringdir
  4576     0E39  00C3               	movwf	??_scale+1
  4577     0E3A  120A  118A  200D  120A  158A  	fcall	stringdir
  4578     0E3F  00C4               	movwf	??_scale+2
  4579     0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  4580     0E45  00C5               	movwf	??_scale+3
  4581     0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  4582     0E4B  00C6               	movwf	??_scale+4
  4583     0E4C  0846               	movf	??_scale+4,w
  4584     0E4D  00C1               	movwf	?_scale+3
  4585     0E4E  0845               	movf	??_scale+3,w
  4586     0E4F  00C0               	movwf	?_scale+2
  4587     0E50  0844               	movf	??_scale+2,w
  4588     0E51  00BF               	movwf	?_scale+1
  4589     0E52  0843               	movf	??_scale+1,w
  4590     0E53  00BE               	movwf	?_scale
  4591     0E54  2FFF               	goto	l369
  4592     0E55                     l3070:
  4593                           
  4594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4595     0E55  0850               	movf	scale@scl,w
  4596     0E56  3A80               	xorlw	128
  4597     0E57  3E12               	addlw	-238
  4598     0E58  1C03               	skipc
  4599     0E59  2E5B               	goto	u4361
  4600     0E5A  2E5C               	goto	u4360
  4601     0E5B                     u4361:
  4602     0E5B  2F44               	goto	l3078
  4603     0E5C                     u4360:
  4604     0E5C                     l3072:
  4605                           
  4606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4607     0E5C  300A               	movlw	10
  4608     0E5D  00F7               	movwf	___awdiv@divisor
  4609     0E5E  3000               	movlw	0
  4610     0E5F  00F8               	movwf	___awdiv@divisor+1
  4611     0E60  0850               	movf	scale@scl,w
  4612     0E61  00F2               	movwf	___awmod@dividend
  4613     0E62  01F3               	clrf	___awmod@dividend+1
  4614     0E63  1BF2               	btfsc	___awmod@dividend,7
  4615     0E64  03F3               	decf	___awmod@dividend+1,f
  4616     0E65  3064               	movlw	100
  4617     0E66  00F0               	movwf	___awmod@divisor
  4618     0E67  3000               	movlw	0
  4619     0E68  00F1               	movwf	___awmod@divisor+1
  4620     0E69  160A  158A  2603  120A  158A  	fcall	___awmod
  4621     0E6E  0871               	movf	?___awmod+1,w
  4622     0E6F  00FA               	movwf	___awdiv@dividend+1
  4623     0E70  0870               	movf	?___awmod,w
  4624     0E71  00F9               	movwf	___awdiv@dividend
  4625     0E72  160A  158A  271F  120A  158A  	fcall	___awdiv
  4626     0E77  0877               	movf	?___awdiv,w
  4627     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4628     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4629     0E7A  00C2               	movwf	??_scale
  4630     0E7B  3001               	movlw	1
  4631     0E7C                     u4375:
  4632     0E7C  1003               	clrc
  4633     0E7D  0DC2               	rlf	??_scale,f
  4634     0E7E  3EFF               	addlw	-1
  4635     0E7F  1D03               	skipz
  4636     0E80  2E7C               	goto	u4375
  4637     0E81  1003               	clrc
  4638     0E82  0D42               	rlf	??_scale,w
  4639     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4640     0E84  0084               	movwf	4
  4641     0E85  120A  118A  200D  120A  158A  	fcall	stringdir
  4642     0E8A  00C3               	movwf	??_scale+1
  4643     0E8B  120A  118A  200D  120A  158A  	fcall	stringdir
  4644     0E90  00C4               	movwf	??_scale+2
  4645     0E91  120A  118A  200D  120A  158A  	fcall	stringdir
  4646     0E96  00C5               	movwf	??_scale+3
  4647     0E97  120A  118A  200D  120A  158A  	fcall	stringdir
  4648     0E9C  00C6               	movwf	??_scale+4
  4649     0E9D  0846               	movf	??_scale+4,w
  4650     0E9E  00A7               	movwf	___flmul@b+3
  4651     0E9F  0845               	movf	??_scale+3,w
  4652     0EA0  00A6               	movwf	___flmul@b+2
  4653     0EA1  0844               	movf	??_scale+2,w
  4654     0EA2  00A5               	movwf	___flmul@b+1
  4655     0EA3  0843               	movf	??_scale+1,w
  4656     0EA4  00A4               	movwf	___flmul@b
  4657     0EA5  3064               	movlw	100
  4658     0EA6  00F7               	movwf	___awdiv@divisor
  4659     0EA7  3000               	movlw	0
  4660     0EA8  00F8               	movwf	___awdiv@divisor+1
  4661     0EA9  0850               	movf	scale@scl,w
  4662     0EAA  00F9               	movwf	___awdiv@dividend
  4663     0EAB  01FA               	clrf	___awdiv@dividend+1
  4664     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4665     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4666     0EAE  160A  158A  271F  120A  158A  	fcall	___awdiv
  4667     0EB3  0877               	movf	?___awdiv,w
  4668     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4669     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4670     0EB6  00C7               	movwf	??_scale+5
  4671     0EB7  3001               	movlw	1
  4672     0EB8                     u4385:
  4673     0EB8  1003               	clrc
  4674     0EB9  0DC7               	rlf	??_scale+5,f
  4675     0EBA  3EFF               	addlw	-1
  4676     0EBB  1D03               	skipz
  4677     0EBC  2EB8               	goto	u4385
  4678     0EBD  1003               	clrc
  4679     0EBE  0D47               	rlf	??_scale+5,w
  4680     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4681     0EC0  0084               	movwf	4
  4682     0EC1  120A  118A  200D  120A  158A  	fcall	stringdir
  4683     0EC6  00C8               	movwf	??_scale+6
  4684     0EC7  120A  118A  200D  120A  158A  	fcall	stringdir
  4685     0ECC  00C9               	movwf	??_scale+7
  4686     0ECD  120A  118A  200D  120A  158A  	fcall	stringdir
  4687     0ED2  00CA               	movwf	??_scale+8
  4688     0ED3  120A  118A  200D  120A  158A  	fcall	stringdir
  4689     0ED8  00CB               	movwf	??_scale+9
  4690     0ED9  084B               	movf	??_scale+9,w
  4691     0EDA  00AB               	movwf	___flmul@a+3
  4692     0EDB  084A               	movf	??_scale+8,w
  4693     0EDC  00AA               	movwf	___flmul@a+2
  4694     0EDD  0849               	movf	??_scale+7,w
  4695     0EDE  00A9               	movwf	___flmul@a+1
  4696     0EDF  0848               	movf	??_scale+6,w
  4697     0EE0  00A8               	movwf	___flmul@a
  4698     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4699     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4700     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4701     0EE8  0827               	movf	?___flmul+3,w
  4702     0EE9  00CF               	movwf	_scale$1368+3
  4703     0EEA  0826               	movf	?___flmul+2,w
  4704     0EEB  00CE               	movwf	_scale$1368+2
  4705     0EEC  0825               	movf	?___flmul+1,w
  4706     0EED  00CD               	movwf	_scale$1368+1
  4707     0EEE  0824               	movf	?___flmul,w
  4708     0EEF  00CC               	movwf	_scale$1368
  4709                           
  4710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4711     0EF0  300A               	movlw	10
  4712     0EF1  00F0               	movwf	___awmod@divisor
  4713     0EF2  3000               	movlw	0
  4714     0EF3  00F1               	movwf	___awmod@divisor+1
  4715     0EF4  0850               	movf	scale@scl,w
  4716     0EF5  00F2               	movwf	___awmod@dividend
  4717     0EF6  01F3               	clrf	___awmod@dividend+1
  4718     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4719     0EF8  03F3               	decf	___awmod@dividend+1,f
  4720     0EF9  160A  158A  2603  120A  158A  	fcall	___awmod
  4721     0EFE  0870               	movf	?___awmod,w
  4722     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4723     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4724     0F01  00C2               	movwf	??_scale
  4725     0F02  3001               	movlw	1
  4726     0F03                     u4395:
  4727     0F03  1003               	clrc
  4728     0F04  0DC2               	rlf	??_scale,f
  4729     0F05  3EFF               	addlw	-1
  4730     0F06  1D03               	skipz
  4731     0F07  2F03               	goto	u4395
  4732     0F08  1003               	clrc
  4733     0F09  0D42               	rlf	??_scale,w
  4734     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4735     0F0B  0084               	movwf	4
  4736     0F0C  120A  118A  200D  120A  158A  	fcall	stringdir
  4737     0F11  00C3               	movwf	??_scale+1
  4738     0F12  120A  118A  200D  120A  158A  	fcall	stringdir
  4739     0F17  00C4               	movwf	??_scale+2
  4740     0F18  120A  118A  200D  120A  158A  	fcall	stringdir
  4741     0F1D  00C5               	movwf	??_scale+3
  4742     0F1E  120A  118A  200D  120A  158A  	fcall	stringdir
  4743     0F23  00C6               	movwf	??_scale+4
  4744     0F24  0846               	movf	??_scale+4,w
  4745     0F25  00A7               	movwf	___flmul@b+3
  4746     0F26  0845               	movf	??_scale+3,w
  4747     0F27  00A6               	movwf	___flmul@b+2
  4748     0F28  0844               	movf	??_scale+2,w
  4749     0F29  00A5               	movwf	___flmul@b+1
  4750     0F2A  0843               	movf	??_scale+1,w
  4751     0F2B  00A4               	movwf	___flmul@b
  4752     0F2C  084F               	movf	_scale$1368+3,w
  4753     0F2D  00AB               	movwf	___flmul@a+3
  4754     0F2E  084E               	movf	_scale$1368+2,w
  4755     0F2F  00AA               	movwf	___flmul@a+2
  4756     0F30  084D               	movf	_scale$1368+1,w
  4757     0F31  00A9               	movwf	___flmul@a+1
  4758     0F32  084C               	movf	_scale$1368,w
  4759     0F33  00A8               	movwf	___flmul@a
  4760     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4761     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4762     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4763     0F3B  0827               	movf	?___flmul+3,w
  4764     0F3C  00C1               	movwf	?_scale+3
  4765     0F3D  0826               	movf	?___flmul+2,w
  4766     0F3E  00C0               	movwf	?_scale+2
  4767     0F3F  0825               	movf	?___flmul+1,w
  4768     0F40  00BF               	movwf	?_scale+1
  4769     0F41  0824               	movf	?___flmul,w
  4770     0F42  00BE               	movwf	?_scale
  4771     0F43  2FFF               	goto	l369
  4772     0F44                     l3078:
  4773     0F44  0850               	movf	scale@scl,w
  4774     0F45  3A80               	xorlw	128
  4775     0F46  3E75               	addlw	-139
  4776     0F47  1C03               	skipc
  4777     0F48  2F4A               	goto	u4401
  4778     0F49  2F4B               	goto	u4400
  4779     0F4A                     u4401:
  4780     0F4A  2FD3               	goto	l3084
  4781     0F4B                     u4400:
  4782     0F4B                     l3080:
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4785     0F4B  300A               	movlw	10
  4786     0F4C  00F0               	movwf	___awmod@divisor
  4787     0F4D  3000               	movlw	0
  4788     0F4E  00F1               	movwf	___awmod@divisor+1
  4789     0F4F  0850               	movf	scale@scl,w
  4790     0F50  00F2               	movwf	___awmod@dividend
  4791     0F51  01F3               	clrf	___awmod@dividend+1
  4792     0F52  1BF2               	btfsc	___awmod@dividend,7
  4793     0F53  03F3               	decf	___awmod@dividend+1,f
  4794     0F54  160A  158A  2603  120A  158A  	fcall	___awmod
  4795     0F59  0870               	movf	?___awmod,w
  4796     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4797     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4798     0F5C  00C2               	movwf	??_scale
  4799     0F5D  3001               	movlw	1
  4800     0F5E                     u4415:
  4801     0F5E  1003               	clrc
  4802     0F5F  0DC2               	rlf	??_scale,f
  4803     0F60  3EFF               	addlw	-1
  4804     0F61  1D03               	skipz
  4805     0F62  2F5E               	goto	u4415
  4806     0F63  1003               	clrc
  4807     0F64  0D42               	rlf	??_scale,w
  4808     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4809     0F66  0084               	movwf	4
  4810     0F67  120A  118A  200D  120A  158A  	fcall	stringdir
  4811     0F6C  00C3               	movwf	??_scale+1
  4812     0F6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4813     0F72  00C4               	movwf	??_scale+2
  4814     0F73  120A  118A  200D  120A  158A  	fcall	stringdir
  4815     0F78  00C5               	movwf	??_scale+3
  4816     0F79  120A  118A  200D  120A  158A  	fcall	stringdir
  4817     0F7E  00C6               	movwf	??_scale+4
  4818     0F7F  0846               	movf	??_scale+4,w
  4819     0F80  00A7               	movwf	___flmul@b+3
  4820     0F81  0845               	movf	??_scale+3,w
  4821     0F82  00A6               	movwf	___flmul@b+2
  4822     0F83  0844               	movf	??_scale+2,w
  4823     0F84  00A5               	movwf	___flmul@b+1
  4824     0F85  0843               	movf	??_scale+1,w
  4825     0F86  00A4               	movwf	___flmul@b
  4826     0F87  300A               	movlw	10
  4827     0F88  00F7               	movwf	___awdiv@divisor
  4828     0F89  3000               	movlw	0
  4829     0F8A  00F8               	movwf	___awdiv@divisor+1
  4830     0F8B  0850               	movf	scale@scl,w
  4831     0F8C  00F9               	movwf	___awdiv@dividend
  4832     0F8D  01FA               	clrf	___awdiv@dividend+1
  4833     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4834     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4835     0F90  160A  158A  271F  120A  158A  	fcall	___awdiv
  4836     0F95  0877               	movf	?___awdiv,w
  4837     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4838     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4839     0F98  00C7               	movwf	??_scale+5
  4840     0F99  3001               	movlw	1
  4841     0F9A                     u4425:
  4842     0F9A  1003               	clrc
  4843     0F9B  0DC7               	rlf	??_scale+5,f
  4844     0F9C  3EFF               	addlw	-1
  4845     0F9D  1D03               	skipz
  4846     0F9E  2F9A               	goto	u4425
  4847     0F9F  1003               	clrc
  4848     0FA0  0D47               	rlf	??_scale+5,w
  4849     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4850     0FA2  0084               	movwf	4
  4851     0FA3  120A  118A  200D  120A  158A  	fcall	stringdir
  4852     0FA8  00C8               	movwf	??_scale+6
  4853     0FA9  120A  118A  200D  120A  158A  	fcall	stringdir
  4854     0FAE  00C9               	movwf	??_scale+7
  4855     0FAF  120A  118A  200D  120A  158A  	fcall	stringdir
  4856     0FB4  00CA               	movwf	??_scale+8
  4857     0FB5  120A  118A  200D  120A  158A  	fcall	stringdir
  4858     0FBA  00CB               	movwf	??_scale+9
  4859     0FBB  084B               	movf	??_scale+9,w
  4860     0FBC  00AB               	movwf	___flmul@a+3
  4861     0FBD  084A               	movf	??_scale+8,w
  4862     0FBE  00AA               	movwf	___flmul@a+2
  4863     0FBF  0849               	movf	??_scale+7,w
  4864     0FC0  00A9               	movwf	___flmul@a+1
  4865     0FC1  0848               	movf	??_scale+6,w
  4866     0FC2  00A8               	movwf	___flmul@a
  4867     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4868     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4869     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4870     0FCA  0827               	movf	?___flmul+3,w
  4871     0FCB  00C1               	movwf	?_scale+3
  4872     0FCC  0826               	movf	?___flmul+2,w
  4873     0FCD  00C0               	movwf	?_scale+2
  4874     0FCE  0825               	movf	?___flmul+1,w
  4875     0FCF  00BF               	movwf	?_scale+1
  4876     0FD0  0824               	movf	?___flmul,w
  4877     0FD1  00BE               	movwf	?_scale
  4878     0FD2  2FFF               	goto	l369
  4879     0FD3                     l3084:
  4880                           
  4881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4882     0FD3  0850               	movf	scale@scl,w
  4883     0FD4  00C2               	movwf	??_scale
  4884     0FD5  3001               	movlw	1
  4885     0FD6                     u4435:
  4886     0FD6  1003               	clrc
  4887     0FD7  0DC2               	rlf	??_scale,f
  4888     0FD8  3EFF               	addlw	-1
  4889     0FD9  1D03               	skipz
  4890     0FDA  2FD6               	goto	u4435
  4891     0FDB  1003               	clrc
  4892     0FDC  0D42               	rlf	??_scale,w
  4893     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4894     0FDE  0084               	movwf	4
  4895     0FDF  120A  118A  200D  120A  158A  	fcall	stringdir
  4896     0FE4  00C3               	movwf	??_scale+1
  4897     0FE5  120A  118A  200D  120A  158A  	fcall	stringdir
  4898     0FEA  00C4               	movwf	??_scale+2
  4899     0FEB  120A  118A  200D  120A  158A  	fcall	stringdir
  4900     0FF0  00C5               	movwf	??_scale+3
  4901     0FF1  120A  118A  200D  120A  158A  	fcall	stringdir
  4902     0FF6  00C6               	movwf	??_scale+4
  4903     0FF7  0846               	movf	??_scale+4,w
  4904     0FF8  00C1               	movwf	?_scale+3
  4905     0FF9  0845               	movf	??_scale+3,w
  4906     0FFA  00C0               	movwf	?_scale+2
  4907     0FFB  0844               	movf	??_scale+2,w
  4908     0FFC  00BF               	movwf	?_scale+1
  4909     0FFD  0843               	movf	??_scale+1,w
  4910     0FFE  00BE               	movwf	?_scale
  4911     0FFF                     l369:
  4912     0FFF  0008               	return
  4913     1000                     __end_of_scale:
  4914                           
  4915                           	psect	text3
  4916     1E03                     __ptext3:	
  4917 ;; *************** function ___awmod *****************
  4918 ;; Defined at:
  4919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  divisor         2    0[COMMON] int 
  4922 ;;  dividend        2    2[COMMON] int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  sign            1    6[COMMON] unsigned char 
  4925 ;;  counter         1    5[COMMON] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  2    0[COMMON] int 
  4928 ;; Registers used:
  4929 ;;		wreg, status,2, status,0
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4935 ;;      Params:         4       0       0       0       0
  4936 ;;      Locals:         2       0       0       0       0
  4937 ;;      Temps:          1       0       0       0       0
  4938 ;;      Totals:         7       0       0       0       0
  4939 ;;Total ram usage:        7 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_scale
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948     1E03                     ___awmod:	
  4949                           ;psect for function ___awmod
  4950                           
  4951     1E03                     l2560:	
  4952                           ;incstack = 0
  4953                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4954                           
  4955     1E03  01F6               	clrf	___awmod@sign
  4956     1E04                     l2562:
  4957     1E04  1FF3               	btfss	___awmod@dividend+1,7
  4958     1E05  2E07               	goto	u3101
  4959     1E06  2E08               	goto	u3100
  4960     1E07                     u3101:
  4961     1E07  2E0F               	goto	l2568
  4962     1E08                     u3100:
  4963     1E08                     l2564:
  4964     1E08  09F2               	comf	___awmod@dividend,f
  4965     1E09  09F3               	comf	___awmod@dividend+1,f
  4966     1E0A  0AF2               	incf	___awmod@dividend,f
  4967     1E0B  1903               	skipnz
  4968     1E0C  0AF3               	incf	___awmod@dividend+1,f
  4969     1E0D                     l2566:
  4970     1E0D  01F6               	clrf	___awmod@sign
  4971     1E0E  0AF6               	incf	___awmod@sign,f
  4972     1E0F                     l2568:
  4973     1E0F  1FF1               	btfss	___awmod@divisor+1,7
  4974     1E10  2E12               	goto	u3111
  4975     1E11  2E13               	goto	u3110
  4976     1E12                     u3111:
  4977     1E12  2E18               	goto	l2572
  4978     1E13                     u3110:
  4979     1E13                     l2570:
  4980     1E13  09F0               	comf	___awmod@divisor,f
  4981     1E14  09F1               	comf	___awmod@divisor+1,f
  4982     1E15  0AF0               	incf	___awmod@divisor,f
  4983     1E16  1903               	skipnz
  4984     1E17  0AF1               	incf	___awmod@divisor+1,f
  4985     1E18                     l2572:
  4986     1E18  0870               	movf	___awmod@divisor,w
  4987     1E19  0471               	iorwf	___awmod@divisor+1,w
  4988     1E1A  1903               	btfsc	3,2
  4989     1E1B  2E1D               	goto	u3121
  4990     1E1C  2E1E               	goto	u3120
  4991     1E1D                     u3121:
  4992     1E1D  2E4D               	goto	l2590
  4993     1E1E                     u3120:
  4994     1E1E                     l2574:
  4995     1E1E  01F5               	clrf	___awmod@counter
  4996     1E1F  0AF5               	incf	___awmod@counter,f
  4997     1E20  2E2C               	goto	l2580
  4998     1E21                     l2576:
  4999     1E21  3001               	movlw	1
  5000     1E22                     u3135:
  5001     1E22  1003               	clrc
  5002     1E23  0DF0               	rlf	___awmod@divisor,f
  5003     1E24  0DF1               	rlf	___awmod@divisor+1,f
  5004     1E25  3EFF               	addlw	-1
  5005     1E26  1D03               	skipz
  5006     1E27  2E22               	goto	u3135
  5007     1E28                     l2578:
  5008     1E28  3001               	movlw	1
  5009     1E29  00F4               	movwf	??___awmod
  5010     1E2A  0874               	movf	??___awmod,w
  5011     1E2B  07F5               	addwf	___awmod@counter,f
  5012     1E2C                     l2580:
  5013     1E2C  1FF1               	btfss	___awmod@divisor+1,7
  5014     1E2D  2E2F               	goto	u3141
  5015     1E2E  2E30               	goto	u3140
  5016     1E2F                     u3141:
  5017     1E2F  2E21               	goto	l2576
  5018     1E30                     u3140:
  5019     1E30                     l2582:
  5020     1E30  0871               	movf	___awmod@divisor+1,w
  5021     1E31  0273               	subwf	___awmod@dividend+1,w
  5022     1E32  1D03               	skipz
  5023     1E33  2E36               	goto	u3155
  5024     1E34  0870               	movf	___awmod@divisor,w
  5025     1E35  0272               	subwf	___awmod@dividend,w
  5026     1E36                     u3155:
  5027     1E36  1C03               	skipc
  5028     1E37  2E39               	goto	u3151
  5029     1E38  2E3A               	goto	u3150
  5030     1E39                     u3151:
  5031     1E39  2E40               	goto	l2586
  5032     1E3A                     u3150:
  5033     1E3A                     l2584:
  5034     1E3A  0870               	movf	___awmod@divisor,w
  5035     1E3B  02F2               	subwf	___awmod@dividend,f
  5036     1E3C  0871               	movf	___awmod@divisor+1,w
  5037     1E3D  1C03               	skipc
  5038     1E3E  03F3               	decf	___awmod@dividend+1,f
  5039     1E3F  02F3               	subwf	___awmod@dividend+1,f
  5040     1E40                     l2586:
  5041     1E40  3001               	movlw	1
  5042     1E41                     u3165:
  5043     1E41  1003               	clrc
  5044     1E42  0CF1               	rrf	___awmod@divisor+1,f
  5045     1E43  0CF0               	rrf	___awmod@divisor,f
  5046     1E44  3EFF               	addlw	-1
  5047     1E45  1D03               	skipz
  5048     1E46  2E41               	goto	u3165
  5049     1E47                     l2588:
  5050     1E47  3001               	movlw	1
  5051     1E48  02F5               	subwf	___awmod@counter,f
  5052     1E49  1D03               	btfss	3,2
  5053     1E4A  2E4C               	goto	u3171
  5054     1E4B  2E4D               	goto	u3170
  5055     1E4C                     u3171:
  5056     1E4C  2E30               	goto	l2582
  5057     1E4D                     u3170:
  5058     1E4D                     l2590:
  5059     1E4D  0876               	movf	___awmod@sign,w
  5060     1E4E  1903               	btfsc	3,2
  5061     1E4F  2E51               	goto	u3181
  5062     1E50  2E52               	goto	u3180
  5063     1E51                     u3181:
  5064     1E51  2E57               	goto	l2594
  5065     1E52                     u3180:
  5066     1E52                     l2592:
  5067     1E52  09F2               	comf	___awmod@dividend,f
  5068     1E53  09F3               	comf	___awmod@dividend+1,f
  5069     1E54  0AF2               	incf	___awmod@dividend,f
  5070     1E55  1903               	skipnz
  5071     1E56  0AF3               	incf	___awmod@dividend+1,f
  5072     1E57                     l2594:
  5073     1E57  0873               	movf	___awmod@dividend+1,w
  5074     1E58  00F1               	movwf	?___awmod+1
  5075     1E59  0872               	movf	___awmod@dividend,w
  5076     1E5A  00F0               	movwf	?___awmod
  5077     1E5B                     l605:
  5078     1E5B  0008               	return
  5079     1E5C                     __end_of___awmod:
  5080                           
  5081                           	psect	text4
  5082     1F1F                     __ptext4:	
  5083 ;; *************** function ___awdiv *****************
  5084 ;; Defined at:
  5085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  divisor         2    7[COMMON] int 
  5088 ;;  dividend        2    9[COMMON] int 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  quotient        2    2[BANK0 ] int 
  5091 ;;  sign            1    1[BANK0 ] unsigned char 
  5092 ;;  counter         1    0[BANK0 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  2    7[COMMON] int 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5102 ;;      Params:         4       0       0       0       0
  5103 ;;      Locals:         0       4       0       0       0
  5104 ;;      Temps:          1       0       0       0       0
  5105 ;;      Totals:         5       4       0       0       0
  5106 ;;Total ram usage:        9 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_scale
  5112 ;;		_sprintf
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116     1F1F                     ___awdiv:	
  5117                           ;psect for function ___awdiv
  5118                           
  5119     1F1F                     l2516:	
  5120                           ;incstack = 0
  5121                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5122                           
  5123     1F1F  1283               	bcf	3,5	;RP0=0, select bank0
  5124     1F20  1303               	bcf	3,6	;RP1=0, select bank0
  5125     1F21  01A1               	clrf	___awdiv@sign
  5126     1F22                     l2518:
  5127     1F22  1FF8               	btfss	___awdiv@divisor+1,7
  5128     1F23  2F25               	goto	u3001
  5129     1F24  2F26               	goto	u3000
  5130     1F25                     u3001:
  5131     1F25  2F2D               	goto	l2524
  5132     1F26                     u3000:
  5133     1F26                     l2520:
  5134     1F26  09F7               	comf	___awdiv@divisor,f
  5135     1F27  09F8               	comf	___awdiv@divisor+1,f
  5136     1F28  0AF7               	incf	___awdiv@divisor,f
  5137     1F29  1903               	skipnz
  5138     1F2A  0AF8               	incf	___awdiv@divisor+1,f
  5139     1F2B                     l2522:
  5140     1F2B  01A1               	clrf	___awdiv@sign
  5141     1F2C  0AA1               	incf	___awdiv@sign,f
  5142     1F2D                     l2524:
  5143     1F2D  1FFA               	btfss	___awdiv@dividend+1,7
  5144     1F2E  2F30               	goto	u3011
  5145     1F2F  2F31               	goto	u3010
  5146     1F30                     u3011:
  5147     1F30  2F3A               	goto	l2530
  5148     1F31                     u3010:
  5149     1F31                     l2526:
  5150     1F31  09F9               	comf	___awdiv@dividend,f
  5151     1F32  09FA               	comf	___awdiv@dividend+1,f
  5152     1F33  0AF9               	incf	___awdiv@dividend,f
  5153     1F34  1903               	skipnz
  5154     1F35  0AFA               	incf	___awdiv@dividend+1,f
  5155     1F36                     l2528:
  5156     1F36  3001               	movlw	1
  5157     1F37  00FB               	movwf	??___awdiv
  5158     1F38  087B               	movf	??___awdiv,w
  5159     1F39  06A1               	xorwf	___awdiv@sign,f
  5160     1F3A                     l2530:
  5161     1F3A  01A2               	clrf	___awdiv@quotient
  5162     1F3B  01A3               	clrf	___awdiv@quotient+1
  5163     1F3C                     l2532:
  5164     1F3C  0877               	movf	___awdiv@divisor,w
  5165     1F3D  0478               	iorwf	___awdiv@divisor+1,w
  5166     1F3E  1903               	btfsc	3,2
  5167     1F3F  2F41               	goto	u3021
  5168     1F40  2F42               	goto	u3020
  5169     1F41                     u3021:
  5170     1F41  2F79               	goto	l2552
  5171     1F42                     u3020:
  5172     1F42                     l2534:
  5173     1F42  01A0               	clrf	___awdiv@counter
  5174     1F43  0AA0               	incf	___awdiv@counter,f
  5175     1F44  2F50               	goto	l2540
  5176     1F45                     l2536:
  5177     1F45  3001               	movlw	1
  5178     1F46                     u3035:
  5179     1F46  1003               	clrc
  5180     1F47  0DF7               	rlf	___awdiv@divisor,f
  5181     1F48  0DF8               	rlf	___awdiv@divisor+1,f
  5182     1F49  3EFF               	addlw	-1
  5183     1F4A  1D03               	skipz
  5184     1F4B  2F46               	goto	u3035
  5185     1F4C                     l2538:
  5186     1F4C  3001               	movlw	1
  5187     1F4D  00FB               	movwf	??___awdiv
  5188     1F4E  087B               	movf	??___awdiv,w
  5189     1F4F  07A0               	addwf	___awdiv@counter,f
  5190     1F50                     l2540:
  5191     1F50  1FF8               	btfss	___awdiv@divisor+1,7
  5192     1F51  2F53               	goto	u3041
  5193     1F52  2F54               	goto	u3040
  5194     1F53                     u3041:
  5195     1F53  2F45               	goto	l2536
  5196     1F54                     u3040:
  5197     1F54                     l2542:
  5198     1F54  3001               	movlw	1
  5199     1F55                     u3055:
  5200     1F55  1003               	clrc
  5201     1F56  0DA2               	rlf	___awdiv@quotient,f
  5202     1F57  0DA3               	rlf	___awdiv@quotient+1,f
  5203     1F58  3EFF               	addlw	-1
  5204     1F59  1D03               	skipz
  5205     1F5A  2F55               	goto	u3055
  5206     1F5B  0878               	movf	___awdiv@divisor+1,w
  5207     1F5C  027A               	subwf	___awdiv@dividend+1,w
  5208     1F5D  1D03               	skipz
  5209     1F5E  2F61               	goto	u3065
  5210     1F5F  0877               	movf	___awdiv@divisor,w
  5211     1F60  0279               	subwf	___awdiv@dividend,w
  5212     1F61                     u3065:
  5213     1F61  1C03               	skipc
  5214     1F62  2F64               	goto	u3061
  5215     1F63  2F65               	goto	u3060
  5216     1F64                     u3061:
  5217     1F64  2F6C               	goto	l2548
  5218     1F65                     u3060:
  5219     1F65                     l2544:
  5220     1F65  0877               	movf	___awdiv@divisor,w
  5221     1F66  02F9               	subwf	___awdiv@dividend,f
  5222     1F67  0878               	movf	___awdiv@divisor+1,w
  5223     1F68  1C03               	skipc
  5224     1F69  03FA               	decf	___awdiv@dividend+1,f
  5225     1F6A  02FA               	subwf	___awdiv@dividend+1,f
  5226     1F6B                     l2546:
  5227     1F6B  1422               	bsf	___awdiv@quotient,0
  5228     1F6C                     l2548:
  5229     1F6C  3001               	movlw	1
  5230     1F6D                     u3075:
  5231     1F6D  1003               	clrc
  5232     1F6E  0CF8               	rrf	___awdiv@divisor+1,f
  5233     1F6F  0CF7               	rrf	___awdiv@divisor,f
  5234     1F70  3EFF               	addlw	-1
  5235     1F71  1D03               	skipz
  5236     1F72  2F6D               	goto	u3075
  5237     1F73                     l2550:
  5238     1F73  3001               	movlw	1
  5239     1F74  02A0               	subwf	___awdiv@counter,f
  5240     1F75  1D03               	btfss	3,2
  5241     1F76  2F78               	goto	u3081
  5242     1F77  2F79               	goto	u3080
  5243     1F78                     u3081:
  5244     1F78  2F54               	goto	l2542
  5245     1F79                     u3080:
  5246     1F79                     l2552:
  5247     1F79  0821               	movf	___awdiv@sign,w
  5248     1F7A  1903               	btfsc	3,2
  5249     1F7B  2F7D               	goto	u3091
  5250     1F7C  2F7E               	goto	u3090
  5251     1F7D                     u3091:
  5252     1F7D  2F83               	goto	l2556
  5253     1F7E                     u3090:
  5254     1F7E                     l2554:
  5255     1F7E  09A2               	comf	___awdiv@quotient,f
  5256     1F7F  09A3               	comf	___awdiv@quotient+1,f
  5257     1F80  0AA2               	incf	___awdiv@quotient,f
  5258     1F81  1903               	skipnz
  5259     1F82  0AA3               	incf	___awdiv@quotient+1,f
  5260     1F83                     l2556:
  5261     1F83  0823               	movf	___awdiv@quotient+1,w
  5262     1F84  00F8               	movwf	?___awdiv+1
  5263     1F85  0822               	movf	___awdiv@quotient,w
  5264     1F86  00F7               	movwf	?___awdiv
  5265     1F87                     l592:
  5266     1F87  0008               	return
  5267     1F88                     __end_of___awdiv:
  5268                           
  5269                           	psect	text5
  5270     1AF0                     __ptext5:	
  5271 ;; *************** function _isdigit *****************
  5272 ;; Defined at:
  5273 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  c               1    wreg     unsigned char 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  c               1    1[COMMON] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;		None               void
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5287 ;;      Params:         0       0       0       0       0
  5288 ;;      Locals:         2       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0
  5290 ;;      Totals:         2       0       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_sprintf
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300     1AF0                     _isdigit:	
  5301                           ;psect for function _isdigit
  5302                           
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5306                           ;isdigit@c stored from wreg
  5307     1AF0  00F1               	movwf	isdigit@c
  5308     1AF1                     l3088:
  5309     1AF1  01F0               	clrf	_isdigit$1155
  5310     1AF2                     l3090:
  5311     1AF2  303A               	movlw	58
  5312     1AF3  0271               	subwf	isdigit@c,w
  5313     1AF4  1803               	skipnc
  5314     1AF5  2AF7               	goto	u4441
  5315     1AF6  2AF8               	goto	u4440
  5316     1AF7                     u4441:
  5317     1AF7  2B00               	goto	l3096
  5318     1AF8                     u4440:
  5319     1AF8                     l3092:
  5320     1AF8  3030               	movlw	48
  5321     1AF9  0271               	subwf	isdigit@c,w
  5322     1AFA  1C03               	skipc
  5323     1AFB  2AFD               	goto	u4451
  5324     1AFC  2AFE               	goto	u4450
  5325     1AFD                     u4451:
  5326     1AFD  2B00               	goto	l3096
  5327     1AFE                     u4450:
  5328     1AFE                     l3094:
  5329     1AFE  01F0               	clrf	_isdigit$1155
  5330     1AFF  0AF0               	incf	_isdigit$1155,f
  5331     1B00                     l3096:
  5332     1B00  0C70               	rrf	_isdigit$1155,w
  5333     1B01                     l926:
  5334     1B01  0008               	return
  5335     1B02                     __end_of_isdigit:
  5336                           
  5337                           	psect	text6
  5338     10F4                     __ptext6:	
  5339 ;; *************** function _fround *****************
  5340 ;; Defined at:
  5341 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  prec            1    wreg     unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  prec            1   49[BANK0 ] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  4   30[BANK0 ] unsigned char 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5355 ;;      Params:         0       4       0       0       0
  5356 ;;      Locals:         0       9       0       0       0
  5357 ;;      Temps:          0       7       0       0       0
  5358 ;;      Totals:         0      20       0       0       0
  5359 ;;Total ram usage:       20 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 2
  5362 ;; This function calls:
  5363 ;;		___flmul
  5364 ;;		___lwdiv
  5365 ;;		___lwmod
  5366 ;; This function is called by:
  5367 ;;		_sprintf
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371     10F4                     _fround:	
  5372                           ;psect for function _fround
  5373                           
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5377                           ;fround@prec stored from wreg
  5378     10F4  1283               	bcf	3,5	;RP0=0, select bank0
  5379     10F5  1303               	bcf	3,6	;RP1=0, select bank0
  5380     10F6  00D1               	movwf	fround@prec
  5381     10F7                     l3030:
  5382                           
  5383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5384     10F7  306E               	movlw	110
  5385     10F8  0251               	subwf	fround@prec,w
  5386     10F9  1C03               	skipc
  5387     10FA  28FC               	goto	u4191
  5388     10FB  28FD               	goto	u4190
  5389     10FC                     u4191:
  5390     10FC  2A0A               	goto	l3038
  5391     10FD                     u4190:
  5392     10FD                     l3032:
  5393                           
  5394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5395     10FD  303F               	movlw	63
  5396     10FE  00A7               	movwf	___flmul@b+3
  5397     10FF  3000               	movlw	0
  5398     1100  00A6               	movwf	___flmul@b+2
  5399     1101  3000               	movlw	0
  5400     1102  00A5               	movwf	___flmul@b+1
  5401     1103  3000               	movlw	0
  5402     1104  00A4               	movwf	___flmul@b
  5403     1105  3064               	movlw	100
  5404     1106  00F6               	movwf	___lwdiv@divisor
  5405     1107  3000               	movlw	0
  5406     1108  00F7               	movwf	___lwdiv@divisor+1
  5407     1109  0851               	movf	fround@prec,w
  5408     110A  00C2               	movwf	??_fround
  5409     110B  01C3               	clrf	??_fround+1
  5410     110C  0842               	movf	??_fround,w
  5411     110D  00F8               	movwf	___lwdiv@dividend
  5412     110E  0843               	movf	??_fround+1,w
  5413     110F  00F9               	movwf	___lwdiv@dividend+1
  5414     1110  160A  158A  24D7  160A  118A  	fcall	___lwdiv
  5415     1115  0876               	movf	?___lwdiv,w
  5416     1116  1283               	bcf	3,5	;RP0=0, select bank0
  5417     1117  1303               	bcf	3,6	;RP1=0, select bank0
  5418     1118  00C4               	movwf	??_fround+2
  5419     1119  3001               	movlw	1
  5420     111A                     u4205:
  5421     111A  1003               	clrc
  5422     111B  0DC4               	rlf	??_fround+2,f
  5423     111C  3EFF               	addlw	-1
  5424     111D  1D03               	skipz
  5425     111E  291A               	goto	u4205
  5426     111F  1003               	clrc
  5427     1120  0D44               	rlf	??_fround+2,w
  5428     1121  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5429     1122  0084               	movwf	4
  5430     1123  120A  118A  200D  160A  118A  	fcall	stringdir
  5431     1128  00C5               	movwf	??_fround+3
  5432     1129  120A  118A  200D  160A  118A  	fcall	stringdir
  5433     112E  00C6               	movwf	??_fround+4
  5434     112F  120A  118A  200D  160A  118A  	fcall	stringdir
  5435     1134  00C7               	movwf	??_fround+5
  5436     1135  120A  118A  200D  160A  118A  	fcall	stringdir
  5437     113A  00C8               	movwf	??_fround+6
  5438     113B  0848               	movf	??_fround+6,w
  5439     113C  00AB               	movwf	___flmul@a+3
  5440     113D  0847               	movf	??_fround+5,w
  5441     113E  00AA               	movwf	___flmul@a+2
  5442     113F  0846               	movf	??_fround+4,w
  5443     1140  00A9               	movwf	___flmul@a+1
  5444     1141  0845               	movf	??_fround+3,w
  5445     1142  00A8               	movwf	___flmul@a
  5446     1143  120A  158A  215C  160A  118A  	fcall	___flmul
  5447     1148  1283               	bcf	3,5	;RP0=0, select bank0
  5448     1149  1303               	bcf	3,6	;RP1=0, select bank0
  5449     114A  0827               	movf	?___flmul+3,w
  5450     114B  00D0               	movwf	_fround$1366+3
  5451     114C  0826               	movf	?___flmul+2,w
  5452     114D  00CF               	movwf	_fround$1366+2
  5453     114E  0825               	movf	?___flmul+1,w
  5454     114F  00CE               	movwf	_fround$1366+1
  5455     1150  0824               	movf	?___flmul,w
  5456     1151  00CD               	movwf	_fround$1366
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5459     1152  300A               	movlw	10
  5460     1153  00F6               	movwf	___lwdiv@divisor
  5461     1154  3000               	movlw	0
  5462     1155  00F7               	movwf	___lwdiv@divisor+1
  5463     1156  0851               	movf	fround@prec,w
  5464     1157  00C2               	movwf	??_fround
  5465     1158  01C3               	clrf	??_fround+1
  5466     1159  0842               	movf	??_fround,w
  5467     115A  00F2               	movwf	___lwmod@dividend
  5468     115B  0843               	movf	??_fround+1,w
  5469     115C  00F3               	movwf	___lwmod@dividend+1
  5470     115D  3064               	movlw	100
  5471     115E  00F0               	movwf	___lwmod@divisor
  5472     115F  3000               	movlw	0
  5473     1160  00F1               	movwf	___lwmod@divisor+1
  5474     1161  160A  118A  2003  160A  118A  	fcall	___lwmod
  5475     1166  0871               	movf	?___lwmod+1,w
  5476     1167  00F9               	movwf	___lwdiv@dividend+1
  5477     1168  0870               	movf	?___lwmod,w
  5478     1169  00F8               	movwf	___lwdiv@dividend
  5479     116A  160A  158A  24D7  160A  118A  	fcall	___lwdiv
  5480     116F  0876               	movf	?___lwdiv,w
  5481     1170  1283               	bcf	3,5	;RP0=0, select bank0
  5482     1171  1303               	bcf	3,6	;RP1=0, select bank0
  5483     1172  00C4               	movwf	??_fround+2
  5484     1173  3001               	movlw	1
  5485     1174                     u4215:
  5486     1174  1003               	clrc
  5487     1175  0DC4               	rlf	??_fround+2,f
  5488     1176  3EFF               	addlw	-1
  5489     1177  1D03               	skipz
  5490     1178  2974               	goto	u4215
  5491     1179  1003               	clrc
  5492     117A  0D44               	rlf	??_fround+2,w
  5493     117B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5494     117C  0084               	movwf	4
  5495     117D  120A  118A  200D  160A  118A  	fcall	stringdir
  5496     1182  00C5               	movwf	??_fround+3
  5497     1183  120A  118A  200D  160A  118A  	fcall	stringdir
  5498     1188  00C6               	movwf	??_fround+4
  5499     1189  120A  118A  200D  160A  118A  	fcall	stringdir
  5500     118E  00C7               	movwf	??_fround+5
  5501     118F  120A  118A  200D  160A  118A  	fcall	stringdir
  5502     1194  00C8               	movwf	??_fround+6
  5503     1195  0848               	movf	??_fround+6,w
  5504     1196  00A7               	movwf	___flmul@b+3
  5505     1197  0847               	movf	??_fround+5,w
  5506     1198  00A6               	movwf	___flmul@b+2
  5507     1199  0846               	movf	??_fround+4,w
  5508     119A  00A5               	movwf	___flmul@b+1
  5509     119B  0845               	movf	??_fround+3,w
  5510     119C  00A4               	movwf	___flmul@b
  5511     119D  0850               	movf	_fround$1366+3,w
  5512     119E  00AB               	movwf	___flmul@a+3
  5513     119F  084F               	movf	_fround$1366+2,w
  5514     11A0  00AA               	movwf	___flmul@a+2
  5515     11A1  084E               	movf	_fround$1366+1,w
  5516     11A2  00A9               	movwf	___flmul@a+1
  5517     11A3  084D               	movf	_fround$1366,w
  5518     11A4  00A8               	movwf	___flmul@a
  5519     11A5  120A  158A  215C  160A  118A  	fcall	___flmul
  5520     11AA  1283               	bcf	3,5	;RP0=0, select bank0
  5521     11AB  1303               	bcf	3,6	;RP1=0, select bank0
  5522     11AC  0827               	movf	?___flmul+3,w
  5523     11AD  00CC               	movwf	_fround$1367+3
  5524     11AE  0826               	movf	?___flmul+2,w
  5525     11AF  00CB               	movwf	_fround$1367+2
  5526     11B0  0825               	movf	?___flmul+1,w
  5527     11B1  00CA               	movwf	_fround$1367+1
  5528     11B2  0824               	movf	?___flmul,w
  5529     11B3  00C9               	movwf	_fround$1367
  5530                           
  5531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5532     11B4  300A               	movlw	10
  5533     11B5  00F0               	movwf	___lwmod@divisor
  5534     11B6  3000               	movlw	0
  5535     11B7  00F1               	movwf	___lwmod@divisor+1
  5536     11B8  0851               	movf	fround@prec,w
  5537     11B9  00C2               	movwf	??_fround
  5538     11BA  01C3               	clrf	??_fround+1
  5539     11BB  0842               	movf	??_fround,w
  5540     11BC  00F2               	movwf	___lwmod@dividend
  5541     11BD  0843               	movf	??_fround+1,w
  5542     11BE  00F3               	movwf	___lwmod@dividend+1
  5543     11BF  160A  118A  2003  160A  118A  	fcall	___lwmod
  5544     11C4  0870               	movf	?___lwmod,w
  5545     11C5  1283               	bcf	3,5	;RP0=0, select bank0
  5546     11C6  1303               	bcf	3,6	;RP1=0, select bank0
  5547     11C7  00C4               	movwf	??_fround+2
  5548     11C8  3001               	movlw	1
  5549     11C9                     u4225:
  5550     11C9  1003               	clrc
  5551     11CA  0DC4               	rlf	??_fround+2,f
  5552     11CB  3EFF               	addlw	-1
  5553     11CC  1D03               	skipz
  5554     11CD  29C9               	goto	u4225
  5555     11CE  1003               	clrc
  5556     11CF  0D44               	rlf	??_fround+2,w
  5557     11D0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5558     11D1  0084               	movwf	4
  5559     11D2  120A  118A  200D  160A  118A  	fcall	stringdir
  5560     11D7  00C5               	movwf	??_fround+3
  5561     11D8  120A  118A  200D  160A  118A  	fcall	stringdir
  5562     11DD  00C6               	movwf	??_fround+4
  5563     11DE  120A  118A  200D  160A  118A  	fcall	stringdir
  5564     11E3  00C7               	movwf	??_fround+5
  5565     11E4  120A  118A  200D  160A  118A  	fcall	stringdir
  5566     11E9  00C8               	movwf	??_fround+6
  5567     11EA  0848               	movf	??_fround+6,w
  5568     11EB  00A7               	movwf	___flmul@b+3
  5569     11EC  0847               	movf	??_fround+5,w
  5570     11ED  00A6               	movwf	___flmul@b+2
  5571     11EE  0846               	movf	??_fround+4,w
  5572     11EF  00A5               	movwf	___flmul@b+1
  5573     11F0  0845               	movf	??_fround+3,w
  5574     11F1  00A4               	movwf	___flmul@b
  5575     11F2  084C               	movf	_fround$1367+3,w
  5576     11F3  00AB               	movwf	___flmul@a+3
  5577     11F4  084B               	movf	_fround$1367+2,w
  5578     11F5  00AA               	movwf	___flmul@a+2
  5579     11F6  084A               	movf	_fround$1367+1,w
  5580     11F7  00A9               	movwf	___flmul@a+1
  5581     11F8  0849               	movf	_fround$1367,w
  5582     11F9  00A8               	movwf	___flmul@a
  5583     11FA  120A  158A  215C  160A  118A  	fcall	___flmul
  5584     11FF  1283               	bcf	3,5	;RP0=0, select bank0
  5585     1200  1303               	bcf	3,6	;RP1=0, select bank0
  5586     1201  0827               	movf	?___flmul+3,w
  5587     1202  00C1               	movwf	?_fround+3
  5588     1203  0826               	movf	?___flmul+2,w
  5589     1204  00C0               	movwf	?_fround+2
  5590     1205  0825               	movf	?___flmul+1,w
  5591     1206  00BF               	movwf	?_fround+1
  5592     1207  0824               	movf	?___flmul,w
  5593     1208  00BE               	movwf	?_fround
  5594     1209  2AFE               	goto	l362
  5595     120A                     l3038:
  5596     120A  300B               	movlw	11
  5597     120B  0251               	subwf	fround@prec,w
  5598     120C  1C03               	skipc
  5599     120D  2A0F               	goto	u4231
  5600     120E  2A10               	goto	u4230
  5601     120F                     u4231:
  5602     120F  2ABB               	goto	l3044
  5603     1210                     u4230:
  5604     1210                     l3040:
  5605                           
  5606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5607     1210  303F               	movlw	63
  5608     1211  00A7               	movwf	___flmul@b+3
  5609     1212  3000               	movlw	0
  5610     1213  00A6               	movwf	___flmul@b+2
  5611     1214  3000               	movlw	0
  5612     1215  00A5               	movwf	___flmul@b+1
  5613     1216  3000               	movlw	0
  5614     1217  00A4               	movwf	___flmul@b
  5615     1218  300A               	movlw	10
  5616     1219  00F6               	movwf	___lwdiv@divisor
  5617     121A  3000               	movlw	0
  5618     121B  00F7               	movwf	___lwdiv@divisor+1
  5619     121C  0851               	movf	fround@prec,w
  5620     121D  00C2               	movwf	??_fround
  5621     121E  01C3               	clrf	??_fround+1
  5622     121F  0842               	movf	??_fround,w
  5623     1220  00F8               	movwf	___lwdiv@dividend
  5624     1221  0843               	movf	??_fround+1,w
  5625     1222  00F9               	movwf	___lwdiv@dividend+1
  5626     1223  160A  158A  24D7  160A  118A  	fcall	___lwdiv
  5627     1228  0876               	movf	?___lwdiv,w
  5628     1229  1283               	bcf	3,5	;RP0=0, select bank0
  5629     122A  1303               	bcf	3,6	;RP1=0, select bank0
  5630     122B  00C4               	movwf	??_fround+2
  5631     122C  3001               	movlw	1
  5632     122D                     u4245:
  5633     122D  1003               	clrc
  5634     122E  0DC4               	rlf	??_fround+2,f
  5635     122F  3EFF               	addlw	-1
  5636     1230  1D03               	skipz
  5637     1231  2A2D               	goto	u4245
  5638     1232  1003               	clrc
  5639     1233  0D44               	rlf	??_fround+2,w
  5640     1234  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5641     1235  0084               	movwf	4
  5642     1236  120A  118A  200D  160A  118A  	fcall	stringdir
  5643     123B  00C5               	movwf	??_fround+3
  5644     123C  120A  118A  200D  160A  118A  	fcall	stringdir
  5645     1241  00C6               	movwf	??_fround+4
  5646     1242  120A  118A  200D  160A  118A  	fcall	stringdir
  5647     1247  00C7               	movwf	??_fround+5
  5648     1248  120A  118A  200D  160A  118A  	fcall	stringdir
  5649     124D  00C8               	movwf	??_fround+6
  5650     124E  0848               	movf	??_fround+6,w
  5651     124F  00AB               	movwf	___flmul@a+3
  5652     1250  0847               	movf	??_fround+5,w
  5653     1251  00AA               	movwf	___flmul@a+2
  5654     1252  0846               	movf	??_fround+4,w
  5655     1253  00A9               	movwf	___flmul@a+1
  5656     1254  0845               	movf	??_fround+3,w
  5657     1255  00A8               	movwf	___flmul@a
  5658     1256  120A  158A  215C  160A  118A  	fcall	___flmul
  5659     125B  1283               	bcf	3,5	;RP0=0, select bank0
  5660     125C  1303               	bcf	3,6	;RP1=0, select bank0
  5661     125D  0827               	movf	?___flmul+3,w
  5662     125E  00D0               	movwf	_fround$1366+3
  5663     125F  0826               	movf	?___flmul+2,w
  5664     1260  00CF               	movwf	_fround$1366+2
  5665     1261  0825               	movf	?___flmul+1,w
  5666     1262  00CE               	movwf	_fround$1366+1
  5667     1263  0824               	movf	?___flmul,w
  5668     1264  00CD               	movwf	_fround$1366
  5669                           
  5670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5671     1265  300A               	movlw	10
  5672     1266  00F0               	movwf	___lwmod@divisor
  5673     1267  3000               	movlw	0
  5674     1268  00F1               	movwf	___lwmod@divisor+1
  5675     1269  0851               	movf	fround@prec,w
  5676     126A  00C2               	movwf	??_fround
  5677     126B  01C3               	clrf	??_fround+1
  5678     126C  0842               	movf	??_fround,w
  5679     126D  00F2               	movwf	___lwmod@dividend
  5680     126E  0843               	movf	??_fround+1,w
  5681     126F  00F3               	movwf	___lwmod@dividend+1
  5682     1270  160A  118A  2003  160A  118A  	fcall	___lwmod
  5683     1275  0870               	movf	?___lwmod,w
  5684     1276  1283               	bcf	3,5	;RP0=0, select bank0
  5685     1277  1303               	bcf	3,6	;RP1=0, select bank0
  5686     1278  00C4               	movwf	??_fround+2
  5687     1279  3001               	movlw	1
  5688     127A                     u4255:
  5689     127A  1003               	clrc
  5690     127B  0DC4               	rlf	??_fround+2,f
  5691     127C  3EFF               	addlw	-1
  5692     127D  1D03               	skipz
  5693     127E  2A7A               	goto	u4255
  5694     127F  1003               	clrc
  5695     1280  0D44               	rlf	??_fround+2,w
  5696     1281  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5697     1282  0084               	movwf	4
  5698     1283  120A  118A  200D  160A  118A  	fcall	stringdir
  5699     1288  00C5               	movwf	??_fround+3
  5700     1289  120A  118A  200D  160A  118A  	fcall	stringdir
  5701     128E  00C6               	movwf	??_fround+4
  5702     128F  120A  118A  200D  160A  118A  	fcall	stringdir
  5703     1294  00C7               	movwf	??_fround+5
  5704     1295  120A  118A  200D  160A  118A  	fcall	stringdir
  5705     129A  00C8               	movwf	??_fround+6
  5706     129B  0848               	movf	??_fround+6,w
  5707     129C  00A7               	movwf	___flmul@b+3
  5708     129D  0847               	movf	??_fround+5,w
  5709     129E  00A6               	movwf	___flmul@b+2
  5710     129F  0846               	movf	??_fround+4,w
  5711     12A0  00A5               	movwf	___flmul@b+1
  5712     12A1  0845               	movf	??_fround+3,w
  5713     12A2  00A4               	movwf	___flmul@b
  5714     12A3  0850               	movf	_fround$1366+3,w
  5715     12A4  00AB               	movwf	___flmul@a+3
  5716     12A5  084F               	movf	_fround$1366+2,w
  5717     12A6  00AA               	movwf	___flmul@a+2
  5718     12A7  084E               	movf	_fround$1366+1,w
  5719     12A8  00A9               	movwf	___flmul@a+1
  5720     12A9  084D               	movf	_fround$1366,w
  5721     12AA  00A8               	movwf	___flmul@a
  5722     12AB  120A  158A  215C  160A  118A  	fcall	___flmul
  5723     12B0  1283               	bcf	3,5	;RP0=0, select bank0
  5724     12B1  1303               	bcf	3,6	;RP1=0, select bank0
  5725     12B2  0827               	movf	?___flmul+3,w
  5726     12B3  00C1               	movwf	?_fround+3
  5727     12B4  0826               	movf	?___flmul+2,w
  5728     12B5  00C0               	movwf	?_fround+2
  5729     12B6  0825               	movf	?___flmul+1,w
  5730     12B7  00BF               	movwf	?_fround+1
  5731     12B8  0824               	movf	?___flmul,w
  5732     12B9  00BE               	movwf	?_fround
  5733     12BA  2AFE               	goto	l362
  5734     12BB                     l3044:
  5735                           
  5736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5737     12BB  303F               	movlw	63
  5738     12BC  00A7               	movwf	___flmul@b+3
  5739     12BD  3000               	movlw	0
  5740     12BE  00A6               	movwf	___flmul@b+2
  5741     12BF  3000               	movlw	0
  5742     12C0  00A5               	movwf	___flmul@b+1
  5743     12C1  3000               	movlw	0
  5744     12C2  00A4               	movwf	___flmul@b
  5745     12C3  0851               	movf	fround@prec,w
  5746     12C4  00C2               	movwf	??_fround
  5747     12C5  3001               	movlw	1
  5748     12C6                     u4265:
  5749     12C6  1003               	clrc
  5750     12C7  0DC2               	rlf	??_fround,f
  5751     12C8  3EFF               	addlw	-1
  5752     12C9  1D03               	skipz
  5753     12CA  2AC6               	goto	u4265
  5754     12CB  1003               	clrc
  5755     12CC  0D42               	rlf	??_fround,w
  5756     12CD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5757     12CE  0084               	movwf	4
  5758     12CF  120A  118A  200D  160A  118A  	fcall	stringdir
  5759     12D4  00C3               	movwf	??_fround+1
  5760     12D5  120A  118A  200D  160A  118A  	fcall	stringdir
  5761     12DA  00C4               	movwf	??_fround+2
  5762     12DB  120A  118A  200D  160A  118A  	fcall	stringdir
  5763     12E0  00C5               	movwf	??_fround+3
  5764     12E1  120A  118A  200D  160A  118A  	fcall	stringdir
  5765     12E6  00C6               	movwf	??_fround+4
  5766     12E7  0846               	movf	??_fround+4,w
  5767     12E8  00AB               	movwf	___flmul@a+3
  5768     12E9  0845               	movf	??_fround+3,w
  5769     12EA  00AA               	movwf	___flmul@a+2
  5770     12EB  0844               	movf	??_fround+2,w
  5771     12EC  00A9               	movwf	___flmul@a+1
  5772     12ED  0843               	movf	??_fround+1,w
  5773     12EE  00A8               	movwf	___flmul@a
  5774     12EF  120A  158A  215C  160A  118A  	fcall	___flmul
  5775     12F4  1283               	bcf	3,5	;RP0=0, select bank0
  5776     12F5  1303               	bcf	3,6	;RP1=0, select bank0
  5777     12F6  0827               	movf	?___flmul+3,w
  5778     12F7  00C1               	movwf	?_fround+3
  5779     12F8  0826               	movf	?___flmul+2,w
  5780     12F9  00C0               	movwf	?_fround+2
  5781     12FA  0825               	movf	?___flmul+1,w
  5782     12FB  00BF               	movwf	?_fround+1
  5783     12FC  0824               	movf	?___flmul,w
  5784     12FD  00BE               	movwf	?_fround
  5785     12FE                     l362:
  5786     12FE  0008               	return
  5787     12FF                     __end_of_fround:
  5788                           
  5789                           	psect	text7
  5790     1003                     __ptext7:	
  5791 ;; *************** function ___lwmod *****************
  5792 ;; Defined at:
  5793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  divisor         2    0[COMMON] unsigned int 
  5796 ;;  dividend        2    2[COMMON] unsigned int 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  counter         1    5[COMMON] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2    0[COMMON] unsigned int 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         4       0       0       0       0
  5809 ;;      Locals:         1       0       0       0       0
  5810 ;;      Temps:          1       0       0       0       0
  5811 ;;      Totals:         6       0       0       0       0
  5812 ;;Total ram usage:        6 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_fround
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821     1003                     ___lwmod:	
  5822                           ;psect for function ___lwmod
  5823                           
  5824     1003                     l2624:	
  5825                           ;incstack = 0
  5826                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5827                           
  5828     1003  0870               	movf	___lwmod@divisor,w
  5829     1004  0471               	iorwf	___lwmod@divisor+1,w
  5830     1005  1903               	btfsc	3,2
  5831     1006  2808               	goto	u3261
  5832     1007  2809               	goto	u3260
  5833     1008                     u3261:
  5834     1008  2838               	goto	l2642
  5835     1009                     u3260:
  5836     1009                     l2626:
  5837     1009  01F5               	clrf	___lwmod@counter
  5838     100A  0AF5               	incf	___lwmod@counter,f
  5839     100B  2817               	goto	l2632
  5840     100C                     l2628:
  5841     100C  3001               	movlw	1
  5842     100D                     u3275:
  5843     100D  1003               	clrc
  5844     100E  0DF0               	rlf	___lwmod@divisor,f
  5845     100F  0DF1               	rlf	___lwmod@divisor+1,f
  5846     1010  3EFF               	addlw	-1
  5847     1011  1D03               	skipz
  5848     1012  280D               	goto	u3275
  5849     1013                     l2630:
  5850     1013  3001               	movlw	1
  5851     1014  00F4               	movwf	??___lwmod
  5852     1015  0874               	movf	??___lwmod,w
  5853     1016  07F5               	addwf	___lwmod@counter,f
  5854     1017                     l2632:
  5855     1017  1FF1               	btfss	___lwmod@divisor+1,7
  5856     1018  281A               	goto	u3281
  5857     1019  281B               	goto	u3280
  5858     101A                     u3281:
  5859     101A  280C               	goto	l2628
  5860     101B                     u3280:
  5861     101B                     l2634:
  5862     101B  0871               	movf	___lwmod@divisor+1,w
  5863     101C  0273               	subwf	___lwmod@dividend+1,w
  5864     101D  1D03               	skipz
  5865     101E  2821               	goto	u3295
  5866     101F  0870               	movf	___lwmod@divisor,w
  5867     1020  0272               	subwf	___lwmod@dividend,w
  5868     1021                     u3295:
  5869     1021  1C03               	skipc
  5870     1022  2824               	goto	u3291
  5871     1023  2825               	goto	u3290
  5872     1024                     u3291:
  5873     1024  282B               	goto	l2638
  5874     1025                     u3290:
  5875     1025                     l2636:
  5876     1025  0870               	movf	___lwmod@divisor,w
  5877     1026  02F2               	subwf	___lwmod@dividend,f
  5878     1027  0871               	movf	___lwmod@divisor+1,w
  5879     1028  1C03               	skipc
  5880     1029  03F3               	decf	___lwmod@dividend+1,f
  5881     102A  02F3               	subwf	___lwmod@dividend+1,f
  5882     102B                     l2638:
  5883     102B  3001               	movlw	1
  5884     102C                     u3305:
  5885     102C  1003               	clrc
  5886     102D  0CF1               	rrf	___lwmod@divisor+1,f
  5887     102E  0CF0               	rrf	___lwmod@divisor,f
  5888     102F  3EFF               	addlw	-1
  5889     1030  1D03               	skipz
  5890     1031  282C               	goto	u3305
  5891     1032                     l2640:
  5892     1032  3001               	movlw	1
  5893     1033  02F5               	subwf	___lwmod@counter,f
  5894     1034  1D03               	btfss	3,2
  5895     1035  2837               	goto	u3311
  5896     1036  2838               	goto	u3310
  5897     1037                     u3311:
  5898     1037  281B               	goto	l2634
  5899     1038                     u3310:
  5900     1038                     l2642:
  5901     1038  0873               	movf	___lwmod@dividend+1,w
  5902     1039  00F1               	movwf	?___lwmod+1
  5903     103A  0872               	movf	___lwmod@dividend,w
  5904     103B  00F0               	movwf	?___lwmod
  5905     103C                     l755:
  5906     103C  0008               	return
  5907     103D                     __end_of___lwmod:
  5908                           
  5909                           	psect	text8
  5910     1CD7                     __ptext8:	
  5911 ;; *************** function ___lwdiv *****************
  5912 ;; Defined at:
  5913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  divisor         2    6[COMMON] unsigned int 
  5916 ;;  dividend        2    8[COMMON] unsigned int 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  quotient        2   11[COMMON] unsigned int 
  5919 ;;  counter         1   13[COMMON] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  2    6[COMMON] unsigned int 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5929 ;;      Params:         4       0       0       0       0
  5930 ;;      Locals:         3       0       0       0       0
  5931 ;;      Temps:          1       0       0       0       0
  5932 ;;      Totals:         8       0       0       0       0
  5933 ;;Total ram usage:        8 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_fround
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942     1CD7                     ___lwdiv:	
  5943                           ;psect for function ___lwdiv
  5944                           
  5945     1CD7                     l2598:	
  5946                           ;incstack = 0
  5947                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5948                           
  5949     1CD7  01FB               	clrf	___lwdiv@quotient
  5950     1CD8  01FC               	clrf	___lwdiv@quotient+1
  5951     1CD9                     l2600:
  5952     1CD9  0876               	movf	___lwdiv@divisor,w
  5953     1CDA  0477               	iorwf	___lwdiv@divisor+1,w
  5954     1CDB  1903               	btfsc	3,2
  5955     1CDC  2CDE               	goto	u3191
  5956     1CDD  2CDF               	goto	u3190
  5957     1CDE                     u3191:
  5958     1CDE  2D16               	goto	l2620
  5959     1CDF                     u3190:
  5960     1CDF                     l2602:
  5961     1CDF  01FD               	clrf	___lwdiv@counter
  5962     1CE0  0AFD               	incf	___lwdiv@counter,f
  5963     1CE1  2CED               	goto	l2608
  5964     1CE2                     l2604:
  5965     1CE2  3001               	movlw	1
  5966     1CE3                     u3205:
  5967     1CE3  1003               	clrc
  5968     1CE4  0DF6               	rlf	___lwdiv@divisor,f
  5969     1CE5  0DF7               	rlf	___lwdiv@divisor+1,f
  5970     1CE6  3EFF               	addlw	-1
  5971     1CE7  1D03               	skipz
  5972     1CE8  2CE3               	goto	u3205
  5973     1CE9                     l2606:
  5974     1CE9  3001               	movlw	1
  5975     1CEA  00FA               	movwf	??___lwdiv
  5976     1CEB  087A               	movf	??___lwdiv,w
  5977     1CEC  07FD               	addwf	___lwdiv@counter,f
  5978     1CED                     l2608:
  5979     1CED  1FF7               	btfss	___lwdiv@divisor+1,7
  5980     1CEE  2CF0               	goto	u3211
  5981     1CEF  2CF1               	goto	u3210
  5982     1CF0                     u3211:
  5983     1CF0  2CE2               	goto	l2604
  5984     1CF1                     u3210:
  5985     1CF1                     l2610:
  5986     1CF1  3001               	movlw	1
  5987     1CF2                     u3225:
  5988     1CF2  1003               	clrc
  5989     1CF3  0DFB               	rlf	___lwdiv@quotient,f
  5990     1CF4  0DFC               	rlf	___lwdiv@quotient+1,f
  5991     1CF5  3EFF               	addlw	-1
  5992     1CF6  1D03               	skipz
  5993     1CF7  2CF2               	goto	u3225
  5994     1CF8  0877               	movf	___lwdiv@divisor+1,w
  5995     1CF9  0279               	subwf	___lwdiv@dividend+1,w
  5996     1CFA  1D03               	skipz
  5997     1CFB  2CFE               	goto	u3235
  5998     1CFC  0876               	movf	___lwdiv@divisor,w
  5999     1CFD  0278               	subwf	___lwdiv@dividend,w
  6000     1CFE                     u3235:
  6001     1CFE  1C03               	skipc
  6002     1CFF  2D01               	goto	u3231
  6003     1D00  2D02               	goto	u3230
  6004     1D01                     u3231:
  6005     1D01  2D09               	goto	l2616
  6006     1D02                     u3230:
  6007     1D02                     l2612:
  6008     1D02  0876               	movf	___lwdiv@divisor,w
  6009     1D03  02F8               	subwf	___lwdiv@dividend,f
  6010     1D04  0877               	movf	___lwdiv@divisor+1,w
  6011     1D05  1C03               	skipc
  6012     1D06  03F9               	decf	___lwdiv@dividend+1,f
  6013     1D07  02F9               	subwf	___lwdiv@dividend+1,f
  6014     1D08                     l2614:
  6015     1D08  147B               	bsf	___lwdiv@quotient,0
  6016     1D09                     l2616:
  6017     1D09  3001               	movlw	1
  6018     1D0A                     u3245:
  6019     1D0A  1003               	clrc
  6020     1D0B  0CF7               	rrf	___lwdiv@divisor+1,f
  6021     1D0C  0CF6               	rrf	___lwdiv@divisor,f
  6022     1D0D  3EFF               	addlw	-1
  6023     1D0E  1D03               	skipz
  6024     1D0F  2D0A               	goto	u3245
  6025     1D10                     l2618:
  6026     1D10  3001               	movlw	1
  6027     1D11  02FD               	subwf	___lwdiv@counter,f
  6028     1D12  1D03               	btfss	3,2
  6029     1D13  2D15               	goto	u3251
  6030     1D14  2D16               	goto	u3250
  6031     1D15                     u3251:
  6032     1D15  2CF1               	goto	l2610
  6033     1D16                     u3250:
  6034     1D16                     l2620:
  6035     1D16  087C               	movf	___lwdiv@quotient+1,w
  6036     1D17  00F7               	movwf	?___lwdiv+1
  6037     1D18  087B               	movf	___lwdiv@quotient,w
  6038     1D19  00F6               	movwf	?___lwdiv
  6039     1D1A                     l745:
  6040     1D1A  0008               	return
  6041     1D1B                     __end_of___lwdiv:
  6042                           
  6043                           	psect	text9
  6044     095C                     __ptext9:	
  6045 ;; *************** function ___flmul *****************
  6046 ;; Defined at:
  6047 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  b               4    4[BANK0 ] unsigned int 
  6050 ;;  a               4    8[BANK0 ] unsigned int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  prod            4   24[BANK0 ] struct .
  6053 ;;  grs             4   18[BANK0 ] unsigned long 
  6054 ;;  temp            2   28[BANK0 ] struct .
  6055 ;;  bexp            1   23[BANK0 ] unsigned char 
  6056 ;;  aexp            1   22[BANK0 ] unsigned char 
  6057 ;;  sign            1   17[BANK0 ] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  4    4[BANK0 ] unsigned char 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         0       8       0       0       0
  6068 ;;      Locals:         0      13       0       0       0
  6069 ;;      Temps:          0       5       0       0       0
  6070 ;;      Totals:         0      26       0       0       0
  6071 ;;Total ram usage:       26 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 1
  6074 ;; This function calls:
  6075 ;;		__Umul8_16
  6076 ;; This function is called by:
  6077 ;;		_fround
  6078 ;;		_scale
  6079 ;;		_sprintf
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083     095C                     ___flmul:	
  6084                           ;psect for function ___flmul
  6085                           
  6086     095C                     l2840:	
  6087                           ;incstack = 0
  6088                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6089                           
  6090     095C  1283               	bcf	3,5	;RP0=0, select bank0
  6091     095D  1303               	bcf	3,6	;RP1=0, select bank0
  6092     095E  0827               	movf	___flmul@b+3,w
  6093     095F  3980               	andlw	128
  6094     0960  00B1               	movwf	___flmul@sign
  6095     0961                     l2842:
  6096     0961  0827               	movf	___flmul@b+3,w
  6097     0962  00AC               	movwf	??___flmul
  6098     0963  072C               	addwf	??___flmul,w
  6099     0964  00B7               	movwf	___flmul@bexp
  6100     0965                     l2844:
  6101     0965  1FA6               	btfss	___flmul@b+2,7
  6102     0966  2968               	goto	u3781
  6103     0967  2969               	goto	u3780
  6104     0968                     u3781:
  6105     0968  296A               	goto	l2848
  6106     0969                     u3780:
  6107     0969                     l2846:
  6108     0969  1437               	bsf	___flmul@bexp,0
  6109     096A                     l2848:
  6110     096A  0837               	movf	___flmul@bexp,w
  6111     096B  1903               	btfsc	3,2
  6112     096C  296E               	goto	u3791
  6113     096D  296F               	goto	u3790
  6114     096E                     u3791:
  6115     096E  297E               	goto	l2856
  6116     096F                     u3790:
  6117     096F                     l2850:
  6118     096F  0A37               	incf	___flmul@bexp,w
  6119     0970  1D03               	btfss	3,2
  6120     0971  2973               	goto	u3801
  6121     0972  2974               	goto	u3800
  6122     0973                     u3801:
  6123     0973  297C               	goto	l2854
  6124     0974                     u3800:
  6125     0974                     l2852:
  6126     0974  3000               	movlw	0
  6127     0975  00A7               	movwf	___flmul@b+3
  6128     0976  3000               	movlw	0
  6129     0977  00A6               	movwf	___flmul@b+2
  6130     0978  3000               	movlw	0
  6131     0979  00A5               	movwf	___flmul@b+1
  6132     097A  3000               	movlw	0
  6133     097B  00A4               	movwf	___flmul@b
  6134     097C                     l2854:
  6135     097C  17A6               	bsf	___flmul@b+2,7
  6136     097D  2986               	goto	l2858
  6137     097E                     l2856:
  6138     097E  3000               	movlw	0
  6139     097F  00A7               	movwf	___flmul@b+3
  6140     0980  3000               	movlw	0
  6141     0981  00A6               	movwf	___flmul@b+2
  6142     0982  3000               	movlw	0
  6143     0983  00A5               	movwf	___flmul@b+1
  6144     0984  3000               	movlw	0
  6145     0985  00A4               	movwf	___flmul@b
  6146     0986                     l2858:
  6147     0986  082B               	movf	___flmul@a+3,w
  6148     0987  3980               	andlw	128
  6149     0988  00AC               	movwf	??___flmul
  6150     0989  082C               	movf	??___flmul,w
  6151     098A  06B1               	xorwf	___flmul@sign,f
  6152     098B                     l2860:
  6153     098B  082B               	movf	___flmul@a+3,w
  6154     098C  00AC               	movwf	??___flmul
  6155     098D  072C               	addwf	??___flmul,w
  6156     098E  00B6               	movwf	___flmul@aexp
  6157     098F                     l2862:
  6158     098F  1FAA               	btfss	___flmul@a+2,7
  6159     0990  2992               	goto	u3811
  6160     0991  2993               	goto	u3810
  6161     0992                     u3811:
  6162     0992  2994               	goto	l2866
  6163     0993                     u3810:
  6164     0993                     l2864:
  6165     0993  1436               	bsf	___flmul@aexp,0
  6166     0994                     l2866:
  6167     0994  0836               	movf	___flmul@aexp,w
  6168     0995  1903               	btfsc	3,2
  6169     0996  2998               	goto	u3821
  6170     0997  2999               	goto	u3820
  6171     0998                     u3821:
  6172     0998  29A8               	goto	l2874
  6173     0999                     u3820:
  6174     0999                     l2868:
  6175     0999  0A36               	incf	___flmul@aexp,w
  6176     099A  1D03               	btfss	3,2
  6177     099B  299D               	goto	u3831
  6178     099C  299E               	goto	u3830
  6179     099D                     u3831:
  6180     099D  29A6               	goto	l2872
  6181     099E                     u3830:
  6182     099E                     l2870:
  6183     099E  3000               	movlw	0
  6184     099F  00AB               	movwf	___flmul@a+3
  6185     09A0  3000               	movlw	0
  6186     09A1  00AA               	movwf	___flmul@a+2
  6187     09A2  3000               	movlw	0
  6188     09A3  00A9               	movwf	___flmul@a+1
  6189     09A4  3000               	movlw	0
  6190     09A5  00A8               	movwf	___flmul@a
  6191     09A6                     l2872:
  6192     09A6  17AA               	bsf	___flmul@a+2,7
  6193     09A7  29B0               	goto	l2876
  6194     09A8                     l2874:
  6195     09A8  3000               	movlw	0
  6196     09A9  00AB               	movwf	___flmul@a+3
  6197     09AA  3000               	movlw	0
  6198     09AB  00AA               	movwf	___flmul@a+2
  6199     09AC  3000               	movlw	0
  6200     09AD  00A9               	movwf	___flmul@a+1
  6201     09AE  3000               	movlw	0
  6202     09AF  00A8               	movwf	___flmul@a
  6203     09B0                     l2876:
  6204     09B0  0836               	movf	___flmul@aexp,w
  6205     09B1  1903               	btfsc	3,2
  6206     09B2  29B4               	goto	u3841
  6207     09B3  29B5               	goto	u3840
  6208     09B4                     u3841:
  6209     09B4  29BA               	goto	l2880
  6210     09B5                     u3840:
  6211     09B5                     l2878:
  6212     09B5  0837               	movf	___flmul@bexp,w
  6213     09B6  1D03               	btfss	3,2
  6214     09B7  29B9               	goto	u3851
  6215     09B8  29BA               	goto	u3850
  6216     09B9                     u3851:
  6217     09B9  29C3               	goto	l2884
  6218     09BA                     u3850:
  6219     09BA                     l2880:
  6220     09BA  3000               	movlw	0
  6221     09BB  00A7               	movwf	?___flmul+3
  6222     09BC  3000               	movlw	0
  6223     09BD  00A6               	movwf	?___flmul+2
  6224     09BE  3000               	movlw	0
  6225     09BF  00A5               	movwf	?___flmul+1
  6226     09C0  3000               	movlw	0
  6227     09C1  00A4               	movwf	?___flmul
  6228     09C2  2CA0               	goto	l862
  6229     09C3                     l2884:
  6230     09C3  0824               	movf	___flmul@b,w
  6231     09C4  00F0               	movwf	__Umul8_16@multiplicand
  6232     09C5  082A               	movf	___flmul@a+2,w
  6233     09C6  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6234     09CB  0871               	movf	?__Umul8_16+1,w
  6235     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6236     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6237     09CE  00BD               	movwf	___flmul@temp+1
  6238     09CF  0870               	movf	?__Umul8_16,w
  6239     09D0  00BC               	movwf	___flmul@temp
  6240     09D1                     l2886:
  6241     09D1  083C               	movf	___flmul@temp,w
  6242     09D2  00AC               	movwf	??___flmul
  6243     09D3  01AD               	clrf	??___flmul+1
  6244     09D4  01AE               	clrf	??___flmul+2
  6245     09D5  01AF               	clrf	??___flmul+3
  6246     09D6  082F               	movf	??___flmul+3,w
  6247     09D7  00B5               	movwf	___flmul@grs+3
  6248     09D8  082E               	movf	??___flmul+2,w
  6249     09D9  00B4               	movwf	___flmul@grs+2
  6250     09DA  082D               	movf	??___flmul+1,w
  6251     09DB  00B3               	movwf	___flmul@grs+1
  6252     09DC  082C               	movf	??___flmul,w
  6253     09DD  00B2               	movwf	___flmul@grs
  6254     09DE                     l2888:
  6255     09DE  083D               	movf	___flmul@temp+1,w
  6256     09DF  00AC               	movwf	??___flmul
  6257     09E0  01AD               	clrf	??___flmul+1
  6258     09E1  01AE               	clrf	??___flmul+2
  6259     09E2  01AF               	clrf	??___flmul+3
  6260     09E3  082F               	movf	??___flmul+3,w
  6261     09E4  00BB               	movwf	___flmul@prod+3
  6262     09E5  082E               	movf	??___flmul+2,w
  6263     09E6  00BA               	movwf	___flmul@prod+2
  6264     09E7  082D               	movf	??___flmul+1,w
  6265     09E8  00B9               	movwf	___flmul@prod+1
  6266     09E9  082C               	movf	??___flmul,w
  6267     09EA  00B8               	movwf	___flmul@prod
  6268     09EB  0825               	movf	___flmul@b+1,w
  6269     09EC  00F0               	movwf	__Umul8_16@multiplicand
  6270     09ED  0829               	movf	___flmul@a+1,w
  6271     09EE  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6272     09F3  0871               	movf	?__Umul8_16+1,w
  6273     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  6274     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  6275     09F6  00BD               	movwf	___flmul@temp+1
  6276     09F7  0870               	movf	?__Umul8_16,w
  6277     09F8  00BC               	movwf	___flmul@temp
  6278     09F9                     l2890:
  6279     09F9  083C               	movf	___flmul@temp,w
  6280     09FA  00AC               	movwf	??___flmul
  6281     09FB  01AD               	clrf	??___flmul+1
  6282     09FC  01AE               	clrf	??___flmul+2
  6283     09FD  01AF               	clrf	??___flmul+3
  6284     09FE  082C               	movf	??___flmul,w
  6285     09FF  07B2               	addwf	___flmul@grs,f
  6286     0A00  082D               	movf	??___flmul+1,w
  6287     0A01  1103               	clrz
  6288     0A02  1803               	skipnc
  6289     0A03  3E01               	addlw	1
  6290     0A04  1903               	skipnz
  6291     0A05  2A07               	goto	u3861
  6292     0A06  07B3               	addwf	___flmul@grs+1,f
  6293     0A07                     u3861:
  6294     0A07  082E               	movf	??___flmul+2,w
  6295     0A08  1103               	clrz
  6296     0A09  1803               	skipnc
  6297     0A0A  3E01               	addlw	1
  6298     0A0B  1903               	skipnz
  6299     0A0C  2A0E               	goto	u3862
  6300     0A0D  07B4               	addwf	___flmul@grs+2,f
  6301     0A0E                     u3862:
  6302     0A0E  082F               	movf	??___flmul+3,w
  6303     0A0F  1103               	clrz
  6304     0A10  1803               	skipnc
  6305     0A11  3E01               	addlw	1
  6306     0A12  1903               	skipnz
  6307     0A13  2A15               	goto	u3863
  6308     0A14  07B5               	addwf	___flmul@grs+3,f
  6309     0A15                     u3863:
  6310     0A15                     l2892:
  6311     0A15  083D               	movf	___flmul@temp+1,w
  6312     0A16  00AC               	movwf	??___flmul
  6313     0A17  01AD               	clrf	??___flmul+1
  6314     0A18  01AE               	clrf	??___flmul+2
  6315     0A19  01AF               	clrf	??___flmul+3
  6316     0A1A  082C               	movf	??___flmul,w
  6317     0A1B  07B8               	addwf	___flmul@prod,f
  6318     0A1C  082D               	movf	??___flmul+1,w
  6319     0A1D  1103               	clrz
  6320     0A1E  1803               	skipnc
  6321     0A1F  3E01               	addlw	1
  6322     0A20  1903               	skipnz
  6323     0A21  2A23               	goto	u3871
  6324     0A22  07B9               	addwf	___flmul@prod+1,f
  6325     0A23                     u3871:
  6326     0A23  082E               	movf	??___flmul+2,w
  6327     0A24  1103               	clrz
  6328     0A25  1803               	skipnc
  6329     0A26  3E01               	addlw	1
  6330     0A27  1903               	skipnz
  6331     0A28  2A2A               	goto	u3872
  6332     0A29  07BA               	addwf	___flmul@prod+2,f
  6333     0A2A                     u3872:
  6334     0A2A  082F               	movf	??___flmul+3,w
  6335     0A2B  1103               	clrz
  6336     0A2C  1803               	skipnc
  6337     0A2D  3E01               	addlw	1
  6338     0A2E  1903               	skipnz
  6339     0A2F  2A31               	goto	u3873
  6340     0A30  07BB               	addwf	___flmul@prod+3,f
  6341     0A31                     u3873:
  6342     0A31  0826               	movf	___flmul@b+2,w
  6343     0A32  00F0               	movwf	__Umul8_16@multiplicand
  6344     0A33  0828               	movf	___flmul@a,w
  6345     0A34  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6346     0A39  0871               	movf	?__Umul8_16+1,w
  6347     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  6348     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  6349     0A3C  00BD               	movwf	___flmul@temp+1
  6350     0A3D  0870               	movf	?__Umul8_16,w
  6351     0A3E  00BC               	movwf	___flmul@temp
  6352     0A3F                     l2894:
  6353     0A3F  083C               	movf	___flmul@temp,w
  6354     0A40  00AC               	movwf	??___flmul
  6355     0A41  01AD               	clrf	??___flmul+1
  6356     0A42  01AE               	clrf	??___flmul+2
  6357     0A43  01AF               	clrf	??___flmul+3
  6358     0A44  082C               	movf	??___flmul,w
  6359     0A45  07B2               	addwf	___flmul@grs,f
  6360     0A46  082D               	movf	??___flmul+1,w
  6361     0A47  1103               	clrz
  6362     0A48  1803               	skipnc
  6363     0A49  3E01               	addlw	1
  6364     0A4A  1903               	skipnz
  6365     0A4B  2A4D               	goto	u3881
  6366     0A4C  07B3               	addwf	___flmul@grs+1,f
  6367     0A4D                     u3881:
  6368     0A4D  082E               	movf	??___flmul+2,w
  6369     0A4E  1103               	clrz
  6370     0A4F  1803               	skipnc
  6371     0A50  3E01               	addlw	1
  6372     0A51  1903               	skipnz
  6373     0A52  2A54               	goto	u3882
  6374     0A53  07B4               	addwf	___flmul@grs+2,f
  6375     0A54                     u3882:
  6376     0A54  082F               	movf	??___flmul+3,w
  6377     0A55  1103               	clrz
  6378     0A56  1803               	skipnc
  6379     0A57  3E01               	addlw	1
  6380     0A58  1903               	skipnz
  6381     0A59  2A5B               	goto	u3883
  6382     0A5A  07B5               	addwf	___flmul@grs+3,f
  6383     0A5B                     u3883:
  6384     0A5B                     l2896:
  6385     0A5B  083D               	movf	___flmul@temp+1,w
  6386     0A5C  00AC               	movwf	??___flmul
  6387     0A5D  01AD               	clrf	??___flmul+1
  6388     0A5E  01AE               	clrf	??___flmul+2
  6389     0A5F  01AF               	clrf	??___flmul+3
  6390     0A60  082C               	movf	??___flmul,w
  6391     0A61  07B8               	addwf	___flmul@prod,f
  6392     0A62  082D               	movf	??___flmul+1,w
  6393     0A63  1103               	clrz
  6394     0A64  1803               	skipnc
  6395     0A65  3E01               	addlw	1
  6396     0A66  1903               	skipnz
  6397     0A67  2A69               	goto	u3891
  6398     0A68  07B9               	addwf	___flmul@prod+1,f
  6399     0A69                     u3891:
  6400     0A69  082E               	movf	??___flmul+2,w
  6401     0A6A  1103               	clrz
  6402     0A6B  1803               	skipnc
  6403     0A6C  3E01               	addlw	1
  6404     0A6D  1903               	skipnz
  6405     0A6E  2A70               	goto	u3892
  6406     0A6F  07BA               	addwf	___flmul@prod+2,f
  6407     0A70                     u3892:
  6408     0A70  082F               	movf	??___flmul+3,w
  6409     0A71  1103               	clrz
  6410     0A72  1803               	skipnc
  6411     0A73  3E01               	addlw	1
  6412     0A74  1903               	skipnz
  6413     0A75  2A77               	goto	u3893
  6414     0A76  07BB               	addwf	___flmul@prod+3,f
  6415     0A77                     u3893:
  6416     0A77                     l2898:
  6417     0A77  3008               	movlw	8
  6418     0A78  00AC               	movwf	??___flmul
  6419     0A79                     u3905:
  6420     0A79  1003               	clrc
  6421     0A7A  0DB2               	rlf	___flmul@grs,f
  6422     0A7B  0DB3               	rlf	___flmul@grs+1,f
  6423     0A7C  0DB4               	rlf	___flmul@grs+2,f
  6424     0A7D  0DB5               	rlf	___flmul@grs+3,f
  6425     0A7E  0BAC               	decfsz	??___flmul,f
  6426     0A7F  2A79               	goto	u3905
  6427     0A80                     l2900:
  6428     0A80  0825               	movf	___flmul@b+1,w
  6429     0A81  00F0               	movwf	__Umul8_16@multiplicand
  6430     0A82  0828               	movf	___flmul@a,w
  6431     0A83  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6432     0A88  0871               	movf	?__Umul8_16+1,w
  6433     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  6434     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  6435     0A8B  00BD               	movwf	___flmul@temp+1
  6436     0A8C  0870               	movf	?__Umul8_16,w
  6437     0A8D  00BC               	movwf	___flmul@temp
  6438     0A8E                     l2902:
  6439     0A8E  083C               	movf	___flmul@temp,w
  6440     0A8F  00AC               	movwf	??___flmul
  6441     0A90  083D               	movf	___flmul@temp+1,w
  6442     0A91  00AD               	movwf	??___flmul+1
  6443     0A92  01AE               	clrf	??___flmul+2
  6444     0A93  01AF               	clrf	??___flmul+3
  6445     0A94  082C               	movf	??___flmul,w
  6446     0A95  07B2               	addwf	___flmul@grs,f
  6447     0A96  082D               	movf	??___flmul+1,w
  6448     0A97  1103               	clrz
  6449     0A98  1803               	skipnc
  6450     0A99  3E01               	addlw	1
  6451     0A9A  1903               	skipnz
  6452     0A9B  2A9D               	goto	u3911
  6453     0A9C  07B3               	addwf	___flmul@grs+1,f
  6454     0A9D                     u3911:
  6455     0A9D  082E               	movf	??___flmul+2,w
  6456     0A9E  1103               	clrz
  6457     0A9F  1803               	skipnc
  6458     0AA0  3E01               	addlw	1
  6459     0AA1  1903               	skipnz
  6460     0AA2  2AA4               	goto	u3912
  6461     0AA3  07B4               	addwf	___flmul@grs+2,f
  6462     0AA4                     u3912:
  6463     0AA4  082F               	movf	??___flmul+3,w
  6464     0AA5  1103               	clrz
  6465     0AA6  1803               	skipnc
  6466     0AA7  3E01               	addlw	1
  6467     0AA8  1903               	skipnz
  6468     0AA9  2AAB               	goto	u3913
  6469     0AAA  07B5               	addwf	___flmul@grs+3,f
  6470     0AAB                     u3913:
  6471     0AAB                     l2904:
  6472     0AAB  0824               	movf	___flmul@b,w
  6473     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  6474     0AAD  0829               	movf	___flmul@a+1,w
  6475     0AAE  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6476     0AB3  0871               	movf	?__Umul8_16+1,w
  6477     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  6478     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  6479     0AB6  00BD               	movwf	___flmul@temp+1
  6480     0AB7  0870               	movf	?__Umul8_16,w
  6481     0AB8  00BC               	movwf	___flmul@temp
  6482     0AB9                     l2906:
  6483     0AB9  083C               	movf	___flmul@temp,w
  6484     0ABA  00AC               	movwf	??___flmul
  6485     0ABB  083D               	movf	___flmul@temp+1,w
  6486     0ABC  00AD               	movwf	??___flmul+1
  6487     0ABD  01AE               	clrf	??___flmul+2
  6488     0ABE  01AF               	clrf	??___flmul+3
  6489     0ABF  082C               	movf	??___flmul,w
  6490     0AC0  07B2               	addwf	___flmul@grs,f
  6491     0AC1  082D               	movf	??___flmul+1,w
  6492     0AC2  1103               	clrz
  6493     0AC3  1803               	skipnc
  6494     0AC4  3E01               	addlw	1
  6495     0AC5  1903               	skipnz
  6496     0AC6  2AC8               	goto	u3921
  6497     0AC7  07B3               	addwf	___flmul@grs+1,f
  6498     0AC8                     u3921:
  6499     0AC8  082E               	movf	??___flmul+2,w
  6500     0AC9  1103               	clrz
  6501     0ACA  1803               	skipnc
  6502     0ACB  3E01               	addlw	1
  6503     0ACC  1903               	skipnz
  6504     0ACD  2ACF               	goto	u3922
  6505     0ACE  07B4               	addwf	___flmul@grs+2,f
  6506     0ACF                     u3922:
  6507     0ACF  082F               	movf	??___flmul+3,w
  6508     0AD0  1103               	clrz
  6509     0AD1  1803               	skipnc
  6510     0AD2  3E01               	addlw	1
  6511     0AD3  1903               	skipnz
  6512     0AD4  2AD6               	goto	u3923
  6513     0AD5  07B5               	addwf	___flmul@grs+3,f
  6514     0AD6                     u3923:
  6515     0AD6                     l2908:
  6516     0AD6  3008               	movlw	8
  6517     0AD7  00AC               	movwf	??___flmul
  6518     0AD8                     u3935:
  6519     0AD8  1003               	clrc
  6520     0AD9  0DB2               	rlf	___flmul@grs,f
  6521     0ADA  0DB3               	rlf	___flmul@grs+1,f
  6522     0ADB  0DB4               	rlf	___flmul@grs+2,f
  6523     0ADC  0DB5               	rlf	___flmul@grs+3,f
  6524     0ADD  0BAC               	decfsz	??___flmul,f
  6525     0ADE  2AD8               	goto	u3935
  6526     0ADF  0824               	movf	___flmul@b,w
  6527     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  6528     0AE1  0828               	movf	___flmul@a,w
  6529     0AE2  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6530     0AE7  0871               	movf	?__Umul8_16+1,w
  6531     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6532     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6533     0AEA  00BD               	movwf	___flmul@temp+1
  6534     0AEB  0870               	movf	?__Umul8_16,w
  6535     0AEC  00BC               	movwf	___flmul@temp
  6536     0AED                     l2910:
  6537     0AED  083C               	movf	___flmul@temp,w
  6538     0AEE  00AC               	movwf	??___flmul
  6539     0AEF  083D               	movf	___flmul@temp+1,w
  6540     0AF0  00AD               	movwf	??___flmul+1
  6541     0AF1  01AE               	clrf	??___flmul+2
  6542     0AF2  01AF               	clrf	??___flmul+3
  6543     0AF3  082C               	movf	??___flmul,w
  6544     0AF4  07B2               	addwf	___flmul@grs,f
  6545     0AF5  082D               	movf	??___flmul+1,w
  6546     0AF6  1103               	clrz
  6547     0AF7  1803               	skipnc
  6548     0AF8  3E01               	addlw	1
  6549     0AF9  1903               	skipnz
  6550     0AFA  2AFC               	goto	u3941
  6551     0AFB  07B3               	addwf	___flmul@grs+1,f
  6552     0AFC                     u3941:
  6553     0AFC  082E               	movf	??___flmul+2,w
  6554     0AFD  1103               	clrz
  6555     0AFE  1803               	skipnc
  6556     0AFF  3E01               	addlw	1
  6557     0B00  1903               	skipnz
  6558     0B01  2B03               	goto	u3942
  6559     0B02  07B4               	addwf	___flmul@grs+2,f
  6560     0B03                     u3942:
  6561     0B03  082F               	movf	??___flmul+3,w
  6562     0B04  1103               	clrz
  6563     0B05  1803               	skipnc
  6564     0B06  3E01               	addlw	1
  6565     0B07  1903               	skipnz
  6566     0B08  2B0A               	goto	u3943
  6567     0B09  07B5               	addwf	___flmul@grs+3,f
  6568     0B0A                     u3943:
  6569     0B0A                     l2912:
  6570     0B0A  0825               	movf	___flmul@b+1,w
  6571     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  6572     0B0C  082A               	movf	___flmul@a+2,w
  6573     0B0D  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6574     0B12  0871               	movf	?__Umul8_16+1,w
  6575     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  6576     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  6577     0B15  00BD               	movwf	___flmul@temp+1
  6578     0B16  0870               	movf	?__Umul8_16,w
  6579     0B17  00BC               	movwf	___flmul@temp
  6580     0B18  083C               	movf	___flmul@temp,w
  6581     0B19  00AC               	movwf	??___flmul
  6582     0B1A  083D               	movf	___flmul@temp+1,w
  6583     0B1B  00AD               	movwf	??___flmul+1
  6584     0B1C  01AE               	clrf	??___flmul+2
  6585     0B1D  01AF               	clrf	??___flmul+3
  6586     0B1E  082C               	movf	??___flmul,w
  6587     0B1F  07B8               	addwf	___flmul@prod,f
  6588     0B20  082D               	movf	??___flmul+1,w
  6589     0B21  1103               	clrz
  6590     0B22  1803               	skipnc
  6591     0B23  3E01               	addlw	1
  6592     0B24  1903               	skipnz
  6593     0B25  2B27               	goto	u3951
  6594     0B26  07B9               	addwf	___flmul@prod+1,f
  6595     0B27                     u3951:
  6596     0B27  082E               	movf	??___flmul+2,w
  6597     0B28  1103               	clrz
  6598     0B29  1803               	skipnc
  6599     0B2A  3E01               	addlw	1
  6600     0B2B  1903               	skipnz
  6601     0B2C  2B2E               	goto	u3952
  6602     0B2D  07BA               	addwf	___flmul@prod+2,f
  6603     0B2E                     u3952:
  6604     0B2E  082F               	movf	??___flmul+3,w
  6605     0B2F  1103               	clrz
  6606     0B30  1803               	skipnc
  6607     0B31  3E01               	addlw	1
  6608     0B32  1903               	skipnz
  6609     0B33  2B35               	goto	u3953
  6610     0B34  07BB               	addwf	___flmul@prod+3,f
  6611     0B35                     u3953:
  6612     0B35                     l2914:
  6613     0B35  0826               	movf	___flmul@b+2,w
  6614     0B36  00F0               	movwf	__Umul8_16@multiplicand
  6615     0B37  0829               	movf	___flmul@a+1,w
  6616     0B38  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6617     0B3D  0871               	movf	?__Umul8_16+1,w
  6618     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6619     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6620     0B40  00BD               	movwf	___flmul@temp+1
  6621     0B41  0870               	movf	?__Umul8_16,w
  6622     0B42  00BC               	movwf	___flmul@temp
  6623     0B43                     l2916:
  6624     0B43  083C               	movf	___flmul@temp,w
  6625     0B44  00AC               	movwf	??___flmul
  6626     0B45  083D               	movf	___flmul@temp+1,w
  6627     0B46  00AD               	movwf	??___flmul+1
  6628     0B47  01AE               	clrf	??___flmul+2
  6629     0B48  01AF               	clrf	??___flmul+3
  6630     0B49  082C               	movf	??___flmul,w
  6631     0B4A  07B8               	addwf	___flmul@prod,f
  6632     0B4B  082D               	movf	??___flmul+1,w
  6633     0B4C  1103               	clrz
  6634     0B4D  1803               	skipnc
  6635     0B4E  3E01               	addlw	1
  6636     0B4F  1903               	skipnz
  6637     0B50  2B52               	goto	u3961
  6638     0B51  07B9               	addwf	___flmul@prod+1,f
  6639     0B52                     u3961:
  6640     0B52  082E               	movf	??___flmul+2,w
  6641     0B53  1103               	clrz
  6642     0B54  1803               	skipnc
  6643     0B55  3E01               	addlw	1
  6644     0B56  1903               	skipnz
  6645     0B57  2B59               	goto	u3962
  6646     0B58  07BA               	addwf	___flmul@prod+2,f
  6647     0B59                     u3962:
  6648     0B59  082F               	movf	??___flmul+3,w
  6649     0B5A  1103               	clrz
  6650     0B5B  1803               	skipnc
  6651     0B5C  3E01               	addlw	1
  6652     0B5D  1903               	skipnz
  6653     0B5E  2B60               	goto	u3963
  6654     0B5F  07BB               	addwf	___flmul@prod+3,f
  6655     0B60                     u3963:
  6656     0B60  0826               	movf	___flmul@b+2,w
  6657     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6658     0B62  082A               	movf	___flmul@a+2,w
  6659     0B63  160A  158A  23D3  120A  158A  	fcall	__Umul8_16
  6660     0B68  0871               	movf	?__Umul8_16+1,w
  6661     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6662     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6663     0B6B  00BD               	movwf	___flmul@temp+1
  6664     0B6C  0870               	movf	?__Umul8_16,w
  6665     0B6D  00BC               	movwf	___flmul@temp
  6666     0B6E                     l2918:
  6667     0B6E  083C               	movf	___flmul@temp,w
  6668     0B6F  00AC               	movwf	??___flmul
  6669     0B70  083D               	movf	___flmul@temp+1,w
  6670     0B71  00AD               	movwf	??___flmul+1
  6671     0B72  01AE               	clrf	??___flmul+2
  6672     0B73  01AF               	clrf	??___flmul+3
  6673     0B74  3008               	movlw	8
  6674     0B75                     u3975:
  6675     0B75  1003               	clrc
  6676     0B76  0DAC               	rlf	??___flmul,f
  6677     0B77  0DAD               	rlf	??___flmul+1,f
  6678     0B78  0DAE               	rlf	??___flmul+2,f
  6679     0B79  0DAF               	rlf	??___flmul+3,f
  6680     0B7A                     u3970:
  6681     0B7A  3EFF               	addlw	-1
  6682     0B7B  1D03               	skipz
  6683     0B7C  2B75               	goto	u3975
  6684     0B7D  082C               	movf	??___flmul,w
  6685     0B7E  07B8               	addwf	___flmul@prod,f
  6686     0B7F  082D               	movf	??___flmul+1,w
  6687     0B80  1103               	clrz
  6688     0B81  1803               	skipnc
  6689     0B82  3E01               	addlw	1
  6690     0B83  1903               	skipnz
  6691     0B84  2B86               	goto	u3981
  6692     0B85  07B9               	addwf	___flmul@prod+1,f
  6693     0B86                     u3981:
  6694     0B86  082E               	movf	??___flmul+2,w
  6695     0B87  1103               	clrz
  6696     0B88  1803               	skipnc
  6697     0B89  3E01               	addlw	1
  6698     0B8A  1903               	skipnz
  6699     0B8B  2B8D               	goto	u3982
  6700     0B8C  07BA               	addwf	___flmul@prod+2,f
  6701     0B8D                     u3982:
  6702     0B8D  082F               	movf	??___flmul+3,w
  6703     0B8E  1103               	clrz
  6704     0B8F  1803               	skipnc
  6705     0B90  3E01               	addlw	1
  6706     0B91  1903               	skipnz
  6707     0B92  2B94               	goto	u3983
  6708     0B93  07BB               	addwf	___flmul@prod+3,f
  6709     0B94                     u3983:
  6710     0B94                     l2920:
  6711     0B94  0832               	movf	___flmul@grs,w
  6712     0B95  00AC               	movwf	??___flmul
  6713     0B96  0833               	movf	___flmul@grs+1,w
  6714     0B97  00AD               	movwf	??___flmul+1
  6715     0B98  0834               	movf	___flmul@grs+2,w
  6716     0B99  00AE               	movwf	??___flmul+2
  6717     0B9A  0835               	movf	___flmul@grs+3,w
  6718     0B9B  00AF               	movwf	??___flmul+3
  6719     0B9C  3018               	movlw	24
  6720     0B9D                     u3995:
  6721     0B9D  1003               	clrc
  6722     0B9E  0CAF               	rrf	??___flmul+3,f
  6723     0B9F  0CAE               	rrf	??___flmul+2,f
  6724     0BA0  0CAD               	rrf	??___flmul+1,f
  6725     0BA1  0CAC               	rrf	??___flmul,f
  6726     0BA2                     u3990:
  6727     0BA2  3EFF               	addlw	-1
  6728     0BA3  1D03               	skipz
  6729     0BA4  2B9D               	goto	u3995
  6730     0BA5  082C               	movf	??___flmul,w
  6731     0BA6  07B8               	addwf	___flmul@prod,f
  6732     0BA7  082D               	movf	??___flmul+1,w
  6733     0BA8  1103               	clrz
  6734     0BA9  1803               	skipnc
  6735     0BAA  3E01               	addlw	1
  6736     0BAB  1903               	skipnz
  6737     0BAC  2BAE               	goto	u4001
  6738     0BAD  07B9               	addwf	___flmul@prod+1,f
  6739     0BAE                     u4001:
  6740     0BAE  082E               	movf	??___flmul+2,w
  6741     0BAF  1103               	clrz
  6742     0BB0  1803               	skipnc
  6743     0BB1  3E01               	addlw	1
  6744     0BB2  1903               	skipnz
  6745     0BB3  2BB5               	goto	u4002
  6746     0BB4  07BA               	addwf	___flmul@prod+2,f
  6747     0BB5                     u4002:
  6748     0BB5  082F               	movf	??___flmul+3,w
  6749     0BB6  1103               	clrz
  6750     0BB7  1803               	skipnc
  6751     0BB8  3E01               	addlw	1
  6752     0BB9  1903               	skipnz
  6753     0BBA  2BBC               	goto	u4003
  6754     0BBB  07BB               	addwf	___flmul@prod+3,f
  6755     0BBC                     u4003:
  6756     0BBC                     l2922:
  6757     0BBC  3008               	movlw	8
  6758     0BBD  00AC               	movwf	??___flmul
  6759     0BBE                     u4015:
  6760     0BBE  1003               	clrc
  6761     0BBF  0DB2               	rlf	___flmul@grs,f
  6762     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6763     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6764     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6765     0BC3  0BAC               	decfsz	??___flmul,f
  6766     0BC4  2BBE               	goto	u4015
  6767     0BC5                     l2924:
  6768     0BC5  0837               	movf	___flmul@bexp,w
  6769     0BC6  0736               	addwf	___flmul@aexp,w
  6770     0BC7  00AC               	movwf	??___flmul
  6771     0BC8  01AD               	clrf	??___flmul+1
  6772     0BC9  0DAD               	rlf	??___flmul+1,f
  6773     0BCA  082C               	movf	??___flmul,w
  6774     0BCB  3E82               	addlw	130
  6775     0BCC  00BC               	movwf	___flmul@temp
  6776     0BCD  082D               	movf	??___flmul+1,w
  6777     0BCE  1803               	skipnc
  6778     0BCF  3E01               	addlw	1
  6779     0BD0  3EFF               	addlw	255
  6780     0BD1  00BD               	movwf	___flmul@temp+1
  6781     0BD2  2BF0               	goto	l2936
  6782     0BD3                     l2926:
  6783     0BD3  3001               	movlw	1
  6784     0BD4  00AC               	movwf	??___flmul
  6785     0BD5                     u4025:
  6786     0BD5  1003               	clrc
  6787     0BD6  0DB8               	rlf	___flmul@prod,f
  6788     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6789     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6790     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6791     0BDA  0BAC               	decfsz	??___flmul,f
  6792     0BDB  2BD5               	goto	u4025
  6793     0BDC                     l2928:
  6794     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6795     0BDD  2BDF               	goto	u4031
  6796     0BDE  2BE0               	goto	u4030
  6797     0BDF                     u4031:
  6798     0BDF  2BE1               	goto	l2932
  6799     0BE0                     u4030:
  6800     0BE0                     l2930:
  6801     0BE0  1438               	bsf	___flmul@prod,0
  6802     0BE1                     l2932:
  6803     0BE1  3001               	movlw	1
  6804     0BE2  00AC               	movwf	??___flmul
  6805     0BE3                     u4045:
  6806     0BE3  1003               	clrc
  6807     0BE4  0DB2               	rlf	___flmul@grs,f
  6808     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6809     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6810     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6811     0BE8  0BAC               	decfsz	??___flmul,f
  6812     0BE9  2BE3               	goto	u4045
  6813     0BEA                     l2934:
  6814     0BEA  30FF               	movlw	255
  6815     0BEB  07BC               	addwf	___flmul@temp,f
  6816     0BEC  1803               	skipnc
  6817     0BED  0ABD               	incf	___flmul@temp+1,f
  6818     0BEE  30FF               	movlw	255
  6819     0BEF  07BD               	addwf	___flmul@temp+1,f
  6820     0BF0                     l2936:
  6821     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6822     0BF1  2BF3               	goto	u4051
  6823     0BF2  2BF4               	goto	u4050
  6824     0BF3                     u4051:
  6825     0BF3  2BD3               	goto	l2926
  6826     0BF4                     u4050:
  6827     0BF4                     l2938:
  6828     0BF4  01B6               	clrf	___flmul@aexp
  6829     0BF5                     l2940:
  6830     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6831     0BF6  2BF8               	goto	u4061
  6832     0BF7  2BF9               	goto	u4060
  6833     0BF8                     u4061:
  6834     0BF8  2C15               	goto	l2948
  6835     0BF9                     u4060:
  6836     0BF9                     l2942:
  6837     0BF9  30FF               	movlw	255
  6838     0BFA  0532               	andwf	___flmul@grs,w
  6839     0BFB  00AC               	movwf	??___flmul
  6840     0BFC  30FF               	movlw	255
  6841     0BFD  0533               	andwf	___flmul@grs+1,w
  6842     0BFE  00AD               	movwf	??___flmul+1
  6843     0BFF  30FF               	movlw	255
  6844     0C00  0534               	andwf	___flmul@grs+2,w
  6845     0C01  00AE               	movwf	??___flmul+2
  6846     0C02  307F               	movlw	127
  6847     0C03  0535               	andwf	___flmul@grs+3,w
  6848     0C04  00AF               	movwf	??___flmul+3
  6849     0C05  082F               	movf	??___flmul+3,w
  6850     0C06  042E               	iorwf	??___flmul+2,w
  6851     0C07  042D               	iorwf	??___flmul+1,w
  6852     0C08  042C               	iorwf	??___flmul,w
  6853     0C09  1903               	skipnz
  6854     0C0A  2C0C               	goto	u4071
  6855     0C0B  2C0D               	goto	u4070
  6856     0C0C                     u4071:
  6857     0C0C  2C10               	goto	l868
  6858     0C0D                     u4070:
  6859     0C0D                     l2944:
  6860     0C0D  01B6               	clrf	___flmul@aexp
  6861     0C0E  0AB6               	incf	___flmul@aexp,f
  6862     0C0F  2C15               	goto	l2948
  6863     0C10                     l868:
  6864     0C10  1C38               	btfss	___flmul@prod,0
  6865     0C11  2C13               	goto	u4081
  6866     0C12  2C14               	goto	u4080
  6867     0C13                     u4081:
  6868     0C13  2C15               	goto	l2948
  6869     0C14                     u4080:
  6870     0C14  2C0D               	goto	l2944
  6871     0C15                     l2948:
  6872     0C15  0836               	movf	___flmul@aexp,w
  6873     0C16  1903               	btfsc	3,2
  6874     0C17  2C19               	goto	u4091
  6875     0C18  2C1A               	goto	u4090
  6876     0C19                     u4091:
  6877     0C19  2C4B               	goto	l2958
  6878     0C1A                     u4090:
  6879     0C1A                     l2950:
  6880     0C1A  3001               	movlw	1
  6881     0C1B  07B8               	addwf	___flmul@prod,f
  6882     0C1C  3000               	movlw	0
  6883     0C1D  1803               	skipnc
  6884     0C1E  3001               	movlw	1
  6885     0C1F  07B9               	addwf	___flmul@prod+1,f
  6886     0C20  3000               	movlw	0
  6887     0C21  1803               	skipnc
  6888     0C22  3001               	movlw	1
  6889     0C23  07BA               	addwf	___flmul@prod+2,f
  6890     0C24  3000               	movlw	0
  6891     0C25  1803               	skipnc
  6892     0C26  3001               	movlw	1
  6893     0C27  07BB               	addwf	___flmul@prod+3,f
  6894     0C28                     l2952:
  6895     0C28  1C3B               	btfss	___flmul@prod+3,0
  6896     0C29  2C2B               	goto	u4101
  6897     0C2A  2C2C               	goto	u4100
  6898     0C2B                     u4101:
  6899     0C2B  2C4B               	goto	l2958
  6900     0C2C                     u4100:
  6901     0C2C                     l2954:
  6902     0C2C  0838               	movf	___flmul@prod,w
  6903     0C2D  00AC               	movwf	??___flmul
  6904     0C2E  0839               	movf	___flmul@prod+1,w
  6905     0C2F  00AD               	movwf	??___flmul+1
  6906     0C30  083A               	movf	___flmul@prod+2,w
  6907     0C31  00AE               	movwf	??___flmul+2
  6908     0C32  083B               	movf	___flmul@prod+3,w
  6909     0C33  00AF               	movwf	??___flmul+3
  6910     0C34  3001               	movlw	1
  6911     0C35  00B0               	movwf	??___flmul+4
  6912     0C36                     u4115:
  6913     0C36  0D2F               	rlf	??___flmul+3,w
  6914     0C37  0CAF               	rrf	??___flmul+3,f
  6915     0C38  0CAE               	rrf	??___flmul+2,f
  6916     0C39  0CAD               	rrf	??___flmul+1,f
  6917     0C3A  0CAC               	rrf	??___flmul,f
  6918     0C3B                     u4110:
  6919     0C3B  0BB0               	decfsz	??___flmul+4,f
  6920     0C3C  2C36               	goto	u4115
  6921     0C3D  082F               	movf	??___flmul+3,w
  6922     0C3E  00BB               	movwf	___flmul@prod+3
  6923     0C3F  082E               	movf	??___flmul+2,w
  6924     0C40  00BA               	movwf	___flmul@prod+2
  6925     0C41  082D               	movf	??___flmul+1,w
  6926     0C42  00B9               	movwf	___flmul@prod+1
  6927     0C43  082C               	movf	??___flmul,w
  6928     0C44  00B8               	movwf	___flmul@prod
  6929     0C45                     l2956:
  6930     0C45  3001               	movlw	1
  6931     0C46  07BC               	addwf	___flmul@temp,f
  6932     0C47  1803               	skipnc
  6933     0C48  0ABD               	incf	___flmul@temp+1,f
  6934     0C49  3000               	movlw	0
  6935     0C4A  07BD               	addwf	___flmul@temp+1,f
  6936     0C4B                     l2958:
  6937     0C4B  083D               	movf	___flmul@temp+1,w
  6938     0C4C  3A80               	xorlw	128
  6939     0C4D  00FF               	movwf	btemp+1
  6940     0C4E  3080               	movlw	128
  6941     0C4F  027F               	subwf	btemp+1,w
  6942     0C50  1D03               	skipz
  6943     0C51  2C54               	goto	u4125
  6944     0C52  30FF               	movlw	255
  6945     0C53  023C               	subwf	___flmul@temp,w
  6946     0C54                     u4125:
  6947     0C54  1C03               	skipc
  6948     0C55  2C57               	goto	u4121
  6949     0C56  2C58               	goto	u4120
  6950     0C57                     u4121:
  6951     0C57  2C63               	goto	l2962
  6952     0C58                     u4120:
  6953     0C58                     l2960:
  6954     0C58  307F               	movlw	127
  6955     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6956     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6957     0C5B  00BB               	movwf	___flmul@prod+3
  6958     0C5C  3080               	movlw	128
  6959     0C5D  00BA               	movwf	___flmul@prod+2
  6960     0C5E  3000               	movlw	0
  6961     0C5F  00B9               	movwf	___flmul@prod+1
  6962     0C60  3000               	movlw	0
  6963     0C61  00B8               	movwf	___flmul@prod
  6964     0C62  2C94               	goto	l874
  6965     0C63                     l2962:
  6966     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6967     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6968     0C65  083D               	movf	___flmul@temp+1,w
  6969     0C66  3A80               	xorlw	128
  6970     0C67  00FF               	movwf	btemp+1
  6971     0C68  3080               	movlw	128
  6972     0C69  027F               	subwf	btemp+1,w
  6973     0C6A  1D03               	skipz
  6974     0C6B  2C6E               	goto	u4135
  6975     0C6C  3001               	movlw	1
  6976     0C6D  023C               	subwf	___flmul@temp,w
  6977     0C6E                     u4135:
  6978     0C6E  1803               	skipnc
  6979     0C6F  2C71               	goto	u4131
  6980     0C70  2C72               	goto	u4130
  6981     0C71                     u4131:
  6982     0C71  2C7E               	goto	l2968
  6983     0C72                     u4130:
  6984     0C72                     l2964:
  6985     0C72  3000               	movlw	0
  6986     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6987     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6988     0C75  00BB               	movwf	___flmul@prod+3
  6989     0C76  3000               	movlw	0
  6990     0C77  00BA               	movwf	___flmul@prod+2
  6991     0C78  3000               	movlw	0
  6992     0C79  00B9               	movwf	___flmul@prod+1
  6993     0C7A  3000               	movlw	0
  6994     0C7B  00B8               	movwf	___flmul@prod
  6995     0C7C                     l2966:
  6996     0C7C  01B1               	clrf	___flmul@sign
  6997     0C7D  2C94               	goto	l874
  6998     0C7E                     l2968:
  6999     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  7000     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  7001     0C80  083C               	movf	___flmul@temp,w
  7002     0C81  00B7               	movwf	___flmul@bexp
  7003     0C82  30FF               	movlw	255
  7004     0C83  05B8               	andwf	___flmul@prod,f
  7005     0C84  30FF               	movlw	255
  7006     0C85  05B9               	andwf	___flmul@prod+1,f
  7007     0C86  307F               	movlw	127
  7008     0C87  05BA               	andwf	___flmul@prod+2,f
  7009     0C88  3000               	movlw	0
  7010     0C89  05BB               	andwf	___flmul@prod+3,f
  7011     0C8A                     l2970:
  7012     0C8A  1C37               	btfss	___flmul@bexp,0
  7013     0C8B  2C8D               	goto	u4141
  7014     0C8C  2C8E               	goto	u4140
  7015     0C8D                     u4141:
  7016     0C8D  2C8F               	goto	l2974
  7017     0C8E                     u4140:
  7018     0C8E                     l2972:
  7019     0C8E  17BA               	bsf	___flmul@prod+2,7
  7020     0C8F                     l2974:
  7021     0C8F  0837               	movf	___flmul@bexp,w
  7022     0C90  00AC               	movwf	??___flmul
  7023     0C91  1003               	clrc
  7024     0C92  0C2C               	rrf	??___flmul,w
  7025     0C93  00BB               	movwf	___flmul@prod+3
  7026     0C94                     l874:
  7027     0C94  0831               	movf	___flmul@sign,w
  7028     0C95  00AC               	movwf	??___flmul
  7029     0C96  082C               	movf	??___flmul,w
  7030     0C97  04BB               	iorwf	___flmul@prod+3,f
  7031     0C98                     l2976:
  7032     0C98  083B               	movf	___flmul@prod+3,w
  7033     0C99  00A7               	movwf	?___flmul+3
  7034     0C9A  083A               	movf	___flmul@prod+2,w
  7035     0C9B  00A6               	movwf	?___flmul+2
  7036     0C9C  0839               	movf	___flmul@prod+1,w
  7037     0C9D  00A5               	movwf	?___flmul+1
  7038     0C9E  0838               	movf	___flmul@prod,w
  7039     0C9F  00A4               	movwf	?___flmul
  7040     0CA0                     l862:
  7041     0CA0  0008               	return
  7042     0CA1                     __end_of___flmul:
  7043                           
  7044                           	psect	text10
  7045     1BD3                     __ptext10:	
  7046 ;; *************** function __Umul8_16 *****************
  7047 ;; Defined at:
  7048 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  multiplier      1    wreg     unsigned char 
  7051 ;;  multiplicand    1    0[COMMON] unsigned char 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  multiplier      1    8[COMMON] unsigned char 
  7054 ;;  word_mpld       2    6[COMMON] unsigned int 
  7055 ;;  product         2    4[COMMON] unsigned int 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  2    0[COMMON] unsigned int 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         2       0       0       0       0
  7066 ;;      Locals:         5       0       0       0       0
  7067 ;;      Temps:          2       0       0       0       0
  7068 ;;      Totals:         9       0       0       0       0
  7069 ;;Total ram usage:        9 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		___flmul
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078     1BD3                     __Umul8_16:	
  7079                           ;psect for function __Umul8_16
  7080                           
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7084                           ;__Umul8_16@multiplier stored from wreg
  7085     1BD3  00F8               	movwf	__Umul8_16@multiplier
  7086     1BD4                     l2468:
  7087     1BD4  01F4               	clrf	__Umul8_16@product
  7088     1BD5  01F5               	clrf	__Umul8_16@product+1
  7089     1BD6                     l2470:
  7090     1BD6  0870               	movf	__Umul8_16@multiplicand,w
  7091     1BD7  00F2               	movwf	??__Umul8_16
  7092     1BD8  01F3               	clrf	??__Umul8_16+1
  7093     1BD9  0872               	movf	??__Umul8_16,w
  7094     1BDA  00F6               	movwf	__Umul8_16@word_mpld
  7095     1BDB  0873               	movf	??__Umul8_16+1,w
  7096     1BDC  00F7               	movwf	__Umul8_16@word_mpld+1
  7097     1BDD                     l2472:
  7098     1BDD  1C78               	btfss	__Umul8_16@multiplier,0
  7099     1BDE  2BE0               	goto	u2901
  7100     1BDF  2BE1               	goto	u2900
  7101     1BE0                     u2901:
  7102     1BE0  2BE7               	goto	l881
  7103     1BE1                     u2900:
  7104     1BE1                     l2474:
  7105     1BE1  0876               	movf	__Umul8_16@word_mpld,w
  7106     1BE2  07F4               	addwf	__Umul8_16@product,f
  7107     1BE3  1803               	skipnc
  7108     1BE4  0AF5               	incf	__Umul8_16@product+1,f
  7109     1BE5  0877               	movf	__Umul8_16@word_mpld+1,w
  7110     1BE6  07F5               	addwf	__Umul8_16@product+1,f
  7111     1BE7                     l881:
  7112     1BE7  3001               	movlw	1
  7113     1BE8                     u2915:
  7114     1BE8  1003               	clrc
  7115     1BE9  0DF6               	rlf	__Umul8_16@word_mpld,f
  7116     1BEA  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7117     1BEB  3EFF               	addlw	-1
  7118     1BEC  1D03               	skipz
  7119     1BED  2BE8               	goto	u2915
  7120     1BEE  1003               	clrc
  7121     1BEF  0CF8               	rrf	__Umul8_16@multiplier,f
  7122     1BF0                     l2476:
  7123     1BF0  0878               	movf	__Umul8_16@multiplier,w
  7124     1BF1  1D03               	btfss	3,2
  7125     1BF2  2BF4               	goto	u2921
  7126     1BF3  2BF5               	goto	u2920
  7127     1BF4                     u2921:
  7128     1BF4  2BDD               	goto	l2472
  7129     1BF5                     u2920:
  7130     1BF5                     l2478:
  7131     1BF5  0875               	movf	__Umul8_16@product+1,w
  7132     1BF6  00F1               	movwf	?__Umul8_16+1
  7133     1BF7  0874               	movf	__Umul8_16@product,w
  7134     1BF8  00F0               	movwf	?__Umul8_16
  7135     1BF9                     l883:
  7136     1BF9  0008               	return
  7137     1BFA                     __end_of__Umul8_16:
  7138                           
  7139                           	psect	text11
  7140     103D                     __ptext11:	
  7141 ;; *************** function __tdiv_to_l_ *****************
  7142 ;; Defined at:
  7143 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  f1              4    0[COMMON] float 
  7146 ;;  f2              4    4[COMMON] float 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  quot            4    0[BANK0 ] unsigned long 
  7149 ;;  exp1            1    5[BANK0 ] unsigned char 
  7150 ;;  cntr            1    4[BANK0 ] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  4    0[COMMON] unsigned long 
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7160 ;;      Params:         8       0       0       0       0
  7161 ;;      Locals:         0       6       0       0       0
  7162 ;;      Temps:          3       0       0       0       0
  7163 ;;      Totals:        11       6       0       0       0
  7164 ;;Total ram usage:       17 bytes
  7165 ;; Hardware stack levels used: 1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_sprintf
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173     103D                     __tdiv_to_l_:	
  7174                           ;psect for function __tdiv_to_l_
  7175                           
  7176     103D                     l3100:	
  7177                           ;incstack = 0
  7178                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7179                           
  7180     103D  0870               	movf	__tdiv_to_l_@f1,w
  7181     103E  00F8               	movwf	??__tdiv_to_l_
  7182     103F  0871               	movf	__tdiv_to_l_@f1+1,w
  7183     1040  00F9               	movwf	??__tdiv_to_l_+1
  7184     1041  0872               	movf	__tdiv_to_l_@f1+2,w
  7185     1042  00FA               	movwf	??__tdiv_to_l_+2
  7186     1043  1003               	clrc
  7187     1044  0D79               	rlf	??__tdiv_to_l_+1,w
  7188     1045  0D7A               	rlf	??__tdiv_to_l_+2,w
  7189     1046  1283               	bcf	3,5	;RP0=0, select bank0
  7190     1047  1303               	bcf	3,6	;RP1=0, select bank0
  7191     1048  00A5               	movwf	__tdiv_to_l_@exp1
  7192     1049  0825               	movf	__tdiv_to_l_@exp1,w
  7193     104A  1D03               	btfss	3,2
  7194     104B  284D               	goto	u4461
  7195     104C  284E               	goto	u4460
  7196     104D                     u4461:
  7197     104D  2857               	goto	l3106
  7198     104E                     u4460:
  7199     104E                     l3102:
  7200     104E  3000               	movlw	0
  7201     104F  00F3               	movwf	?__tdiv_to_l_+3
  7202     1050  3000               	movlw	0
  7203     1051  00F2               	movwf	?__tdiv_to_l_+2
  7204     1052  3000               	movlw	0
  7205     1053  00F1               	movwf	?__tdiv_to_l_+1
  7206     1054  3000               	movlw	0
  7207     1055  00F0               	movwf	?__tdiv_to_l_
  7208     1056  28F3               	goto	l656
  7209     1057                     l3106:
  7210     1057  0874               	movf	__tdiv_to_l_@f2,w
  7211     1058  00F8               	movwf	??__tdiv_to_l_
  7212     1059  0875               	movf	__tdiv_to_l_@f2+1,w
  7213     105A  00F9               	movwf	??__tdiv_to_l_+1
  7214     105B  0876               	movf	__tdiv_to_l_@f2+2,w
  7215     105C  00FA               	movwf	??__tdiv_to_l_+2
  7216     105D  1003               	clrc
  7217     105E  0D79               	rlf	??__tdiv_to_l_+1,w
  7218     105F  0D7A               	rlf	??__tdiv_to_l_+2,w
  7219     1060  00A4               	movwf	__tdiv_to_l_@cntr
  7220     1061  0824               	movf	__tdiv_to_l_@cntr,w
  7221     1062  1D03               	btfss	3,2
  7222     1063  2865               	goto	u4471
  7223     1064  2866               	goto	u4470
  7224     1065                     u4471:
  7225     1065  2867               	goto	l657
  7226     1066                     u4470:
  7227     1066  284E               	goto	l3102
  7228     1067                     l657:
  7229     1067  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7230     1068                     l3112:
  7231     1068  30FF               	movlw	255
  7232     1069  05F0               	andwf	__tdiv_to_l_@f1,f
  7233     106A  30FF               	movlw	255
  7234     106B  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7235     106C  3000               	movlw	0
  7236     106D  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7237     106E                     l3114:
  7238     106E  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7239     106F  30FF               	movlw	255
  7240     1070  05F4               	andwf	__tdiv_to_l_@f2,f
  7241     1071  30FF               	movlw	255
  7242     1072  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7243     1073  3000               	movlw	0
  7244     1074  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7245     1075  3000               	movlw	0
  7246     1076  00A3               	movwf	__tdiv_to_l_@quot+3
  7247     1077  3000               	movlw	0
  7248     1078  00A2               	movwf	__tdiv_to_l_@quot+2
  7249     1079  3000               	movlw	0
  7250     107A  00A1               	movwf	__tdiv_to_l_@quot+1
  7251     107B  3000               	movlw	0
  7252     107C  00A0               	movwf	__tdiv_to_l_@quot
  7253     107D                     l3116:
  7254     107D  307F               	movlw	127
  7255     107E  02A5               	subwf	__tdiv_to_l_@exp1,f
  7256     107F                     l3118:
  7257     107F  3098               	movlw	152
  7258     1080  0724               	addwf	__tdiv_to_l_@cntr,w
  7259     1081  00F8               	movwf	??__tdiv_to_l_
  7260     1082  0878               	movf	??__tdiv_to_l_,w
  7261     1083  02A5               	subwf	__tdiv_to_l_@exp1,f
  7262     1084  3018               	movlw	24
  7263     1085  00A4               	movwf	__tdiv_to_l_@cntr
  7264     1086                     l3120:
  7265     1086  3001               	movlw	1
  7266     1087  00F8               	movwf	??__tdiv_to_l_
  7267     1088                     u4485:
  7268     1088  1003               	clrc
  7269     1089  0DA0               	rlf	__tdiv_to_l_@quot,f
  7270     108A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7271     108B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7272     108C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7273     108D  0BF8               	decfsz	??__tdiv_to_l_,f
  7274     108E  2888               	goto	u4485
  7275     108F                     l3122:
  7276     108F  0876               	movf	__tdiv_to_l_@f2+2,w
  7277     1090  0272               	subwf	__tdiv_to_l_@f1+2,w
  7278     1091  1D03               	skipz
  7279     1092  2899               	goto	u4495
  7280     1093  0875               	movf	__tdiv_to_l_@f2+1,w
  7281     1094  0271               	subwf	__tdiv_to_l_@f1+1,w
  7282     1095  1D03               	skipz
  7283     1096  2899               	goto	u4495
  7284     1097  0874               	movf	__tdiv_to_l_@f2,w
  7285     1098  0270               	subwf	__tdiv_to_l_@f1,w
  7286     1099                     u4495:
  7287     1099  1C03               	skipc
  7288     109A  289C               	goto	u4491
  7289     109B  289D               	goto	u4490
  7290     109C                     u4491:
  7291     109C  28A8               	goto	l3128
  7292     109D                     u4490:
  7293     109D                     l3124:
  7294     109D  0874               	movf	__tdiv_to_l_@f2,w
  7295     109E  02F0               	subwf	__tdiv_to_l_@f1,f
  7296     109F  0875               	movf	__tdiv_to_l_@f2+1,w
  7297     10A0  1C03               	skipc
  7298     10A1  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7299     10A2  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7300     10A3  0876               	movf	__tdiv_to_l_@f2+2,w
  7301     10A4  1C03               	skipc
  7302     10A5  0A76               	incf	__tdiv_to_l_@f2+2,w
  7303     10A6  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7304     10A7                     l3126:
  7305     10A7  1420               	bsf	__tdiv_to_l_@quot,0
  7306     10A8                     l3128:
  7307     10A8  3001               	movlw	1
  7308     10A9                     u4505:
  7309     10A9  1003               	clrc
  7310     10AA  0DF0               	rlf	__tdiv_to_l_@f1,f
  7311     10AB  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7312     10AC  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7313     10AD  3EFF               	addlw	-1
  7314     10AE  1D03               	skipz
  7315     10AF  28A9               	goto	u4505
  7316     10B0                     l3130:
  7317     10B0  3001               	movlw	1
  7318     10B1  02A4               	subwf	__tdiv_to_l_@cntr,f
  7319     10B2  1D03               	btfss	3,2
  7320     10B3  28B5               	goto	u4511
  7321     10B4  28B6               	goto	u4510
  7322     10B5                     u4511:
  7323     10B5  2886               	goto	l3120
  7324     10B6                     u4510:
  7325     10B6                     l660:
  7326     10B6  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7327     10B7  28B9               	goto	u4521
  7328     10B8  28BA               	goto	u4520
  7329     10B9                     u4521:
  7330     10B9  28D4               	goto	l3140
  7331     10BA                     u4520:
  7332     10BA                     l3132:
  7333     10BA  0825               	movf	__tdiv_to_l_@exp1,w
  7334     10BB  3A80               	xorlw	128
  7335     10BC  3E97               	addlw	151
  7336     10BD  1803               	skipnc
  7337     10BE  28C0               	goto	u4531
  7338     10BF  28C1               	goto	u4530
  7339     10C0                     u4531:
  7340     10C0  28C2               	goto	l3138
  7341     10C1                     u4530:
  7342     10C1  284E               	goto	l3102
  7343     10C2                     l3138:
  7344     10C2  3001               	movlw	1
  7345     10C3                     u4545:
  7346     10C3  1003               	clrc
  7347     10C4  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7348     10C5  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7349     10C6  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7350     10C7  0CA0               	rrf	__tdiv_to_l_@quot,f
  7351     10C8  3EFF               	addlw	-1
  7352     10C9  1D03               	skipz
  7353     10CA  28C3               	goto	u4545
  7354     10CB  3001               	movlw	1
  7355     10CC  00F8               	movwf	??__tdiv_to_l_
  7356     10CD  0878               	movf	??__tdiv_to_l_,w
  7357     10CE  07A5               	addwf	__tdiv_to_l_@exp1,f
  7358     10CF  1D03               	btfss	3,2
  7359     10D0  28D2               	goto	u4551
  7360     10D1  28D3               	goto	u4550
  7361     10D2                     u4551:
  7362     10D2  28C2               	goto	l3138
  7363     10D3                     u4550:
  7364     10D3  28EB               	goto	l3148
  7365     10D4                     l3140:
  7366     10D4  3018               	movlw	24
  7367     10D5  0225               	subwf	__tdiv_to_l_@exp1,w
  7368     10D6  1C03               	skipc
  7369     10D7  28D9               	goto	u4561
  7370     10D8  28DA               	goto	u4560
  7371     10D9                     u4561:
  7372     10D9  28E6               	goto	l667
  7373     10DA                     u4560:
  7374     10DA  284E               	goto	l3102
  7375     10DB                     l3146:
  7376     10DB  3001               	movlw	1
  7377     10DC  00F8               	movwf	??__tdiv_to_l_
  7378     10DD                     u4575:
  7379     10DD  1003               	clrc
  7380     10DE  0DA0               	rlf	__tdiv_to_l_@quot,f
  7381     10DF  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7382     10E0  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7383     10E1  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7384     10E2  0BF8               	decfsz	??__tdiv_to_l_,f
  7385     10E3  28DD               	goto	u4575
  7386     10E4  3001               	movlw	1
  7387     10E5  02A5               	subwf	__tdiv_to_l_@exp1,f
  7388     10E6                     l667:
  7389     10E6  0825               	movf	__tdiv_to_l_@exp1,w
  7390     10E7  1D03               	btfss	3,2
  7391     10E8  28EA               	goto	u4581
  7392     10E9  28EB               	goto	u4580
  7393     10EA                     u4581:
  7394     10EA  28DB               	goto	l3146
  7395     10EB                     u4580:
  7396     10EB                     l3148:
  7397     10EB  0823               	movf	__tdiv_to_l_@quot+3,w
  7398     10EC  00F3               	movwf	?__tdiv_to_l_+3
  7399     10ED  0822               	movf	__tdiv_to_l_@quot+2,w
  7400     10EE  00F2               	movwf	?__tdiv_to_l_+2
  7401     10EF  0821               	movf	__tdiv_to_l_@quot+1,w
  7402     10F0  00F1               	movwf	?__tdiv_to_l_+1
  7403     10F1  0820               	movf	__tdiv_to_l_@quot,w
  7404     10F2  00F0               	movwf	?__tdiv_to_l_
  7405     10F3                     l656:
  7406     10F3  0008               	return
  7407     10F4                     __end_of__tdiv_to_l_:
  7408                           
  7409                           	psect	text12
  7410     08A4                     __ptext12:	
  7411 ;; *************** function __div_to_l_ *****************
  7412 ;; Defined at:
  7413 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  f1              4    0[COMMON] unsigned long 
  7416 ;;  f2              4    4[COMMON] unsigned long 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  quot            4    0[BANK0 ] unsigned long 
  7419 ;;  exp1            1    5[BANK0 ] unsigned char 
  7420 ;;  cntr            1    4[BANK0 ] unsigned char 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  4    0[COMMON] unsigned long 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7430 ;;      Params:         8       0       0       0       0
  7431 ;;      Locals:         0       6       0       0       0
  7432 ;;      Temps:          1       0       0       0       0
  7433 ;;      Totals:         9       6       0       0       0
  7434 ;;Total ram usage:       15 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_sprintf
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443     08A4                     __div_to_l_:	
  7444                           ;psect for function __div_to_l_
  7445                           
  7446     08A4                     l3152:	
  7447                           ;incstack = 0
  7448                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7449                           
  7450     08A4  1003               	clrc
  7451     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  7452     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  7453     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  7454     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  7455     08A9  00A5               	movwf	__div_to_l_@exp1
  7456     08AA  0825               	movf	__div_to_l_@exp1,w
  7457     08AB  1D03               	btfss	3,2
  7458     08AC  28AE               	goto	u4591
  7459     08AD  28AF               	goto	u4590
  7460     08AE                     u4591:
  7461     08AE  28B8               	goto	l3158
  7462     08AF                     u4590:
  7463     08AF                     l3154:
  7464     08AF  3000               	movlw	0
  7465     08B0  00F3               	movwf	?__div_to_l_+3
  7466     08B1  3000               	movlw	0
  7467     08B2  00F2               	movwf	?__div_to_l_+2
  7468     08B3  3000               	movlw	0
  7469     08B4  00F1               	movwf	?__div_to_l_+1
  7470     08B5  3000               	movlw	0
  7471     08B6  00F0               	movwf	?__div_to_l_
  7472     08B7  295B               	goto	l609
  7473     08B8                     l3158:
  7474     08B8  1003               	clrc
  7475     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  7476     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  7477     08BB  00A4               	movwf	__div_to_l_@cntr
  7478     08BC  0824               	movf	__div_to_l_@cntr,w
  7479     08BD  1D03               	btfss	3,2
  7480     08BE  28C0               	goto	u4601
  7481     08BF  28C1               	goto	u4600
  7482     08C0                     u4601:
  7483     08C0  28C2               	goto	l610
  7484     08C1                     u4600:
  7485     08C1  28AF               	goto	l3154
  7486     08C2                     l610:
  7487     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  7488     08C3                     l3164:
  7489     08C3  30FF               	movlw	255
  7490     08C4  05F0               	andwf	__div_to_l_@f1,f
  7491     08C5  30FF               	movlw	255
  7492     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  7493     08C7  30FF               	movlw	255
  7494     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  7495     08C9  3000               	movlw	0
  7496     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  7497     08CB                     l3166:
  7498     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  7499     08CC  30FF               	movlw	255
  7500     08CD  05F4               	andwf	__div_to_l_@f2,f
  7501     08CE  30FF               	movlw	255
  7502     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  7503     08D0  30FF               	movlw	255
  7504     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  7505     08D2  3000               	movlw	0
  7506     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  7507     08D4  3000               	movlw	0
  7508     08D5  00A3               	movwf	__div_to_l_@quot+3
  7509     08D6  3000               	movlw	0
  7510     08D7  00A2               	movwf	__div_to_l_@quot+2
  7511     08D8  3000               	movlw	0
  7512     08D9  00A1               	movwf	__div_to_l_@quot+1
  7513     08DA  3000               	movlw	0
  7514     08DB  00A0               	movwf	__div_to_l_@quot
  7515     08DC                     l3168:
  7516     08DC  307F               	movlw	127
  7517     08DD  02A5               	subwf	__div_to_l_@exp1,f
  7518     08DE                     l3170:
  7519     08DE  30A0               	movlw	160
  7520     08DF  0724               	addwf	__div_to_l_@cntr,w
  7521     08E0  00F8               	movwf	??__div_to_l_
  7522     08E1  0878               	movf	??__div_to_l_,w
  7523     08E2  02A5               	subwf	__div_to_l_@exp1,f
  7524     08E3  3020               	movlw	32
  7525     08E4  00A4               	movwf	__div_to_l_@cntr
  7526     08E5                     l3172:
  7527     08E5  3001               	movlw	1
  7528     08E6  00F8               	movwf	??__div_to_l_
  7529     08E7                     u4615:
  7530     08E7  1003               	clrc
  7531     08E8  0DA0               	rlf	__div_to_l_@quot,f
  7532     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  7533     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  7534     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  7535     08EC  0BF8               	decfsz	??__div_to_l_,f
  7536     08ED  28E7               	goto	u4615
  7537     08EE                     l3174:
  7538     08EE  0877               	movf	__div_to_l_@f2+3,w
  7539     08EF  0273               	subwf	__div_to_l_@f1+3,w
  7540     08F0  1D03               	skipz
  7541     08F1  28FC               	goto	u4625
  7542     08F2  0876               	movf	__div_to_l_@f2+2,w
  7543     08F3  0272               	subwf	__div_to_l_@f1+2,w
  7544     08F4  1D03               	skipz
  7545     08F5  28FC               	goto	u4625
  7546     08F6  0875               	movf	__div_to_l_@f2+1,w
  7547     08F7  0271               	subwf	__div_to_l_@f1+1,w
  7548     08F8  1D03               	skipz
  7549     08F9  28FC               	goto	u4625
  7550     08FA  0874               	movf	__div_to_l_@f2,w
  7551     08FB  0270               	subwf	__div_to_l_@f1,w
  7552     08FC                     u4625:
  7553     08FC  1C03               	skipc
  7554     08FD  28FF               	goto	u4621
  7555     08FE  2900               	goto	u4620
  7556     08FF                     u4621:
  7557     08FF  290F               	goto	l3180
  7558     0900                     u4620:
  7559     0900                     l3176:
  7560     0900  0874               	movf	__div_to_l_@f2,w
  7561     0901  02F0               	subwf	__div_to_l_@f1,f
  7562     0902  0875               	movf	__div_to_l_@f2+1,w
  7563     0903  1C03               	skipc
  7564     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  7565     0905  02F1               	subwf	__div_to_l_@f1+1,f
  7566     0906  0876               	movf	__div_to_l_@f2+2,w
  7567     0907  1C03               	skipc
  7568     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  7569     0909  02F2               	subwf	__div_to_l_@f1+2,f
  7570     090A  0877               	movf	__div_to_l_@f2+3,w
  7571     090B  1C03               	skipc
  7572     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  7573     090D  02F3               	subwf	__div_to_l_@f1+3,f
  7574     090E                     l3178:
  7575     090E  1420               	bsf	__div_to_l_@quot,0
  7576     090F                     l3180:
  7577     090F  3001               	movlw	1
  7578     0910  00F8               	movwf	??__div_to_l_
  7579     0911                     u4635:
  7580     0911  1003               	clrc
  7581     0912  0DF0               	rlf	__div_to_l_@f1,f
  7582     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  7583     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  7584     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  7585     0916  0BF8               	decfsz	??__div_to_l_,f
  7586     0917  2911               	goto	u4635
  7587     0918                     l3182:
  7588     0918  3001               	movlw	1
  7589     0919  02A4               	subwf	__div_to_l_@cntr,f
  7590     091A  1D03               	btfss	3,2
  7591     091B  291D               	goto	u4641
  7592     091C  291E               	goto	u4640
  7593     091D                     u4641:
  7594     091D  28E5               	goto	l3172
  7595     091E                     u4640:
  7596     091E                     l613:
  7597     091E  1FA5               	btfss	__div_to_l_@exp1,7
  7598     091F  2921               	goto	u4651
  7599     0920  2922               	goto	u4650
  7600     0921                     u4651:
  7601     0921  293C               	goto	l3192
  7602     0922                     u4650:
  7603     0922                     l3184:
  7604     0922  0825               	movf	__div_to_l_@exp1,w
  7605     0923  3A80               	xorlw	128
  7606     0924  3E9F               	addlw	159
  7607     0925  1803               	skipnc
  7608     0926  2928               	goto	u4661
  7609     0927  2929               	goto	u4660
  7610     0928                     u4661:
  7611     0928  292A               	goto	l3190
  7612     0929                     u4660:
  7613     0929  28AF               	goto	l3154
  7614     092A                     l3190:
  7615     092A  3001               	movlw	1
  7616     092B                     u4675:
  7617     092B  1003               	clrc
  7618     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  7619     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  7620     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  7621     092F  0CA0               	rrf	__div_to_l_@quot,f
  7622     0930  3EFF               	addlw	-1
  7623     0931  1D03               	skipz
  7624     0932  292B               	goto	u4675
  7625     0933  3001               	movlw	1
  7626     0934  00F8               	movwf	??__div_to_l_
  7627     0935  0878               	movf	??__div_to_l_,w
  7628     0936  07A5               	addwf	__div_to_l_@exp1,f
  7629     0937  1D03               	btfss	3,2
  7630     0938  293A               	goto	u4681
  7631     0939  293B               	goto	u4680
  7632     093A                     u4681:
  7633     093A  292A               	goto	l3190
  7634     093B                     u4680:
  7635     093B  2953               	goto	l3200
  7636     093C                     l3192:
  7637     093C  3020               	movlw	32
  7638     093D  0225               	subwf	__div_to_l_@exp1,w
  7639     093E  1C03               	skipc
  7640     093F  2941               	goto	u4691
  7641     0940  2942               	goto	u4690
  7642     0941                     u4691:
  7643     0941  294E               	goto	l620
  7644     0942                     u4690:
  7645     0942  28AF               	goto	l3154
  7646     0943                     l3198:
  7647     0943  3001               	movlw	1
  7648     0944  00F8               	movwf	??__div_to_l_
  7649     0945                     u4705:
  7650     0945  1003               	clrc
  7651     0946  0DA0               	rlf	__div_to_l_@quot,f
  7652     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  7653     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  7654     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  7655     094A  0BF8               	decfsz	??__div_to_l_,f
  7656     094B  2945               	goto	u4705
  7657     094C  3001               	movlw	1
  7658     094D  02A5               	subwf	__div_to_l_@exp1,f
  7659     094E                     l620:
  7660     094E  0825               	movf	__div_to_l_@exp1,w
  7661     094F  1D03               	btfss	3,2
  7662     0950  2952               	goto	u4711
  7663     0951  2953               	goto	u4710
  7664     0952                     u4711:
  7665     0952  2943               	goto	l3198
  7666     0953                     u4710:
  7667     0953                     l3200:
  7668     0953  0823               	movf	__div_to_l_@quot+3,w
  7669     0954  00F3               	movwf	?__div_to_l_+3
  7670     0955  0822               	movf	__div_to_l_@quot+2,w
  7671     0956  00F2               	movwf	?__div_to_l_+2
  7672     0957  0821               	movf	__div_to_l_@quot+1,w
  7673     0958  00F1               	movwf	?__div_to_l_+1
  7674     0959  0820               	movf	__div_to_l_@quot,w
  7675     095A  00F0               	movwf	?__div_to_l_
  7676     095B                     l609:
  7677     095B  0008               	return
  7678     095C                     __end_of__div_to_l_:
  7679                           
  7680                           	psect	text13
  7681     00F6                     __ptext13:	
  7682 ;; *************** function ___xxtofl *****************
  7683 ;; Defined at:
  7684 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  sign            1    wreg     unsigned char 
  7687 ;;  val             4    6[COMMON] long 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  sign            1    0[BANK0 ] unsigned char 
  7690 ;;  arg             4    2[BANK0 ] unsigned long 
  7691 ;;  exp             1    1[BANK0 ] unsigned char 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  4    6[COMMON] unsigned char 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7701 ;;      Params:         4       0       0       0       0
  7702 ;;      Locals:         0       6       0       0       0
  7703 ;;      Temps:          4       0       0       0       0
  7704 ;;      Totals:         8       6       0       0       0
  7705 ;;Total ram usage:       14 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; This function calls:
  7708 ;;		Nothing
  7709 ;; This function is called by:
  7710 ;;		_main
  7711 ;;		_sprintf
  7712 ;;		_medir_distancia
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716     00F6                     ___xxtofl:	
  7717                           ;psect for function ___xxtofl
  7718                           
  7719                           
  7720                           ;incstack = 0
  7721                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7722                           ;___xxtofl@sign stored from wreg
  7723     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  7724     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  7725     00F8  00A0               	movwf	___xxtofl@sign
  7726     00F9                     l3320:
  7727     00F9  0820               	movf	___xxtofl@sign,w
  7728     00FA  1903               	btfsc	3,2
  7729     00FB  28FD               	goto	u5031
  7730     00FC  28FE               	goto	u5030
  7731     00FD                     u5031:
  7732     00FD  2912               	goto	l3326
  7733     00FE                     u5030:
  7734     00FE                     l3322:
  7735     00FE  1FF9               	btfss	___xxtofl@val+3,7
  7736     00FF  2901               	goto	u5041
  7737     0100  2902               	goto	u5040
  7738     0101                     u5041:
  7739     0101  2912               	goto	l3326
  7740     0102                     u5040:
  7741     0102                     l3324:
  7742     0102  0976               	comf	___xxtofl@val,w
  7743     0103  00A2               	movwf	___xxtofl@arg
  7744     0104  0977               	comf	___xxtofl@val+1,w
  7745     0105  00A3               	movwf	___xxtofl@arg+1
  7746     0106  0978               	comf	___xxtofl@val+2,w
  7747     0107  00A4               	movwf	___xxtofl@arg+2
  7748     0108  0979               	comf	___xxtofl@val+3,w
  7749     0109  00A5               	movwf	___xxtofl@arg+3
  7750     010A  0AA2               	incf	___xxtofl@arg,f
  7751     010B  1903               	skipnz
  7752     010C  0AA3               	incf	___xxtofl@arg+1,f
  7753     010D  1903               	skipnz
  7754     010E  0AA4               	incf	___xxtofl@arg+2,f
  7755     010F  1903               	skipnz
  7756     0110  0AA5               	incf	___xxtofl@arg+3,f
  7757     0111  291A               	goto	l906
  7758     0112                     l3326:
  7759     0112  0879               	movf	___xxtofl@val+3,w
  7760     0113  00A5               	movwf	___xxtofl@arg+3
  7761     0114  0878               	movf	___xxtofl@val+2,w
  7762     0115  00A4               	movwf	___xxtofl@arg+2
  7763     0116  0877               	movf	___xxtofl@val+1,w
  7764     0117  00A3               	movwf	___xxtofl@arg+1
  7765     0118  0876               	movf	___xxtofl@val,w
  7766     0119  00A2               	movwf	___xxtofl@arg
  7767     011A                     l906:
  7768     011A  0879               	movf	___xxtofl@val+3,w
  7769     011B  0478               	iorwf	___xxtofl@val+2,w
  7770     011C  0477               	iorwf	___xxtofl@val+1,w
  7771     011D  0476               	iorwf	___xxtofl@val,w
  7772     011E  1D03               	skipz
  7773     011F  2921               	goto	u5051
  7774     0120  2922               	goto	u5050
  7775     0121                     u5051:
  7776     0121  292B               	goto	l3332
  7777     0122                     u5050:
  7778     0122                     l3328:
  7779     0122  3000               	movlw	0
  7780     0123  00F9               	movwf	?___xxtofl+3
  7781     0124  3000               	movlw	0
  7782     0125  00F8               	movwf	?___xxtofl+2
  7783     0126  3000               	movlw	0
  7784     0127  00F7               	movwf	?___xxtofl+1
  7785     0128  3000               	movlw	0
  7786     0129  00F6               	movwf	?___xxtofl
  7787     012A  29AF               	goto	l908
  7788     012B                     l3332:
  7789     012B  3096               	movlw	150
  7790     012C  00A1               	movwf	___xxtofl@exp
  7791     012D  293B               	goto	l3336
  7792     012E                     l3334:
  7793     012E  3001               	movlw	1
  7794     012F  00FA               	movwf	??___xxtofl
  7795     0130  087A               	movf	??___xxtofl,w
  7796     0131  07A1               	addwf	___xxtofl@exp,f
  7797     0132  3001               	movlw	1
  7798     0133                     u5065:
  7799     0133  1003               	clrc
  7800     0134  0CA5               	rrf	___xxtofl@arg+3,f
  7801     0135  0CA4               	rrf	___xxtofl@arg+2,f
  7802     0136  0CA3               	rrf	___xxtofl@arg+1,f
  7803     0137  0CA2               	rrf	___xxtofl@arg,f
  7804     0138  3EFF               	addlw	-1
  7805     0139  1D03               	skipz
  7806     013A  2933               	goto	u5065
  7807     013B                     l3336:
  7808     013B  30FE               	movlw	254
  7809     013C  0525               	andwf	___xxtofl@arg+3,w
  7810     013D  1D03               	btfss	3,2
  7811     013E  2940               	goto	u5071
  7812     013F  2941               	goto	u5070
  7813     0140                     u5071:
  7814     0140  292E               	goto	l3334
  7815     0141                     u5070:
  7816     0141  295D               	goto	l912
  7817     0142                     l3338:
  7818     0142  3001               	movlw	1
  7819     0143  00FA               	movwf	??___xxtofl
  7820     0144  087A               	movf	??___xxtofl,w
  7821     0145  07A1               	addwf	___xxtofl@exp,f
  7822     0146                     l3340:
  7823     0146  3001               	movlw	1
  7824     0147  07A2               	addwf	___xxtofl@arg,f
  7825     0148  3000               	movlw	0
  7826     0149  1803               	skipnc
  7827     014A  3001               	movlw	1
  7828     014B  07A3               	addwf	___xxtofl@arg+1,f
  7829     014C  3000               	movlw	0
  7830     014D  1803               	skipnc
  7831     014E  3001               	movlw	1
  7832     014F  07A4               	addwf	___xxtofl@arg+2,f
  7833     0150  3000               	movlw	0
  7834     0151  1803               	skipnc
  7835     0152  3001               	movlw	1
  7836     0153  07A5               	addwf	___xxtofl@arg+3,f
  7837     0154                     l3342:
  7838     0154  3001               	movlw	1
  7839     0155                     u5085:
  7840     0155  1003               	clrc
  7841     0156  0CA5               	rrf	___xxtofl@arg+3,f
  7842     0157  0CA4               	rrf	___xxtofl@arg+2,f
  7843     0158  0CA3               	rrf	___xxtofl@arg+1,f
  7844     0159  0CA2               	rrf	___xxtofl@arg,f
  7845     015A  3EFF               	addlw	-1
  7846     015B  1D03               	skipz
  7847     015C  2955               	goto	u5085
  7848     015D                     l912:
  7849     015D  30FF               	movlw	255
  7850     015E  0525               	andwf	___xxtofl@arg+3,w
  7851     015F  1D03               	btfss	3,2
  7852     0160  2962               	goto	u5091
  7853     0161  2963               	goto	u5090
  7854     0162                     u5091:
  7855     0162  2942               	goto	l3338
  7856     0163                     u5090:
  7857     0163  296F               	goto	l3346
  7858     0164                     l3344:
  7859     0164  3001               	movlw	1
  7860     0165  02A1               	subwf	___xxtofl@exp,f
  7861     0166  3001               	movlw	1
  7862     0167  00FA               	movwf	??___xxtofl
  7863     0168                     u5105:
  7864     0168  1003               	clrc
  7865     0169  0DA2               	rlf	___xxtofl@arg,f
  7866     016A  0DA3               	rlf	___xxtofl@arg+1,f
  7867     016B  0DA4               	rlf	___xxtofl@arg+2,f
  7868     016C  0DA5               	rlf	___xxtofl@arg+3,f
  7869     016D  0BFA               	decfsz	??___xxtofl,f
  7870     016E  2968               	goto	u5105
  7871     016F                     l3346:
  7872     016F  1BA4               	btfsc	___xxtofl@arg+2,7
  7873     0170  2972               	goto	u5111
  7874     0171  2973               	goto	u5110
  7875     0172                     u5111:
  7876     0172  2979               	goto	l919
  7877     0173                     u5110:
  7878     0173                     l3348:
  7879     0173  3002               	movlw	2
  7880     0174  0221               	subwf	___xxtofl@exp,w
  7881     0175  1803               	skipnc
  7882     0176  2978               	goto	u5121
  7883     0177  2979               	goto	u5120
  7884     0178                     u5121:
  7885     0178  2964               	goto	l3344
  7886     0179                     u5120:
  7887     0179                     l919:
  7888     0179  1821               	btfsc	___xxtofl@exp,0
  7889     017A  297C               	goto	u5131
  7890     017B  297D               	goto	u5130
  7891     017C                     u5131:
  7892     017C  2985               	goto	l920
  7893     017D                     u5130:
  7894     017D                     l3350:
  7895     017D  30FF               	movlw	255
  7896     017E  05A2               	andwf	___xxtofl@arg,f
  7897     017F  30FF               	movlw	255
  7898     0180  05A3               	andwf	___xxtofl@arg+1,f
  7899     0181  307F               	movlw	127
  7900     0182  05A4               	andwf	___xxtofl@arg+2,f
  7901     0183  30FF               	movlw	255
  7902     0184  05A5               	andwf	___xxtofl@arg+3,f
  7903     0185                     l920:
  7904     0185  1003               	clrc
  7905     0186  0CA1               	rrf	___xxtofl@exp,f
  7906     0187                     l3352:
  7907     0187  0821               	movf	___xxtofl@exp,w
  7908     0188  00FA               	movwf	??___xxtofl
  7909     0189  01FB               	clrf	??___xxtofl+1
  7910     018A  01FC               	clrf	??___xxtofl+2
  7911     018B  01FD               	clrf	??___xxtofl+3
  7912     018C  3018               	movlw	24
  7913     018D                     u5145:
  7914     018D  1003               	clrc
  7915     018E  0DFA               	rlf	??___xxtofl,f
  7916     018F  0DFB               	rlf	??___xxtofl+1,f
  7917     0190  0DFC               	rlf	??___xxtofl+2,f
  7918     0191  0DFD               	rlf	??___xxtofl+3,f
  7919     0192                     u5140:
  7920     0192  3EFF               	addlw	-1
  7921     0193  1D03               	skipz
  7922     0194  298D               	goto	u5145
  7923     0195  087A               	movf	??___xxtofl,w
  7924     0196  04A2               	iorwf	___xxtofl@arg,f
  7925     0197  087B               	movf	??___xxtofl+1,w
  7926     0198  04A3               	iorwf	___xxtofl@arg+1,f
  7927     0199  087C               	movf	??___xxtofl+2,w
  7928     019A  04A4               	iorwf	___xxtofl@arg+2,f
  7929     019B  087D               	movf	??___xxtofl+3,w
  7930     019C  04A5               	iorwf	___xxtofl@arg+3,f
  7931     019D                     l3354:
  7932     019D  0820               	movf	___xxtofl@sign,w
  7933     019E  1903               	btfsc	3,2
  7934     019F  29A1               	goto	u5151
  7935     01A0  29A2               	goto	u5150
  7936     01A1                     u5151:
  7937     01A1  29A7               	goto	l3360
  7938     01A2                     u5150:
  7939     01A2                     l3356:
  7940     01A2  1FF9               	btfss	___xxtofl@val+3,7
  7941     01A3  29A5               	goto	u5161
  7942     01A4  29A6               	goto	u5160
  7943     01A5                     u5161:
  7944     01A5  29A7               	goto	l3360
  7945     01A6                     u5160:
  7946     01A6                     l3358:
  7947     01A6  17A5               	bsf	___xxtofl@arg+3,7
  7948     01A7                     l3360:
  7949     01A7  0825               	movf	___xxtofl@arg+3,w
  7950     01A8  00F9               	movwf	?___xxtofl+3
  7951     01A9  0824               	movf	___xxtofl@arg+2,w
  7952     01AA  00F8               	movwf	?___xxtofl+2
  7953     01AB  0823               	movf	___xxtofl@arg+1,w
  7954     01AC  00F7               	movwf	?___xxtofl+1
  7955     01AD  0822               	movf	___xxtofl@arg,w
  7956     01AE  00F6               	movwf	?___xxtofl
  7957     01AF                     l908:
  7958     01AF  0008               	return
  7959     01B0                     __end_of___xxtofl:
  7960                           
  7961                           	psect	text14
  7962     1B87                     __ptext14:	
  7963 ;; *************** function ___wmul *****************
  7964 ;; Defined at:
  7965 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  multiplier      2    0[COMMON] unsigned int 
  7968 ;;  multiplicand    2    2[COMMON] unsigned int 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  product         2    4[COMMON] unsigned int 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  2    0[COMMON] unsigned int 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7980 ;;      Params:         4       0       0       0       0
  7981 ;;      Locals:         2       0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0
  7983 ;;      Totals:         6       0       0       0       0
  7984 ;;Total ram usage:        6 bytes
  7985 ;; Hardware stack levels used: 1
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_sprintf
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993     1B87                     ___wmul:	
  7994                           ;psect for function ___wmul
  7995                           
  7996     1B87                     l3204:	
  7997                           ;incstack = 0
  7998                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7999                           
  8000     1B87  01F4               	clrf	___wmul@product
  8001     1B88  01F5               	clrf	___wmul@product+1
  8002     1B89                     l3206:
  8003     1B89  1C70               	btfss	___wmul@multiplier,0
  8004     1B8A  2B8C               	goto	u4721
  8005     1B8B  2B8D               	goto	u4720
  8006     1B8C                     u4721:
  8007     1B8C  2B93               	goto	l439
  8008     1B8D                     u4720:
  8009     1B8D                     l3208:
  8010     1B8D  0872               	movf	___wmul@multiplicand,w
  8011     1B8E  07F4               	addwf	___wmul@product,f
  8012     1B8F  1803               	skipnc
  8013     1B90  0AF5               	incf	___wmul@product+1,f
  8014     1B91  0873               	movf	___wmul@multiplicand+1,w
  8015     1B92  07F5               	addwf	___wmul@product+1,f
  8016     1B93                     l439:
  8017     1B93  3001               	movlw	1
  8018     1B94                     u4735:
  8019     1B94  1003               	clrc
  8020     1B95  0DF2               	rlf	___wmul@multiplicand,f
  8021     1B96  0DF3               	rlf	___wmul@multiplicand+1,f
  8022     1B97  3EFF               	addlw	-1
  8023     1B98  1D03               	skipz
  8024     1B99  2B94               	goto	u4735
  8025     1B9A                     l3210:
  8026     1B9A  3001               	movlw	1
  8027     1B9B                     u4745:
  8028     1B9B  1003               	clrc
  8029     1B9C  0CF1               	rrf	___wmul@multiplier+1,f
  8030     1B9D  0CF0               	rrf	___wmul@multiplier,f
  8031     1B9E  3EFF               	addlw	-1
  8032     1B9F  1D03               	skipz
  8033     1BA0  2B9B               	goto	u4745
  8034     1BA1                     l3212:
  8035     1BA1  0870               	movf	___wmul@multiplier,w
  8036     1BA2  0471               	iorwf	___wmul@multiplier+1,w
  8037     1BA3  1D03               	btfss	3,2
  8038     1BA4  2BA6               	goto	u4751
  8039     1BA5  2BA7               	goto	u4750
  8040     1BA6                     u4751:
  8041     1BA6  2B89               	goto	l3206
  8042     1BA7                     u4750:
  8043     1BA7                     l3214:
  8044     1BA7  0875               	movf	___wmul@product+1,w
  8045     1BA8  00F1               	movwf	?___wmul+1
  8046     1BA9  0874               	movf	___wmul@product,w
  8047     1BAA  00F0               	movwf	?___wmul
  8048     1BAB                     l441:
  8049     1BAB  0008               	return
  8050     1BAC                     __end_of___wmul:
  8051                           
  8052                           	psect	text15
  8053     1DAF                     __ptext15:	
  8054 ;; *************** function ___llmod *****************
  8055 ;; Defined at:
  8056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  divisor         4    0[COMMON] unsigned long 
  8059 ;;  dividend        4    4[COMMON] unsigned long 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  counter         1    9[COMMON] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  4    0[COMMON] unsigned long 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2, status,0
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8071 ;;      Params:         8       0       0       0       0
  8072 ;;      Locals:         1       0       0       0       0
  8073 ;;      Temps:          1       0       0       0       0
  8074 ;;      Totals:        10       0       0       0       0
  8075 ;;Total ram usage:       10 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_sprintf
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084     1DAF                     ___llmod:	
  8085                           ;psect for function ___llmod
  8086                           
  8087     1DAF                     l3294:	
  8088                           ;incstack = 0
  8089                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8090                           
  8091     1DAF  0873               	movf	___llmod@divisor+3,w
  8092     1DB0  0472               	iorwf	___llmod@divisor+2,w
  8093     1DB1  0471               	iorwf	___llmod@divisor+1,w
  8094     1DB2  0470               	iorwf	___llmod@divisor,w
  8095     1DB3  1903               	skipnz
  8096     1DB4  2DB6               	goto	u4971
  8097     1DB5  2DB7               	goto	u4970
  8098     1DB6                     u4971:
  8099     1DB6  2DFA               	goto	l3310
  8100     1DB7                     u4970:
  8101     1DB7                     l3296:
  8102     1DB7  01F9               	clrf	___llmod@counter
  8103     1DB8  0AF9               	incf	___llmod@counter,f
  8104     1DB9  2DC7               	goto	l3300
  8105     1DBA                     l3298:
  8106     1DBA  3001               	movlw	1
  8107     1DBB  00F8               	movwf	??___llmod
  8108     1DBC                     u4985:
  8109     1DBC  1003               	clrc
  8110     1DBD  0DF0               	rlf	___llmod@divisor,f
  8111     1DBE  0DF1               	rlf	___llmod@divisor+1,f
  8112     1DBF  0DF2               	rlf	___llmod@divisor+2,f
  8113     1DC0  0DF3               	rlf	___llmod@divisor+3,f
  8114     1DC1  0BF8               	decfsz	??___llmod,f
  8115     1DC2  2DBC               	goto	u4985
  8116     1DC3  3001               	movlw	1
  8117     1DC4  00F8               	movwf	??___llmod
  8118     1DC5  0878               	movf	??___llmod,w
  8119     1DC6  07F9               	addwf	___llmod@counter,f
  8120     1DC7                     l3300:
  8121     1DC7  1FF3               	btfss	___llmod@divisor+3,7
  8122     1DC8  2DCA               	goto	u4991
  8123     1DC9  2DCB               	goto	u4990
  8124     1DCA                     u4991:
  8125     1DCA  2DBA               	goto	l3298
  8126     1DCB                     u4990:
  8127     1DCB                     l3302:
  8128     1DCB  0873               	movf	___llmod@divisor+3,w
  8129     1DCC  0277               	subwf	___llmod@dividend+3,w
  8130     1DCD  1D03               	skipz
  8131     1DCE  2DD9               	goto	u5005
  8132     1DCF  0872               	movf	___llmod@divisor+2,w
  8133     1DD0  0276               	subwf	___llmod@dividend+2,w
  8134     1DD1  1D03               	skipz
  8135     1DD2  2DD9               	goto	u5005
  8136     1DD3  0871               	movf	___llmod@divisor+1,w
  8137     1DD4  0275               	subwf	___llmod@dividend+1,w
  8138     1DD5  1D03               	skipz
  8139     1DD6  2DD9               	goto	u5005
  8140     1DD7  0870               	movf	___llmod@divisor,w
  8141     1DD8  0274               	subwf	___llmod@dividend,w
  8142     1DD9                     u5005:
  8143     1DD9  1C03               	skipc
  8144     1DDA  2DDC               	goto	u5001
  8145     1DDB  2DDD               	goto	u5000
  8146     1DDC                     u5001:
  8147     1DDC  2DEB               	goto	l3306
  8148     1DDD                     u5000:
  8149     1DDD                     l3304:
  8150     1DDD  0870               	movf	___llmod@divisor,w
  8151     1DDE  02F4               	subwf	___llmod@dividend,f
  8152     1DDF  0871               	movf	___llmod@divisor+1,w
  8153     1DE0  1C03               	skipc
  8154     1DE1  0F71               	incfsz	___llmod@divisor+1,w
  8155     1DE2  02F5               	subwf	___llmod@dividend+1,f
  8156     1DE3  0872               	movf	___llmod@divisor+2,w
  8157     1DE4  1C03               	skipc
  8158     1DE5  0F72               	incfsz	___llmod@divisor+2,w
  8159     1DE6  02F6               	subwf	___llmod@dividend+2,f
  8160     1DE7  0873               	movf	___llmod@divisor+3,w
  8161     1DE8  1C03               	skipc
  8162     1DE9  0F73               	incfsz	___llmod@divisor+3,w
  8163     1DEA  02F7               	subwf	___llmod@dividend+3,f
  8164     1DEB                     l3306:
  8165     1DEB  3001               	movlw	1
  8166     1DEC                     u5015:
  8167     1DEC  1003               	clrc
  8168     1DED  0CF3               	rrf	___llmod@divisor+3,f
  8169     1DEE  0CF2               	rrf	___llmod@divisor+2,f
  8170     1DEF  0CF1               	rrf	___llmod@divisor+1,f
  8171     1DF0  0CF0               	rrf	___llmod@divisor,f
  8172     1DF1  3EFF               	addlw	-1
  8173     1DF2  1D03               	skipz
  8174     1DF3  2DEC               	goto	u5015
  8175     1DF4                     l3308:
  8176     1DF4  3001               	movlw	1
  8177     1DF5  02F9               	subwf	___llmod@counter,f
  8178     1DF6  1D03               	btfss	3,2
  8179     1DF7  2DF9               	goto	u5021
  8180     1DF8  2DFA               	goto	u5020
  8181     1DF9                     u5021:
  8182     1DF9  2DCB               	goto	l3302
  8183     1DFA                     u5020:
  8184     1DFA                     l3310:
  8185     1DFA  0877               	movf	___llmod@dividend+3,w
  8186     1DFB  00F3               	movwf	?___llmod+3
  8187     1DFC  0876               	movf	___llmod@dividend+2,w
  8188     1DFD  00F2               	movwf	?___llmod+2
  8189     1DFE  0875               	movf	___llmod@dividend+1,w
  8190     1DFF  00F1               	movwf	?___llmod+1
  8191     1E00  0874               	movf	___llmod@dividend,w
  8192     1E01  00F0               	movwf	?___llmod
  8193     1E02                     l695:
  8194     1E02  0008               	return
  8195     1E03                     __end_of___llmod:
  8196                           
  8197                           	psect	text16
  8198     1F88                     __ptext16:	
  8199 ;; *************** function ___fltol *****************
  8200 ;; Defined at:
  8201 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  f1              4   49[BANK0 ] unsigned long 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  exp1            1   58[BANK0 ] unsigned char 
  8206 ;;  sign1           1   57[BANK0 ] unsigned char 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  4   49[BANK0 ] long 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8216 ;;      Params:         0       4       0       0       0
  8217 ;;      Locals:         0       2       0       0       0
  8218 ;;      Temps:          0       4       0       0       0
  8219 ;;      Totals:         0      10       0       0       0
  8220 ;;Total ram usage:       10 bytes
  8221 ;; Hardware stack levels used: 1
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_main
  8226 ;;		_sprintf
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230     1F88                     ___fltol:	
  8231                           ;psect for function ___fltol
  8232                           
  8233     1F88                     l3258:	
  8234                           ;incstack = 0
  8235                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8236                           
  8237     1F88  1003               	clrc
  8238     1F89  1283               	bcf	3,5	;RP0=0, select bank0
  8239     1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  8240     1F8B  0D53               	rlf	___fltol@f1+2,w
  8241     1F8C  0D54               	rlf	___fltol@f1+3,w
  8242     1F8D  00DA               	movwf	___fltol@exp1
  8243     1F8E  085A               	movf	___fltol@exp1,w
  8244     1F8F  1D03               	btfss	3,2
  8245     1F90  2F92               	goto	u4871
  8246     1F91  2F93               	goto	u4870
  8247     1F92                     u4871:
  8248     1F92  2F9C               	goto	l3264
  8249     1F93                     u4870:
  8250     1F93                     l3260:
  8251     1F93  3000               	movlw	0
  8252     1F94  00D4               	movwf	?___fltol+3
  8253     1F95  3000               	movlw	0
  8254     1F96  00D3               	movwf	?___fltol+2
  8255     1F97  3000               	movlw	0
  8256     1F98  00D2               	movwf	?___fltol+1
  8257     1F99  3000               	movlw	0
  8258     1F9A  00D1               	movwf	?___fltol
  8259     1F9B  2FFF               	goto	l642
  8260     1F9C                     l3264:
  8261     1F9C  0851               	movf	___fltol@f1,w
  8262     1F9D  00D5               	movwf	??___fltol
  8263     1F9E  0852               	movf	___fltol@f1+1,w
  8264     1F9F  00D6               	movwf	??___fltol+1
  8265     1FA0  0853               	movf	___fltol@f1+2,w
  8266     1FA1  00D7               	movwf	??___fltol+2
  8267     1FA2  0854               	movf	___fltol@f1+3,w
  8268     1FA3  00D8               	movwf	??___fltol+3
  8269     1FA4  301F               	movlw	31
  8270     1FA5                     u4885:
  8271     1FA5  1003               	clrc
  8272     1FA6  0CD8               	rrf	??___fltol+3,f
  8273     1FA7  0CD7               	rrf	??___fltol+2,f
  8274     1FA8  0CD6               	rrf	??___fltol+1,f
  8275     1FA9  0CD5               	rrf	??___fltol,f
  8276     1FAA                     u4880:
  8277     1FAA  3EFF               	addlw	-1
  8278     1FAB  1D03               	skipz
  8279     1FAC  2FA5               	goto	u4885
  8280     1FAD  0855               	movf	??___fltol,w
  8281     1FAE  00D9               	movwf	___fltol@sign1
  8282     1FAF                     l3266:
  8283     1FAF  17D3               	bsf	___fltol@f1+2,7
  8284     1FB0                     l3268:
  8285     1FB0  30FF               	movlw	255
  8286     1FB1  05D1               	andwf	___fltol@f1,f
  8287     1FB2  30FF               	movlw	255
  8288     1FB3  05D2               	andwf	___fltol@f1+1,f
  8289     1FB4  30FF               	movlw	255
  8290     1FB5  05D3               	andwf	___fltol@f1+2,f
  8291     1FB6  3000               	movlw	0
  8292     1FB7  05D4               	andwf	___fltol@f1+3,f
  8293     1FB8                     l3270:
  8294     1FB8  3096               	movlw	150
  8295     1FB9  02DA               	subwf	___fltol@exp1,f
  8296     1FBA                     l3272:
  8297     1FBA  1FDA               	btfss	___fltol@exp1,7
  8298     1FBB  2FBD               	goto	u4891
  8299     1FBC  2FBE               	goto	u4890
  8300     1FBD                     u4891:
  8301     1FBD  2FD8               	goto	l3282
  8302     1FBE                     u4890:
  8303     1FBE                     l3274:
  8304     1FBE  085A               	movf	___fltol@exp1,w
  8305     1FBF  3A80               	xorlw	128
  8306     1FC0  3E97               	addlw	151
  8307     1FC1  1803               	skipnc
  8308     1FC2  2FC4               	goto	u4901
  8309     1FC3  2FC5               	goto	u4900
  8310     1FC4                     u4901:
  8311     1FC4  2FC6               	goto	l3280
  8312     1FC5                     u4900:
  8313     1FC5  2F93               	goto	l3260
  8314     1FC6                     l3280:
  8315     1FC6  3001               	movlw	1
  8316     1FC7                     u4915:
  8317     1FC7  1003               	clrc
  8318     1FC8  0CD4               	rrf	___fltol@f1+3,f
  8319     1FC9  0CD3               	rrf	___fltol@f1+2,f
  8320     1FCA  0CD2               	rrf	___fltol@f1+1,f
  8321     1FCB  0CD1               	rrf	___fltol@f1,f
  8322     1FCC  3EFF               	addlw	-1
  8323     1FCD  1D03               	skipz
  8324     1FCE  2FC7               	goto	u4915
  8325     1FCF  3001               	movlw	1
  8326     1FD0  00D5               	movwf	??___fltol
  8327     1FD1  0855               	movf	??___fltol,w
  8328     1FD2  07DA               	addwf	___fltol@exp1,f
  8329     1FD3  1D03               	btfss	3,2
  8330     1FD4  2FD6               	goto	u4921
  8331     1FD5  2FD7               	goto	u4920
  8332     1FD6                     u4921:
  8333     1FD6  2FC6               	goto	l3280
  8334     1FD7                     u4920:
  8335     1FD7  2FEF               	goto	l3290
  8336     1FD8                     l3282:
  8337     1FD8  3020               	movlw	32
  8338     1FD9  025A               	subwf	___fltol@exp1,w
  8339     1FDA  1C03               	skipc
  8340     1FDB  2FDD               	goto	u4931
  8341     1FDC  2FDE               	goto	u4930
  8342     1FDD                     u4931:
  8343     1FDD  2FEA               	goto	l649
  8344     1FDE                     u4930:
  8345     1FDE  2F93               	goto	l3260
  8346     1FDF                     l3288:
  8347     1FDF  3001               	movlw	1
  8348     1FE0  00D5               	movwf	??___fltol
  8349     1FE1                     u4945:
  8350     1FE1  1003               	clrc
  8351     1FE2  0DD1               	rlf	___fltol@f1,f
  8352     1FE3  0DD2               	rlf	___fltol@f1+1,f
  8353     1FE4  0DD3               	rlf	___fltol@f1+2,f
  8354     1FE5  0DD4               	rlf	___fltol@f1+3,f
  8355     1FE6  0BD5               	decfsz	??___fltol,f
  8356     1FE7  2FE1               	goto	u4945
  8357     1FE8  3001               	movlw	1
  8358     1FE9  02DA               	subwf	___fltol@exp1,f
  8359     1FEA                     l649:
  8360     1FEA  085A               	movf	___fltol@exp1,w
  8361     1FEB  1D03               	btfss	3,2
  8362     1FEC  2FEE               	goto	u4951
  8363     1FED  2FEF               	goto	u4950
  8364     1FEE                     u4951:
  8365     1FEE  2FDF               	goto	l3288
  8366     1FEF                     u4950:
  8367     1FEF                     l3290:
  8368     1FEF  0859               	movf	___fltol@sign1,w
  8369     1FF0  1903               	btfsc	3,2
  8370     1FF1  2FF3               	goto	u4961
  8371     1FF2  2FF4               	goto	u4960
  8372     1FF3                     u4961:
  8373     1FF3  2FFF               	goto	l652
  8374     1FF4                     u4960:
  8375     1FF4                     l3292:
  8376     1FF4  09D1               	comf	___fltol@f1,f
  8377     1FF5  09D2               	comf	___fltol@f1+1,f
  8378     1FF6  09D3               	comf	___fltol@f1+2,f
  8379     1FF7  09D4               	comf	___fltol@f1+3,f
  8380     1FF8  0AD1               	incf	___fltol@f1,f
  8381     1FF9  1903               	skipnz
  8382     1FFA  0AD2               	incf	___fltol@f1+1,f
  8383     1FFB  1903               	skipnz
  8384     1FFC  0AD3               	incf	___fltol@f1+2,f
  8385     1FFD  1903               	skipnz
  8386     1FFE  0AD4               	incf	___fltol@f1+3,f
  8387     1FFF                     l652:
  8388     1FFF                     l642:
  8389     1FFF  0008               	return
  8390     2000                     __end_of___fltol:
  8391                           
  8392                           	psect	text17
  8393     1B3E                     __ptext17:	
  8394 ;; *************** function ___flsub *****************
  8395 ;; Defined at:
  8396 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  a               4   70[BANK0 ] long 
  8399 ;;  b               4   74[BANK0 ] long 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  4   70[BANK0 ] long 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8411 ;;      Params:         0       8       0       0       0
  8412 ;;      Locals:         0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0
  8414 ;;      Totals:         0       8       0       0       0
  8415 ;;Total ram usage:        8 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 1
  8418 ;; This function calls:
  8419 ;;		___fladd
  8420 ;; This function is called by:
  8421 ;;		_sprintf
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425     1B3E                     ___flsub:	
  8426                           ;psect for function ___flsub
  8427                           
  8428     1B3E                     l3314:	
  8429                           ;incstack = 0
  8430                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8431                           
  8432     1B3E  3080               	movlw	128
  8433     1B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8434     1B40  1303               	bcf	3,6	;RP1=0, select bank0
  8435     1B41  06E9               	xorwf	___flsub@a+3,f
  8436     1B42                     l3316:
  8437     1B42  086D               	movf	___flsub@b+3,w
  8438     1B43  00D5               	movwf	___fladd@b+3
  8439     1B44  086C               	movf	___flsub@b+2,w
  8440     1B45  00D4               	movwf	___fladd@b+2
  8441     1B46  086B               	movf	___flsub@b+1,w
  8442     1B47  00D3               	movwf	___fladd@b+1
  8443     1B48  086A               	movf	___flsub@b,w
  8444     1B49  00D2               	movwf	___fladd@b
  8445     1B4A  0869               	movf	___flsub@a+3,w
  8446     1B4B  00D9               	movwf	___fladd@a+3
  8447     1B4C  0868               	movf	___flsub@a+2,w
  8448     1B4D  00D8               	movwf	___fladd@a+2
  8449     1B4E  0867               	movf	___flsub@a+1,w
  8450     1B4F  00D7               	movwf	___fladd@a+1
  8451     1B50  0866               	movf	___flsub@a,w
  8452     1B51  00D6               	movwf	___fladd@a
  8453     1B52  160A  118A  22FF  160A  158A  	fcall	___fladd
  8454     1B57  1283               	bcf	3,5	;RP0=0, select bank0
  8455     1B58  1303               	bcf	3,6	;RP1=0, select bank0
  8456     1B59  0855               	movf	?___fladd+3,w
  8457     1B5A  00E9               	movwf	?___flsub+3
  8458     1B5B  0854               	movf	?___fladd+2,w
  8459     1B5C  00E8               	movwf	?___flsub+2
  8460     1B5D  0853               	movf	?___fladd+1,w
  8461     1B5E  00E7               	movwf	?___flsub+1
  8462     1B5F  0852               	movf	?___fladd,w
  8463     1B60  00E6               	movwf	?___flsub
  8464     1B61                     l812:
  8465     1B61  0008               	return
  8466     1B62                     __end_of___flsub:
  8467                           
  8468                           	psect	text18
  8469     12FF                     __ptext18:	
  8470 ;; *************** function ___fladd *****************
  8471 ;; Defined at:
  8472 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  b               4   50[BANK0 ] long 
  8475 ;;  a               4   54[BANK0 ] long 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  grs             1   69[BANK0 ] unsigned char 
  8478 ;;  bexp            1   68[BANK0 ] unsigned char 
  8479 ;;  aexp            1   67[BANK0 ] unsigned char 
  8480 ;;  signs           1   66[BANK0 ] unsigned char 
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  4   50[BANK0 ] unsigned char 
  8483 ;; Registers used:
  8484 ;;		wreg, status,2, status,0, btemp+1
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8490 ;;      Params:         0       8       0       0       0
  8491 ;;      Locals:         0       4       0       0       0
  8492 ;;      Temps:          0       8       0       0       0
  8493 ;;      Totals:         0      20       0       0       0
  8494 ;;Total ram usage:       20 bytes
  8495 ;; Hardware stack levels used: 1
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		_sprintf
  8500 ;;		___flsub
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504     12FF                     ___fladd:	
  8505                           ;psect for function ___fladd
  8506                           
  8507     12FF                     l2646:	
  8508                           ;incstack = 0
  8509                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8510                           
  8511     12FF  1283               	bcf	3,5	;RP0=0, select bank0
  8512     1300  1303               	bcf	3,6	;RP1=0, select bank0
  8513     1301  0855               	movf	___fladd@b+3,w
  8514     1302  3980               	andlw	128
  8515     1303  00E2               	movwf	___fladd@signs
  8516     1304                     l2648:
  8517     1304  0855               	movf	___fladd@b+3,w
  8518     1305  00DA               	movwf	??___fladd
  8519     1306  075A               	addwf	??___fladd,w
  8520     1307  00E4               	movwf	___fladd@bexp
  8521     1308                     l2650:
  8522     1308  1FD4               	btfss	___fladd@b+2,7
  8523     1309  2B0B               	goto	u3321
  8524     130A  2B0C               	goto	u3320
  8525     130B                     u3321:
  8526     130B  2B0D               	goto	l2654
  8527     130C                     u3320:
  8528     130C                     l2652:
  8529     130C  1464               	bsf	___fladd@bexp,0
  8530     130D                     l2654:
  8531     130D  0864               	movf	___fladd@bexp,w
  8532     130E  1903               	btfsc	3,2
  8533     130F  2B11               	goto	u3331
  8534     1310  2B12               	goto	u3330
  8535     1311                     u3331:
  8536     1311  2B22               	goto	l2664
  8537     1312                     u3330:
  8538     1312                     l2656:
  8539     1312  0A64               	incf	___fladd@bexp,w
  8540     1313  1D03               	btfss	3,2
  8541     1314  2B16               	goto	u3341
  8542     1315  2B17               	goto	u3340
  8543     1316                     u3341:
  8544     1316  2B1F               	goto	l2660
  8545     1317                     u3340:
  8546     1317                     l2658:
  8547     1317  3000               	movlw	0
  8548     1318  00D5               	movwf	___fladd@b+3
  8549     1319  3000               	movlw	0
  8550     131A  00D4               	movwf	___fladd@b+2
  8551     131B  3000               	movlw	0
  8552     131C  00D3               	movwf	___fladd@b+1
  8553     131D  3000               	movlw	0
  8554     131E  00D2               	movwf	___fladd@b
  8555     131F                     l2660:
  8556     131F  17D4               	bsf	___fladd@b+2,7
  8557     1320                     l2662:
  8558     1320  01D5               	clrf	___fladd@b+3
  8559     1321  2B2A               	goto	l2666
  8560     1322                     l2664:
  8561     1322  3000               	movlw	0
  8562     1323  00D5               	movwf	___fladd@b+3
  8563     1324  3000               	movlw	0
  8564     1325  00D4               	movwf	___fladd@b+2
  8565     1326  3000               	movlw	0
  8566     1327  00D3               	movwf	___fladd@b+1
  8567     1328  3000               	movlw	0
  8568     1329  00D2               	movwf	___fladd@b
  8569     132A                     l2666:
  8570     132A  0859               	movf	___fladd@a+3,w
  8571     132B  3980               	andlw	128
  8572     132C  00E3               	movwf	___fladd@aexp
  8573     132D                     l2668:
  8574     132D  0863               	movf	___fladd@aexp,w
  8575     132E  0662               	xorwf	___fladd@signs,w
  8576     132F  1903               	skipnz
  8577     1330  2B32               	goto	u3351
  8578     1331  2B33               	goto	u3350
  8579     1332                     u3351:
  8580     1332  2B34               	goto	l2672
  8581     1333                     u3350:
  8582     1333                     l2670:
  8583     1333  1762               	bsf	___fladd@signs,6
  8584     1334                     l2672:
  8585     1334  0859               	movf	___fladd@a+3,w
  8586     1335  00DA               	movwf	??___fladd
  8587     1336  075A               	addwf	??___fladd,w
  8588     1337  00E3               	movwf	___fladd@aexp
  8589     1338                     l2674:
  8590     1338  1FD8               	btfss	___fladd@a+2,7
  8591     1339  2B3B               	goto	u3361
  8592     133A  2B3C               	goto	u3360
  8593     133B                     u3361:
  8594     133B  2B3D               	goto	l2678
  8595     133C                     u3360:
  8596     133C                     l2676:
  8597     133C  1463               	bsf	___fladd@aexp,0
  8598     133D                     l2678:
  8599     133D  0863               	movf	___fladd@aexp,w
  8600     133E  1903               	btfsc	3,2
  8601     133F  2B41               	goto	u3371
  8602     1340  2B42               	goto	u3370
  8603     1341                     u3371:
  8604     1341  2B52               	goto	l2688
  8605     1342                     u3370:
  8606     1342                     l2680:
  8607     1342  0A63               	incf	___fladd@aexp,w
  8608     1343  1D03               	btfss	3,2
  8609     1344  2B46               	goto	u3381
  8610     1345  2B47               	goto	u3380
  8611     1346                     u3381:
  8612     1346  2B4F               	goto	l2684
  8613     1347                     u3380:
  8614     1347                     l2682:
  8615     1347  3000               	movlw	0
  8616     1348  00D9               	movwf	___fladd@a+3
  8617     1349  3000               	movlw	0
  8618     134A  00D8               	movwf	___fladd@a+2
  8619     134B  3000               	movlw	0
  8620     134C  00D7               	movwf	___fladd@a+1
  8621     134D  3000               	movlw	0
  8622     134E  00D6               	movwf	___fladd@a
  8623     134F                     l2684:
  8624     134F  17D8               	bsf	___fladd@a+2,7
  8625     1350                     l2686:
  8626     1350  01D9               	clrf	___fladd@a+3
  8627     1351  2B5A               	goto	l766
  8628     1352                     l2688:
  8629     1352  3000               	movlw	0
  8630     1353  00D9               	movwf	___fladd@a+3
  8631     1354  3000               	movlw	0
  8632     1355  00D8               	movwf	___fladd@a+2
  8633     1356  3000               	movlw	0
  8634     1357  00D7               	movwf	___fladd@a+1
  8635     1358  3000               	movlw	0
  8636     1359  00D6               	movwf	___fladd@a
  8637     135A                     l766:
  8638     135A  0864               	movf	___fladd@bexp,w
  8639     135B  0263               	subwf	___fladd@aexp,w
  8640     135C  1803               	skipnc
  8641     135D  2B5F               	goto	u3391
  8642     135E  2B60               	goto	u3390
  8643     135F                     u3391:
  8644     135F  2B86               	goto	l2724
  8645     1360                     u3390:
  8646     1360                     l2690:
  8647     1360  1F62               	btfss	___fladd@signs,6
  8648     1361  2B63               	goto	u3401
  8649     1362  2B64               	goto	u3400
  8650     1363                     u3401:
  8651     1363  2B68               	goto	l2694
  8652     1364                     u3400:
  8653     1364                     l2692:
  8654     1364  3080               	movlw	128
  8655     1365  00DA               	movwf	??___fladd
  8656     1366  085A               	movf	??___fladd,w
  8657     1367  06E2               	xorwf	___fladd@signs,f
  8658     1368                     l2694:
  8659     1368  0864               	movf	___fladd@bexp,w
  8660     1369  00E5               	movwf	___fladd@grs
  8661     136A                     l2696:
  8662     136A  0863               	movf	___fladd@aexp,w
  8663     136B  00E4               	movwf	___fladd@bexp
  8664     136C                     l2698:
  8665     136C  0865               	movf	___fladd@grs,w
  8666     136D  00E3               	movwf	___fladd@aexp
  8667     136E                     l2700:
  8668     136E  0852               	movf	___fladd@b,w
  8669     136F  00E5               	movwf	___fladd@grs
  8670     1370                     l2702:
  8671     1370  0856               	movf	___fladd@a,w
  8672     1371  00D2               	movwf	___fladd@b
  8673     1372                     l2704:
  8674     1372  0865               	movf	___fladd@grs,w
  8675     1373  00D6               	movwf	___fladd@a
  8676     1374                     l2706:
  8677     1374  0853               	movf	___fladd@b+1,w
  8678     1375  00E5               	movwf	___fladd@grs
  8679     1376                     l2708:
  8680     1376  0857               	movf	___fladd@a+1,w
  8681     1377  00D3               	movwf	___fladd@b+1
  8682     1378                     l2710:
  8683     1378  0865               	movf	___fladd@grs,w
  8684     1379  00D7               	movwf	___fladd@a+1
  8685     137A                     l2712:
  8686     137A  0854               	movf	___fladd@b+2,w
  8687     137B  00E5               	movwf	___fladd@grs
  8688     137C                     l2714:
  8689     137C  0858               	movf	___fladd@a+2,w
  8690     137D  00D4               	movwf	___fladd@b+2
  8691     137E                     l2716:
  8692     137E  0865               	movf	___fladd@grs,w
  8693     137F  00D8               	movwf	___fladd@a+2
  8694     1380                     l2718:
  8695     1380  0855               	movf	___fladd@b+3,w
  8696     1381  00E5               	movwf	___fladd@grs
  8697     1382                     l2720:
  8698     1382  0859               	movf	___fladd@a+3,w
  8699     1383  00D5               	movwf	___fladd@b+3
  8700     1384                     l2722:
  8701     1384  0865               	movf	___fladd@grs,w
  8702     1385  00D9               	movwf	___fladd@a+3
  8703     1386                     l2724:
  8704     1386  01E5               	clrf	___fladd@grs
  8705     1387                     l2726:
  8706     1387  0863               	movf	___fladd@aexp,w
  8707     1388  00DA               	movwf	??___fladd
  8708     1389  01DB               	clrf	??___fladd+1
  8709     138A  085B               	movf	??___fladd+1,w
  8710     138B  00DD               	movwf	??___fladd+3
  8711     138C  0864               	movf	___fladd@bexp,w
  8712     138D  025A               	subwf	??___fladd,w
  8713     138E  00DC               	movwf	??___fladd+2
  8714     138F  1C03               	skipc
  8715     1390  03DD               	decf	??___fladd+3,f
  8716     1391  085D               	movf	??___fladd+3,w
  8717     1392  3A80               	xorlw	128
  8718     1393  00FF               	movwf	btemp+1
  8719     1394  3080               	movlw	128
  8720     1395  027F               	subwf	btemp+1,w
  8721     1396  1D03               	skipz
  8722     1397  2B9A               	goto	u3415
  8723     1398  301A               	movlw	26
  8724     1399  025C               	subwf	??___fladd+2,w
  8725     139A                     u3415:
  8726     139A  1C03               	skipc
  8727     139B  2B9D               	goto	u3411
  8728     139C  2B9E               	goto	u3410
  8729     139D                     u3411:
  8730     139D  2BD5               	goto	l2742
  8731     139E                     u3410:
  8732     139E                     l2728:
  8733     139E  1283               	bcf	3,5	;RP0=0, select bank0
  8734     139F  1303               	bcf	3,6	;RP1=0, select bank0
  8735     13A0  0855               	movf	___fladd@b+3,w
  8736     13A1  0454               	iorwf	___fladd@b+2,w
  8737     13A2  0453               	iorwf	___fladd@b+1,w
  8738     13A3  0452               	iorwf	___fladd@b,w
  8739     13A4  1D03               	skipz
  8740     13A5  2BA7               	goto	u3421
  8741     13A6  2BA9               	goto	u3420
  8742     13A7                     u3421:
  8743     13A7  3001               	movlw	1
  8744     13A8  2BAA               	goto	u3430
  8745     13A9                     u3420:
  8746     13A9  3000               	movlw	0
  8747     13AA                     u3430:
  8748     13AA  00E5               	movwf	___fladd@grs
  8749     13AB  3000               	movlw	0
  8750     13AC  00D5               	movwf	___fladd@b+3
  8751     13AD  3000               	movlw	0
  8752     13AE  00D4               	movwf	___fladd@b+2
  8753     13AF  3000               	movlw	0
  8754     13B0  00D3               	movwf	___fladd@b+1
  8755     13B1  3000               	movlw	0
  8756     13B2  00D2               	movwf	___fladd@b
  8757     13B3  0863               	movf	___fladd@aexp,w
  8758     13B4  00E4               	movwf	___fladd@bexp
  8759     13B5  2BDD               	goto	l770
  8760     13B6                     l772:
  8761     13B6  1C65               	btfss	___fladd@grs,0
  8762     13B7  2BB9               	goto	u3441
  8763     13B8  2BBA               	goto	u3440
  8764     13B9                     u3441:
  8765     13B9  2BC1               	goto	l2732
  8766     13BA                     u3440:
  8767     13BA                     l2730:
  8768     13BA  0865               	movf	___fladd@grs,w
  8769     13BB  00DA               	movwf	??___fladd
  8770     13BC  1003               	clrc
  8771     13BD  0C5A               	rrf	??___fladd,w
  8772     13BE  3801               	iorlw	1
  8773     13BF  00E5               	movwf	___fladd@grs
  8774     13C0  2BC3               	goto	l2734
  8775     13C1                     l2732:
  8776     13C1  1003               	clrc
  8777     13C2  0CE5               	rrf	___fladd@grs,f
  8778     13C3                     l2734:
  8779     13C3  1C52               	btfss	___fladd@b,0
  8780     13C4  2BC6               	goto	u3451
  8781     13C5  2BC7               	goto	u3450
  8782     13C6                     u3451:
  8783     13C6  2BC8               	goto	l2738
  8784     13C7                     u3450:
  8785     13C7                     l2736:
  8786     13C7  17E5               	bsf	___fladd@grs,7
  8787     13C8                     l2738:
  8788     13C8  3001               	movlw	1
  8789     13C9  00DA               	movwf	??___fladd
  8790     13CA                     u3465:
  8791     13CA  0D55               	rlf	___fladd@b+3,w
  8792     13CB  0CD5               	rrf	___fladd@b+3,f
  8793     13CC  0CD4               	rrf	___fladd@b+2,f
  8794     13CD  0CD3               	rrf	___fladd@b+1,f
  8795     13CE  0CD2               	rrf	___fladd@b,f
  8796     13CF  0BDA               	decfsz	??___fladd& (0+127),f
  8797     13D0  2BCA               	goto	u3465
  8798     13D1                     l2740:
  8799     13D1  3001               	movlw	1
  8800     13D2  00DA               	movwf	??___fladd
  8801     13D3  085A               	movf	??___fladd,w
  8802     13D4  07E4               	addwf	___fladd@bexp,f
  8803     13D5                     l2742:
  8804     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  8805     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  8806     13D7  0863               	movf	___fladd@aexp,w
  8807     13D8  0264               	subwf	___fladd@bexp,w
  8808     13D9  1C03               	skipc
  8809     13DA  2BDC               	goto	u3471
  8810     13DB  2BDD               	goto	u3470
  8811     13DC                     u3471:
  8812     13DC  2BB6               	goto	l772
  8813     13DD                     u3470:
  8814     13DD                     l770:
  8815     13DD  1B62               	btfsc	___fladd@signs,6
  8816     13DE  2BE0               	goto	u3481
  8817     13DF  2BE1               	goto	u3480
  8818     13E0                     u3481:
  8819     13E0  2C2A               	goto	l2768
  8820     13E1                     u3480:
  8821     13E1                     l2744:
  8822     13E1  0864               	movf	___fladd@bexp,w
  8823     13E2  1D03               	btfss	3,2
  8824     13E3  2BE5               	goto	u3491
  8825     13E4  2BE6               	goto	u3490
  8826     13E5                     u3491:
  8827     13E5  2BEF               	goto	l2750
  8828     13E6                     u3490:
  8829     13E6                     l2746:
  8830     13E6  3000               	movlw	0
  8831     13E7  00D5               	movwf	?___fladd+3
  8832     13E8  3000               	movlw	0
  8833     13E9  00D4               	movwf	?___fladd+2
  8834     13EA  3000               	movlw	0
  8835     13EB  00D3               	movwf	?___fladd+1
  8836     13EC  3000               	movlw	0
  8837     13ED  00D2               	movwf	?___fladd
  8838     13EE  2D56               	goto	l779
  8839     13EF                     l2750:
  8840     13EF  0856               	movf	___fladd@a,w
  8841     13F0  07D2               	addwf	___fladd@b,f
  8842     13F1  0857               	movf	___fladd@a+1,w
  8843     13F2  1103               	clrz
  8844     13F3  1803               	skipnc
  8845     13F4  3E01               	addlw	1
  8846     13F5  1903               	skipnz
  8847     13F6  2BF8               	goto	u3501
  8848     13F7  07D3               	addwf	___fladd@b+1,f
  8849     13F8                     u3501:
  8850     13F8  0858               	movf	___fladd@a+2,w
  8851     13F9  1103               	clrz
  8852     13FA  1803               	skipnc
  8853     13FB  3E01               	addlw	1
  8854     13FC  1903               	skipnz
  8855     13FD  2BFF               	goto	u3502
  8856     13FE  07D4               	addwf	___fladd@b+2,f
  8857     13FF                     u3502:
  8858     13FF  0859               	movf	___fladd@a+3,w
  8859     1400  1103               	clrz
  8860     1401  1803               	skipnc
  8861     1402  3E01               	addlw	1
  8862     1403  1903               	skipnz
  8863     1404  2C06               	goto	u3503
  8864     1405  07D5               	addwf	___fladd@b+3,f
  8865     1406                     u3503:
  8866     1406                     l2752:
  8867     1406  1C55               	btfss	___fladd@b+3,0
  8868     1407  2C09               	goto	u3511
  8869     1408  2C0A               	goto	u3510
  8870     1409                     u3511:
  8871     1409  2CDE               	goto	l2802
  8872     140A                     u3510:
  8873     140A                     l2754:
  8874     140A  1C65               	btfss	___fladd@grs,0
  8875     140B  2C0D               	goto	u3521
  8876     140C  2C0E               	goto	u3520
  8877     140D                     u3521:
  8878     140D  2C15               	goto	l2758
  8879     140E                     u3520:
  8880     140E                     l2756:
  8881     140E  0865               	movf	___fladd@grs,w
  8882     140F  00DA               	movwf	??___fladd
  8883     1410  1003               	clrc
  8884     1411  0C5A               	rrf	??___fladd,w
  8885     1412  3801               	iorlw	1
  8886     1413  00E5               	movwf	___fladd@grs
  8887     1414  2C17               	goto	l2760
  8888     1415                     l2758:
  8889     1415  1003               	clrc
  8890     1416  0CE5               	rrf	___fladd@grs,f
  8891     1417                     l2760:
  8892     1417  1C52               	btfss	___fladd@b,0
  8893     1418  2C1A               	goto	u3531
  8894     1419  2C1B               	goto	u3530
  8895     141A                     u3531:
  8896     141A  2C1C               	goto	l2764
  8897     141B                     u3530:
  8898     141B                     l2762:
  8899     141B  17E5               	bsf	___fladd@grs,7
  8900     141C                     l2764:
  8901     141C  3001               	movlw	1
  8902     141D  00DA               	movwf	??___fladd
  8903     141E                     u3545:
  8904     141E  0D55               	rlf	___fladd@b+3,w
  8905     141F  0CD5               	rrf	___fladd@b+3,f
  8906     1420  0CD4               	rrf	___fladd@b+2,f
  8907     1421  0CD3               	rrf	___fladd@b+1,f
  8908     1422  0CD2               	rrf	___fladd@b,f
  8909     1423  0BDA               	decfsz	??___fladd& (0+127),f
  8910     1424  2C1E               	goto	u3545
  8911     1425                     l2766:
  8912     1425  3001               	movlw	1
  8913     1426  00DA               	movwf	??___fladd
  8914     1427  085A               	movf	??___fladd,w
  8915     1428  07E4               	addwf	___fladd@bexp,f
  8916     1429  2CDE               	goto	l2802
  8917     142A                     l2768:
  8918     142A  0855               	movf	___fladd@b+3,w
  8919     142B  3A80               	xorlw	128
  8920     142C  00FF               	movwf	btemp+1
  8921     142D  0859               	movf	___fladd@a+3,w
  8922     142E  3A80               	xorlw	128
  8923     142F  027F               	subwf	btemp+1,w
  8924     1430  1D03               	skipz
  8925     1431  2C3C               	goto	u3553
  8926     1432  0858               	movf	___fladd@a+2,w
  8927     1433  0254               	subwf	___fladd@b+2,w
  8928     1434  1D03               	skipz
  8929     1435  2C3C               	goto	u3553
  8930     1436  0857               	movf	___fladd@a+1,w
  8931     1437  0253               	subwf	___fladd@b+1,w
  8932     1438  1D03               	skipz
  8933     1439  2C3C               	goto	u3553
  8934     143A  0856               	movf	___fladd@a,w
  8935     143B  0252               	subwf	___fladd@b,w
  8936     143C                     u3553:
  8937     143C  1803               	skipnc
  8938     143D  2C3F               	goto	u3551
  8939     143E  2C40               	goto	u3550
  8940     143F                     u3551:
  8941     143F  2C98               	goto	l2778
  8942     1440                     u3550:
  8943     1440                     l2770:
  8944     1440  30FF               	movlw	255
  8945     1441  00DA               	movwf	??___fladd
  8946     1442  30FF               	movlw	255
  8947     1443  00DB               	movwf	??___fladd+1
  8948     1444  30FF               	movlw	255
  8949     1445  00DC               	movwf	??___fladd+2
  8950     1446  30FF               	movlw	255
  8951     1447  00DD               	movwf	??___fladd+3
  8952     1448  0856               	movf	___fladd@a,w
  8953     1449  00DE               	movwf	??___fladd+4
  8954     144A  0857               	movf	___fladd@a+1,w
  8955     144B  00DF               	movwf	??___fladd+5
  8956     144C  0858               	movf	___fladd@a+2,w
  8957     144D  00E0               	movwf	??___fladd+6
  8958     144E  0859               	movf	___fladd@a+3,w
  8959     144F  00E1               	movwf	??___fladd+7
  8960     1450  0852               	movf	___fladd@b,w
  8961     1451  02DE               	subwf	??___fladd+4,f
  8962     1452  0853               	movf	___fladd@b+1,w
  8963     1453  1C03               	skipc
  8964     1454  0F53               	incfsz	___fladd@b+1,w
  8965     1455  2C57               	goto	u3561
  8966     1456  2C58               	goto	u3562
  8967     1457                     u3561:
  8968     1457  02DF               	subwf	??___fladd+5,f
  8969     1458                     u3562:
  8970     1458  0854               	movf	___fladd@b+2,w
  8971     1459  1C03               	skipc
  8972     145A  0F54               	incfsz	___fladd@b+2,w
  8973     145B  2C5D               	goto	u3563
  8974     145C  2C5E               	goto	u3564
  8975     145D                     u3563:
  8976     145D  02E0               	subwf	??___fladd+6,f
  8977     145E                     u3564:
  8978     145E  0855               	movf	___fladd@b+3,w
  8979     145F  1C03               	skipc
  8980     1460  0F55               	incfsz	___fladd@b+3,w
  8981     1461  2C63               	goto	u3565
  8982     1462  2C64               	goto	u3566
  8983     1463                     u3565:
  8984     1463  02E1               	subwf	??___fladd+7,f
  8985     1464                     u3566:
  8986     1464  085E               	movf	??___fladd+4,w
  8987     1465  07DA               	addwf	??___fladd,f
  8988     1466  085F               	movf	??___fladd+5,w
  8989     1467  1803               	skipnc
  8990     1468  0F5F               	incfsz	??___fladd+5,w
  8991     1469  2C6B               	goto	u3570
  8992     146A  2C6C               	goto	u3571
  8993     146B                     u3570:
  8994     146B  07DB               	addwf	??___fladd+1,f
  8995     146C                     u3571:
  8996     146C  0860               	movf	??___fladd+6,w
  8997     146D  1803               	skipnc
  8998     146E  0F60               	incfsz	??___fladd+6,w
  8999     146F  2C71               	goto	u3572
  9000     1470  2C72               	goto	u3573
  9001     1471                     u3572:
  9002     1471  07DC               	addwf	??___fladd+2,f
  9003     1472                     u3573:
  9004     1472  0861               	movf	??___fladd+7,w
  9005     1473  1803               	skipnc
  9006     1474  0A61               	incf	??___fladd+7,w
  9007     1475  07DD               	addwf	??___fladd+3,f
  9008     1476  085D               	movf	??___fladd+3,w
  9009     1477  00D5               	movwf	___fladd@b+3
  9010     1478  085C               	movf	??___fladd+2,w
  9011     1479  00D4               	movwf	___fladd@b+2
  9012     147A  085B               	movf	??___fladd+1,w
  9013     147B  00D3               	movwf	___fladd@b+1
  9014     147C  085A               	movf	??___fladd,w
  9015     147D  00D2               	movwf	___fladd@b
  9016     147E                     l2772:
  9017     147E  3080               	movlw	128
  9018     147F  00DA               	movwf	??___fladd
  9019     1480  085A               	movf	??___fladd,w
  9020     1481  06E2               	xorwf	___fladd@signs,f
  9021     1482  09E5               	comf	___fladd@grs,f
  9022     1483  0AE5               	incf	___fladd@grs,f
  9023     1484                     l2774:
  9024     1484  0865               	movf	___fladd@grs,w
  9025     1485  1D03               	btfss	3,2
  9026     1486  2C88               	goto	u3581
  9027     1487  2C89               	goto	u3580
  9028     1488                     u3581:
  9029     1488  2CA6               	goto	l787
  9030     1489                     u3580:
  9031     1489                     l2776:
  9032     1489  3001               	movlw	1
  9033     148A  07D2               	addwf	___fladd@b,f
  9034     148B  3000               	movlw	0
  9035     148C  1803               	skipnc
  9036     148D  3001               	movlw	1
  9037     148E  07D3               	addwf	___fladd@b+1,f
  9038     148F  3000               	movlw	0
  9039     1490  1803               	skipnc
  9040     1491  3001               	movlw	1
  9041     1492  07D4               	addwf	___fladd@b+2,f
  9042     1493  3000               	movlw	0
  9043     1494  1803               	skipnc
  9044     1495  3001               	movlw	1
  9045     1496  07D5               	addwf	___fladd@b+3,f
  9046     1497  2CA6               	goto	l787
  9047     1498                     l2778:
  9048     1498  0856               	movf	___fladd@a,w
  9049     1499  02D2               	subwf	___fladd@b,f
  9050     149A  0857               	movf	___fladd@a+1,w
  9051     149B  1C03               	skipc
  9052     149C  0F57               	incfsz	___fladd@a+1,w
  9053     149D  02D3               	subwf	___fladd@b+1,f
  9054     149E  0858               	movf	___fladd@a+2,w
  9055     149F  1C03               	skipc
  9056     14A0  0F58               	incfsz	___fladd@a+2,w
  9057     14A1  02D4               	subwf	___fladd@b+2,f
  9058     14A2  0859               	movf	___fladd@a+3,w
  9059     14A3  1C03               	skipc
  9060     14A4  0F59               	incfsz	___fladd@a+3,w
  9061     14A5  02D5               	subwf	___fladd@b+3,f
  9062     14A6                     l787:
  9063     14A6  0855               	movf	___fladd@b+3,w
  9064     14A7  0454               	iorwf	___fladd@b+2,w
  9065     14A8  0453               	iorwf	___fladd@b+1,w
  9066     14A9  0452               	iorwf	___fladd@b,w
  9067     14AA  1D03               	skipz
  9068     14AB  2CAD               	goto	u3591
  9069     14AC  2CAE               	goto	u3590
  9070     14AD                     u3591:
  9071     14AD  2CDA               	goto	l2800
  9072     14AE                     u3590:
  9073     14AE                     l2780:
  9074     14AE  0865               	movf	___fladd@grs,w
  9075     14AF  1D03               	btfss	3,2
  9076     14B0  2CB2               	goto	u3601
  9077     14B1  2CB3               	goto	u3600
  9078     14B2                     u3601:
  9079     14B2  2CDA               	goto	l2800
  9080     14B3                     u3600:
  9081     14B3                     l2782:
  9082     14B3  3000               	movlw	0
  9083     14B4  00D5               	movwf	?___fladd+3
  9084     14B5  3000               	movlw	0
  9085     14B6  00D4               	movwf	?___fladd+2
  9086     14B7  3000               	movlw	0
  9087     14B8  00D3               	movwf	?___fladd+1
  9088     14B9  3000               	movlw	0
  9089     14BA  00D2               	movwf	?___fladd
  9090     14BB  2D56               	goto	l779
  9091     14BC                     l2786:
  9092     14BC  3001               	movlw	1
  9093     14BD  00DA               	movwf	??___fladd
  9094     14BE                     u3615:
  9095     14BE  1003               	clrc
  9096     14BF  0DD2               	rlf	___fladd@b,f
  9097     14C0  0DD3               	rlf	___fladd@b+1,f
  9098     14C1  0DD4               	rlf	___fladd@b+2,f
  9099     14C2  0DD5               	rlf	___fladd@b+3,f
  9100     14C3  0BDA               	decfsz	??___fladd,f
  9101     14C4  2CBE               	goto	u3615
  9102     14C5                     l2788:
  9103     14C5  1FE5               	btfss	___fladd@grs,7
  9104     14C6  2CC8               	goto	u3621
  9105     14C7  2CC9               	goto	u3620
  9106     14C8                     u3621:
  9107     14C8  2CCA               	goto	l791
  9108     14C9                     u3620:
  9109     14C9                     l2790:
  9110     14C9  1452               	bsf	___fladd@b,0
  9111     14CA                     l791:
  9112     14CA  1C65               	btfss	___fladd@grs,0
  9113     14CB  2CCD               	goto	u3631
  9114     14CC  2CCE               	goto	u3630
  9115     14CD                     u3631:
  9116     14CD  2CD1               	goto	l2794
  9117     14CE                     u3630:
  9118     14CE                     l2792:
  9119     14CE  1403               	setc
  9120     14CF  0DE5               	rlf	___fladd@grs,f
  9121     14D0  2CD3               	goto	l2796
  9122     14D1                     l2794:
  9123     14D1  1003               	clrc
  9124     14D2  0DE5               	rlf	___fladd@grs,f
  9125     14D3                     l2796:
  9126     14D3  0864               	movf	___fladd@bexp,w
  9127     14D4  1903               	btfsc	3,2
  9128     14D5  2CD7               	goto	u3641
  9129     14D6  2CD8               	goto	u3640
  9130     14D7                     u3641:
  9131     14D7  2CDA               	goto	l2800
  9132     14D8                     u3640:
  9133     14D8                     l2798:
  9134     14D8  3001               	movlw	1
  9135     14D9  02E4               	subwf	___fladd@bexp,f
  9136     14DA                     l2800:
  9137     14DA  1FD4               	btfss	___fladd@b+2,7
  9138     14DB  2CDD               	goto	u3651
  9139     14DC  2CDE               	goto	u3650
  9140     14DD                     u3651:
  9141     14DD  2CBC               	goto	l2786
  9142     14DE                     u3650:
  9143     14DE                     l2802:
  9144     14DE  01E3               	clrf	___fladd@aexp
  9145     14DF                     l2804:
  9146     14DF  1FE5               	btfss	___fladd@grs,7
  9147     14E0  2CE2               	goto	u3661
  9148     14E1  2CE3               	goto	u3660
  9149     14E2                     u3661:
  9150     14E2  2CF1               	goto	l2812
  9151     14E3                     u3660:
  9152     14E3                     l2806:
  9153     14E3  0865               	movf	___fladd@grs,w
  9154     14E4  397F               	andlw	127
  9155     14E5  1903               	btfsc	3,2
  9156     14E6  2CE8               	goto	u3671
  9157     14E7  2CE9               	goto	u3670
  9158     14E8                     u3671:
  9159     14E8  2CEC               	goto	l797
  9160     14E9                     u3670:
  9161     14E9                     l2808:
  9162     14E9  01E3               	clrf	___fladd@aexp
  9163     14EA  0AE3               	incf	___fladd@aexp,f
  9164     14EB  2CF1               	goto	l2812
  9165     14EC                     l797:
  9166     14EC  1C52               	btfss	___fladd@b,0
  9167     14ED  2CEF               	goto	u3681
  9168     14EE  2CF0               	goto	u3680
  9169     14EF                     u3681:
  9170     14EF  2CF1               	goto	l2812
  9171     14F0                     u3680:
  9172     14F0  2CE9               	goto	l2808
  9173     14F1                     l2812:
  9174     14F1  0863               	movf	___fladd@aexp,w
  9175     14F2  1903               	btfsc	3,2
  9176     14F3  2CF5               	goto	u3691
  9177     14F4  2CF6               	goto	u3690
  9178     14F5                     u3691:
  9179     14F5  2D2A               	goto	l800
  9180     14F6                     u3690:
  9181     14F6                     l2814:
  9182     14F6  3001               	movlw	1
  9183     14F7  07D2               	addwf	___fladd@b,f
  9184     14F8  3000               	movlw	0
  9185     14F9  1803               	skipnc
  9186     14FA  3001               	movlw	1
  9187     14FB  07D3               	addwf	___fladd@b+1,f
  9188     14FC  3000               	movlw	0
  9189     14FD  1803               	skipnc
  9190     14FE  3001               	movlw	1
  9191     14FF  07D4               	addwf	___fladd@b+2,f
  9192     1500  3000               	movlw	0
  9193     1501  1803               	skipnc
  9194     1502  3001               	movlw	1
  9195     1503  07D5               	addwf	___fladd@b+3,f
  9196     1504                     l2816:
  9197     1504  1C55               	btfss	___fladd@b+3,0
  9198     1505  2D07               	goto	u3701
  9199     1506  2D08               	goto	u3700
  9200     1507                     u3701:
  9201     1507  2D2A               	goto	l800
  9202     1508                     u3700:
  9203     1508                     l2818:
  9204     1508  0852               	movf	___fladd@b,w
  9205     1509  00DA               	movwf	??___fladd
  9206     150A  0853               	movf	___fladd@b+1,w
  9207     150B  00DB               	movwf	??___fladd+1
  9208     150C  0854               	movf	___fladd@b+2,w
  9209     150D  00DC               	movwf	??___fladd+2
  9210     150E  0855               	movf	___fladd@b+3,w
  9211     150F  00DD               	movwf	??___fladd+3
  9212     1510  3001               	movlw	1
  9213     1511  00DE               	movwf	??___fladd+4
  9214     1512                     u3715:
  9215     1512  0D5D               	rlf	??___fladd+3,w
  9216     1513  0CDD               	rrf	??___fladd+3,f
  9217     1514  0CDC               	rrf	??___fladd+2,f
  9218     1515  0CDB               	rrf	??___fladd+1,f
  9219     1516  0CDA               	rrf	??___fladd,f
  9220     1517                     u3710:
  9221     1517  0BDE               	decfsz	??___fladd+4,f
  9222     1518  2D12               	goto	u3715
  9223     1519  085D               	movf	??___fladd+3,w
  9224     151A  00D5               	movwf	___fladd@b+3
  9225     151B  085C               	movf	??___fladd+2,w
  9226     151C  00D4               	movwf	___fladd@b+2
  9227     151D  085B               	movf	??___fladd+1,w
  9228     151E  00D3               	movwf	___fladd@b+1
  9229     151F  085A               	movf	??___fladd,w
  9230     1520  00D2               	movwf	___fladd@b
  9231     1521  0A64               	incf	___fladd@bexp,w
  9232     1522  1903               	btfsc	3,2
  9233     1523  2D25               	goto	u3721
  9234     1524  2D26               	goto	u3720
  9235     1525                     u3721:
  9236     1525  2D2A               	goto	l800
  9237     1526                     u3720:
  9238     1526                     l2820:
  9239     1526  3001               	movlw	1
  9240     1527  00DA               	movwf	??___fladd
  9241     1528  085A               	movf	??___fladd,w
  9242     1529  07E4               	addwf	___fladd@bexp,f
  9243     152A                     l800:
  9244     152A  0A64               	incf	___fladd@bexp,w
  9245     152B  1903               	btfsc	3,2
  9246     152C  2D2E               	goto	u3731
  9247     152D  2D2F               	goto	u3730
  9248     152E                     u3731:
  9249     152E  2D34               	goto	l2824
  9250     152F                     u3730:
  9251     152F                     l2822:
  9252     152F  0864               	movf	___fladd@bexp,w
  9253     1530  1D03               	btfss	3,2
  9254     1531  2D33               	goto	u3741
  9255     1532  2D34               	goto	u3740
  9256     1533                     u3741:
  9257     1533  2D42               	goto	l2830
  9258     1534                     u3740:
  9259     1534                     l2824:
  9260     1534  3000               	movlw	0
  9261     1535  00D5               	movwf	___fladd@b+3
  9262     1536  3000               	movlw	0
  9263     1537  00D4               	movwf	___fladd@b+2
  9264     1538  3000               	movlw	0
  9265     1539  00D3               	movwf	___fladd@b+1
  9266     153A  3000               	movlw	0
  9267     153B  00D2               	movwf	___fladd@b
  9268     153C                     l2826:
  9269     153C  0864               	movf	___fladd@bexp,w
  9270     153D  1D03               	btfss	3,2
  9271     153E  2D40               	goto	u3751
  9272     153F  2D41               	goto	u3750
  9273     1540                     u3751:
  9274     1540  2D42               	goto	l2830
  9275     1541                     u3750:
  9276     1541                     l2828:
  9277     1541  01E2               	clrf	___fladd@signs
  9278     1542                     l2830:
  9279     1542  1C64               	btfss	___fladd@bexp,0
  9280     1543  2D45               	goto	u3761
  9281     1544  2D46               	goto	u3760
  9282     1545                     u3761:
  9283     1545  2D48               	goto	l2834
  9284     1546                     u3760:
  9285     1546                     l2832:
  9286     1546  17D4               	bsf	___fladd@b+2,7
  9287     1547  2D4C               	goto	l808
  9288     1548                     l2834:
  9289     1548  307F               	movlw	127
  9290     1549  00DA               	movwf	??___fladd
  9291     154A  085A               	movf	??___fladd,w
  9292     154B  05D4               	andwf	___fladd@b+2,f
  9293     154C                     l808:
  9294     154C  0864               	movf	___fladd@bexp,w
  9295     154D  00DA               	movwf	??___fladd
  9296     154E  1003               	clrc
  9297     154F  0C5A               	rrf	??___fladd,w
  9298     1550  00D5               	movwf	___fladd@b+3
  9299     1551                     l2836:
  9300     1551  1FE2               	btfss	___fladd@signs,7
  9301     1552  2D54               	goto	u3771
  9302     1553  2D55               	goto	u3770
  9303     1554                     u3771:
  9304     1554  2D56               	goto	l809
  9305     1555                     u3770:
  9306     1555                     l2838:
  9307     1555  17D5               	bsf	___fladd@b+3,7
  9308     1556                     l809:
  9309     1556                     l779:
  9310     1556  0008               	return
  9311     1557                     __end_of___fladd:
  9312                           
  9313                           	psect	text19
  9314     1ABE                     __ptext19:	
  9315 ;; *************** function ___flneg *****************
  9316 ;; Defined at:
  9317 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  f1              4    0[COMMON] unsigned char 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;		None
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  4    0[COMMON] unsigned char 
  9324 ;; Registers used:
  9325 ;;		wreg
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9331 ;;      Params:         4       0       0       0       0
  9332 ;;      Locals:         0       0       0       0       0
  9333 ;;      Temps:          0       0       0       0       0
  9334 ;;      Totals:         4       0       0       0       0
  9335 ;;Total ram usage:        4 bytes
  9336 ;; Hardware stack levels used: 1
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_sprintf
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344     1ABE                     ___flneg:	
  9345                           ;psect for function ___flneg
  9346                           
  9347     1ABE                     l3250:	
  9348                           ;incstack = 0
  9349                           ; Regs used in ___flneg: [wreg]
  9350                           
  9351     1ABE  0873               	movf	___flneg@f1+3,w
  9352     1ABF  0472               	iorwf	___flneg@f1+2,w
  9353     1AC0  0471               	iorwf	___flneg@f1+1,w
  9354     1AC1  0470               	iorwf	___flneg@f1,w
  9355     1AC2  1903               	skipnz
  9356     1AC3  2AC5               	goto	u4861
  9357     1AC4  2AC6               	goto	u4860
  9358     1AC5                     u4861:
  9359     1AC5  2AC8               	goto	l3254
  9360     1AC6                     u4860:
  9361     1AC6                     l3252:
  9362     1AC6  3080               	movlw	128
  9363     1AC7  06F3               	xorwf	___flneg@f1+3,f
  9364     1AC8                     l3254:
  9365     1AC8                     l638:
  9366     1AC8  0008               	return
  9367     1AC9                     __end_of___flneg:
  9368                           
  9369                           	psect	text20
  9370     0802                     __ptext20:	
  9371 ;; *************** function ___flge *****************
  9372 ;; Defined at:
  9373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  ff1             4    0[COMMON] unsigned char 
  9376 ;;  ff2             4    4[COMMON] unsigned char 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;		None               void
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9388 ;;      Params:         8       0       0       0       0
  9389 ;;      Locals:         0       0       0       0       0
  9390 ;;      Temps:          4       0       0       0       0
  9391 ;;      Totals:        12       0       0       0       0
  9392 ;;Total ram usage:       12 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_main
  9398 ;;		_sprintf
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402     0802                     ___flge:	
  9403                           ;psect for function ___flge
  9404                           
  9405     0802                     l3230:	
  9406                           ;incstack = 0
  9407                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9408                           
  9409     0802  3000               	movlw	0
  9410     0803  0570               	andwf	___flge@ff1,w
  9411     0804  00F8               	movwf	??___flge
  9412     0805  3000               	movlw	0
  9413     0806  0571               	andwf	___flge@ff1+1,w
  9414     0807  00F9               	movwf	??___flge+1
  9415     0808  3080               	movlw	128
  9416     0809  0572               	andwf	___flge@ff1+2,w
  9417     080A  00FA               	movwf	??___flge+2
  9418     080B  307F               	movlw	127
  9419     080C  0573               	andwf	___flge@ff1+3,w
  9420     080D  00FB               	movwf	??___flge+3
  9421     080E  087B               	movf	??___flge+3,w
  9422     080F  047A               	iorwf	??___flge+2,w
  9423     0810  0479               	iorwf	??___flge+1,w
  9424     0811  0478               	iorwf	??___flge,w
  9425     0812  1D03               	skipz
  9426     0813  2815               	goto	u4791
  9427     0814  2816               	goto	u4790
  9428     0815                     u4791:
  9429     0815  281E               	goto	l630
  9430     0816                     u4790:
  9431     0816                     l3232:
  9432     0816  3000               	movlw	0
  9433     0817  00F3               	movwf	___flge@ff1+3
  9434     0818  3000               	movlw	0
  9435     0819  00F2               	movwf	___flge@ff1+2
  9436     081A  3000               	movlw	0
  9437     081B  00F1               	movwf	___flge@ff1+1
  9438     081C  3000               	movlw	0
  9439     081D  00F0               	movwf	___flge@ff1
  9440     081E                     l630:
  9441     081E  3000               	movlw	0
  9442     081F  0574               	andwf	___flge@ff2,w
  9443     0820  00F8               	movwf	??___flge
  9444     0821  3000               	movlw	0
  9445     0822  0575               	andwf	___flge@ff2+1,w
  9446     0823  00F9               	movwf	??___flge+1
  9447     0824  3080               	movlw	128
  9448     0825  0576               	andwf	___flge@ff2+2,w
  9449     0826  00FA               	movwf	??___flge+2
  9450     0827  307F               	movlw	127
  9451     0828  0577               	andwf	___flge@ff2+3,w
  9452     0829  00FB               	movwf	??___flge+3
  9453     082A  087B               	movf	??___flge+3,w
  9454     082B  047A               	iorwf	??___flge+2,w
  9455     082C  0479               	iorwf	??___flge+1,w
  9456     082D  0478               	iorwf	??___flge,w
  9457     082E  1D03               	skipz
  9458     082F  2831               	goto	u4801
  9459     0830  2832               	goto	u4800
  9460     0831                     u4801:
  9461     0831  283A               	goto	l3236
  9462     0832                     u4800:
  9463     0832                     l3234:
  9464     0832  3000               	movlw	0
  9465     0833  00F7               	movwf	___flge@ff2+3
  9466     0834  3000               	movlw	0
  9467     0835  00F6               	movwf	___flge@ff2+2
  9468     0836  3000               	movlw	0
  9469     0837  00F5               	movwf	___flge@ff2+1
  9470     0838  3000               	movlw	0
  9471     0839  00F4               	movwf	___flge@ff2
  9472     083A                     l3236:
  9473     083A  1FF3               	btfss	___flge@ff1+3,7
  9474     083B  283D               	goto	u4811
  9475     083C  283E               	goto	u4810
  9476     083D                     u4811:
  9477     083D  2862               	goto	l3240
  9478     083E                     u4810:
  9479     083E                     l3238:
  9480     083E  3000               	movlw	0
  9481     083F  00F8               	movwf	??___flge
  9482     0840  3000               	movlw	0
  9483     0841  00F9               	movwf	??___flge+1
  9484     0842  3000               	movlw	0
  9485     0843  00FA               	movwf	??___flge+2
  9486     0844  3080               	movlw	128
  9487     0845  00FB               	movwf	??___flge+3
  9488     0846  0870               	movf	___flge@ff1,w
  9489     0847  02F8               	subwf	??___flge,f
  9490     0848  0871               	movf	___flge@ff1+1,w
  9491     0849  1C03               	skipc
  9492     084A  0F71               	incfsz	___flge@ff1+1,w
  9493     084B  284D               	goto	u4821
  9494     084C  284E               	goto	u4822
  9495     084D                     u4821:
  9496     084D  02F9               	subwf	??___flge+1,f
  9497     084E                     u4822:
  9498     084E  0872               	movf	___flge@ff1+2,w
  9499     084F  1C03               	skipc
  9500     0850  0F72               	incfsz	___flge@ff1+2,w
  9501     0851  2853               	goto	u4823
  9502     0852  2854               	goto	u4824
  9503     0853                     u4823:
  9504     0853  02FA               	subwf	??___flge+2,f
  9505     0854                     u4824:
  9506     0854  0873               	movf	___flge@ff1+3,w
  9507     0855  1C03               	skipc
  9508     0856  0F73               	incfsz	___flge@ff1+3,w
  9509     0857  2859               	goto	u4825
  9510     0858  285A               	goto	u4826
  9511     0859                     u4825:
  9512     0859  02FB               	subwf	??___flge+3,f
  9513     085A                     u4826:
  9514     085A  087B               	movf	??___flge+3,w
  9515     085B  00F3               	movwf	___flge@ff1+3
  9516     085C  087A               	movf	??___flge+2,w
  9517     085D  00F2               	movwf	___flge@ff1+2
  9518     085E  0879               	movf	??___flge+1,w
  9519     085F  00F1               	movwf	___flge@ff1+1
  9520     0860  0878               	movf	??___flge,w
  9521     0861  00F0               	movwf	___flge@ff1
  9522     0862                     l3240:
  9523     0862  1FF7               	btfss	___flge@ff2+3,7
  9524     0863  2865               	goto	u4831
  9525     0864  2866               	goto	u4830
  9526     0865                     u4831:
  9527     0865  288A               	goto	l633
  9528     0866                     u4830:
  9529     0866                     l3242:
  9530     0866  3000               	movlw	0
  9531     0867  00F8               	movwf	??___flge
  9532     0868  3000               	movlw	0
  9533     0869  00F9               	movwf	??___flge+1
  9534     086A  3000               	movlw	0
  9535     086B  00FA               	movwf	??___flge+2
  9536     086C  3080               	movlw	128
  9537     086D  00FB               	movwf	??___flge+3
  9538     086E  0874               	movf	___flge@ff2,w
  9539     086F  02F8               	subwf	??___flge,f
  9540     0870  0875               	movf	___flge@ff2+1,w
  9541     0871  1C03               	skipc
  9542     0872  0F75               	incfsz	___flge@ff2+1,w
  9543     0873  2875               	goto	u4841
  9544     0874  2876               	goto	u4842
  9545     0875                     u4841:
  9546     0875  02F9               	subwf	??___flge+1,f
  9547     0876                     u4842:
  9548     0876  0876               	movf	___flge@ff2+2,w
  9549     0877  1C03               	skipc
  9550     0878  0F76               	incfsz	___flge@ff2+2,w
  9551     0879  287B               	goto	u4843
  9552     087A  287C               	goto	u4844
  9553     087B                     u4843:
  9554     087B  02FA               	subwf	??___flge+2,f
  9555     087C                     u4844:
  9556     087C  0877               	movf	___flge@ff2+3,w
  9557     087D  1C03               	skipc
  9558     087E  0F77               	incfsz	___flge@ff2+3,w
  9559     087F  2881               	goto	u4845
  9560     0880  2882               	goto	u4846
  9561     0881                     u4845:
  9562     0881  02FB               	subwf	??___flge+3,f
  9563     0882                     u4846:
  9564     0882  087B               	movf	??___flge+3,w
  9565     0883  00F7               	movwf	___flge@ff2+3
  9566     0884  087A               	movf	??___flge+2,w
  9567     0885  00F6               	movwf	___flge@ff2+2
  9568     0886  0879               	movf	??___flge+1,w
  9569     0887  00F5               	movwf	___flge@ff2+1
  9570     0888  0878               	movf	??___flge,w
  9571     0889  00F4               	movwf	___flge@ff2
  9572     088A                     l633:
  9573     088A  3080               	movlw	128
  9574     088B  06F3               	xorwf	___flge@ff1+3,f
  9575     088C  3080               	movlw	128
  9576     088D  06F7               	xorwf	___flge@ff2+3,f
  9577     088E  0877               	movf	___flge@ff2+3,w
  9578     088F  0273               	subwf	___flge@ff1+3,w
  9579     0890  1D03               	skipz
  9580     0891  289C               	goto	u4855
  9581     0892  0876               	movf	___flge@ff2+2,w
  9582     0893  0272               	subwf	___flge@ff1+2,w
  9583     0894  1D03               	skipz
  9584     0895  289C               	goto	u4855
  9585     0896  0875               	movf	___flge@ff2+1,w
  9586     0897  0271               	subwf	___flge@ff1+1,w
  9587     0898  1D03               	skipz
  9588     0899  289C               	goto	u4855
  9589     089A  0874               	movf	___flge@ff2,w
  9590     089B  0270               	subwf	___flge@ff1,w
  9591     089C                     u4855:
  9592     089C  1803               	skipnc
  9593     089D  289F               	goto	u4851
  9594     089E  28A0               	goto	u4850
  9595     089F                     u4851:
  9596     089F  28A2               	goto	l3246
  9597     08A0                     u4850:
  9598     08A0                     l3244:
  9599     08A0  1003               	clrc
  9600     08A1  28A3               	goto	l634
  9601     08A2                     l3246:
  9602     08A2  1403               	setc
  9603     08A3                     l634:
  9604     08A3  0008               	return
  9605     08A4                     __end_of___flge:
  9606                           
  9607                           	psect	text21
  9608     1D61                     __ptext21:	
  9609 ;; *************** function ___fleq *****************
  9610 ;; Defined at:
  9611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  ff1             4    0[COMMON] unsigned char 
  9614 ;;  ff2             4    4[COMMON] unsigned char 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;		None
  9617 ;; Return value:  Size  Location     Type
  9618 ;;		None               void
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9626 ;;      Params:         8       0       0       0       0
  9627 ;;      Locals:         0       0       0       0       0
  9628 ;;      Temps:          4       0       0       0       0
  9629 ;;      Totals:        12       0       0       0       0
  9630 ;;Total ram usage:       12 bytes
  9631 ;; Hardware stack levels used: 1
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_sprintf
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639     1D61                     ___fleq:	
  9640                           ;psect for function ___fleq
  9641                           
  9642     1D61                     l3218:	
  9643                           ;incstack = 0
  9644                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9645                           
  9646     1D61  3000               	movlw	0
  9647     1D62  0570               	andwf	___fleq@ff1,w
  9648     1D63  00F8               	movwf	??___fleq
  9649     1D64  3000               	movlw	0
  9650     1D65  0571               	andwf	___fleq@ff1+1,w
  9651     1D66  00F9               	movwf	??___fleq+1
  9652     1D67  3080               	movlw	128
  9653     1D68  0572               	andwf	___fleq@ff1+2,w
  9654     1D69  00FA               	movwf	??___fleq+2
  9655     1D6A  307F               	movlw	127
  9656     1D6B  0573               	andwf	___fleq@ff1+3,w
  9657     1D6C  00FB               	movwf	??___fleq+3
  9658     1D6D  087B               	movf	??___fleq+3,w
  9659     1D6E  047A               	iorwf	??___fleq+2,w
  9660     1D6F  0479               	iorwf	??___fleq+1,w
  9661     1D70  0478               	iorwf	??___fleq,w
  9662     1D71  1D03               	skipz
  9663     1D72  2D74               	goto	u4761
  9664     1D73  2D75               	goto	u4760
  9665     1D74                     u4761:
  9666     1D74  2D7D               	goto	l625
  9667     1D75                     u4760:
  9668     1D75                     l3220:
  9669     1D75  3000               	movlw	0
  9670     1D76  00F3               	movwf	___fleq@ff1+3
  9671     1D77  3000               	movlw	0
  9672     1D78  00F2               	movwf	___fleq@ff1+2
  9673     1D79  3000               	movlw	0
  9674     1D7A  00F1               	movwf	___fleq@ff1+1
  9675     1D7B  3000               	movlw	0
  9676     1D7C  00F0               	movwf	___fleq@ff1
  9677     1D7D                     l625:
  9678     1D7D  3000               	movlw	0
  9679     1D7E  0574               	andwf	___fleq@ff2,w
  9680     1D7F  00F8               	movwf	??___fleq
  9681     1D80  3000               	movlw	0
  9682     1D81  0575               	andwf	___fleq@ff2+1,w
  9683     1D82  00F9               	movwf	??___fleq+1
  9684     1D83  3080               	movlw	128
  9685     1D84  0576               	andwf	___fleq@ff2+2,w
  9686     1D85  00FA               	movwf	??___fleq+2
  9687     1D86  307F               	movlw	127
  9688     1D87  0577               	andwf	___fleq@ff2+3,w
  9689     1D88  00FB               	movwf	??___fleq+3
  9690     1D89  087B               	movf	??___fleq+3,w
  9691     1D8A  047A               	iorwf	??___fleq+2,w
  9692     1D8B  0479               	iorwf	??___fleq+1,w
  9693     1D8C  0478               	iorwf	??___fleq,w
  9694     1D8D  1D03               	skipz
  9695     1D8E  2D90               	goto	u4771
  9696     1D8F  2D91               	goto	u4770
  9697     1D90                     u4771:
  9698     1D90  2D99               	goto	l626
  9699     1D91                     u4770:
  9700     1D91                     l3222:
  9701     1D91  3000               	movlw	0
  9702     1D92  00F7               	movwf	___fleq@ff2+3
  9703     1D93  3000               	movlw	0
  9704     1D94  00F6               	movwf	___fleq@ff2+2
  9705     1D95  3000               	movlw	0
  9706     1D96  00F5               	movwf	___fleq@ff2+1
  9707     1D97  3000               	movlw	0
  9708     1D98  00F4               	movwf	___fleq@ff2
  9709     1D99                     l626:
  9710     1D99  0877               	movf	___fleq@ff2+3,w
  9711     1D9A  0673               	xorwf	___fleq@ff1+3,w
  9712     1D9B  1D03               	skipz
  9713     1D9C  2DA7               	goto	u4785
  9714     1D9D  0876               	movf	___fleq@ff2+2,w
  9715     1D9E  0672               	xorwf	___fleq@ff1+2,w
  9716     1D9F  1D03               	skipz
  9717     1DA0  2DA7               	goto	u4785
  9718     1DA1  0875               	movf	___fleq@ff2+1,w
  9719     1DA2  0671               	xorwf	___fleq@ff1+1,w
  9720     1DA3  1D03               	skipz
  9721     1DA4  2DA7               	goto	u4785
  9722     1DA5  0874               	movf	___fleq@ff2,w
  9723     1DA6  0670               	xorwf	___fleq@ff1,w
  9724     1DA7                     u4785:
  9725     1DA7  1903               	skipnz
  9726     1DA8  2DAA               	goto	u4781
  9727     1DA9  2DAB               	goto	u4780
  9728     1DAA                     u4781:
  9729     1DAA  2DAD               	goto	l3226
  9730     1DAB                     u4780:
  9731     1DAB                     l3224:
  9732     1DAB  1003               	clrc
  9733     1DAC  2DAE               	goto	l627
  9734     1DAD                     l3226:
  9735     1DAD  1403               	setc
  9736     1DAE                     l627:
  9737     1DAE  0008               	return
  9738     1DAF                     __end_of___fleq:
  9739                           
  9740                           	psect	text22
  9741     1B62                     __ptext22:	
  9742 ;; *************** function _setupPWM *****************
  9743 ;; Defined at:
  9744 ;;		line 42 in file "motorDC.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;		None
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		wreg, status,2, status,0
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9758 ;;      Params:         0       0       0       0       0
  9759 ;;      Locals:         0       0       0       0       0
  9760 ;;      Temps:          0       0       0       0       0
  9761 ;;      Totals:         0       0       0       0       0
  9762 ;;Total ram usage:        0 bytes
  9763 ;; Hardware stack levels used: 1
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_main
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771     1B62                     _setupPWM:	
  9772                           ;psect for function _setupPWM
  9773                           
  9774     1B62                     l3460:	
  9775                           ;incstack = 0
  9776                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
  9777                           
  9778                           
  9779                           ;motorDC.c: 46:     TRISCbits.TRISC2 = 1;
  9780     1B62  1683               	bsf	3,5	;RP0=1, select bank1
  9781     1B63  1303               	bcf	3,6	;RP1=0, select bank1
  9782     1B64  1507               	bsf	7,2	;volatile
  9783                           
  9784                           ;motorDC.c: 47:     TRISCbits.TRISC1 = 1;
  9785     1B65  1487               	bsf	7,1	;volatile
  9786     1B66                     l3462:
  9787                           
  9788                           ;motorDC.c: 51:     PR2 = 255;
  9789     1B66  30FF               	movlw	255
  9790     1B67  0092               	movwf	18	;volatile
  9791     1B68                     l3464:
  9792                           
  9793                           ;motorDC.c: 55:     CCP1CONbits.P1M = 0b00;
  9794     1B68  303F               	movlw	-193
  9795     1B69  1283               	bcf	3,5	;RP0=0, select bank0
  9796     1B6A  1303               	bcf	3,6	;RP1=0, select bank0
  9797     1B6B  0597               	andwf	23,f	;volatile
  9798     1B6C                     l3466:
  9799                           
  9800                           ;motorDC.c: 57:     CCP1CONbits.CCP1M = 0b1100;
  9801     1B6C  0817               	movf	23,w	;volatile
  9802     1B6D  39F0               	andlw	-16
  9803     1B6E  380C               	iorlw	12
  9804     1B6F  0097               	movwf	23	;volatile
  9805     1B70                     l3468:
  9806                           
  9807                           ;motorDC.c: 58:     CCP2CONbits.CCP2M = 0b1100;
  9808     1B70  081D               	movf	29,w	;volatile
  9809     1B71  39F0               	andlw	-16
  9810     1B72  380C               	iorlw	12
  9811     1B73  009D               	movwf	29	;volatile
  9812     1B74                     l3470:
  9813                           
  9814                           ;motorDC.c: 62:     CCP1CONbits.DC1B = 0b11;
  9815     1B74  3030               	movlw	48
  9816     1B75  0497               	iorwf	23,f	;volatile
  9817     1B76                     l3472:
  9818                           
  9819                           ;motorDC.c: 63:     CCP2CONbits.DC2B1 = 0b1;
  9820     1B76  169D               	bsf	29,5	;volatile
  9821     1B77                     l3474:
  9822                           
  9823                           ;motorDC.c: 64:     CCP2CONbits.DC2B0 = 0b1;
  9824     1B77  161D               	bsf	29,4	;volatile
  9825     1B78                     l3476:
  9826                           
  9827                           ;motorDC.c: 66:     CCPR1L = 0;
  9828     1B78  0195               	clrf	21	;volatile
  9829     1B79                     l3478:
  9830                           
  9831                           ;motorDC.c: 67:     CCPR2L = 0;
  9832     1B79  019B               	clrf	27	;volatile
  9833     1B7A                     l3480:
  9834                           
  9835                           ;motorDC.c: 73:     PIR1bits.TMR2IF = 0;
  9836     1B7A  108C               	bcf	12,1	;volatile
  9837     1B7B                     l3482:
  9838                           
  9839                           ;motorDC.c: 74:     T2CONbits.T2CKPS = 0b11;
  9840     1B7B  3003               	movlw	3
  9841     1B7C  0492               	iorwf	18,f	;volatile
  9842     1B7D                     l3484:
  9843                           
  9844                           ;motorDC.c: 75:     T2CONbits.TMR2ON = 1;
  9845     1B7D  1512               	bsf	18,2	;volatile
  9846     1B7E                     l257:	
  9847                           ;motorDC.c: 79:     while(!PIR1bits.TMR2IF){};
  9848                           
  9849     1B7E  1C8C               	btfss	12,1	;volatile
  9850     1B7F  2B81               	goto	u5251
  9851     1B80  2B82               	goto	u5250
  9852     1B81                     u5251:
  9853     1B81  2B7E               	goto	l257
  9854     1B82                     u5250:
  9855     1B82                     l259:
  9856                           
  9857                           ;motorDC.c: 81:     TRISCbits.TRISC2 = 0;
  9858     1B82  1683               	bsf	3,5	;RP0=1, select bank1
  9859     1B83  1303               	bcf	3,6	;RP1=0, select bank1
  9860     1B84  1107               	bcf	7,2	;volatile
  9861                           
  9862                           ;motorDC.c: 82:     TRISCbits.TRISC1 = 0;
  9863     1B85  1087               	bcf	7,1	;volatile
  9864     1B86                     l260:
  9865     1B86  0008               	return
  9866     1B87                     __end_of_setupPWM:
  9867                           
  9868                           	psect	text23
  9869     00DB                     __ptext23:	
  9870 ;; *************** function _setupMotores *****************
  9871 ;; Defined at:
  9872 ;;		line 15 in file "motorDC.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		wreg, status,2
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9886 ;;      Params:         0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used: 1
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_main
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899     00DB                     _setupMotores:	
  9900                           ;psect for function _setupMotores
  9901                           
  9902     00DB                     l3430:	
  9903                           ;incstack = 0
  9904                           ; Regs used in _setupMotores: [wreg+status,2]
  9905                           
  9906                           
  9907                           ;motorDC.c: 17:     ANSEL = 0;
  9908     00DB  1683               	bsf	3,5	;RP0=1, select bank3
  9909     00DC  1703               	bsf	3,6	;RP1=1, select bank3
  9910     00DD  0188               	clrf	8	;volatile
  9911                           
  9912                           ;motorDC.c: 18:     ANSELH = 0;
  9913     00DE  0189               	clrf	9	;volatile
  9914                           
  9915                           ;motorDC.c: 20:     TRISA = 0;
  9916     00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9917     00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9918     00E1  0185               	clrf	5	;volatile
  9919     00E2                     l3432:
  9920                           
  9921                           ;motorDC.c: 21:     TRISB = 0b00011111;
  9922     00E2  301F               	movlw	31
  9923     00E3  0086               	movwf	6	;volatile
  9924     00E4                     l3434:
  9925                           
  9926                           ;motorDC.c: 22:     TRISD = 0;
  9927     00E4  0188               	clrf	8	;volatile
  9928     00E5                     l3436:
  9929                           
  9930                           ;motorDC.c: 24:     OPTION_REGbits.nRBPU = 0;
  9931     00E5  1381               	bcf	1,7	;volatile
  9932     00E6                     l3438:
  9933                           
  9934                           ;motorDC.c: 25:     WPUBbits.WPUB0 = 1;
  9935     00E6  1415               	bsf	21,0	;volatile
  9936     00E7                     l3440:
  9937                           
  9938                           ;motorDC.c: 26:     WPUBbits.WPUB1 = 1;
  9939     00E7  1495               	bsf	21,1	;volatile
  9940     00E8                     l3442:
  9941                           
  9942                           ;motorDC.c: 27:     WPUBbits.WPUB2 = 1;
  9943     00E8  1515               	bsf	21,2	;volatile
  9944     00E9                     l3444:
  9945                           
  9946                           ;motorDC.c: 28:     WPUBbits.WPUB3 = 1;
  9947     00E9  1595               	bsf	21,3	;volatile
  9948     00EA                     l3446:
  9949                           
  9950                           ;motorDC.c: 29:     WPUBbits.WPUB4 = 1;
  9951     00EA  1615               	bsf	21,4	;volatile
  9952                           
  9953                           ;motorDC.c: 30:     IOCB = 0b00011111;
  9954     00EB  301F               	movlw	31
  9955     00EC  0096               	movwf	22	;volatile
  9956     00ED                     l3448:
  9957                           
  9958                           ;motorDC.c: 32:     PORTB = 0;
  9959     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  9960     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  9961     00EF  0186               	clrf	6	;volatile
  9962     00F0                     l3450:
  9963                           
  9964                           ;motorDC.c: 33:     PORTD = 0;
  9965     00F0  0188               	clrf	8	;volatile
  9966     00F1                     l3452:
  9967                           
  9968                           ;motorDC.c: 35:     PORTDbits.RD0 = 1;
  9969     00F1  1408               	bsf	8,0	;volatile
  9970     00F2                     l3454:
  9971                           
  9972                           ;motorDC.c: 36:     PORTDbits.RD1 = 0;
  9973     00F2  1088               	bcf	8,1	;volatile
  9974     00F3                     l3456:
  9975                           
  9976                           ;motorDC.c: 37:     PORTDbits.RD2 = 1;
  9977     00F3  1508               	bsf	8,2	;volatile
  9978     00F4                     l3458:
  9979                           
  9980                           ;motorDC.c: 38:     PORTDbits.RD3 = 0;
  9981     00F4  1188               	bcf	8,3	;volatile
  9982     00F5                     l254:
  9983     00F5  0008               	return
  9984     00F6                     __end_of_setupMotores:
  9985                           
  9986                           	psect	text24
  9987     1BAC                     __ptext24:	
  9988 ;; *************** function _setup *****************
  9989 ;; Defined at:
  9990 ;;		line 213 in file "main_M.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;		None
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;		None
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10004 ;;      Params:         0       0       0       0       0
 10005 ;;      Locals:         0       0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0
 10007 ;;      Totals:         0       0       0       0       0
 10008 ;;Total ram usage:        0 bytes
 10009 ;; Hardware stack levels used: 1
 10010 ;; Hardware stack levels required when called: 3
 10011 ;; This function calls:
 10012 ;;		_I2C_Master_Init
 10013 ;;		_Lcd_Init_4bits
 10014 ;;		_setupINTOSC
 10015 ;; This function is called by:
 10016 ;;		_main
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020     1BAC                     _setup:	
 10021                           ;psect for function _setup
 10022                           
 10023     1BAC                     l3422:	
 10024                           ;incstack = 0
 10025                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
 10026                           
 10027                           
 10028                           ;main_M.c: 215:     ANSEL = 0;
 10029     1BAC  1683               	bsf	3,5	;RP0=1, select bank3
 10030     1BAD  1703               	bsf	3,6	;RP1=1, select bank3
 10031     1BAE  0188               	clrf	8	;volatile
 10032                           
 10033                           ;main_M.c: 216:     ANSELH = 0;
 10034     1BAF  0189               	clrf	9	;volatile
 10035                           
 10036                           ;main_M.c: 218:     TRISA = 0;
 10037     1BB0  1683               	bsf	3,5	;RP0=1, select bank1
 10038     1BB1  1303               	bcf	3,6	;RP1=0, select bank1
 10039     1BB2  0185               	clrf	5	;volatile
 10040                           
 10041                           ;main_M.c: 219:     TRISB = 0b00000000;
 10042     1BB3  0186               	clrf	6	;volatile
 10043                           
 10044                           ;main_M.c: 220:     TRISD = 0;
 10045     1BB4  0188               	clrf	8	;volatile
 10046                           
 10047                           ;main_M.c: 228:     PORTA = 0;
 10048     1BB5  1283               	bcf	3,5	;RP0=0, select bank0
 10049     1BB6  1303               	bcf	3,6	;RP1=0, select bank0
 10050     1BB7  0185               	clrf	5	;volatile
 10051                           
 10052                           ;main_M.c: 229:     PORTB = 0;
 10053     1BB8  0186               	clrf	6	;volatile
 10054                           
 10055                           ;main_M.c: 230:     PORTD = 0;
 10056     1BB9  0188               	clrf	8	;volatile
 10057     1BBA                     l3424:
 10058                           
 10059                           ;main_M.c: 232:     I2C_Master_Init(100000);
 10060     1BBA  3000               	movlw	0
 10061     1BBB  00A3               	movwf	I2C_Master_Init@c+3
 10062     1BBC  3001               	movlw	1
 10063     1BBD  00A2               	movwf	I2C_Master_Init@c+2
 10064     1BBE  3086               	movlw	134
 10065     1BBF  00A1               	movwf	I2C_Master_Init@c+1
 10066     1BC0  30A0               	movlw	160
 10067     1BC1  00A0               	movwf	I2C_Master_Init@c
 10068     1BC2  160A  158A  245D  160A  158A  	fcall	_I2C_Master_Init
 10069     1BC7                     l3426:
 10070                           
 10071                           ;main_M.c: 233:     setupINTOSC(FOSC_8MHZ);
 10072     1BC7  3007               	movlw	7
 10073     1BC8  160A  158A  22E3  160A  158A  	fcall	_setupINTOSC
 10074     1BCD                     l3428:
 10075                           
 10076                           ;main_M.c: 234:     Lcd_Init_4bits();
 10077     1BCD  160A  158A  265C  160A  158A  	fcall	_Lcd_Init_4bits
 10078     1BD2                     l189:
 10079     1BD2  0008               	return
 10080     1BD3                     __end_of_setup:
 10081                           
 10082                           	psect	text25
 10083     1AE3                     __ptext25:	
 10084 ;; *************** function _setupINTOSC *****************
 10085 ;; Defined at:
 10086 ;;		line 11 in file "configINTOSC.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  F               1    wreg     enum E1292
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  F               1    1[COMMON] enum E1292
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		wreg, status,2, status,0
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10100 ;;      Params:         0       0       0       0       0
 10101 ;;      Locals:         1       0       0       0       0
 10102 ;;      Temps:          1       0       0       0       0
 10103 ;;      Totals:         2       0       0       0       0
 10104 ;;Total ram usage:        2 bytes
 10105 ;; Hardware stack levels used: 1
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_setup
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113     1AE3                     _setupINTOSC:	
 10114                           ;psect for function _setupINTOSC
 10115                           
 10116                           
 10117                           ;incstack = 0
 10118                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
 10119                           ;setupINTOSC@F stored from wreg
 10120     1AE3  00F1               	movwf	setupINTOSC@F
 10121     1AE4                     l2996:
 10122                           
 10123                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
 10124     1AE4  0871               	movf	setupINTOSC@F,w
 10125     1AE5  00F0               	movwf	??_setupINTOSC
 10126     1AE6  0EF0               	swapf	??_setupINTOSC,f
 10127     1AE7  1683               	bsf	3,5	;RP0=1, select bank1
 10128     1AE8  1303               	bcf	3,6	;RP1=0, select bank1
 10129     1AE9  080F               	movf	15,w	;volatile
 10130     1AEA  0670               	xorwf	??_setupINTOSC,w
 10131     1AEB  398F               	andlw	-113
 10132     1AEC  0670               	xorwf	??_setupINTOSC,w
 10133     1AED  008F               	movwf	15	;volatile
 10134     1AEE                     l2998:
 10135                           
 10136                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
 10137     1AEE  140F               	bsf	15,0	;volatile
 10138     1AEF                     l60:
 10139     1AEF  0008               	return
 10140     1AF0                     __end_of_setupINTOSC:
 10141                           
 10142                           	psect	text26
 10143     1E5C                     __ptext26:	
 10144 ;; *************** function _Lcd_Init_4bits *****************
 10145 ;; Defined at:
 10146 ;;		line 66 in file "configLCD_4bits.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0, pclath, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10160 ;;      Params:         0       0       0       0       0
 10161 ;;      Locals:         0       0       0       0       0
 10162 ;;      Temps:          2       0       0       0       0
 10163 ;;      Totals:         2       0       0       0       0
 10164 ;;Total ram usage:        2 bytes
 10165 ;; Hardware stack levels used: 1
 10166 ;; Hardware stack levels required when called: 2
 10167 ;; This function calls:
 10168 ;;		_Lcd_Cmd_4bits
 10169 ;;		_Lcd_Port_4bits
 10170 ;; This function is called by:
 10171 ;;		_setup
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175     1E5C                     _Lcd_Init_4bits:	
 10176                           ;psect for function _Lcd_Init_4bits
 10177                           
 10178     1E5C                     l3000:	
 10179                           ;incstack = 0
 10180                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
 10181                           
 10182                           
 10183                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
 10184     1E5C  3000               	movlw	0
 10185     1E5D  160A  158A  231C  160A  158A  	fcall	_Lcd_Port_4bits
 10186     1E62                     l3002:
 10187                           
 10188                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10189     1E62  3034               	movlw	52
 10190     1E63  00F5               	movwf	??_Lcd_Init_4bits+1
 10191     1E64  30F1               	movlw	241
 10192     1E65  00F4               	movwf	??_Lcd_Init_4bits
 10193     1E66                     u5777:
 10194     1E66  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10195     1E67  2E66               	goto	u5777
 10196     1E68  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10197     1E69  2E66               	goto	u5777
 10198     1E6A  2E6B               	nop2
 10199     1E6B                     l3004:
 10200                           
 10201                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
 10202     1E6B  3003               	movlw	3
 10203     1E6C  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10204                           
 10205                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10206     1E71  300D               	movlw	13
 10207     1E72  00F5               	movwf	??_Lcd_Init_4bits+1
 10208     1E73  30FB               	movlw	251
 10209     1E74  00F4               	movwf	??_Lcd_Init_4bits
 10210     1E75                     u5787:
 10211     1E75  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10212     1E76  2E75               	goto	u5787
 10213     1E77  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10214     1E78  2E75               	goto	u5787
 10215     1E79  2E7A               	nop2
 10216     1E7A                     l3006:
 10217                           
 10218                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
 10219     1E7A  3003               	movlw	3
 10220     1E7B  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10221     1E80                     l3008:
 10222                           
 10223                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10224     1E80  301D               	movlw	29
 10225     1E81  00F5               	movwf	??_Lcd_Init_4bits+1
 10226     1E82  3091               	movlw	145
 10227     1E83  00F4               	movwf	??_Lcd_Init_4bits
 10228     1E84                     u5797:
 10229     1E84  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10230     1E85  2E84               	goto	u5797
 10231     1E86  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10232     1E87  2E84               	goto	u5797
 10233                           
 10234                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
 10235     1E88  3003               	movlw	3
 10236     1E89  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10237                           
 10238                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
 10239     1E8E  3002               	movlw	2
 10240     1E8F  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10241                           
 10242                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
 10243     1E94  3002               	movlw	2
 10244     1E95  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10245                           
 10246                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
 10247     1E9A  3008               	movlw	8
 10248     1E9B  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10249                           
 10250                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
 10251     1EA0  3000               	movlw	0
 10252     1EA1  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10253                           
 10254                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
 10255     1EA6  300C               	movlw	12
 10256     1EA7  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10257                           
 10258                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
 10259     1EAC  3000               	movlw	0
 10260     1EAD  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10261                           
 10262                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
 10263     1EB2  3006               	movlw	6
 10264     1EB3  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10265     1EB8                     l90:
 10266     1EB8  0008               	return
 10267     1EB9                     __end_of_Lcd_Init_4bits:
 10268                           
 10269                           	psect	text27
 10270     1C5D                     __ptext27:	
 10271 ;; *************** function _I2C_Master_Init *****************
 10272 ;; Defined at:
 10273 ;;		line 13 in file "configI2C.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  c               4    0[BANK0 ] const unsigned long 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0, pclath, cstack
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10287 ;;      Params:         0       4       0       0       0
 10288 ;;      Locals:         0       0       0       0       0
 10289 ;;      Temps:          0       4       0       0       0
 10290 ;;      Totals:         0       8       0       0       0
 10291 ;;Total ram usage:        8 bytes
 10292 ;; Hardware stack levels used: 1
 10293 ;; Hardware stack levels required when called: 1
 10294 ;; This function calls:
 10295 ;;		___lldiv
 10296 ;; This function is called by:
 10297 ;;		_setup
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301     1C5D                     _I2C_Master_Init:	
 10302                           ;psect for function _I2C_Master_Init
 10303                           
 10304     1C5D                     l2980:	
 10305                           ;incstack = 0
 10306                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10307                           
 10308                           
 10309                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
 10310     1C5D  3028               	movlw	40
 10311     1C5E  1283               	bcf	3,5	;RP0=0, select bank0
 10312     1C5F  1303               	bcf	3,6	;RP1=0, select bank0
 10313     1C60  0094               	movwf	20	;volatile
 10314     1C61                     l2982:
 10315                           
 10316                           ;configI2C.c: 16:     SSPCON2 = 0;
 10317     1C61  1683               	bsf	3,5	;RP0=1, select bank1
 10318     1C62  1303               	bcf	3,6	;RP1=0, select bank1
 10319     1C63  0191               	clrf	17	;volatile
 10320     1C64                     l2984:
 10321                           
 10322                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
 10323     1C64  1283               	bcf	3,5	;RP0=0, select bank0
 10324     1C65  1303               	bcf	3,6	;RP1=0, select bank0
 10325     1C66  0820               	movf	I2C_Master_Init@c,w
 10326     1C67  00A4               	movwf	??_I2C_Master_Init
 10327     1C68  0821               	movf	I2C_Master_Init@c+1,w
 10328     1C69  00A5               	movwf	??_I2C_Master_Init+1
 10329     1C6A  0822               	movf	I2C_Master_Init@c+2,w
 10330     1C6B  00A6               	movwf	??_I2C_Master_Init+2
 10331     1C6C  0823               	movf	I2C_Master_Init@c+3,w
 10332     1C6D  00A7               	movwf	??_I2C_Master_Init+3
 10333     1C6E  3002               	movlw	2
 10334     1C6F                     u4155:
 10335     1C6F  1003               	clrc
 10336     1C70  0DA4               	rlf	??_I2C_Master_Init,f
 10337     1C71  0DA5               	rlf	??_I2C_Master_Init+1,f
 10338     1C72  0DA6               	rlf	??_I2C_Master_Init+2,f
 10339     1C73  0DA7               	rlf	??_I2C_Master_Init+3,f
 10340     1C74                     u4150:
 10341     1C74  3EFF               	addlw	-1
 10342     1C75  1D03               	skipz
 10343     1C76  2C6F               	goto	u4155
 10344     1C77  0827               	movf	??_I2C_Master_Init+3,w
 10345     1C78  00F3               	movwf	___lldiv@divisor+3
 10346     1C79  0826               	movf	??_I2C_Master_Init+2,w
 10347     1C7A  00F2               	movwf	___lldiv@divisor+2
 10348     1C7B  0825               	movf	??_I2C_Master_Init+1,w
 10349     1C7C  00F1               	movwf	___lldiv@divisor+1
 10350     1C7D  0824               	movf	??_I2C_Master_Init,w
 10351     1C7E  00F0               	movwf	___lldiv@divisor
 10352     1C7F  3000               	movlw	0
 10353     1C80  00F7               	movwf	___lldiv@dividend+3
 10354     1C81  307A               	movlw	122
 10355     1C82  00F6               	movwf	___lldiv@dividend+2
 10356     1C83  3012               	movlw	18
 10357     1C84  00F5               	movwf	___lldiv@dividend+1
 10358     1C85  3000               	movlw	0
 10359     1C86  00F4               	movwf	___lldiv@dividend
 10360     1C87  160A  158A  26B9  160A  158A  	fcall	___lldiv
 10361     1C8C  0870               	movf	?___lldiv,w
 10362     1C8D  3EFF               	addlw	255
 10363     1C8E  1683               	bsf	3,5	;RP0=1, select bank1
 10364     1C8F  1303               	bcf	3,6	;RP1=0, select bank1
 10365     1C90  0093               	movwf	19	;volatile
 10366     1C91                     l2986:
 10367                           
 10368                           ;configI2C.c: 18:     SSPSTAT = 0;
 10369     1C91  0194               	clrf	20	;volatile
 10370     1C92                     l2988:
 10371                           
 10372                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
 10373     1C92  1587               	bsf	7,3	;volatile
 10374     1C93                     l2990:
 10375                           
 10376                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
 10377     1C93  1607               	bsf	7,4	;volatile
 10378     1C94                     l29:
 10379     1C94  0008               	return
 10380     1C95                     __end_of_I2C_Master_Init:
 10381                           
 10382                           	psect	text28
 10383     1EB9                     __ptext28:	
 10384 ;; *************** function ___lldiv *****************
 10385 ;; Defined at:
 10386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;  divisor         4    0[COMMON] unsigned long 
 10389 ;;  dividend        4    4[COMMON] unsigned long 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  quotient        4    9[COMMON] unsigned long 
 10392 ;;  counter         1   13[COMMON] unsigned char 
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  4    0[COMMON] unsigned long 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10402 ;;      Params:         8       0       0       0       0
 10403 ;;      Locals:         5       0       0       0       0
 10404 ;;      Temps:          1       0       0       0       0
 10405 ;;      Totals:        14       0       0       0       0
 10406 ;;Total ram usage:       14 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; This function calls:
 10409 ;;		Nothing
 10410 ;; This function is called by:
 10411 ;;		_I2C_Master_Init
 10412 ;;		_sprintf
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416     1EB9                     ___lldiv:	
 10417                           ;psect for function ___lldiv
 10418                           
 10419     1EB9                     l2492:	
 10420                           ;incstack = 0
 10421                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10422                           
 10423     1EB9  3000               	movlw	0
 10424     1EBA  00FC               	movwf	___lldiv@quotient+3
 10425     1EBB  3000               	movlw	0
 10426     1EBC  00FB               	movwf	___lldiv@quotient+2
 10427     1EBD  3000               	movlw	0
 10428     1EBE  00FA               	movwf	___lldiv@quotient+1
 10429     1EBF  3000               	movlw	0
 10430     1EC0  00F9               	movwf	___lldiv@quotient
 10431     1EC1  0873               	movf	___lldiv@divisor+3,w
 10432     1EC2  0472               	iorwf	___lldiv@divisor+2,w
 10433     1EC3  0471               	iorwf	___lldiv@divisor+1,w
 10434     1EC4  0470               	iorwf	___lldiv@divisor,w
 10435     1EC5  1903               	skipnz
 10436     1EC6  2EC8               	goto	u2931
 10437     1EC7  2EC9               	goto	u2930
 10438     1EC8                     u2931:
 10439     1EC8  2F16               	goto	l2512
 10440     1EC9                     u2930:
 10441     1EC9                     l2494:
 10442     1EC9  01FD               	clrf	___lldiv@counter
 10443     1ECA  0AFD               	incf	___lldiv@counter,f
 10444     1ECB  2ED9               	goto	l2498
 10445     1ECC                     l2496:
 10446     1ECC  3001               	movlw	1
 10447     1ECD  00F8               	movwf	??___lldiv
 10448     1ECE                     u2945:
 10449     1ECE  1003               	clrc
 10450     1ECF  0DF0               	rlf	___lldiv@divisor,f
 10451     1ED0  0DF1               	rlf	___lldiv@divisor+1,f
 10452     1ED1  0DF2               	rlf	___lldiv@divisor+2,f
 10453     1ED2  0DF3               	rlf	___lldiv@divisor+3,f
 10454     1ED3  0BF8               	decfsz	??___lldiv,f
 10455     1ED4  2ECE               	goto	u2945
 10456     1ED5  3001               	movlw	1
 10457     1ED6  00F8               	movwf	??___lldiv
 10458     1ED7  0878               	movf	??___lldiv,w
 10459     1ED8  07FD               	addwf	___lldiv@counter,f
 10460     1ED9                     l2498:
 10461     1ED9  1FF3               	btfss	___lldiv@divisor+3,7
 10462     1EDA  2EDC               	goto	u2951
 10463     1EDB  2EDD               	goto	u2950
 10464     1EDC                     u2951:
 10465     1EDC  2ECC               	goto	l2496
 10466     1EDD                     u2950:
 10467     1EDD                     l2500:
 10468     1EDD  3001               	movlw	1
 10469     1EDE  00F8               	movwf	??___lldiv
 10470     1EDF                     u2965:
 10471     1EDF  1003               	clrc
 10472     1EE0  0DF9               	rlf	___lldiv@quotient,f
 10473     1EE1  0DFA               	rlf	___lldiv@quotient+1,f
 10474     1EE2  0DFB               	rlf	___lldiv@quotient+2,f
 10475     1EE3  0DFC               	rlf	___lldiv@quotient+3,f
 10476     1EE4  0BF8               	decfsz	??___lldiv,f
 10477     1EE5  2EDF               	goto	u2965
 10478     1EE6                     l2502:
 10479     1EE6  0873               	movf	___lldiv@divisor+3,w
 10480     1EE7  0277               	subwf	___lldiv@dividend+3,w
 10481     1EE8  1D03               	skipz
 10482     1EE9  2EF4               	goto	u2975
 10483     1EEA  0872               	movf	___lldiv@divisor+2,w
 10484     1EEB  0276               	subwf	___lldiv@dividend+2,w
 10485     1EEC  1D03               	skipz
 10486     1EED  2EF4               	goto	u2975
 10487     1EEE  0871               	movf	___lldiv@divisor+1,w
 10488     1EEF  0275               	subwf	___lldiv@dividend+1,w
 10489     1EF0  1D03               	skipz
 10490     1EF1  2EF4               	goto	u2975
 10491     1EF2  0870               	movf	___lldiv@divisor,w
 10492     1EF3  0274               	subwf	___lldiv@dividend,w
 10493     1EF4                     u2975:
 10494     1EF4  1C03               	skipc
 10495     1EF5  2EF7               	goto	u2971
 10496     1EF6  2EF8               	goto	u2970
 10497     1EF7                     u2971:
 10498     1EF7  2F07               	goto	l2508
 10499     1EF8                     u2970:
 10500     1EF8                     l2504:
 10501     1EF8  0870               	movf	___lldiv@divisor,w
 10502     1EF9  02F4               	subwf	___lldiv@dividend,f
 10503     1EFA  0871               	movf	___lldiv@divisor+1,w
 10504     1EFB  1C03               	skipc
 10505     1EFC  0F71               	incfsz	___lldiv@divisor+1,w
 10506     1EFD  02F5               	subwf	___lldiv@dividend+1,f
 10507     1EFE  0872               	movf	___lldiv@divisor+2,w
 10508     1EFF  1C03               	skipc
 10509     1F00  0F72               	incfsz	___lldiv@divisor+2,w
 10510     1F01  02F6               	subwf	___lldiv@dividend+2,f
 10511     1F02  0873               	movf	___lldiv@divisor+3,w
 10512     1F03  1C03               	skipc
 10513     1F04  0F73               	incfsz	___lldiv@divisor+3,w
 10514     1F05  02F7               	subwf	___lldiv@dividend+3,f
 10515     1F06                     l2506:
 10516     1F06  1479               	bsf	___lldiv@quotient,0
 10517     1F07                     l2508:
 10518     1F07  3001               	movlw	1
 10519     1F08                     u2985:
 10520     1F08  1003               	clrc
 10521     1F09  0CF3               	rrf	___lldiv@divisor+3,f
 10522     1F0A  0CF2               	rrf	___lldiv@divisor+2,f
 10523     1F0B  0CF1               	rrf	___lldiv@divisor+1,f
 10524     1F0C  0CF0               	rrf	___lldiv@divisor,f
 10525     1F0D  3EFF               	addlw	-1
 10526     1F0E  1D03               	skipz
 10527     1F0F  2F08               	goto	u2985
 10528     1F10                     l2510:
 10529     1F10  3001               	movlw	1
 10530     1F11  02FD               	subwf	___lldiv@counter,f
 10531     1F12  1D03               	btfss	3,2
 10532     1F13  2F15               	goto	u2991
 10533     1F14  2F16               	goto	u2990
 10534     1F15                     u2991:
 10535     1F15  2EDD               	goto	l2500
 10536     1F16                     u2990:
 10537     1F16                     l2512:
 10538     1F16  087C               	movf	___lldiv@quotient+3,w
 10539     1F17  00F3               	movwf	?___lldiv+3
 10540     1F18  087B               	movf	___lldiv@quotient+2,w
 10541     1F19  00F2               	movwf	?___lldiv+2
 10542     1F1A  087A               	movf	___lldiv@quotient+1,w
 10543     1F1B  00F1               	movwf	?___lldiv+1
 10544     1F1C  0879               	movf	___lldiv@quotient,w
 10545     1F1D  00F0               	movwf	?___lldiv
 10546     1F1E                     l475:
 10547     1F1E  0008               	return
 10548     1F1F                     __end_of___lldiv:
 10549                           
 10550                           	psect	text29
 10551     1C95                     __ptext29:	
 10552 ;; *************** function _Lcd_Write_String_4bits *****************
 10553 ;; Defined at:
 10554 ;;		line 99 in file "configLCD_4bits.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;  a               2    5[COMMON] PTR unsigned char 
 10557 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(6), 
 10558 ;;		 -> STR_7(2), STR_6(7), STR_5(5), STR_4(5), 
 10559 ;;		 -> STR_3(6), STR_2(5), distanciaLCD(16), 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  i               2   10[COMMON] int 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10571 ;;      Params:         2       0       0       0       0
 10572 ;;      Locals:         2       0       0       0       0
 10573 ;;      Temps:          3       0       0       0       0
 10574 ;;      Totals:         7       0       0       0       0
 10575 ;;Total ram usage:        7 bytes
 10576 ;; Hardware stack levels used: 1
 10577 ;; Hardware stack levels required when called: 2
 10578 ;; This function calls:
 10579 ;;		_Lcd_Write_Char_4bits
 10580 ;; This function is called by:
 10581 ;;		_main
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585     1C95                     _Lcd_Write_String_4bits:	
 10586                           ;psect for function _Lcd_Write_String_4bits
 10587                           
 10588     1C95                     l3414:	
 10589                           ;incstack = 0
 10590                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
 10591                           
 10592                           
 10593                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
 10594     1C95  01FA               	clrf	Lcd_Write_String_4bits@i
 10595     1C96  01FB               	clrf	Lcd_Write_String_4bits@i+1
 10596     1C97  2CBA               	goto	l3420
 10597     1C98                     l3416:
 10598                           
 10599                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
 10600     1C98  087A               	movf	Lcd_Write_String_4bits@i,w
 10601     1C99  0775               	addwf	Lcd_Write_String_4bits@a,w
 10602     1C9A  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10603     1C9B  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10604     1C9C  00F7               	movwf	??_Lcd_Write_String_4bits
 10605     1C9D  1803               	skipnc
 10606     1C9E  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10607     1C9F  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10608     1CA0  2CA2               	goto	u5220
 10609     1CA1  03F7               	decf	??_Lcd_Write_String_4bits,f
 10610     1CA2                     u5220:
 10611     1CA2  0877               	movf	??_Lcd_Write_String_4bits,w
 10612     1CA3  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10613     1CA4  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10614     1CA5  1283               	bcf	3,5	;RP0=0, select bank0
 10615     1CA6  1303               	bcf	3,6	;RP1=0, select bank0
 10616     1CA7  00FF               	movwf	btemp+1
 10617     1CA8  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10618     1CA9  0084               	movwf	4
 10619     1CAA  120A  118A  2003  160A  158A  	fcall	stringtab
 10620     1CAF  160A  158A  2428  160A  158A  	fcall	_Lcd_Write_Char_4bits
 10621     1CB4                     l3418:
 10622     1CB4  3001               	movlw	1
 10623     1CB5  07FA               	addwf	Lcd_Write_String_4bits@i,f
 10624     1CB6  1803               	skipnc
 10625     1CB7  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
 10626     1CB8  3000               	movlw	0
 10627     1CB9  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
 10628     1CBA                     l3420:
 10629     1CBA  087A               	movf	Lcd_Write_String_4bits@i,w
 10630     1CBB  0775               	addwf	Lcd_Write_String_4bits@a,w
 10631     1CBC  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10632     1CBD  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10633     1CBE  00F7               	movwf	??_Lcd_Write_String_4bits
 10634     1CBF  1803               	skipnc
 10635     1CC0  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10636     1CC1  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10637     1CC2  2CC4               	goto	u5230
 10638     1CC3  03F7               	decf	??_Lcd_Write_String_4bits,f
 10639     1CC4                     u5230:
 10640     1CC4  0877               	movf	??_Lcd_Write_String_4bits,w
 10641     1CC5  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10642     1CC6  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10643     1CC7  1283               	bcf	3,5	;RP0=0, select bank0
 10644     1CC8  1303               	bcf	3,6	;RP1=0, select bank0
 10645     1CC9  00FF               	movwf	btemp+1
 10646     1CCA  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10647     1CCB  0084               	movwf	4
 10648     1CCC  120A  118A  2003  160A  158A  	fcall	stringtab
 10649     1CD1  3A00               	xorlw	0
 10650     1CD2  1D03               	skipz
 10651     1CD3  2CD5               	goto	u5241
 10652     1CD4  2CD6               	goto	u5240
 10653     1CD5                     u5241:
 10654     1CD5  2C98               	goto	l3416
 10655     1CD6                     u5240:
 10656     1CD6                     l99:
 10657     1CD6  0008               	return
 10658     1CD7                     __end_of_Lcd_Write_String_4bits:
 10659                           
 10660                           	psect	text30
 10661     1C28                     __ptext30:	
 10662 ;; *************** function _Lcd_Write_Char_4bits *****************
 10663 ;; Defined at:
 10664 ;;		line 84 in file "configLCD_4bits.c"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  a               1    wreg     unsigned char 
 10667 ;; Auto vars:     Size  Location     Type
 10668 ;;  a               1    4[COMMON] unsigned char 
 10669 ;;  y               1    3[COMMON] unsigned char 
 10670 ;;  temp            1    2[COMMON] unsigned char 
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		wreg, status,2, status,0, pclath, cstack
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10680 ;;      Params:         0       0       0       0       0
 10681 ;;      Locals:         3       0       0       0       0
 10682 ;;      Temps:          1       0       0       0       0
 10683 ;;      Totals:         4       0       0       0       0
 10684 ;;Total ram usage:        4 bytes
 10685 ;; Hardware stack levels used: 1
 10686 ;; Hardware stack levels required when called: 1
 10687 ;; This function calls:
 10688 ;;		_Lcd_Port_4bits
 10689 ;; This function is called by:
 10690 ;;		_Lcd_Write_String_4bits
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694     1C28                     _Lcd_Write_Char_4bits:	
 10695                           ;psect for function _Lcd_Write_Char_4bits
 10696                           
 10697                           
 10698                           ;incstack = 0
 10699                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
 10700                           ;Lcd_Write_Char_4bits@a stored from wreg
 10701     1C28  00F4               	movwf	Lcd_Write_Char_4bits@a
 10702     1C29                     l3010:
 10703                           
 10704                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
 10705     1C29  0874               	movf	Lcd_Write_Char_4bits@a,w
 10706     1C2A  390F               	andlw	15
 10707     1C2B  00F2               	movwf	Lcd_Write_Char_4bits@temp
 10708                           
 10709                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
 10710     1C2C  0874               	movf	Lcd_Write_Char_4bits@a,w
 10711     1C2D  39F0               	andlw	240
 10712     1C2E  00F3               	movwf	Lcd_Write_Char_4bits@y
 10713     1C2F                     l3012:
 10714                           
 10715                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
 10716     1C2F  1283               	bcf	3,5	;RP0=0, select bank0
 10717     1C30  1303               	bcf	3,6	;RP1=0, select bank0
 10718     1C31  1508               	bsf	8,2	;volatile
 10719     1C32                     l3014:
 10720                           
 10721                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
 10722     1C32  0873               	movf	Lcd_Write_Char_4bits@y,w
 10723     1C33  00F1               	movwf	??_Lcd_Write_Char_4bits
 10724     1C34  3004               	movlw	4
 10725     1C35                     u4185:
 10726     1C35  1003               	clrc
 10727     1C36  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
 10728     1C37  3EFF               	addlw	-1
 10729     1C38  1D03               	skipz
 10730     1C39  2C35               	goto	u4185
 10731     1C3A  0871               	movf	??_Lcd_Write_Char_4bits,w
 10732     1C3B  160A  158A  231C  160A  158A  	fcall	_Lcd_Port_4bits
 10733     1C40                     l3016:
 10734                           
 10735                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
 10736     1C40  1283               	bcf	3,5	;RP0=0, select bank0
 10737     1C41  1303               	bcf	3,6	;RP1=0, select bank0
 10738     1C42  1588               	bsf	8,3	;volatile
 10739     1C43                     l3018:
 10740                           
 10741                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10742     1C43  301A               	movlw	26
 10743     1C44  00F1               	movwf	??_Lcd_Write_Char_4bits
 10744     1C45                     u5807:
 10745     1C45  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10746     1C46  2C45               	goto	u5807
 10747     1C47  0000               	nop
 10748     1C48                     l3020:
 10749                           
 10750                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
 10751     1C48  1283               	bcf	3,5	;RP0=0, select bank0
 10752     1C49  1303               	bcf	3,6	;RP1=0, select bank0
 10753     1C4A  1188               	bcf	8,3	;volatile
 10754     1C4B                     l3022:
 10755                           
 10756                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
 10757     1C4B  0872               	movf	Lcd_Write_Char_4bits@temp,w
 10758     1C4C  160A  158A  231C  160A  158A  	fcall	_Lcd_Port_4bits
 10759     1C51                     l3024:
 10760                           
 10761                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
 10762     1C51  1283               	bcf	3,5	;RP0=0, select bank0
 10763     1C52  1303               	bcf	3,6	;RP1=0, select bank0
 10764     1C53  1588               	bsf	8,3	;volatile
 10765     1C54                     l3026:
 10766                           
 10767                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10768     1C54  301A               	movlw	26
 10769     1C55  00F1               	movwf	??_Lcd_Write_Char_4bits
 10770     1C56                     u5817:
 10771     1C56  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10772     1C57  2C56               	goto	u5817
 10773     1C58  0000               	nop
 10774     1C59                     l3028:
 10775                           
 10776                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
 10777     1C59  1283               	bcf	3,5	;RP0=0, select bank0
 10778     1C5A  1303               	bcf	3,6	;RP1=0, select bank0
 10779     1C5B  1188               	bcf	8,3	;volatile
 10780     1C5C                     l93:
 10781     1C5C  0008               	return
 10782     1C5D                     __end_of_Lcd_Write_Char_4bits:
 10783                           
 10784                           	psect	text31
 10785     1D1B                     __ptext31:	
 10786 ;; *************** function _Lcd_Set_Cursor_4bits *****************
 10787 ;; Defined at:
 10788 ;;		line 49 in file "configLCD_4bits.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;  a               1    wreg     unsigned char 
 10791 ;;  b               1    4[COMMON] unsigned char 
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;  a               1    6[COMMON] unsigned char 
 10794 ;;  temp            1    9[COMMON] unsigned char 
 10795 ;;  y               1    8[COMMON] unsigned char 
 10796 ;;  z               1    7[COMMON] unsigned char 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10806 ;;      Params:         1       0       0       0       0
 10807 ;;      Locals:         4       0       0       0       0
 10808 ;;      Temps:          1       0       0       0       0
 10809 ;;      Totals:         6       0       0       0       0
 10810 ;;Total ram usage:        6 bytes
 10811 ;; Hardware stack levels used: 1
 10812 ;; Hardware stack levels required when called: 2
 10813 ;; This function calls:
 10814 ;;		_Lcd_Cmd_4bits
 10815 ;; This function is called by:
 10816 ;;		_main
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820     1D1B                     _Lcd_Set_Cursor_4bits:	
 10821                           ;psect for function _Lcd_Set_Cursor_4bits
 10822                           
 10823                           
 10824                           ;incstack = 0
 10825                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
 10826                           ;Lcd_Set_Cursor_4bits@a stored from wreg
 10827     1D1B  00F6               	movwf	Lcd_Set_Cursor_4bits@a
 10828     1D1C                     l3394:
 10829                           
 10830                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
 10831     1D1C  0376               	decf	Lcd_Set_Cursor_4bits@a,w
 10832     1D1D  1D03               	btfss	3,2
 10833     1D1E  2D20               	goto	u5181
 10834     1D1F  2D21               	goto	u5180
 10835     1D20                     u5181:
 10836     1D20  2D3E               	goto	l3404
 10837     1D21                     u5180:
 10838     1D21                     l3396:
 10839                           
 10840                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
 10841     1D21  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10842     1D22  3E7F               	addlw	127
 10843     1D23  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10844                           
 10845                           ;configLCD_4bits.c: 53:         z = temp >> 4;
 10846     1D24  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10847     1D25  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10848     1D26  3004               	movlw	4
 10849     1D27                     u5195:
 10850     1D27  1003               	clrc
 10851     1D28  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10852     1D29  3EFF               	addlw	-1
 10853     1D2A  1D03               	skipz
 10854     1D2B  2D27               	goto	u5195
 10855     1D2C  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10856     1D2D  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10857     1D2E                     l3398:
 10858                           
 10859                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
 10860     1D2E  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10861     1D2F  390F               	andlw	15
 10862     1D30  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10863     1D31                     l3400:
 10864                           
 10865                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
 10866     1D31  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10867     1D32  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10868     1D37                     l3402:
 10869                           
 10870                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
 10871     1D37  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10872     1D38  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10873                           
 10874                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
 10875     1D3D  2D60               	goto	l87
 10876     1D3E                     l3404:
 10877     1D3E  3002               	movlw	2
 10878     1D3F  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
 10879     1D40  1D03               	btfss	3,2
 10880     1D41  2D43               	goto	u5201
 10881     1D42  2D44               	goto	u5200
 10882     1D43                     u5201:
 10883     1D43  2D60               	goto	l87
 10884     1D44                     u5200:
 10885     1D44                     l3406:
 10886                           
 10887                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
 10888     1D44  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10889     1D45  3EBF               	addlw	191
 10890     1D46  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10891                           
 10892                           ;configLCD_4bits.c: 59:         z = temp >> 4;
 10893     1D47  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10894     1D48  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10895     1D49  3004               	movlw	4
 10896     1D4A                     u5215:
 10897     1D4A  1003               	clrc
 10898     1D4B  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10899     1D4C  3EFF               	addlw	-1
 10900     1D4D  1D03               	skipz
 10901     1D4E  2D4A               	goto	u5215
 10902     1D4F  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10903     1D50  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10904     1D51                     l3408:
 10905                           
 10906                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
 10907     1D51  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10908     1D52  390F               	andlw	15
 10909     1D53  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10910     1D54                     l3410:
 10911                           
 10912                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
 10913     1D54  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10914     1D55  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10915     1D5A                     l3412:
 10916                           
 10917                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
 10918     1D5A  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10919     1D5B  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10920     1D60                     l87:
 10921     1D60  0008               	return
 10922     1D61                     __end_of_Lcd_Set_Cursor_4bits:
 10923                           
 10924                           	psect	text32
 10925     1AD6                     __ptext32:	
 10926 ;; *************** function _Lcd_Clear_4bits *****************
 10927 ;; Defined at:
 10928 ;;		line 44 in file "configLCD_4bits.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		wreg, status,2, status,0, pclath, cstack
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10942 ;;      Params:         0       0       0       0       0
 10943 ;;      Locals:         0       0       0       0       0
 10944 ;;      Temps:          0       0       0       0       0
 10945 ;;      Totals:         0       0       0       0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used: 1
 10948 ;; Hardware stack levels required when called: 2
 10949 ;; This function calls:
 10950 ;;		_Lcd_Cmd_4bits
 10951 ;; This function is called by:
 10952 ;;		_main
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956     1AD6                     _Lcd_Clear_4bits:	
 10957                           ;psect for function _Lcd_Clear_4bits
 10958                           
 10959     1AD6                     l3392:	
 10960                           ;incstack = 0
 10961                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
 10962                           
 10963                           
 10964                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
 10965     1AD6  3000               	movlw	0
 10966     1AD7  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10967                           
 10968                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
 10969     1ADC  3001               	movlw	1
 10970     1ADD  160A  158A  2302  160A  158A  	fcall	_Lcd_Cmd_4bits
 10971     1AE2                     l81:
 10972     1AE2  0008               	return
 10973     1AE3                     __end_of_Lcd_Clear_4bits:
 10974                           
 10975                           	psect	text33
 10976     1B02                     __ptext33:	
 10977 ;; *************** function _Lcd_Cmd_4bits *****************
 10978 ;; Defined at:
 10979 ;;		line 36 in file "configLCD_4bits.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  a               1    wreg     unsigned char 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;  a               1    3[COMMON] unsigned char 
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, status,2, status,0, pclath, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10993 ;;      Params:         0       0       0       0       0
 10994 ;;      Locals:         1       0       0       0       0
 10995 ;;      Temps:          2       0       0       0       0
 10996 ;;      Totals:         3       0       0       0       0
 10997 ;;Total ram usage:        3 bytes
 10998 ;; Hardware stack levels used: 1
 10999 ;; Hardware stack levels required when called: 1
 11000 ;; This function calls:
 11001 ;;		_Lcd_Port_4bits
 11002 ;; This function is called by:
 11003 ;;		_Lcd_Clear_4bits
 11004 ;;		_Lcd_Set_Cursor_4bits
 11005 ;;		_Lcd_Init_4bits
 11006 ;;		_Lcd_Shift_Right_4bits
 11007 ;;		_Lcd_Shift_Left_4bits
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011     1B02                     _Lcd_Cmd_4bits:	
 11012                           ;psect for function _Lcd_Cmd_4bits
 11013                           
 11014                           
 11015                           ;incstack = 0
 11016                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
 11017                           ;Lcd_Cmd_4bits@a stored from wreg
 11018     1B02  00F3               	movwf	Lcd_Cmd_4bits@a
 11019     1B03                     l2482:
 11020                           
 11021                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
 11022     1B03  1283               	bcf	3,5	;RP0=0, select bank0
 11023     1B04  1303               	bcf	3,6	;RP1=0, select bank0
 11024     1B05  1108               	bcf	8,2	;volatile
 11025     1B06                     l2484:
 11026                           
 11027                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
 11028     1B06  0873               	movf	Lcd_Cmd_4bits@a,w
 11029     1B07  160A  158A  231C  160A  158A  	fcall	_Lcd_Port_4bits
 11030     1B0C                     l2486:
 11031                           
 11032                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
 11033     1B0C  1283               	bcf	3,5	;RP0=0, select bank0
 11034     1B0D  1303               	bcf	3,6	;RP1=0, select bank0
 11035     1B0E  1588               	bsf	8,3	;volatile
 11036     1B0F                     l2488:
 11037                           
 11038                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11039     1B0F  300B               	movlw	11
 11040     1B10  00F2               	movwf	??_Lcd_Cmd_4bits+1
 11041     1B11  3062               	movlw	98
 11042     1B12  00F1               	movwf	??_Lcd_Cmd_4bits
 11043     1B13                     u5827:
 11044     1B13  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
 11045     1B14  2B13               	goto	u5827
 11046     1B15  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
 11047     1B16  2B13               	goto	u5827
 11048     1B17  0000               	nop
 11049     1B18                     l2490:
 11050                           
 11051                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
 11052     1B18  1283               	bcf	3,5	;RP0=0, select bank0
 11053     1B19  1303               	bcf	3,6	;RP1=0, select bank0
 11054     1B1A  1188               	bcf	8,3	;volatile
 11055     1B1B                     l78:
 11056     1B1B  0008               	return
 11057     1B1C                     __end_of_Lcd_Cmd_4bits:
 11058                           
 11059                           	psect	text34
 11060     1B1C                     __ptext34:	
 11061 ;; *************** function _Lcd_Port_4bits *****************
 11062 ;; Defined at:
 11063 ;;		line 14 in file "configLCD_4bits.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  a               1    wreg     unsigned char 
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;  a               1    0[COMMON] unsigned char 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11077 ;;      Params:         0       0       0       0       0
 11078 ;;      Locals:         1       0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0
 11080 ;;      Totals:         1       0       0       0       0
 11081 ;;Total ram usage:        1 bytes
 11082 ;; Hardware stack levels used: 1
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_Lcd_Cmd_4bits
 11087 ;;		_Lcd_Init_4bits
 11088 ;;		_Lcd_Write_Char_4bits
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092     1B1C                     _Lcd_Port_4bits:	
 11093                           ;psect for function _Lcd_Port_4bits
 11094                           
 11095                           
 11096                           ;incstack = 0
 11097                           ; Regs used in _Lcd_Port_4bits: [wreg]
 11098                           ;Lcd_Port_4bits@a stored from wreg
 11099     1B1C  00F0               	movwf	Lcd_Port_4bits@a
 11100     1B1D                     l2458:
 11101                           
 11102                           ;configLCD_4bits.c: 15:     if (a & 1)
 11103     1B1D  1C70               	btfss	Lcd_Port_4bits@a,0
 11104     1B1E  2B20               	goto	u2861
 11105     1B1F  2B21               	goto	u2860
 11106     1B20                     u2861:
 11107     1B20  2B25               	goto	l67
 11108     1B21                     u2860:
 11109     1B21                     l2460:
 11110                           
 11111                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
 11112     1B21  1283               	bcf	3,5	;RP0=0, select bank0
 11113     1B22  1303               	bcf	3,6	;RP1=0, select bank0
 11114     1B23  1608               	bsf	8,4	;volatile
 11115     1B24  2B28               	goto	l68
 11116     1B25                     l67:	
 11117                           ;configLCD_4bits.c: 17:     else
 11118                           
 11119                           
 11120                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
 11121     1B25  1283               	bcf	3,5	;RP0=0, select bank0
 11122     1B26  1303               	bcf	3,6	;RP1=0, select bank0
 11123     1B27  1208               	bcf	8,4	;volatile
 11124     1B28                     l68:
 11125                           
 11126                           ;configLCD_4bits.c: 20:     if (a & 2)
 11127     1B28  1CF0               	btfss	Lcd_Port_4bits@a,1
 11128     1B29  2B2B               	goto	u2871
 11129     1B2A  2B2C               	goto	u2870
 11130     1B2B                     u2871:
 11131     1B2B  2B2E               	goto	l69
 11132     1B2C                     u2870:
 11133     1B2C                     l2462:
 11134                           
 11135                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
 11136     1B2C  1688               	bsf	8,5	;volatile
 11137     1B2D  2B2F               	goto	l70
 11138     1B2E                     l69:	
 11139                           ;configLCD_4bits.c: 22:     else
 11140                           
 11141                           
 11142                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
 11143     1B2E  1288               	bcf	8,5	;volatile
 11144     1B2F                     l70:
 11145                           
 11146                           ;configLCD_4bits.c: 25:     if (a & 4)
 11147     1B2F  1D70               	btfss	Lcd_Port_4bits@a,2
 11148     1B30  2B32               	goto	u2881
 11149     1B31  2B33               	goto	u2880
 11150     1B32                     u2881:
 11151     1B32  2B35               	goto	l71
 11152     1B33                     u2880:
 11153     1B33                     l2464:
 11154                           
 11155                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
 11156     1B33  1708               	bsf	8,6	;volatile
 11157     1B34  2B36               	goto	l72
 11158     1B35                     l71:	
 11159                           ;configLCD_4bits.c: 27:     else
 11160                           
 11161                           
 11162                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
 11163     1B35  1308               	bcf	8,6	;volatile
 11164     1B36                     l72:
 11165                           
 11166                           ;configLCD_4bits.c: 30:     if (a & 8)
 11167     1B36  1DF0               	btfss	Lcd_Port_4bits@a,3
 11168     1B37  2B39               	goto	u2891
 11169     1B38  2B3A               	goto	u2890
 11170     1B39                     u2891:
 11171     1B39  2B3C               	goto	l73
 11172     1B3A                     u2890:
 11173     1B3A                     l2466:
 11174                           
 11175                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
 11176     1B3A  1788               	bsf	8,7	;volatile
 11177     1B3B  2B3D               	goto	l75
 11178     1B3C                     l73:	
 11179                           ;configLCD_4bits.c: 32:     else
 11180                           
 11181                           
 11182                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
 11183     1B3C  1388               	bcf	8,7	;volatile
 11184     1B3D                     l75:
 11185     1B3D  0008               	return
 11186     1B3E                     __end_of_Lcd_Port_4bits:
 11187                           
 11188                           	psect	text35
 11189     1AB4                     __ptext35:	
 11190 ;; *************** function _I2C_Master_Write *****************
 11191 ;; Defined at:
 11192 ;;		line 62 in file "configI2C.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  d               2   59[BANK0 ] unsigned int 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;		None
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  1    wreg      void 
 11199 ;; Registers used:
 11200 ;;		wreg, status,2, status,0, pclath, cstack
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11206 ;;      Params:         0       2       0       0       0
 11207 ;;      Locals:         0       0       0       0       0
 11208 ;;      Temps:          0       0       0       0       0
 11209 ;;      Totals:         0       2       0       0       0
 11210 ;;Total ram usage:        2 bytes
 11211 ;; Hardware stack levels used: 1
 11212 ;; Hardware stack levels required when called: 1
 11213 ;; This function calls:
 11214 ;;		_I2C_Master_Wait
 11215 ;; This function is called by:
 11216 ;;		_main
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220     1AB4                     _I2C_Master_Write:	
 11221                           ;psect for function _I2C_Master_Write
 11222                           
 11223     1AB4                     l3372:	
 11224                           ;incstack = 0
 11225                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11226                           
 11227                           
 11228                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
 11229     1AB4  160A  158A  22C9  160A  158A  	fcall	_I2C_Master_Wait
 11230     1AB9                     l3374:
 11231                           
 11232                           ;configI2C.c: 65:     SSPBUF = d;
 11233     1AB9  1283               	bcf	3,5	;RP0=0, select bank0
 11234     1ABA  1303               	bcf	3,6	;RP1=0, select bank0
 11235     1ABB  085B               	movf	I2C_Master_Write@d,w
 11236     1ABC  0093               	movwf	19	;volatile
 11237     1ABD                     l47:
 11238     1ABD  0008               	return
 11239     1ABE                     __end_of_I2C_Master_Write:
 11240                           
 11241                           	psect	text36
 11242     1AAB                     __ptext36:	
 11243 ;; *************** function _I2C_Master_Stop *****************
 11244 ;; Defined at:
 11245 ;;		line 52 in file "configI2C.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		wreg, status,2, status,0, pclath, cstack
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11259 ;;      Params:         0       0       0       0       0
 11260 ;;      Locals:         0       0       0       0       0
 11261 ;;      Temps:          0       0       0       0       0
 11262 ;;      Totals:         0       0       0       0       0
 11263 ;;Total ram usage:        0 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 1
 11266 ;; This function calls:
 11267 ;;		_I2C_Master_Wait
 11268 ;; This function is called by:
 11269 ;;		_main
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273     1AAB                     _I2C_Master_Stop:	
 11274                           ;psect for function _I2C_Master_Stop
 11275                           
 11276     1AAB                     l3368:	
 11277                           ;incstack = 0
 11278                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11279                           
 11280                           
 11281                           ;configI2C.c: 54:     I2C_Master_Wait();
 11282     1AAB  160A  158A  22C9  160A  158A  	fcall	_I2C_Master_Wait
 11283     1AB0                     l3370:
 11284                           
 11285                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
 11286     1AB0  1683               	bsf	3,5	;RP0=1, select bank1
 11287     1AB1  1303               	bcf	3,6	;RP1=0, select bank1
 11288     1AB2  1511               	bsf	17,2	;volatile
 11289     1AB3                     l44:
 11290     1AB3  0008               	return
 11291     1AB4                     __end_of_I2C_Master_Stop:
 11292                           
 11293                           	psect	text37
 11294     1AA2                     __ptext37:	
 11295 ;; *************** function _I2C_Master_Start *****************
 11296 ;; Defined at:
 11297 ;;		line 36 in file "configI2C.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;		None
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;		None
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  1    wreg      void 
 11304 ;; Registers used:
 11305 ;;		wreg, status,2, status,0, pclath, cstack
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11311 ;;      Params:         0       0       0       0       0
 11312 ;;      Locals:         0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0
 11314 ;;      Totals:         0       0       0       0       0
 11315 ;;Total ram usage:        0 bytes
 11316 ;; Hardware stack levels used: 1
 11317 ;; Hardware stack levels required when called: 1
 11318 ;; This function calls:
 11319 ;;		_I2C_Master_Wait
 11320 ;; This function is called by:
 11321 ;;		_main
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325     1AA2                     _I2C_Master_Start:	
 11326                           ;psect for function _I2C_Master_Start
 11327                           
 11328     1AA2                     l3364:	
 11329                           ;incstack = 0
 11330                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11331                           
 11332                           
 11333                           ;configI2C.c: 38:     I2C_Master_Wait();
 11334     1AA2  160A  158A  22C9  160A  158A  	fcall	_I2C_Master_Wait
 11335     1AA7                     l3366:
 11336                           
 11337                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
 11338     1AA7  1683               	bsf	3,5	;RP0=1, select bank1
 11339     1AA8  1303               	bcf	3,6	;RP1=0, select bank1
 11340     1AA9  1411               	bsf	17,0	;volatile
 11341     1AAA                     l38:
 11342     1AAA  0008               	return
 11343     1AAB                     __end_of_I2C_Master_Start:
 11344                           
 11345                           	psect	text38
 11346     1BFA                     __ptext38:	
 11347 ;; *************** function _I2C_Master_Read *****************
 11348 ;; Defined at:
 11349 ;;		line 71 in file "configI2C.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  a               2    0[COMMON] unsigned short 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  temp            2    4[COMMON] unsigned short 
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  2    0[COMMON] unsigned short 
 11356 ;; Registers used:
 11357 ;;		wreg, status,2, status,0, pclath, cstack
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11363 ;;      Params:         2       0       0       0       0
 11364 ;;      Locals:         2       0       0       0       0
 11365 ;;      Temps:          2       0       0       0       0
 11366 ;;      Totals:         6       0       0       0       0
 11367 ;;Total ram usage:        6 bytes
 11368 ;; Hardware stack levels used: 1
 11369 ;; Hardware stack levels required when called: 1
 11370 ;; This function calls:
 11371 ;;		_I2C_Master_Wait
 11372 ;; This function is called by:
 11373 ;;		_main
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377     1BFA                     _I2C_Master_Read:	
 11378                           ;psect for function _I2C_Master_Read
 11379                           
 11380     1BFA                     l3376:	
 11381                           ;incstack = 0
 11382                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11383                           
 11384                           
 11385                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
 11386     1BFA  160A  158A  22C9  160A  158A  	fcall	_I2C_Master_Wait
 11387     1BFF                     l3378:
 11388                           
 11389                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
 11390     1BFF  1683               	bsf	3,5	;RP0=1, select bank1
 11391     1C00  1303               	bcf	3,6	;RP1=0, select bank1
 11392     1C01  1591               	bsf	17,3	;volatile
 11393                           
 11394                           ;configI2C.c: 76:     I2C_Master_Wait();
 11395     1C02  160A  158A  22C9  160A  158A  	fcall	_I2C_Master_Wait
 11396     1C07                     l3380:
 11397                           
 11398                           ;configI2C.c: 77:     temp = SSPBUF;
 11399     1C07  1283               	bcf	3,5	;RP0=0, select bank0
 11400     1C08  1303               	bcf	3,6	;RP1=0, select bank0
 11401     1C09  0813               	movf	19,w	;volatile
 11402     1C0A  00F2               	movwf	??_I2C_Master_Read
 11403     1C0B  01F3               	clrf	??_I2C_Master_Read+1
 11404     1C0C  0872               	movf	??_I2C_Master_Read,w
 11405     1C0D  00F4               	movwf	I2C_Master_Read@temp
 11406     1C0E  0873               	movf	??_I2C_Master_Read+1,w
 11407     1C0F  00F5               	movwf	I2C_Master_Read@temp+1
 11408     1C10                     l3382:
 11409                           
 11410                           ;configI2C.c: 78:     I2C_Master_Wait();
 11411     1C10  160A  158A  22C9  160A  158A  	fcall	_I2C_Master_Wait
 11412     1C15                     l3384:
 11413                           
 11414                           ;configI2C.c: 79:     if(a == 1){
 11415     1C15  0370               	decf	I2C_Master_Read@a,w
 11416     1C16  0471               	iorwf	I2C_Master_Read@a+1,w
 11417     1C17  1D03               	btfss	3,2
 11418     1C18  2C1A               	goto	u5171
 11419     1C19  2C1B               	goto	u5170
 11420     1C1A                     u5171:
 11421     1C1A  2C1F               	goto	l50
 11422     1C1B                     u5170:
 11423     1C1B                     l3386:
 11424                           
 11425                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
 11426     1C1B  1683               	bsf	3,5	;RP0=1, select bank1
 11427     1C1C  1303               	bcf	3,6	;RP1=0, select bank1
 11428     1C1D  1291               	bcf	17,5	;volatile
 11429                           
 11430                           ;configI2C.c: 81:     }else{
 11431     1C1E  2C22               	goto	l51
 11432     1C1F                     l50:
 11433                           
 11434                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
 11435     1C1F  1683               	bsf	3,5	;RP0=1, select bank1
 11436     1C20  1303               	bcf	3,6	;RP1=0, select bank1
 11437     1C21  1691               	bsf	17,5	;volatile
 11438     1C22                     l51:	
 11439                           ;configI2C.c: 83:     }
 11440                           
 11441                           
 11442                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
 11443     1C22  1611               	bsf	17,4	;volatile
 11444     1C23                     l3388:
 11445                           
 11446                           ;configI2C.c: 85:     return temp;
 11447     1C23  0875               	movf	I2C_Master_Read@temp+1,w
 11448     1C24  00F1               	movwf	?_I2C_Master_Read+1
 11449     1C25  0874               	movf	I2C_Master_Read@temp,w
 11450     1C26  00F0               	movwf	?_I2C_Master_Read
 11451     1C27                     l52:
 11452     1C27  0008               	return
 11453     1C28                     __end_of_I2C_Master_Read:
 11454                           
 11455                           	psect	text39
 11456     1AC9                     __ptext39:	
 11457 ;; *************** function _I2C_Master_Wait *****************
 11458 ;; Defined at:
 11459 ;;		line 29 in file "configI2C.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;		None
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11473 ;;      Params:         0       0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0
 11475 ;;      Temps:          0       0       0       0       0
 11476 ;;      Totals:         0       0       0       0       0
 11477 ;;Total ram usage:        0 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_I2C_Master_Start
 11483 ;;		_I2C_Master_Stop
 11484 ;;		_I2C_Master_Write
 11485 ;;		_I2C_Master_Read
 11486 ;;		_I2C_Master_RepeatedStart
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490     1AC9                     _I2C_Master_Wait:	
 11491                           ;psect for function _I2C_Master_Wait
 11492                           
 11493     1AC9                     l2992:	
 11494                           ;incstack = 0
 11495                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11496                           
 11497     1AC9                     l32:	
 11498                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11499                           
 11500     1AC9  1683               	bsf	3,5	;RP0=1, select bank1
 11501     1ACA  1303               	bcf	3,6	;RP1=0, select bank1
 11502     1ACB  1914               	btfsc	20,2	;volatile
 11503     1ACC  2ACE               	goto	u4161
 11504     1ACD  2ACF               	goto	u4160
 11505     1ACE                     u4161:
 11506     1ACE  2AC9               	goto	l32
 11507     1ACF                     u4160:
 11508     1ACF                     l2994:
 11509     1ACF  0811               	movf	17,w	;volatile
 11510     1AD0  391F               	andlw	31
 11511     1AD1  1D03               	btfss	3,2
 11512     1AD2  2AD4               	goto	u4171
 11513     1AD3  2AD5               	goto	u4170
 11514     1AD4                     u4171:
 11515     1AD4  2AC9               	goto	l32
 11516     1AD5                     u4170:
 11517     1AD5                     l35:
 11518     1AD5  0008               	return
 11519     1AD6                     __end_of_I2C_Master_Wait:
 11520     007E                     btemp	set	126	;btemp
 11521     007E                     wtemp0	set	126
 11522                           
 11523                           	psect	idloc
 11524                           
 11525                           ;Config register IDLOC0 @ 0x2000
 11526                           ;	unspecified, using default values
 11527     2000                     	org	8192
 11528     2000  3FFF               	dw	16383
 11529                           
 11530                           ;Config register IDLOC1 @ 0x2001
 11531                           ;	unspecified, using default values
 11532     2001                     	org	8193
 11533     2001  3FFF               	dw	16383
 11534                           
 11535                           ;Config register IDLOC2 @ 0x2002
 11536                           ;	unspecified, using default values
 11537     2002                     	org	8194
 11538     2002  3FFF               	dw	16383
 11539                           
 11540                           ;Config register IDLOC3 @ 0x2003
 11541                           ;	unspecified, using default values
 11542     2003                     	org	8195
 11543     2003  3FFF               	dw	16383
 11544                           
 11545                           	psect	config
 11546                           
 11547                           ;Config register CONFIG1 @ 0x2007
 11548                           ;	Oscillator Selection bits
 11549                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11550                           ;	Watchdog Timer Enable bit
 11551                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11552                           ;	Power-up Timer Enable bit
 11553                           ;	PWRTE = OFF, PWRT disabled
 11554                           ;	RE3/MCLR pin function select bit
 11555                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11556                           ;	Code Protection bit
 11557                           ;	CP = OFF, Program memory code protection is disabled
 11558                           ;	Data Code Protection bit
 11559                           ;	CPD = OFF, Data memory code protection is disabled
 11560                           ;	Brown Out Reset Selection bits
 11561                           ;	BOREN = OFF, BOR disabled
 11562                           ;	Internal External Switchover bit
 11563                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11564                           ;	Fail-Safe Clock Monitor Enabled bit
 11565                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11566                           ;	Low Voltage Programming Enable bit
 11567                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11568                           ;	In-Circuit Debugger Mode bit
 11569                           ;	DEBUG = 0x1, unprogramme 11570     2007                     	org	8199
 11571     2007  20D4               	dw	8404
 11572                           
 11573                           ;Config register CONFIG2 @ 0x2008
 11574                           ;	Brown-out Reset Selection bit
 11575                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11576                           ;	Flash Program Memory Self Write Enable bits
 11577                           ;	WRT = OFF, Write protection off
 11578     2008                     	org	8200
 11579     2008  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     39      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> distanciaLCD(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[6]), 
		 -> STR_7(CODE[2]), STR_6(CODE[7]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[6]), STR_2(CODE[5]), distanciaLCD(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_I2C_Master_Read
    ___flsub->___xxtofl
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _I2C_Master_Write->___fltol

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   37476
                                             35 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                             ___flge
                            ___fltol
                           ___xxtofl
                              _setup
                       _setupMotores
                           _setupPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31106
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1094
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupMotores                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     936
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1104
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    1216
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     554
                                             59 BANK0      2     0      2
                    _I2C_Master_Wait
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
     ___fltol (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___flge
   ___fltol
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _setupMotores
   _setupPWM
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3F       7       78.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 09:19:06 2023

                             pc 0002                              l32 1AC9                              l50 1C1F  
                            l35 1AD5                              l51 1C22                              l52 1C27  
                            l44 1AB3                              l60 1AEF                              l29 1C94  
                            l38 1AAA                              l70 1B2F                              l47 1ABD  
                            l71 1B35                              l72 1B36                              l73 1B3C  
                            l81 1AE2                              l90 1EB8                              l75 1B3D  
                            l67 1B25                              l68 1B28                              l69 1B2E  
                            l93 1C5C                              l78 1B1B                              l87 1D60  
                            l99 1CD6                    ___awdiv@sign 0021                              fsr 0004  
           ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076                             l260 1B86  
                           l421 064B                             l254 00F5                             l414 060D  
                           l176 172E                             l257 1B7E                             l441 1BAB  
                           l610 08C2                             l362 12FE                             l259 1B82  
                           l435 07EF                             l620 094E                             l189 1BD2  
                           l613 091E                             l605 1E5B                             l429 07AC  
                           l630 081E                             l439 1B93                             l800 152A  
                           l625 1D7D                             l633 088A                             l609 095B  
                           l369 0FFF                             l626 1D99                             l634 08A3  
                           l642 1FFF                             l475 1F1E                             l627 1DAE  
                           l812 1B61                             l652 1FFF                             l660 10B6  
                           l388 021D                             l638 1AC8                             l808 154C  
                           l920 0185                             l912 015D                             l656 10F3  
                           l592 1F87                             l809 1556                             l649 1FEA  
                           l657 1067                             l745 1D1A                             l770 13DD  
                           l906 011A                             l667 10E6                             l755 103C  
                           l772 13B6                             l908 01AF                             l766 135A  
                           l862 0CA0                             l926 1B01                             l791 14CA  
                           l695 1E02                             l919 0179                             l881 1BE7  
                           l874 0C94                             l787 14A6                             l779 1556  
                           l883 1BF9                             l868 0C10                             l797 14EC  
                           _GIE 005F                             _PR2 0092                             _dis 006E  
                           fsr0 0004                             indf 0000                    ___awmod@sign 0076  
                  ___flmul@aexp 0036                    ___flmul@bexp 0037                    ___flmul@sign 0031  
                  ___flmul@temp 003C                    ___flmul@prod 0038                    ___fltol@exp1 005A  
                          l3000 1E5C                            l3010 1C29                            l3002 1E62  
                          l3020 1C48                            l3012 1C2F                            l3004 1E6B  
                          l3100 103D                            l3022 1C4B                            l3014 1C32  
                          l3006 1E7A                            l3102 104E                            l3030 10F7  
                          l3024 1C51                            l3016 1C40                            l3008 1E80  
                          l3200 0953                            l3120 1086                            l3112 1068  
                          l3040 1210                            l3032 10FD                            l3026 1C54  
                          l3018 1C43                            l3210 1B9A                            l3130 10B0  
                          l3122 108F                            l3114 106E                            l3106 1057  
                          l3050 0CA8                            l3028 1C59                            l2500 1EDD  
                          l3220 1D75                            l3300 1DC7                            l3212 1BA1  
                          l3204 1B87                            l3132 10BA                            l3140 10D4  
                          l3124 109D                            l3116 107D                            l3044 12BB  
                          l3060 0D99                            l3052 0CAA                            l2510 1F10  
                          l2502 1EE6                            l3222 1D91                            l3230 0802  
                          l3302 1DCB                            l3310 1DFA                            l3214 1BA7  
                          l3206 1B89                            l3126 10A7                            l3118 107F  
                          l3038 120A                            l3062 0DA0                            l3054 0CB1  
                          l3070 0E55                            l3400 1D31                            l2504 1EF8  
                          l2512 1F16                            l3224 1DAB                            l3240 0862  
                          l3232 0816                            l3304 1DDD                            l3208 1B8D  
                          l3320 00F9                            l3152 08A4                            l3128 10A8  
                          l2600 1CD9                            l2520 1F26                            l3080 0F4B  
                          l3072 0E5C                            l3048 0CA4                            l3410 1D54  
                          l3402 1D37                            l2506 1F06                            l3226 1DAD  
                          l3218 1D61                            l3242 0866                            l3234 0832  
                          l3250 1ABE                            l3314 1B3E                            l3306 1DEB  
                          l3322 00FE                            l3170 08DE                            l3154 08AF  
                          l3146 10DB                            l3138 10C2                            l2610 1CF1  
                          l2602 1CDF                            l3090 1AF2                            l2530 1F3A  
                          l2522 1F2B                            l3066 0E28                            l2460 1B21  
                          l3412 1D5A                            l3404 1D3E                            l3420 1CBA  
                          l2508 1F07                            l3244 08A0                            l3236 083A  
                          l3252 1AC6                            l2700 136E                            l3316 1B42  
                          l3260 1F93                            l3308 1DF4                            l3340 0146  
                          l3332 012B                            l3324 0102                            l3180 090F  
                          l3172 08E5                            l3164 08C3                            l3148 10EB  
                          l2612 1D02                            l2604 1CE2                            l2620 1D16  
                          l3092 1AF8                            l2540 1F50                            l2532 1F3C  
                          l2524 1F2D                            l2516 1F1F                            l3084 0FD3  
                          l3500 01D5                            l2462 1B2C                            l3406 1D44  
                          l3414 1C95                            l3422 1BAC                            l3430 00DB  
                          l3246 08A2                            l3238 083E                            l3254 1AC8  
                          l2710 1378                            l2702 1370                            l3270 1FB8  
                          l3350 017D                            l3342 0154                            l3334 012E  
                          l3326 0112                            l3190 092A                            l3182 0918  
                          l3174 08EE                            l3166 08CB                            l3158 08B8  
                          l2470 1BD6                            l2614 1D08                            l2606 1CE9  
                          l2630 1013                            l3094 1AFE                            l2550 1F73  
                          l2542 1F54                            l2534 1F42                            l2526 1F31  
                          l2518 1F22                            l3078 0F44                            l3510 0208  
                          l3502 01D9                            l2464 1B33                            l3408 1D51  
                          l3416 1C98                            l3424 1BBA                            l3440 00E7  
                          l3432 00E2                            l2800 14DA                            l2720 1382  
                          l2712 137A                            l2704 1372                            l3280 1FC6  
                          l3272 1FBA                            l3264 1F9C                            l3360 01A7  
                          l3352 0187                            l3344 0164                            l3336 013B  
                          l3328 0122                            l3184 0922                            l3192 093C  
                          l3176 0900                            l3168 08DC                            l2472 1BDD  
                          l2616 1D09                            l2608 1CED                            l2640 1032  
                          l2632 1017                            l2624 1003                            l3096 1B00  
                          l3088 1AF1                            l2544 1F65                            l2536 1F45  
                          l2552 1F79                            l2528 1F36                            l2560 1E03  
                          l3520 023B                            l3504 01DC                            l3512 0219  
                          l3370 1AB0                            l2466 1B3A                            l2458 1B1D  
                          l2490 1B18                            l2482 1B03                            l3418 1CB4  
                          l3426 1BC7                            l3450 00F0                            l3442 00E8  
                          l3434 00E4                            l2802 14DE                            l2730 13BA  
                          l2722 1384                            l2714 137C                            l2706 1374  
                          l2650 1308                            l3290 1FEF                            l3274 1FBE  
                          l3282 1FD8                            l3266 1FAF                            l3258 1F88  
                          l3354 019D                            l3346 016F                            l3338 0142  
                          l3178 090E                            l2474 1BE1                            l2618 1D10  
                          l2634 101B                            l2626 1009                            l2642 1038  
                          l2554 1F7E                            l2546 1F6B                            l2538 1F4C  
                          l2570 1E13                            l2562 1E04                            l3610 059F  
                          l3602 0552                            l3530 0261                            l3522 0247  
                          l3514 021B                            l3506 01F1                            l3380 1C07  
                          l3364 1AA2                            l3372 1AB4                            l2484 1B06  
                          l2492 1EB9                            l3428 1BCD                            l3452 00F1  
                          l3444 00E9                            l3436 00E5                            l3460 1B62  
                          l2820 1526                            l2812 14F1                            l2804 14DF  
                          l2740 13D1                            l2732 13C1                            l2716 137E  
                          l2708 1376                            l2724 1386                            l2660 131F  
                          l2652 130C                            l3292 1FF4                            l3268 1FB0  
                          l3356 01A2                            l3348 0173                            l2476 1BF0  
                          l2468 1BD4                            l2900 0A80                            l2636 1025  
                          l2628 100C                            l2556 1F83                            l2548 1F6C  
                          l2580 1E2C                            l2572 1E18                            l2564 1E08  
                          l3620 0615                            l3612 05A4                            l3540 02B4  
                          l3532 027A                            l3524 024B                            l3508 0204  
                          l3700 1557                            l3382 1C10                            l3366 1AA7  
                          l3374 1AB9                            l2486 1B0C                            l2494 1EC9  
                          l3454 00F2                            l3446 00EA                            l3438 00E6  
                          l3470 1B74                            l3462 1B66                            l2830 1542  
                          l2822 152F                            l2814 14F6                            l2806 14E3  
                          l2750 13EF                            l2734 13C3                            l2742 13D5  
                          l2726 1387                            l2718 1380                            l2670 1333  
                          l2662 1320                            l2654 130D                            l2646 12FF  
                          l3294 1DAF                            l3358 01A6                            l3198 0943  
                          l2478 1BF5                            l2910 0AED                            l2902 0A8E  
                          l2638 102B                            l2582 1E30                            l2574 1E1E  
                          l2590 1E4D                            l2566 1E0D                            l3630 0642  
                          l3622 061C                            l3614 05A9                            l3606 0589  
                          l3550 02EF                            l3542 02BF                            l3534 0293  
                          l3526 024F                            l3518 021F                            l3710 157F  
                          l3702 1565                            l3384 1C15                            l3376 1BFA  
                          l3368 1AAB                            l2488 1B0F                            l3392 1AD6  
                          l2496 1ECC                            l3456 00F3                            l3448 00ED  
                          l3480 1B7A                            l3472 1B76                            l3464 1B68  
                          l2832 1546                            l2824 1534                            l2816 1504  
                          l2808 14E9                            l2760 1417                            l2752 1406  
                          l2744 13E1                            l2736 13C7                            l2728 139E  
                          l2680 1342                            l2672 1334                            l2656 1312  
                          l2664 1322                            l2648 1304                            l3288 1FDF  
                          l3296 1DB7                            l2920 0B94                            l2912 0B0A  
                          l2904 0AAB                            l2840 095C                            l2592 1E52  
                          l2584 1E3A                            l2576 1E21                            l2568 1E0F  
                          l3640 0662                            l3632 0647                            l3624 0620  
                          l3616 05E4                            l3608 0593                            l3560 0381  
                          l3552 02F5                            l3544 02C5                            l3536 0297  
                          l3528 025D                            l3800 1792                            l3720 15CC  
                          l3712 1584                            l3704 156A                            l3386 1C1B  
                          l3378 1BFF                            l3394 1D1C                            l2498 1ED9  
                          l3458 00F4                            l3482 1B7B                            l3474 1B77  
                          l3466 1B6C                            l2834 1548                            l2826 153C  
                          l2818 1508                            l2770 1440                            l2762 141B  
                          l2754 140A                            l2746 13E6                            l2738 13C8  
                          l2690 1360                            l2682 1347                            l2674 1338  
                          l2666 132A                            l2658 1317                            l3298 1DBA  
                          l2930 0BE0                            l2922 0BBC                            l2914 0B35  
                          l2906 0AB9                            l2850 096F                            l2842 0961  
                          l2594 1E57                            l2586 1E40                            l2578 1E28  
                          l3650 073F                            l3642 0680                            l3634 0654  
                          l3626 0626                            l3618 0603                            l3570 0409  
                          l3562 039C                            l3554 0314                            l3546 02D8  
                          l3538 029B                            l3490 01BC                            l3810 17C1  
                          l3802 179A                            l3730 1603                            l3722 15D7  
                          l3714 158F                            l3706 156F                            l3388 1C23  
                          l3396 1D21                            l3484 1B7D                            l3476 1B78  
                          l3468 1B70                            l2836 1551                            l2828 1541  
                          l2780 14AE                            l2772 147E                            l2764 141C  
                          l2756 140E                            l2692 1364                            l2684 134F  
                          l2676 133C                            l2668 132D                            l2940 0BF5  
                          l2932 0BE1                            l2924 0BC5                            l2916 0B43  
                          l2908 0AD6                            l2860 098B                            l2852 0974  
                          l2844 0965                            l2588 1E47                            l3660 0791  
                          l3644 06DB                            l3652 077A                            l3636 0659  
                          l3628 0633                            l3580 047E                            l3572 0424  
                          l3556 035F                            l3548 02EB                            l3564 03A4  
                          l3492 01C1                            l3820 17E8                            l3812 17C9  
                          l3804 17A3                            l3740 1643                            l3732 160F  
                          l3724 15E3                            l3716 15B7                            l3708 1574  
                          l3398 1D2E                            l3478 1B79                            l2838 1555  
                          l2790 14C9                            l2782 14B3                            l2774 1484  
                          l2766 1425                            l2758 1415                            l2694 1368  
                          l2686 1350                            l2678 133D                            l2950 0C1A  
                          l2942 0BF9                            l2934 0BEA                            l2926 0BD3  
                          l2918 0B6E                            l2870 099E                            l2862 098F  
                          l2854 097C                            l2846 0969                            l2598 1CD7  
                          l3670 07B8                            l3654 0782                            l3646 0716  
                          l3638 065E                            l3582 0486                            l3574 044B  
                          l3590 04CC                            l3566 03B3                            l3558 0378  
                          l3662 0798                            l3494 01C6                            l3486 01B3  
                          l3822 17F1                            l3814 17D2                            l3806 17B4  
                          l3750 16A9                            l3742 166B                            l3734 161F  
                          l3726 15F3                            l3718 15C7                            l2792 14CE  
                          l2776 1489                            l2768 142A                            l2696 136A  
                          l2688 1352                            l2960 0C58                            l2952 0C28  
                          l2944 0C0D                            l2928 0BDC                            l2936 0BF0  
                          l2880 09BA                            l2872 09A6                            l2864 0993  
                          l2856 097E                            l2848 096A                            l3672 07C7  
                          l3664 079E                            l3656 0787                            l3648 0735  
                          l3592 0501                            l3584 04A4                            l3576 045A  
                          l3568 03FA                            l3496 01C8                            l3488 01B6  
                          l3680 07DB                            l3816 17DA                            l3808 17BB  
                          l3760 16D0                            l3752 16B2                            l3744 167F  
                          l3736 1624                            l3728 15F8                            l2794 14D1  
                          l2786 14BC                            l2778 1498                            l2698 136C  
                          l2970 0C8A                            l2962 0C63                            l2954 0C2C  
                          l2938 0BF4                            l2890 09F9                            l2874 09A8  
                          l2866 0994                            l2858 0986                            l3674 07C7  
                          l3666 07A6                            l3658 078B                            l3594 054E  
                          l3578 0475                            l3682 07EB                            l3498 01D4  
                          l3818 17E0                            l3770 16F4                            l3762 16D6  
                          l3754 16B9                            l3746 168F                            l3738 162F  
                          l2980 1C5D                            l2796 14D3                            l2788 14C5  
                          l2972 0C8E                            l2964 0C72                            l2956 0C45  
                          l2948 0C15                            l2892 0A15                            l2884 09C3  
                          l2876 09B0                            l2868 0999                            l3676 07D5  
                          l3668 07B7                            l3596 0550                            l3588 04C3  
                          l3780 1717                            l3772 16F9                            l3764 16DE  
                          l3756 16C1                            l3748 16A1                            l2990 1C93  
                          l2982 1C61                            l2798 14D8                            l2974 0C8F  
                          l2966 0C7C                            l2958 0C4B                            l2894 0A3F  
                          l2886 09D1                            l2878 09B5                            l3790 174F  
                          l3782 171C                            l3774 1701                            l3766 16E8  
                          l3758 16CB                            l2992 1AC9                            l2984 1C64  
                          l2976 0C98                            l2968 0C7E                            l2896 0A5B  
                          l2888 09DE                            l3792 1757                            l3784 1724  
                          l3768 16EE                            l3776 170B                            l2994 1ACF  
                          l2986 1C91                            l2898 0A77                            l3874 0233  
                          l3794 1760                            l3778 1711                            l3786 172E  
                          l2988 1C92                            l2996 1AE4                            l3788 1749  
                          l3796 1771                            l2998 1AEE                            l3798 178C  
                          STR_1 00A3                            STR_2 00C6                            STR_3 00BA  
                          STR_4 00CB                            STR_5 00D0                            STR_6 00B3  
                          STR_7 00D7                            STR_8 00C0                            STR_9 00D7  
                          u3000 1F26                            u3001 1F25                            u3010 1F31  
                          u3011 1F30                            u3020 1F42                            u3100 1E08  
                          _IOCB 0096                            u3021 1F41                            u3101 1E07  
                          u3110 1E13                            u3111 1E12                            u3040 1F54  
                          u3120 1E1E                            u4001 0BAE                            u3041 1F53  
                          u3121 1E1D                            u4002 0BB5                            u3210 1CF1  
                          u4003 0BBC                            u3211 1CF0                            u3035 1F46  
                          u4100 0C2C                            u3060 1F65                            u3140 1E30  
                          u4101 0C2B                            u3205 1CE3                            u3061 1F64  
                          u3141 1E2F                            u4110 0C3B                            u4030 0BE0  
                          u3230 1D02                            u3310 1038                            u3150 1E3A  
                          u4031 0BDF                            u4015 0BBE                            u3231 1D01  
                          u3311 1037                            u3055 1F55                            u3151 1E39  
                          u3135 1E22                            u3400 1364                            u3320 130C  
                          u5000 1DDD                            u4120 0C58                            u3080 1F79  
                          u3401 1363                            u3321 130B                            u5001 1DDC  
                          u4121 0C57                            u4025 0BD5                            u3225 1CF2  
                          u3305 102C                            u3081 1F78                            u3065 1F61  
                          u3410 139E                            u3330 1312                            u4130 0C72  
                          u4050 0BF4                            u3250 1D16                            u3090 1F7E  
                          u3170 1E4D                            u3411 139D                            u3331 1311  
                          u4131 0C71                            u4115 0C36                            u4051 0BF3  
                          u3251 1D15                            u3235 1CFE                            u3091 1F7D  
                          u3075 1F6D                            u3171 1E4C                            u3155 1E36  
                          u3420 13A9                            u3340 1317                            u5020 1DFA  
                          u4140 0C8E                            u4060 0BF9                            u3260 1009  
                          u3180 1E52                            u3501 13F8                            u3421 13A7  
                          u3341 1316                            u5021 1DF9                            u5005 1DD9  
                          u4141 0C8D                            u4125 0C54                            u4061 0BF8  
                          u4045 0BE3                            u3245 1D0A                            u3261 1008  
                          u4205 111A                            u3181 1E51                            u3165 1E41  
                          u4150 1C74                            u3510 140A                            u3502 13FF  
                          u3430 13AA                            u3350 1333                            u5110 0173  
                          u5030 00FE                            u4070 0C0D                            u3190 1CDF  
                          u4230 1210                            u3511 1409                            u3503 1406  
                          u3415 139A                            u3351 1332                            u5015 1DEC  
                          u5111 0172                            u5031 00FD                            u4135 0C6E  
                          u4071 0C0C                            u3191 1CDE                            u4231 120F  
                          u4215 1174                            u4160 1ACF                            u5200 1D44  
                          u3600 14B3                            u3520 140E                            u3440 13BA  
                          u3360 133C                            u5120 0179                            u5040 0102  
                          u4080 0C14                            u3280 101B                            u4400 0F4B  
                          u4320 0DA0                            u4161 1ACE                            u5201 1D43  
                          u3601 14B2                            u3521 140D                            u3441 13B9  
                          u3361 133B                            u5121 0178                            u5105 0168  
                          u5041 0101                            u4081 0C13                            u3281 101A  
                          u4225 11C9                            u4401 0F4A                            u4321 0D9F  
                          u4305 0D0D                            u4170 1AD5                            u3530 141B  
                          u3450 13C7                            u3370 1342                            u5130 017D  
                          u5050 0122                            u4090 0C1A                            u3290 1025  
                          u4171 1AD4                            u4155 1C6F                            u3531 141A  
                          u3451 13C6                            u3371 1341                            u5131 017C  
                          u5051 0121                            u4091 0C19                            u3291 1024  
                          u3275 100D                            u4315 0D58                            u5220 1CA2  
                          u3700 1508                            u3620 14C9                            u3380 1347  
                          u5140 0192                            u2900 1BE1                            u5300 024B  
                          u3701 1507                            u3621 14C8                            u3381 1346  
                          u2901 1BE0                            u4245 122D                            u5301 024A  
                          u5230 1CC4                            u3710 1517                            u3630 14CE  
                          u3550 1440                            u3470 13DD                            u3390 1360  
                          u5150 01A2                            u5070 0141                            u4510 10B6  
                          u4190 10FD                            u4270 0CA8                            u5310 027A  
                          u5215 1D4A                            u3631 14CD                            u3615 14BE  
                          u3551 143F                            u3471 13DC                            u3391 135F  
                          u5151 01A1                            u5071 0140                            u4511 10B5  
                          u3295 1021                            u4255 127A                            u4191 10FC  
                          u4415 0F5E                            u4335 0DB3                            u4271 0CA7  
                          u5311 0279                            u5240 1CD6                            u3720 1526  
                          u3640 14D8                            u3480 13E1                            u5160 01A6  
                          u4600 08C1                            u4520 10BA                            u2920 1BF5  
                          u3800 0974                            u4440 1AF8                            u4360 0E5C  
                          u4280 0CB1                            u5400 045A                            u5320 02B4  
                          u4185 1C35                            u5241 1CD5                            u3721 1525  
                          u3641 14D7                            u3561 1457                            u3553 143C  
                          u3545 141E                            u3481 13E0                            u3465 13CA  
                          u5161 01A5                            u5145 018D                            u5065 0133  
                          u4601 08C0                            u4521 10B9                            u4505 10A9  
                          u2921 1BF4                            u3801 0973                            u4265 12C6  
                          u4441 1AF7                            u4425 0F9A                            u4361 0E5B  
                          u4345 0DEF                            u4281 0CB0                            u5401 0459  
                          u5321 02B3                            u5170 1C1B                            u2930 1EC9  
                          u5250 1B82                            u3730 152F                            u3650 14DE  
                          u3570 146B                            u3562 1458                            u3490 13E6  
                          u5090 0163                            u4530 10C1                            u3810 0993  
                          u4450 1AFE                            u5410 0475                            u5330 02EF  
                          u5171 1C1A                            u2931 1EC8                            u5251 1B81  
                          u3731 152E                            u3715 1512                            u3651 14DD  
                          u3571 146C                            u3563 145D                            u3491 13E5  
                          u5091 0162                            u4531 10C0                            u2915 1BE8  
                          u3811 0992                            u4451 1AFD                            u4435 0FD6  
                          u4355 0E2B                            u5411 0474                            u5331 02EE  
                          _PEIE 005E                            u2860 1B21                            u5180 1D21  
                          u3740 1534                            u3660 14E3                            u3580 1489  
                          u3572 1471                            u3564 145E                            u4620 0900  
                          u4460 104E                            u3820 0999                            u5500 0659  
                          u5340 0378                            u5260 01BC                            u2861 1B20  
                          u5181 1D20                            u3741 1533                            u3661 14E2  
                          u3581 1488                            u3573 1472                            u3565 1463  
                          u5085 0155                            u4621 08FF                            u4461 104D  
                          u3821 0998                            u5501 0658                            u5405 0456  
                          u5341 0377                            u5261 01BB                            u2870 1B2C  
                          u2950 1EDD                            u3750 1541                            u3670 14E9  
                          u3590 14AE                            u3566 1464                            u4710 0953  
                          u4550 10D3                            u4470 1066                            u3830 099E  
                          u5430 0588                            u5350 039C                            u5270 01D4  
                          u2871 1B2B                            u2951 1EDC                            u3751 1540  
                          u3671 14E8                            u3591 14AD                            u4711 0952  
                          u4615 08E7                            u4551 10D2                            u4471 1065  
                          u3911 0A9D                            u3831 099D                            u4375 0E7C  
                          u4295 0CD1                            u5431 0587                            u5351 039B  
                          u5271 01D3                            u2880 1B33                            u4800 0832  
                          u3760 1546                            u3680 14F0                            u4720 1B8D  
                          u4640 091E                            u4560 10DA                            u3912 0AA4  
                          u3840 09B5                            u5600 07EB                            u5440 0593  
                          u5360 03B3                            u5280 0218                            u2881 1B32  
                          u2945 1ECE                            u4801 0831                            u3761 1545  
                          u3681 14EF                            u4721 1B8C                            u4705 0945  
                          u4641 091D                            u4625 08FC                            u4561 10D9  
                          u4545 10C3                            u3921 0AC8                            u3913 0AAB  
                          u3905 0A79                            u3841 09B4                            u4385 0EB8  
                          u5601 07EA                            u5441 0592                            u5425 0555  
                          u5361 03B2                            u5281 0217                            u2890 1B3A  
                          u2970 1EF8                            u4810 083E                            u3770 1555  
                          u3690 14F6                            u4650 0922                            u4490 109D  
                          u3922 0ACF                            u3850 09BA                            u5530 0781  
                          u5450 059F                            u5370 0409                            u5290 0247  
                          u5610 16B9                            u2891 1B39                            u5195 1D27  
                          u2971 1EF7                            u4811 083D                            u3771 1554  
                          u3691 14F5                            u4651 0921                            u4635 0911  
                          u4491 109C                            u3923 0AD6                            u3851 09B9  
                          u4395 0F03                            u5531 0780                            u5515 06DE  
                          u5451 059E                            u5435 0584                            u5371 0408  
                          u5291 0246                            u5611 16B8                            u4900 1FC5  
                          u4660 0929                            u4580 10EB                            u3780 0969  
                          u5540 0797                            u5380 0424                            u5620 16D0  
                          u2965 1EDF                            u4821 084D                            u4901 1FC4  
                          u4661 0928                            u4581 10EA                            u4485 1088  
                          u3941 0AFC                            u3861 0A07                            u3781 0968  
                          u5541 0796                            u5525 0742                            u5381 0423  
                          u5365 03AF                            u5621 16CF                            u2990 1F16  
                          u4830 0866                            u4822 084E                            u4750 1BA7  
                          u4590 08AF                            u3942 0B03                            u3862 0A0E  
                          u3790 096F                            u5550 079E                            u5470 0614  
                          u5390 044B                            u5630 16EE                            u2991 1F15  
                          u2975 1EF4                            u4831 0865                            u4823 0853  
                          u4751 1BA6                            u4735 1B94                            u4591 08AE  
                          u4575 10DD                            u4495 1099                            u3951 0B27  
                          u3943 0B0A                            u3935 0AD8                            u3871 0A23  
                          u3863 0A15                            u3791 096E                            u5551 079D  
                          u5471 0613                            u5391 044A                            u5375 0405  
                          u5631 16ED                            u4760 1D75                            u4824 0854  
                          u4920 1FD7                            u4680 093B                            u3952 0B2E  
                          u3872 0A2A                            u5560 07A6                            u5480 0633  
                          u5640 1711                            u2985 1F08                            u4761 1D74  
                          u4841 0875                            u4825 0859                            u4921 1FD6  
                          u4745 1B9B                            u4681 093A                            u3961 0B52  
                          u3953 0B35                            u3881 0A4D                            u3873 0A31  
                          u5561 07A5                            u5481 0632                            u5465 05AC  
                          u5641 1710                            u4770 1D91                            u4850 08A0  
                          u4842 0876                            u4826 085A                            u4930 1FDE  
                          u4690 0942                            u3970 0B7A                            u3962 0B59  
                          u3882 0A54                            u5570 07B7                            u5490 0642  
                          u5650 1749                            u4771 1D90                            u4851 089F  
                          u4843 087B                            u4931 1FDD                            u4915 1FC7  
                          u4691 0941                            u4675 092B                            u3963 0B60  
                          u3891 0A69                            u3883 0A5B                            u5571 07B6  
                          u5491 0641                            u5651 1748                            u4780 1DAB  
                          u4844 087C                            u4860 1AC6                            u3892 0A70  
                          u5580 07C7                            u5660 178C                            u4781 1DAA  
                          u4845 0881                            u4861 1AC5                            u3981 0B86  
                          u3893 0A77                            u5581 07C6                            u5485 062F  
                          u5661 178B                            u5717 155F                            u4846 0882  
                          u4790 0816                            u4950 1FEF                            u4870 1F93  
                          u3990 0BA2                            u3982 0B8D                            u5590 07D5  
                          u5670 17BB                            u5807 1C45                            u4855 089C  
                          u4791 0815                            u4951 1FEE                            u4871 1F92  
                          u3983 0B94                            u3975 0B75                            u5591 07D4  
                          u5575 07B3                            u5495 063E                            u5671 17BA  
                          u5727 15C2                            u4960 1FF4                            u4880 1FAA  
                          u5680 17DA                            u5817 1C56                            u4785 1DA7  
                          u4961 1FF3                            u4945 1FE1                            u5585 07C3  
                          u5681 17D9                            u5737 15EE                            u4890 1FBE  
                          u4970 1DB7                            u5827 1B13                            u4891 1FBD  
                          u4971 1DB6                            u3995 0B9D                            u5747 161A  
                          u4885 1FA5                            u5757 168A                            u4990 1DCB  
                          u4991 1DCA                            u5767 17F7                            u5777 1E66  
                          u4985 1DBC                            u5787 1E75                            u5797 1E84  
                          _TMR1 000E                            _main 1557          _Lcd_Write_String_4bits 1C95  
                          btemp 007E                            start 0000                    _sprintf$1369 00AA  
              ?_I2C_Master_Init 0020                ?_I2C_Master_Read 0070                ?_I2C_Master_Wait 0070  
              ?_I2C_Master_Stop 0070                   ___fltol@sign1 0059                 __end_of___fladd 1557  
                         ?_main 0070               ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 1F88  
               __end_of___flneg 1AC9                           STR_10 00D5                           STR_11 00D5  
               __end_of___awmod 1E5C                 __end_of___flmul 0CA1                 __end_of___flsub 1B62  
               __end_of___fltol 2000                           _ANSEL 0188                 __end_of___lldiv 1F1F  
               ___awdiv@divisor 0077                 __end_of___llmod 1E03                 __end_of___lwdiv 1D1B  
               __end_of___lwmod 103D                 ___awdiv@counter 0020                           _PORTA 0005  
                         _PORTB 0006                           _PORTD 0008                           _TRISA 0085  
                         _TRISB 0086                           _TRISD 0088                           _SSPIE 0463  
                         _SSPIF 0063           __end_of_Lcd_Cmd_4bits 1B1C                 __end_of_dpowers 00A3  
                         _color 00CE                           _linea 00CD                           _scale 0CA1  
               __end_of_isdigit 1B02                           _setup 1BAC                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 07F0  
               __initialization 07F0                    __end_of_main 1800                          ??_main 00C3  
             ?_I2C_Master_Start 0070               ?_I2C_Master_Write 005B              ??_I2C_Master_Start 0070  
            ??_I2C_Master_Write 007E                ___llmod@dividend 0074                          ?_scale 003E  
                        _CCPR1L 0015                          _CCPR2L 001B                ___awdiv@dividend 0079  
                        ?_setup 0070                          _ANSELH 0189                          _SSPADD 0093  
                        _TRISC3 043B                          _TRISC4 043C                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 01B0        Lcd_Write_Char_4bits@temp 0072  
              __end_of__powers_ 0047                          ___flge 0802                          ___fleq 1D61  
                     ??___fladd 005A                          ___wmul 1B87                       ??___awdiv 007B  
                     ??___flneg 0074                       ??___awmod 0074                       ??___flmul 002C  
                     ??___flsub 007E                       ??___fltol 0055                       ??___lldiv 0078  
                     ??___llmod 0078                       ??___lwdiv 007A                       ??___lwmod 0074  
                        _fround 10F4                ___awdiv@quotient 0022                 ___awmod@divisor 0070  
               ___awmod@counter 0075                    ?_setupINTOSC 0070                       ??_isdigit 0070  
              __end_of_setupPWM 1B87                  _Lcd_Init_4bits 1E5C                       ??_sprintf 00A5  
                    ___flge@ff1 0070                      ___flge@ff2 0074                    ___xxtofl@arg 0022  
                  ___xxtofl@exp 0021                    ___xxtofl@val 0076                      ___fleq@ff1 0070  
                    ___fleq@ff2 0074         __end_of__initialization 07FC                      ___flneg@f1 0070  
                    ___fltol@f1 0051                  __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074  
         Lcd_Write_Char_4bits@y 0073                   __end_of_scale 1000                   __end_of_setup 1BD3  
                    __div_to_l_ 08A4                  _OPTION_REGbits 0081          __end_of_Lcd_Init_4bits 1EB9  
               __div_to_l_@exp1 0025                 __div_to_l_@cntr 0024                         ??_scale 0042  
               __div_to_l_@quot 0020         ?_Lcd_Write_String_4bits 0075                         ??_setup 007E  
                    __pbssBANK0 006E                      __pbssBANK1 00C7                  _Lcd_Port_4bits 1B1C  
                 __div_to_l_@f1 0070                   __div_to_l_@f2 0074               __end_of__Umul8_16 1BFA  
               _Lcd_Clear_4bits 1AD6                      __pmaintext 1557                         ?___flge 0070  
                       ?___fleq 0070                         ?___wmul 0070                         ?_fround 003E  
                     ?___xxtofl 0076    __end_of_Lcd_Write_Char_4bits 1C5D                 Lcd_Port_4bits@a 0070  
               ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 1CD7                         _SSPCON2 0091  
                       _SSPSTAT 0094                      __stringtab 0003          __end_of_Lcd_Port_4bits 1B3E  
             __end_of__npowers_ 007B                      _scale$1368 004C                       ?_setupPWM 0070  
                       ___fladd 12FF                         ___awdiv 1F1F                         ___flneg 1ABE  
                       ___awmod 1E03                         ___flmul 095C                         ___flsub 1B3E  
                       ___fltol 1F88                         ___lldiv 1EB9                         ___llmod 1DAF  
                       ___lwdiv 1CD7                         ___lwmod 1003                         __ptext1 01B0  
                       __ptext2 0CA1                         __ptext3 1E03                         __ptext4 1F1F  
                       __ptext5 1AF0                         __ptext6 10F4                         __ptext7 1003  
                       __ptext8 1CD7                         __ptext9 095C                       _T1CONbits 0010  
                   ?__div_to_l_ 0070                         _dpowers 007B                       _T2CONbits 0012  
                       _isdigit 1AF0                      ??___xxtofl 007A                ___awmod@dividend 0072  
  __end_of_Lcd_Set_Cursor_4bits 1D61                         _sprintf 01B0                         clrloop0 1A9B  
          end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070         __end_of_Lcd_Clear_4bits 1AE3  
               ___lldiv@divisor 0070                 ___lldiv@counter 007D                      ??_setupPWM 0070  
              I2C_Master_Init@c 0020                I2C_Master_Read@a 0070                  __tdiv_to_l_@f1 0070  
                __tdiv_to_l_@f2 0074                   ?_setupMotores 0070                   ??__tdiv_to_l_ 0078  
                  _distanciaLCD 00CF                       _PORTAbits 0005                       _PORTDbits 0008  
                   ___fladd@grs 0065                   ___xxtofl@sign 0020                       _TRISAbits 0085  
                     _TRISCbits 0087                     ___flmul@grs 0032                     _CCP1CONbits 0017  
                   _CCP2CONbits 001D            _Lcd_Write_Char_4bits 1C28                  __end_of___flge 08A4  
                __end_of___fleq 1DAF                  ??_setupMotores 0070                  __end_of___wmul 1BAC  
                __end_of_fround 12FF             start_initialization 07F0             __end_of__tdiv_to_l_ 10F4  
                 _Lcd_Cmd_4bits 1B02           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
             ??_I2C_Master_Init 0024               ??_I2C_Master_Read 0072               ??_I2C_Master_Wait 0070  
             ??_I2C_Master_Stop 0070                 ___llmod@divisor 0070                 ___llmod@counter 0079  
         ?_Lcd_Write_Char_4bits 0070                        ??___flge 0078                        ??___fleq 0078  
                      ??___wmul 0074        Lcd_Set_Cursor_4bits@temp 0079            _Lcd_Set_Cursor_4bits 1D1B  
                     __Umul8_16 1BD3                        ??_fround 0042                ??_Lcd_Init_4bits 0074  
                 sprintf@tmpval 00B7                       ___fladd@a 0056                       ___fladd@b 0052  
                    fround@prec 0051                       ___flmul@a 0028                       ___flmul@b 0024  
                     ___flsub@a 0066                       ___flsub@b 006A                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                  ?_Lcd_Cmd_4bits 0070  
                  _isdigit$1155 0070                     sprintf@flag 00AF                     sprintf@eexp 00B5  
                   sprintf@fval 00BE                     sprintf@prec 00BC                _I2C_Master_Start 1AA2  
              _I2C_Master_Write 1AB4                ___lwdiv@dividend 0078                        ?___fladd 0052  
         ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0077                        ?___flneg 0070  
                      ?___awmod 0070                        ?___flmul 0024                        ?___flsub 0066  
                      ?___fltol 0051                        ?___lldiv 0070                        ?___llmod 0070  
                     __npowers_ 0047                      ?__Umul8_16 0070                        ?___lwdiv 0076  
                      ?___lwmod 0070                       __pstrings 0003                     __tdiv_to_l_ 103D  
                     _distancia 00C7                    ??__div_to_l_ 0078                        ?_isdigit 0070  
              ??_Lcd_Port_4bits 0070                ___lwdiv@quotient 007B                        ?_sprintf 00A0  
          __end_of_setupMotores 00F6                  ___wmul@product 0074                       clear_ram0 1A9A  
        ??_Lcd_Write_Char_4bits 0071                        _PIR1bits 000C              __end_of__div_to_l_ 095C  
                     _velocidad 00CB                     __stringbase 0012                   ??_setupINTOSC 0070  
             ___wmul@multiplier 0070                 ??_Lcd_Cmd_4bits 0071                        _WPUBbits 0095  
           I2C_Master_Read@temp 0074         Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A  
        ??_Lcd_Set_Cursor_4bits 0075                     ??__Umul8_16 0072                     _fround$1366 004D  
                   _fround$1367 0049              __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077  
                Lcd_Cmd_4bits@a 0073                      sprintf@val 00B1                 _I2C_Master_Init 1C5D  
               _I2C_Master_Read 1BFA                        ___xxtofl 00F6                 _I2C_Master_Wait 1AC9  
               _I2C_Master_Stop 1AAB                 ___lwdiv@divisor 0076                 ___lwdiv@counter 007D  
                      __ptext10 1BD3                        __ptext11 103D                        __ptext20 0802  
                      __ptext12 08A4                        __ptext21 1D61                        __ptext13 00F6  
                      __ptext30 1C28                        __ptext22 1B62                        __ptext14 1B87  
                      __ptext31 1D1B                        __ptext23 00DB                        __ptext15 1DAF  
                      __ptext32 1AD6                        __ptext24 1BAC                        __ptext16 1F88  
                      __ptext33 1B02                        __ptext25 1AE3                        __ptext17 1B3E  
                      __ptext34 1B1C                        __ptext26 1E5C                        __ptext18 12FF  
                      __ptext35 1AB4                        __ptext27 1C5D                        __ptext19 1ABE  
                      __ptext36 1AAB                        __ptext28 1EB9                        __ptext37 1AA2  
                      __ptext29 1C95                        __ptext38 1BFA                        __ptext39 1AC9  
           __end_of_setupINTOSC 1AF0                        __powers_ 0013                        _setupPWM 1B62  
      __end_of_I2C_Master_Start 1AAB        __end_of_I2C_Master_Write 1ABE                        isdigit@c 0071  
                      scale@scl 0050                       sprintf@ap 00AE                __tdiv_to_l_@exp1 0025  
              __tdiv_to_l_@cntr 0024                       sprintf@sp 00BB                __tdiv_to_l_@quot 0020  
              ___lwmod@dividend 0072                ___lldiv@dividend 0074                       stringcode 000D  
                    _OSCCONbits 008F         __end_of_I2C_Master_Init 1C95         __end_of_I2C_Master_Read 1C28  
       __end_of_I2C_Master_Wait 1AD6         __end_of_I2C_Master_Stop 1AB4                    _setupMotores 00DB  
                  ?__tdiv_to_l_ 0070          __Umul8_16@multiplicand 0070                     _setupINTOSC 1AE3  
                      sprintf@c 00C2                        sprintf@f 00A0                    setupINTOSC@F 0071  
              ___lldiv@quotient 0079               I2C_Master_Write@d 005B                 ___lwmod@divisor 0070  
               ___lwmod@counter 0075                        stringdir 000D                        stringtab 0003  
                   _SSPCON2bits 0091                   ___fladd@signs 0062                    ___fladd@aexp 0063  
                  ___fladd@bexp 0064            __Umul8_16@multiplier 0078               __Umul8_16@product 0074  

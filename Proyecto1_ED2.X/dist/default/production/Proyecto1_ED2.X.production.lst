

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 08:02:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     008F                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0094                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     0105                     	;# 
   155     0107                     	;# 
   156     0108                     	;# 
   157     0109                     	;# 
   158     010C                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0185                     	;# 
   164     0187                     	;# 
   165     0188                     	;# 
   166     0189                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     008F                     	;# 
   214     0090                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     0105                     	;# 
   233     0107                     	;# 
   234     0108                     	;# 
   235     0109                     	;# 
   236     010C                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     0185                     	;# 
   242     0187                     	;# 
   243     0188                     	;# 
   244     0189                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000D                     	;# 
   261     000E                     	;# 
   262     000E                     	;# 
   263     000F                     	;# 
   264     0010                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001D                     	;# 
   280     001E                     	;# 
   281     001F                     	;# 
   282     0081                     	;# 
   283     0085                     	;# 
   284     0086                     	;# 
   285     0087                     	;# 
   286     0088                     	;# 
   287     0089                     	;# 
   288     008C                     	;# 
   289     008D                     	;# 
   290     008E                     	;# 
   291     008F                     	;# 
   292     0090                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     0105                     	;# 
   311     0107                     	;# 
   312     0108                     	;# 
   313     0109                     	;# 
   314     010C                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0185                     	;# 
   320     0187                     	;# 
   321     0188                     	;# 
   322     0189                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325     0000                     	;# 
   326     0001                     	;# 
   327     0002                     	;# 
   328     0003                     	;# 
   329     0004                     	;# 
   330     0005                     	;# 
   331     0006                     	;# 
   332     0007                     	;# 
   333     0008                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000D                     	;# 
   339     000E                     	;# 
   340     000E                     	;# 
   341     000F                     	;# 
   342     0010                     	;# 
   343     0011                     	;# 
   344     0012                     	;# 
   345     0013                     	;# 
   346     0014                     	;# 
   347     0015                     	;# 
   348     0015                     	;# 
   349     0016                     	;# 
   350     0017                     	;# 
   351     0018                     	;# 
   352     0019                     	;# 
   353     001A                     	;# 
   354     001B                     	;# 
   355     001B                     	;# 
   356     001C                     	;# 
   357     001D                     	;# 
   358     001E                     	;# 
   359     001F                     	;# 
   360     0081                     	;# 
   361     0085                     	;# 
   362     0086                     	;# 
   363     0087                     	;# 
   364     0088                     	;# 
   365     0089                     	;# 
   366     008C                     	;# 
   367     008D                     	;# 
   368     008E                     	;# 
   369     008F                     	;# 
   370     0090                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0093                     	;# 
   376     0094                     	;# 
   377     0095                     	;# 
   378     0096                     	;# 
   379     0097                     	;# 
   380     0098                     	;# 
   381     0099                     	;# 
   382     009A                     	;# 
   383     009B                     	;# 
   384     009C                     	;# 
   385     009D                     	;# 
   386     009E                     	;# 
   387     009F                     	;# 
   388     0105                     	;# 
   389     0107                     	;# 
   390     0108                     	;# 
   391     0109                     	;# 
   392     010C                     	;# 
   393     010C                     	;# 
   394     010D                     	;# 
   395     010E                     	;# 
   396     010F                     	;# 
   397     0185                     	;# 
   398     0187                     	;# 
   399     0188                     	;# 
   400     0189                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0000                     	;# 
   404     0001                     	;# 
   405     0002                     	;# 
   406     0003                     	;# 
   407     0004                     	;# 
   408     0005                     	;# 
   409     0006                     	;# 
   410     0007                     	;# 
   411     0008                     	;# 
   412     0009                     	;# 
   413     000A                     	;# 
   414     000B                     	;# 
   415     000C                     	;# 
   416     000D                     	;# 
   417     000E                     	;# 
   418     000E                     	;# 
   419     000F                     	;# 
   420     0010                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0014                     	;# 
   425     0015                     	;# 
   426     0015                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001B                     	;# 
   434     001C                     	;# 
   435     001D                     	;# 
   436     001E                     	;# 
   437     001F                     	;# 
   438     0081                     	;# 
   439     0085                     	;# 
   440     0086                     	;# 
   441     0087                     	;# 
   442     0088                     	;# 
   443     0089                     	;# 
   444     008C                     	;# 
   445     008D                     	;# 
   446     008E                     	;# 
   447     008F                     	;# 
   448     0090                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0093                     	;# 
   454     0094                     	;# 
   455     0095                     	;# 
   456     0096                     	;# 
   457     0097                     	;# 
   458     0098                     	;# 
   459     0099                     	;# 
   460     009A                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     009F                     	;# 
   466     0105                     	;# 
   467     0107                     	;# 
   468     0108                     	;# 
   469     0109                     	;# 
   470     010C                     	;# 
   471     010C                     	;# 
   472     010D                     	;# 
   473     010E                     	;# 
   474     010F                     	;# 
   475     0185                     	;# 
   476     0187                     	;# 
   477     0188                     	;# 
   478     0189                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0000                     	;# 
   482     0001                     	;# 
   483     0002                     	;# 
   484     0003                     	;# 
   485     0004                     	;# 
   486     0005                     	;# 
   487     0006                     	;# 
   488     0007                     	;# 
   489     0008                     	;# 
   490     0009                     	;# 
   491     000A                     	;# 
   492     000B                     	;# 
   493     000C                     	;# 
   494     000D                     	;# 
   495     000E                     	;# 
   496     000E                     	;# 
   497     000F                     	;# 
   498     0010                     	;# 
   499     0011                     	;# 
   500     0012                     	;# 
   501     0013                     	;# 
   502     0014                     	;# 
   503     0015                     	;# 
   504     0015                     	;# 
   505     0016                     	;# 
   506     0017                     	;# 
   507     0018                     	;# 
   508     0019                     	;# 
   509     001A                     	;# 
   510     001B                     	;# 
   511     001B                     	;# 
   512     001C                     	;# 
   513     001D                     	;# 
   514     001E                     	;# 
   515     001F                     	;# 
   516     0081                     	;# 
   517     0085                     	;# 
   518     0086                     	;# 
   519     0087                     	;# 
   520     0088                     	;# 
   521     0089                     	;# 
   522     008C                     	;# 
   523     008D                     	;# 
   524     008E                     	;# 
   525     008F                     	;# 
   526     0090                     	;# 
   527     0091                     	;# 
   528     0092                     	;# 
   529     0093                     	;# 
   530     0093                     	;# 
   531     0093                     	;# 
   532     0094                     	;# 
   533     0095                     	;# 
   534     0096                     	;# 
   535     0097                     	;# 
   536     0098                     	;# 
   537     0099                     	;# 
   538     009A                     	;# 
   539     009B                     	;# 
   540     009C                     	;# 
   541     009D                     	;# 
   542     009E                     	;# 
   543     009F                     	;# 
   544     0105                     	;# 
   545     0107                     	;# 
   546     0108                     	;# 
   547     0109                     	;# 
   548     010C                     	;# 
   549     010C                     	;# 
   550     010D                     	;# 
   551     010E                     	;# 
   552     010F                     	;# 
   553     0185                     	;# 
   554     0187                     	;# 
   555     0188                     	;# 
   556     0189                     	;# 
   557     018C                     	;# 
   558     018D                     	;# 
   559     0000                     	;# 
   560     0001                     	;# 
   561     0002                     	;# 
   562     0003                     	;# 
   563     0004                     	;# 
   564     0005                     	;# 
   565     0006                     	;# 
   566     0007                     	;# 
   567     0008                     	;# 
   568     0009                     	;# 
   569     000A                     	;# 
   570     000B                     	;# 
   571     000C                     	;# 
   572     000D                     	;# 
   573     000E                     	;# 
   574     000E                     	;# 
   575     000F                     	;# 
   576     0010                     	;# 
   577     0011                     	;# 
   578     0012                     	;# 
   579     0013                     	;# 
   580     0014                     	;# 
   581     0015                     	;# 
   582     0015                     	;# 
   583     0016                     	;# 
   584     0017                     	;# 
   585     0018                     	;# 
   586     0019                     	;# 
   587     001A                     	;# 
   588     001B                     	;# 
   589     001B                     	;# 
   590     001C                     	;# 
   591     001D                     	;# 
   592     001E                     	;# 
   593     001F                     	;# 
   594     0081                     	;# 
   595     0085                     	;# 
   596     0086                     	;# 
   597     0087                     	;# 
   598     0088                     	;# 
   599     0089                     	;# 
   600     008C                     	;# 
   601     008D                     	;# 
   602     008E                     	;# 
   603     008F                     	;# 
   604     0090                     	;# 
   605     0091                     	;# 
   606     0092                     	;# 
   607     0093                     	;# 
   608     0093                     	;# 
   609     0093                     	;# 
   610     0094                     	;# 
   611     0095                     	;# 
   612     0096                     	;# 
   613     0097                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009C                     	;# 
   619     009D                     	;# 
   620     009E                     	;# 
   621     009F                     	;# 
   622     0105                     	;# 
   623     0107                     	;# 
   624     0108                     	;# 
   625     0109                     	;# 
   626     010C                     	;# 
   627     010C                     	;# 
   628     010D                     	;# 
   629     010E                     	;# 
   630     010F                     	;# 
   631     0185                     	;# 
   632     0187                     	;# 
   633     0188                     	;# 
   634     0189                     	;# 
   635     018C                     	;# 
   636     018D                     	;# 
   637                           
   638                           	psect	strings
   639     0003                     __pstrings:
   640     0003                     stringtab:
   641     0003                     __stringtab:
   642                           
   643                           ;	String table - string pointers are 1 byte each
   644     0003  1BFF               	btfsc	btemp+1,7
   645     0004  280D               	ljmp	stringcode
   646     0005  1383               	bcf	3,7
   647     0006  187F               	btfsc	btemp+1,0
   648     0007  1783               	bsf	3,7
   649     0008  0800               	movf	0,w
   650     0009  0A84               	incf	4,f
   651     000A  1903               	skipnz
   652     000B  0AFF               	incf	btemp+1,f
   653     000C  0008               	return
   654     000D                     stringcode:
   655     000D                     stringdir:
   656     000D  3000               	movlw	high stringdir
   657     000E  008A               	movwf	10
   658     000F  0804               	movf	4,w
   659     0010  0A84               	incf	4,f
   660     0011  0782               	addwf	2,f
   661     0012                     __stringbase:
   662     0012  3400               	retlw	0
   663     0013                     __end_of__stringtab:
   664     0013                     __powers_:
   665     0013  3400               	retlw	0
   666     0014  3400               	retlw	0
   667     0015  3480               	retlw	128
   668     0016  343F               	retlw	63
   669     0017  3400               	retlw	0
   670     0018  3400               	retlw	0
   671     0019  3420               	retlw	32
   672     001A  3441               	retlw	65
   673     001B  3400               	retlw	0
   674     001C  3400               	retlw	0
   675     001D  34C8               	retlw	200
   676     001E  3442               	retlw	66
   677     001F  3400               	retlw	0
   678     0020  3400               	retlw	0
   679     0021  347A               	retlw	122
   680     0022  3444               	retlw	68
   681     0023  3400               	retlw	0
   682     0024  3440               	retlw	64
   683     0025  341C               	retlw	28
   684     0026  3446               	retlw	70
   685     0027  3400               	retlw	0
   686     0028  3450               	retlw	80
   687     0029  34C3               	retlw	195
   688     002A  3447               	retlw	71
   689     002B  3400               	retlw	0
   690     002C  3424               	retlw	36
   691     002D  3474               	retlw	116
   692     002E  3449               	retlw	73
   693     002F  3480               	retlw	128
   694     0030  3496               	retlw	150
   695     0031  3418               	retlw	24
   696     0032  344B               	retlw	75
   697     0033  3420               	retlw	32
   698     0034  34BC               	retlw	188
   699     0035  34BE               	retlw	190
   700     0036  344C               	retlw	76
   701     0037  3428               	retlw	40
   702     0038  346B               	retlw	107
   703     0039  346E               	retlw	110
   704     003A  344E               	retlw	78
   705     003B  34F9               	retlw	249
   706     003C  3402               	retlw	2
   707     003D  3415               	retlw	21
   708     003E  3450               	retlw	80
   709     003F  34EC               	retlw	236
   710     0040  3478               	retlw	120
   711     0041  34AD               	retlw	173
   712     0042  3460               	retlw	96
   713     0043  34CA               	retlw	202
   714     0044  34F2               	retlw	242
   715     0045  3449               	retlw	73
   716     0046  3471               	retlw	113
   717     0047                     __end_of__powers_:
   718     0047                     __npowers_:
   719     0047  3400               	retlw	0
   720     0048  3400               	retlw	0
   721     0049  3480               	retlw	128
   722     004A  343F               	retlw	63
   723     004B  34CD               	retlw	205
   724     004C  34CC               	retlw	204
   725     004D  34CC               	retlw	204
   726     004E  343D               	retlw	61
   727     004F  340A               	retlw	10
   728     0050  34D7               	retlw	215
   729     0051  3423               	retlw	35
   730     0052  343C               	retlw	60
   731     0053  346F               	retlw	111
   732     0054  3412               	retlw	18
   733     0055  3483               	retlw	131
   734     0056  343A               	retlw	58
   735     0057  3417               	retlw	23
   736     0058  34B7               	retlw	183
   737     0059  34D1               	retlw	209
   738     005A  3438               	retlw	56
   739     005B  34AC               	retlw	172
   740     005C  34C5               	retlw	197
   741     005D  3427               	retlw	39
   742     005E  3437               	retlw	55
   743     005F  34BD               	retlw	189
   744     0060  3437               	retlw	55
   745     0061  3486               	retlw	134
   746     0062  3435               	retlw	53
   747     0063  3495               	retlw	149
   748     0064  34BF               	retlw	191
   749     0065  34D6               	retlw	214
   750     0066  3433               	retlw	51
   751     0067  3477               	retlw	119
   752     0068  34CC               	retlw	204
   753     0069  342B               	retlw	43
   754     006A  3432               	retlw	50
   755     006B  345F               	retlw	95
   756     006C  3470               	retlw	112
   757     006D  3489               	retlw	137
   758     006E  3430               	retlw	48
   759     006F  34FF               	retlw	255
   760     0070  34E6               	retlw	230
   761     0071  34DB               	retlw	219
   762     0072  342E               	retlw	46
   763     0073  3408               	retlw	8
   764     0074  34E5               	retlw	229
   765     0075  343C               	retlw	60
   766     0076  341E               	retlw	30
   767     0077  3460               	retlw	96
   768     0078  3442               	retlw	66
   769     0079  34A2               	retlw	162
   770     007A  340D               	retlw	13
   771     007B                     __end_of__npowers_:
   772     007B                     _dpowers:
   773     007B  3401               	retlw	1
   774     007C  3400               	retlw	0
   775     007D  3400               	retlw	0
   776     007E  3400               	retlw	0
   777     007F  340A               	retlw	10
   778     0080  3400               	retlw	0
   779     0081  3400               	retlw	0
   780     0082  3400               	retlw	0
   781     0083  3464               	retlw	100
   782     0084  3400               	retlw	0
   783     0085  3400               	retlw	0
   784     0086  3400               	retlw	0
   785     0087  34E8               	retlw	232
   786     0088  3403               	retlw	3
   787     0089  3400               	retlw	0
   788     008A  3400               	retlw	0
   789     008B  3410               	retlw	16
   790     008C  3427               	retlw	39
   791     008D  3400               	retlw	0
   792     008E  3400               	retlw	0
   793     008F  34A0               	retlw	160
   794     0090  3486               	retlw	134
   795     0091  3401               	retlw	1
   796     0092  3400               	retlw	0
   797     0093  3440               	retlw	64
   798     0094  3442               	retlw	66
   799     0095  340F               	retlw	15
   800     0096  3400               	retlw	0
   801     0097  3480               	retlw	128
   802     0098  3496               	retlw	150
   803     0099  3498               	retlw	152
   804     009A  3400               	retlw	0
   805     009B  3400               	retlw	0
   806     009C  34E1               	retlw	225
   807     009D  34F5               	retlw	245
   808     009E  3405               	retlw	5
   809     009F  3400               	retlw	0
   810     00A0  34CA               	retlw	202
   811     00A1  349A               	retlw	154
   812     00A2  343B               	retlw	59
   813     00A3                     __end_of_dpowers:
   814     000E                     _TMR1	set	14
   815     0012                     _T2CONbits	set	18
   816     000C                     _PIR1bits	set	12
   817     001D                     _CCP2CONbits	set	29
   818     0017                     _CCP1CONbits	set	23
   819     0010                     _T1CONbits	set	16
   820     0008                     _PORTD	set	8
   821     0006                     _PORTB	set	6
   822     0005                     _PORTA	set	5
   823     0005                     _PORTAbits	set	5
   824     001B                     _CCPR2L	set	27
   825     0015                     _CCPR1L	set	21
   826     0008                     _PORTDbits	set	8
   827     0013                     _SSPBUF	set	19
   828     0014                     _SSPCON	set	20
   829     0063                     _SSPIF	set	99
   830     005E                     _PEIE	set	94
   831     005F                     _GIE	set	95
   832     0092                     _PR2	set	146
   833     0096                     _IOCB	set	150
   834     0095                     _WPUBbits	set	149
   835     0081                     _OPTION_REGbits	set	129
   836     0085                     _TRISAbits	set	133
   837     0088                     _TRISD	set	136
   838     0086                     _TRISB	set	134
   839     0085                     _TRISA	set	133
   840     008F                     _OSCCONbits	set	143
   841     0091                     _SSPCON2bits	set	145
   842     0087                     _TRISCbits	set	135
   843     0094                     _SSPSTAT	set	148
   844     0093                     _SSPADD	set	147
   845     0091                     _SSPCON2	set	145
   846     0463                     _SSPIE	set	1123
   847     043C                     _TRISC4	set	1084
   848     043B                     _TRISC3	set	1083
   849     0189                     _ANSELH	set	393
   850     0188                     _ANSEL	set	392
   851     00A3                     STR_1:
   852     00A3  3444               	retlw	68	;'D'
   853     00A4  3469               	retlw	105	;'i'
   854     00A5  3473               	retlw	115	;'s'
   855     00A6  3474               	retlw	116	;'t'
   856     00A7  3461               	retlw	97	;'a'
   857     00A8  346E               	retlw	110	;'n'
   858     00A9  3463               	retlw	99	;'c'
   859     00AA  3469               	retlw	105	;'i'
   860     00AB  3461               	retlw	97	;'a'
   861     00AC  343A               	retlw	58	;':'
   862     00AD  3420               	retlw	32	;' '
   863     00AE  3425               	retlw	37	;'%'
   864     00AF  342E               	retlw	46	;'.'
   865     00B0  3431               	retlw	49	;'1'
   866     00B1  3466               	retlw	102	;'f'
   867     00B2  3400               	retlw	0
   868     00B3                     STR_6:
   869     00B3  3454               	retlw	84	;'T'
   870     00B4  3441               	retlw	65	;'A'
   871     00B5  3450               	retlw	80	;'P'
   872     00B6  3441               	retlw	65	;'A'
   873     00B7  3444               	retlw	68	;'D'
   874     00B8  344F               	retlw	79	;'O'
   875     00B9  3400               	retlw	0
   876     00BA                     STR_3:
   877     00BA  3456               	retlw	86	;'V'
   878     00BB  3445               	retlw	69	;'E'
   879     00BC  3452               	retlw	82	;'R'
   880     00BD  3444               	retlw	68	;'D'
   881     00BE  3445               	retlw	69	;'E'
   882     00BF  3400               	retlw	0
   883     00C0                     STR_8:
   884     00C0  344C               	retlw	76	;'L'
   885     00C1  3449               	retlw	73	;'I'
   886     00C2  3442               	retlw	66	;'B'
   887     00C3  3452               	retlw	82	;'R'
   888     00C4  3445               	retlw	69	;'E'
   889     00C5  3400               	retlw	0
   890     00C6                     STR_2:
   891     00C6  344E               	retlw	78	;'N'
   892     00C7  3441               	retlw	65	;'A'
   893     00C8  3444               	retlw	68	;'D'
   894     00C9  3441               	retlw	65	;'A'
   895     00CA  3400               	retlw	0
   896     00CB                     STR_4:
   897     00CB  3441               	retlw	65	;'A'
   898     00CC  345A               	retlw	90	;'Z'
   899     00CD  3455               	retlw	85	;'U'
   900     00CE  344C               	retlw	76	;'L'
   901     00CF  3400               	retlw	0
   902     00D0                     STR_5:
   903     00D0  3452               	retlw	82	;'R'
   904     00D1  344F               	retlw	79	;'O'
   905     00D2  344A               	retlw	74	;'J'
   906     00D3  344F               	retlw	79	;'O'
   907     00D4  3400               	retlw	0
   908     00D5                     STR_10:
   909     00D5  3421               	retlw	33	;'!'
   910     00D6  3400               	retlw	0
   911     00D7                     STR_7:
   912     00D7  344E               	retlw	78	;'N'
   913     00D8  3400               	retlw	0
   914     00D5                     
   915                           	psect	cinit
   916     07F0                     start_initialization:	
   917                           ; #config settings
   918                           
   919     07F0                     __initialization:
   920                           
   921                           ; Clear objects allocated to BANK0
   922     07F0  1283               	bcf	3,5	;RP0=0, select bank0
   923     07F1  1303               	bcf	3,6	;RP1=0, select bank0
   924     07F2  01EE               	clrf	__pbssBANK0& (0+127)
   925                           
   926                           ; Clear objects allocated to BANK1
   927     07F3  1383               	bcf	3,7	;select IRP bank0
   928     07F4  30C7               	movlw	low __pbssBANK1
   929     07F5  0084               	movwf	4
   930     07F6  30DF               	movlw	low (__pbssBANK1+24)
   931     07F7  160A  158A  2306  120A  118A  	fcall	clear_ram0
   932     07FC                     end_of_initialization:	
   933                           ;End of C runtime variable initialization code
   934                           
   935     07FC                     __end_of__initialization:
   936     07FC  0183               	clrf	3
   937     07FD  160A  118A  2B69   	ljmp	_main	;jump to C main() function
   938                           
   939                           	psect	bssBANK0
   940     006E                     __pbssBANK0:
   941     006E                     _dis:
   942     006E                     	ds	1
   943                           
   944                           	psect	bssBANK1
   945     00C7                     __pbssBANK1:
   946     00C7                     _distancia:
   947     00C7                     	ds	4
   948     00CB                     _velocidad:
   949     00CB                     	ds	2
   950     00CD                     _linea:
   951     00CD                     	ds	1
   952     00CE                     _color:
   953     00CE                     	ds	1
   954     00CF                     _distanciaLCD:
   955     00CF                     	ds	16
   956                           
   957                           	psect	clrtext
   958     1B06                     clear_ram0:	
   959                           ;	Called with FSR containing the base address, and
   960                           ;	W with the last address+1
   961                           
   962     1B06  0064               	clrwdt	;clear the watchdog before getting into this loop
   963     1B07                     clrloop0:
   964     1B07  0180               	clrf	0	;clear RAM location pointed to by FSR
   965     1B08  0A84               	incf	4,f	;increment pointer
   966     1B09  0604               	xorwf	4,w	;XOR with final address
   967     1B0A  1903               	btfsc	3,2	;have we reached the end yet?
   968     1B0B  3400               	retlw	0	;all done for this memory range, return
   969     1B0C  0604               	xorwf	4,w	;XOR again to restore value
   970     1B0D  2B07               	goto	clrloop0	;do the next byte
   971                           
   972                           	psect	cstackBANK1
   973     00A0                     __pcstackBANK1:
   974     00A0                     ?_sprintf:
   975     00A0                     sprintf@f:	
   976                           ; 2 bytes @ 0x0
   977                           
   978                           
   979                           ; 1 bytes @ 0x0
   980     00A0                     	ds	5
   981     00A5                     ??_sprintf:
   982                           
   983                           ; 1 bytes @ 0x5
   984     00A5                     	ds	5
   985     00AA                     _sprintf$1369:
   986                           
   987                           ; 4 bytes @ 0xA
   988     00AA                     	ds	4
   989     00AE                     sprintf@ap:
   990                           
   991                           ; 1 bytes @ 0xE
   992     00AE                     	ds	1
   993     00AF                     sprintf@flag:
   994                           
   995                           ; 2 bytes @ 0xF
   996     00AF                     	ds	2
   997     00B1                     sprintf@val:
   998                           
   999                           ; 4 bytes @ 0x11
  1000     00B1                     	ds	4
  1001     00B5                     sprintf@eexp:
  1002                           
  1003                           ; 2 bytes @ 0x15
  1004     00B5                     	ds	2
  1005     00B7                     sprintf@tmpval:
  1006                           
  1007                           ; 4 bytes @ 0x17
  1008     00B7                     	ds	4
  1009     00BB                     sprintf@sp:
  1010                           
  1011                           ; 1 bytes @ 0x1B
  1012     00BB                     	ds	1
  1013     00BC                     sprintf@prec:
  1014                           
  1015                           ; 2 bytes @ 0x1C
  1016     00BC                     	ds	2
  1017     00BE                     sprintf@fval:
  1018                           
  1019                           ; 4 bytes @ 0x1E
  1020     00BE                     	ds	4
  1021     00C2                     sprintf@c:
  1022                           
  1023                           ; 1 bytes @ 0x22
  1024     00C2                     	ds	1
  1025     00C3                     ??_main:
  1026                           
  1027                           ; 1 bytes @ 0x23
  1028     00C3                     	ds	4
  1029                           
  1030                           	psect	cstackCOMMON
  1031     0070                     __pcstackCOMMON:
  1032     0070                     ?_isdigit:
  1033     0070                     ?___fleq:	
  1034                           ; 1 bit 
  1035                           
  1036     0070                     ?___flge:	
  1037                           ; 1 bit 
  1038                           
  1039     0070                     ?_setup:	
  1040                           ; 1 bit 
  1041                           
  1042     0070                     ?_setupMotores:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ??_setupMotores:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ?_setupPWM:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ??_setupPWM:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ??_isdigit:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057     0070                     ?_I2C_Master_Wait:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ??_I2C_Master_Wait:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ?_I2C_Master_Start:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ??_I2C_Master_Start:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ?_I2C_Master_Stop:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ??_I2C_Master_Stop:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ?_I2C_Master_Write:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     ?_setupINTOSC:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ??_setupINTOSC:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ?_Lcd_Port_4bits:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ??_Lcd_Port_4bits:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ?_Lcd_Cmd_4bits:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093     0070                     ?_Lcd_Clear_4bits:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096     0070                     ?_Lcd_Init_4bits:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099     0070                     ?_Lcd_Write_Char_4bits:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102     0070                     ?_main:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105     0070                     ?__Umul8_16:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108     0070                     ?_I2C_Master_Read:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111     0070                     ?___wmul:	
  1112                           ; 2 bytes @ 0x0
  1113                           
  1114     0070                     ?___awmod:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117     0070                     ?___lwmod:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120     0070                     ?__tdiv_to_l_:	
  1121                           ; 2 bytes @ 0x0
  1122                           
  1123     0070                     ?__div_to_l_:	
  1124                           ; 4 bytes @ 0x0
  1125                           
  1126     0070                     ?___lldiv:	
  1127                           ; 4 bytes @ 0x0
  1128                           
  1129     0070                     ?___flneg:	
  1130                           ; 4 bytes @ 0x0
  1131                           
  1132     0070                     ?___llmod:	
  1133                           ; 4 bytes @ 0x0
  1134                           
  1135     0070                     Lcd_Port_4bits@a:	
  1136                           ; 4 bytes @ 0x0
  1137                           
  1138     0070                     __Umul8_16@multiplicand:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0070                     _isdigit$1155:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0070                     I2C_Master_Write@d:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147     0070                     I2C_Master_Read@a:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150     0070                     ___wmul@multiplier:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153     0070                     ___awmod@divisor:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156     0070                     ___lwmod@divisor:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159     0070                     ___lldiv@divisor:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162     0070                     __div_to_l_@f1:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165     0070                     ___fleq@ff1:	
  1166                           ; 4 bytes @ 0x0
  1167                           
  1168     0070                     ___flge@ff1:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171     0070                     ___flneg@f1:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174     0070                     __tdiv_to_l_@f1:	
  1175                           ; 4 bytes @ 0x0
  1176                           
  1177     0070                     ___llmod@divisor:	
  1178                           ; 4 bytes @ 0x0
  1179                           
  1180                           
  1181                           ; 4 bytes @ 0x0
  1182     0070                     	ds	1
  1183     0071                     ??_Lcd_Cmd_4bits:
  1184     0071                     ??_Lcd_Write_Char_4bits:	
  1185                           ; 1 bytes @ 0x1
  1186                           
  1187     0071                     setupINTOSC@F:	
  1188                           ; 1 bytes @ 0x1
  1189                           
  1190     0071                     isdigit@c:	
  1191                           ; 1 bytes @ 0x1
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x1
  1195     0071                     	ds	1
  1196     0072                     ??__Umul8_16:
  1197     0072                     ??_I2C_Master_Write:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200     0072                     ??_I2C_Master_Read:	
  1201                           ; 1 bytes @ 0x2
  1202                           
  1203     0072                     Lcd_Write_Char_4bits@temp:	
  1204                           ; 1 bytes @ 0x2
  1205                           
  1206     0072                     ___wmul@multiplicand:	
  1207                           ; 1 bytes @ 0x2
  1208                           
  1209     0072                     ___awmod@dividend:	
  1210                           ; 2 bytes @ 0x2
  1211                           
  1212     0072                     ___lwmod@dividend:	
  1213                           ; 2 bytes @ 0x2
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0x2
  1217     0072                     	ds	1
  1218     0073                     Lcd_Cmd_4bits@a:
  1219     0073                     Lcd_Write_Char_4bits@y:	
  1220                           ; 1 bytes @ 0x3
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x3
  1224     0073                     	ds	1
  1225     0074                     ??_Lcd_Clear_4bits:
  1226     0074                     ?_Lcd_Set_Cursor_4bits:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229     0074                     ??_Lcd_Init_4bits:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232     0074                     ??___wmul:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235     0074                     ??___awmod:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238     0074                     ??___flneg:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241     0074                     ??___lwmod:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244     0074                     Lcd_Set_Cursor_4bits@b:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247     0074                     Lcd_Write_Char_4bits@a:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250     0074                     I2C_Master_Read@temp:	
  1251                           ; 1 bytes @ 0x4
  1252                           
  1253     0074                     ___wmul@product:	
  1254                           ; 2 bytes @ 0x4
  1255                           
  1256     0074                     __Umul8_16@product:	
  1257                           ; 2 bytes @ 0x4
  1258                           
  1259     0074                     ___lldiv@dividend:	
  1260                           ; 2 bytes @ 0x4
  1261                           
  1262     0074                     __div_to_l_@f2:	
  1263                           ; 4 bytes @ 0x4
  1264                           
  1265     0074                     ___fleq@ff2:	
  1266                           ; 4 bytes @ 0x4
  1267                           
  1268     0074                     ___flge@ff2:	
  1269                           ; 4 bytes @ 0x4
  1270                           
  1271     0074                     __tdiv_to_l_@f2:	
  1272                           ; 4 bytes @ 0x4
  1273                           
  1274     0074                     ___llmod@dividend:	
  1275                           ; 4 bytes @ 0x4
  1276                           
  1277                           
  1278                           ; 4 bytes @ 0x4
  1279     0074                     	ds	1
  1280     0075                     ??_Lcd_Set_Cursor_4bits:
  1281     0075                     ?_Lcd_Write_String_4bits:	
  1282                           ; 1 bytes @ 0x5
  1283                           
  1284     0075                     ___awmod@counter:	
  1285                           ; 1 bytes @ 0x5
  1286                           
  1287     0075                     ___lwmod@counter:	
  1288                           ; 1 bytes @ 0x5
  1289                           
  1290     0075                     Lcd_Write_String_4bits@a:	
  1291                           ; 1 bytes @ 0x5
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x5
  1295     0075                     	ds	1
  1296     0076                     ?___lwdiv:
  1297     0076                     ?___xxtofl:	
  1298                           ; 2 bytes @ 0x6
  1299                           
  1300     0076                     Lcd_Set_Cursor_4bits@a:	
  1301                           ; 4 bytes @ 0x6
  1302                           
  1303     0076                     ___awmod@sign:	
  1304                           ; 1 bytes @ 0x6
  1305                           
  1306     0076                     ___lwdiv@divisor:	
  1307                           ; 1 bytes @ 0x6
  1308                           
  1309     0076                     __Umul8_16@word_mpld:	
  1310                           ; 2 bytes @ 0x6
  1311                           
  1312     0076                     ___xxtofl@val:	
  1313                           ; 2 bytes @ 0x6
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x6
  1317     0076                     	ds	1
  1318     0077                     ??_Lcd_Write_String_4bits:
  1319     0077                     ?___awdiv:	
  1320                           ; 1 bytes @ 0x7
  1321                           
  1322     0077                     Lcd_Set_Cursor_4bits@z:	
  1323                           ; 2 bytes @ 0x7
  1324                           
  1325     0077                     ___awdiv@divisor:	
  1326                           ; 1 bytes @ 0x7
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x7
  1330     0077                     	ds	1
  1331     0078                     ??__tdiv_to_l_:
  1332     0078                     ??__div_to_l_:	
  1333                           ; 1 bytes @ 0x8
  1334                           
  1335     0078                     ??___lldiv:	
  1336                           ; 1 bytes @ 0x8
  1337                           
  1338     0078                     ??___fleq:	
  1339                           ; 1 bytes @ 0x8
  1340                           
  1341     0078                     ??___flge:	
  1342                           ; 1 bytes @ 0x8
  1343                           
  1344     0078                     ??___llmod:	
  1345                           ; 1 bytes @ 0x8
  1346                           
  1347     0078                     Lcd_Set_Cursor_4bits@y:	
  1348                           ; 1 bytes @ 0x8
  1349                           
  1350     0078                     __Umul8_16@multiplier:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353     0078                     ___lwdiv@dividend:	
  1354                           ; 1 bytes @ 0x8
  1355                           
  1356                           
  1357                           ; 2 bytes @ 0x8
  1358     0078                     	ds	1
  1359     0079                     Lcd_Set_Cursor_4bits@temp:
  1360     0079                     ___llmod@counter:	
  1361                           ; 1 bytes @ 0x9
  1362                           
  1363     0079                     ___awdiv@dividend:	
  1364                           ; 1 bytes @ 0x9
  1365                           
  1366     0079                     ___lldiv@quotient:	
  1367                           ; 2 bytes @ 0x9
  1368                           
  1369                           
  1370                           ; 4 bytes @ 0x9
  1371     0079                     	ds	1
  1372     007A                     ??___lwdiv:
  1373     007A                     ??___xxtofl:	
  1374                           ; 1 bytes @ 0xA
  1375                           
  1376     007A                     Lcd_Write_String_4bits@i:	
  1377                           ; 1 bytes @ 0xA
  1378                           
  1379                           
  1380                           ; 2 bytes @ 0xA
  1381     007A                     	ds	1
  1382     007B                     ??___awdiv:
  1383     007B                     ___lwdiv@quotient:	
  1384                           ; 1 bytes @ 0xB
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0xB
  1388     007B                     	ds	2
  1389     007D                     ___lldiv@counter:
  1390     007D                     ___lwdiv@counter:	
  1391                           ; 1 bytes @ 0xD
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0xD
  1395     007D                     	ds	1
  1396     007E                     ??_setup:
  1397     007E                     ??___flsub:	
  1398                           ; 1 bytes @ 0xE
  1399                           
  1400                           
  1401                           	psect	cstackBANK0
  1402     0020                     __pcstackBANK0:	
  1403                           ; 1 bytes @ 0xE
  1404                           
  1405     0020                     ?_I2C_Master_Init:
  1406     0020                     ___awdiv@counter:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409     0020                     ___xxtofl@sign:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412     0020                     I2C_Master_Init@c:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415     0020                     __div_to_l_@quot:	
  1416                           ; 4 bytes @ 0x0
  1417                           
  1418     0020                     __tdiv_to_l_@quot:	
  1419                           ; 4 bytes @ 0x0
  1420                           
  1421                           
  1422                           ; 4 bytes @ 0x0
  1423     0020                     	ds	1
  1424     0021                     ___awdiv@sign:
  1425     0021                     ___xxtofl@exp:	
  1426                           ; 1 bytes @ 0x1
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x1
  1430     0021                     	ds	1
  1431     0022                     ___awdiv@quotient:
  1432     0022                     ___xxtofl@arg:	
  1433                           ; 2 bytes @ 0x2
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x2
  1437     0022                     	ds	2
  1438     0024                     ??_I2C_Master_Init:
  1439     0024                     ?___flmul:	
  1440                           ; 1 bytes @ 0x4
  1441                           
  1442     0024                     __div_to_l_@cntr:	
  1443                           ; 4 bytes @ 0x4
  1444                           
  1445     0024                     __tdiv_to_l_@cntr:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448     0024                     ___flmul@b:	
  1449                           ; 1 bytes @ 0x4
  1450                           
  1451                           
  1452                           ; 4 bytes @ 0x4
  1453     0024                     	ds	1
  1454     0025                     __div_to_l_@exp1:
  1455     0025                     __tdiv_to_l_@exp1:	
  1456                           ; 1 bytes @ 0x5
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0x5
  1460     0025                     	ds	3
  1461     0028                     ___flmul@a:
  1462                           
  1463                           ; 4 bytes @ 0x8
  1464     0028                     	ds	4
  1465     002C                     ??___flmul:
  1466                           
  1467                           ; 1 bytes @ 0xC
  1468     002C                     	ds	5
  1469     0031                     ___flmul@sign:
  1470                           
  1471                           ; 1 bytes @ 0x11
  1472     0031                     	ds	1
  1473     0032                     ___flmul@grs:
  1474                           
  1475                           ; 4 bytes @ 0x12
  1476     0032                     	ds	4
  1477     0036                     ___flmul@aexp:
  1478                           
  1479                           ; 1 bytes @ 0x16
  1480     0036                     	ds	1
  1481     0037                     ___flmul@bexp:
  1482                           
  1483                           ; 1 bytes @ 0x17
  1484     0037                     	ds	1
  1485     0038                     ___flmul@prod:
  1486                           
  1487                           ; 4 bytes @ 0x18
  1488     0038                     	ds	4
  1489     003C                     ___flmul@temp:
  1490                           
  1491                           ; 2 bytes @ 0x1C
  1492     003C                     	ds	2
  1493     003E                     ?_fround:
  1494     003E                     ?_scale:	
  1495                           ; 4 bytes @ 0x1E
  1496                           
  1497                           
  1498                           ; 4 bytes @ 0x1E
  1499     003E                     	ds	4
  1500     0042                     ??_fround:
  1501     0042                     ??_scale:	
  1502                           ; 1 bytes @ 0x22
  1503                           
  1504                           
  1505                           ; 1 bytes @ 0x22
  1506     0042                     	ds	7
  1507     0049                     _fround$1367:
  1508                           
  1509                           ; 4 bytes @ 0x29
  1510     0049                     	ds	3
  1511     004C                     _scale$1368:
  1512                           
  1513                           ; 4 bytes @ 0x2C
  1514     004C                     	ds	1
  1515     004D                     _fround$1366:
  1516                           
  1517                           ; 4 bytes @ 0x2D
  1518     004D                     	ds	3
  1519     0050                     scale@scl:
  1520                           
  1521                           ; 1 bytes @ 0x30
  1522     0050                     	ds	1
  1523     0051                     ?___fltol:
  1524     0051                     fround@prec:	
  1525                           ; 4 bytes @ 0x31
  1526                           
  1527     0051                     ___fltol@f1:	
  1528                           ; 1 bytes @ 0x31
  1529                           
  1530                           
  1531                           ; 4 bytes @ 0x31
  1532     0051                     	ds	1
  1533     0052                     ?___fladd:
  1534     0052                     ___fladd@b:	
  1535                           ; 4 bytes @ 0x32
  1536                           
  1537                           
  1538                           ; 4 bytes @ 0x32
  1539     0052                     	ds	3
  1540     0055                     ??___fltol:
  1541                           
  1542                           ; 1 bytes @ 0x35
  1543     0055                     	ds	1
  1544     0056                     ___fladd@a:
  1545                           
  1546                           ; 4 bytes @ 0x36
  1547     0056                     	ds	3
  1548     0059                     ___fltol@sign1:
  1549                           
  1550                           ; 1 bytes @ 0x39
  1551     0059                     	ds	1
  1552     005A                     ??___fladd:
  1553     005A                     ___fltol@exp1:	
  1554                           ; 1 bytes @ 0x3A
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0x3A
  1558     005A                     	ds	8
  1559     0062                     ___fladd@signs:
  1560                           
  1561                           ; 1 bytes @ 0x42
  1562     0062                     	ds	1
  1563     0063                     ___fladd@aexp:
  1564                           
  1565                           ; 1 bytes @ 0x43
  1566     0063                     	ds	1
  1567     0064                     ___fladd@bexp:
  1568                           
  1569                           ; 1 bytes @ 0x44
  1570     0064                     	ds	1
  1571     0065                     ___fladd@grs:
  1572                           
  1573                           ; 1 bytes @ 0x45
  1574     0065                     	ds	1
  1575     0066                     ?___flsub:
  1576     0066                     ___flsub@a:	
  1577                           ; 4 bytes @ 0x46
  1578                           
  1579                           
  1580                           ; 4 bytes @ 0x46
  1581     0066                     	ds	4
  1582     006A                     ___flsub@b:
  1583                           
  1584                           ; 4 bytes @ 0x4A
  1585     006A                     	ds	4
  1586                           
  1587                           	psect	maintext
  1588     1369                     __pmaintext:	
  1589 ;;
  1590 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1591 ;;
  1592 ;; *************** function _main *****************
  1593 ;; Defined at:
  1594 ;;		line 69 in file "main_M.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : B00/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       4       0       0
  1611 ;;      Totals:         0       0       4       0       0
  1612 ;;Total ram usage:        4 bytes
  1613 ;; Hardware stack levels required when called: 4
  1614 ;; This function calls:
  1615 ;;		_I2C_Master_Read
  1616 ;;		_I2C_Master_Start
  1617 ;;		_I2C_Master_Stop
  1618 ;;		_I2C_Master_Write
  1619 ;;		_Lcd_Clear_4bits
  1620 ;;		_Lcd_Set_Cursor_4bits
  1621 ;;		_Lcd_Write_String_4bits
  1622 ;;		___flge
  1623 ;;		___xxtofl
  1624 ;;		_setup
  1625 ;;		_setupMotores
  1626 ;;		_setupPWM
  1627 ;;		_sprintf
  1628 ;; This function is called by:
  1629 ;;		Startup code after reset
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     1369                     _main:	
  1634                           ;psect for function _main
  1635                           
  1636     1369                     l3688:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1639                           
  1640                           
  1641                           ;main_M.c: 71:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1642     1369  3006               	movlw	6
  1643     136A  1683               	bsf	3,5	;RP0=1, select bank1
  1644     136B  1303               	bcf	3,6	;RP1=0, select bank1
  1645     136C  00C5               	movwf	(??_main^(0+128)+2)
  1646     136D  3013               	movlw	19
  1647     136E  00C4               	movwf	(??_main^(0+128)+1)
  1648     136F  30AD               	movlw	173
  1649     1370  00C3               	movwf	??_main^(0+128)
  1650     1371                     u5717:
  1651     1371  0BC3               	decfsz	??_main^(0+128),f
  1652     1372  2B71               	goto	u5717
  1653     1373  0BC4               	decfsz	(??_main^(0+128)+1),f
  1654     1374  2B71               	goto	u5717
  1655     1375  0BC5               	decfsz	(??_main^(0+128)+2),f
  1656     1376  2B71               	goto	u5717
  1657     1377                     l3690:
  1658                           
  1659                           ;main_M.c: 72:     setup();
  1660     1377  160A  158A  2418  160A  118A  	fcall	_setup
  1661     137C                     l3692:
  1662                           
  1663                           ;main_M.c: 73:     Lcd_Clear_4bits();
  1664     137C  160A  158A  2342  160A  118A  	fcall	_Lcd_Clear_4bits
  1665     1381                     l3694:
  1666                           
  1667                           ;main_M.c: 75:     setupMotores();
  1668     1381  120A  118A  20DB  160A  118A  	fcall	_setupMotores
  1669     1386                     l3696:
  1670                           
  1671                           ;main_M.c: 76:     setupPWM();
  1672     1386  160A  158A  23CE  160A  118A  	fcall	_setupPWM
  1673                           
  1674                           ;main_M.c: 79:     CCPR1L = 125;
  1675     138B  307D               	movlw	125
  1676     138C  1283               	bcf	3,5	;RP0=0, select bank0
  1677     138D  1303               	bcf	3,6	;RP1=0, select bank0
  1678     138E  0095               	movwf	21	;volatile
  1679                           
  1680                           ;main_M.c: 80:     CCPR2L = 125;
  1681     138F  307D               	movlw	125
  1682     1390  009B               	movwf	27	;volatile
  1683     1391                     l3698:
  1684                           
  1685                           ;main_M.c: 83:     {;main_M.c: 85:         I2C_Master_Start();
  1686     1391  160A  158A  230E  160A  118A  	fcall	_I2C_Master_Start
  1687     1396                     l3700:
  1688                           
  1689                           ;main_M.c: 86:         I2C_Master_Write(0x11);
  1690     1396  3011               	movlw	17
  1691     1397  00F0               	movwf	I2C_Master_Write@d
  1692     1398  3000               	movlw	0
  1693     1399  00F1               	movwf	I2C_Master_Write@d+1
  1694     139A  160A  158A  2320  160A  118A  	fcall	_I2C_Master_Write
  1695     139F                     l3702:
  1696                           
  1697                           ;main_M.c: 87:         distancia = I2C_Master_Read(0);
  1698     139F  3000               	movlw	0
  1699     13A0  00F0               	movwf	I2C_Master_Read@a
  1700     13A1  00F1               	movwf	I2C_Master_Read@a+1
  1701     13A2  160A  118A  2001  160A  118A  	fcall	_I2C_Master_Read
  1702     13A7  0870               	movf	?_I2C_Master_Read,w
  1703     13A8  1683               	bsf	3,5	;RP0=1, select bank1
  1704     13A9  1303               	bcf	3,6	;RP1=0, select bank1
  1705     13AA  00C3               	movwf	??_main^(0+128)
  1706     13AB  0871               	movf	?_I2C_Master_Read+1,w
  1707     13AC  00C4               	movwf	(??_main^(0+128)+1)
  1708     13AD  01C5               	clrf	(??_main^(0+128)+2)
  1709     13AE  01C6               	clrf	(??_main^(0+128)+3)
  1710     13AF  0846               	movf	(??_main+3)^(0+128),w
  1711     13B0  00F9               	movwf	___xxtofl@val+3
  1712     13B1  0845               	movf	(??_main+2)^(0+128),w
  1713     13B2  00F8               	movwf	___xxtofl@val+2
  1714     13B3  0844               	movf	(??_main+1)^(0+128),w
  1715     13B4  00F7               	movwf	___xxtofl@val+1
  1716     13B5  0843               	movf	??_main^(0+128),w
  1717     13B6  00F6               	movwf	___xxtofl@val
  1718     13B7  3000               	movlw	0
  1719     13B8  120A  118A  20F6  160A  118A  	fcall	___xxtofl
  1720     13BD  0879               	movf	?___xxtofl+3,w
  1721     13BE  1683               	bsf	3,5	;RP0=1, select bank1
  1722     13BF  1303               	bcf	3,6	;RP1=0, select bank1
  1723     13C0  00CA               	movwf	(_distancia+3)^(0+128)
  1724     13C1  0878               	movf	?___xxtofl+2,w
  1725     13C2  00C9               	movwf	(_distancia+2)^(0+128)
  1726     13C3  0877               	movf	?___xxtofl+1,w
  1727     13C4  00C8               	movwf	(_distancia+1)^(0+128)
  1728     13C5  0876               	movf	?___xxtofl,w
  1729     13C6  00C7               	movwf	_distancia^(0+128)
  1730     13C7                     l3704:
  1731                           
  1732                           ;main_M.c: 88:         I2C_Master_Stop();
  1733     13C7  160A  158A  2317  160A  118A  	fcall	_I2C_Master_Stop
  1734                           
  1735                           ;main_M.c: 89:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1736     13CC  3003               	movlw	3
  1737     13CD  1683               	bsf	3,5	;RP0=1, select bank1
  1738     13CE  1303               	bcf	3,6	;RP1=0, select bank1
  1739     13CF  00C5               	movwf	(??_main^(0+128)+2)
  1740     13D0  3008               	movlw	8
  1741     13D1  00C4               	movwf	(??_main^(0+128)+1)
  1742     13D2  3076               	movlw	118
  1743     13D3  00C3               	movwf	??_main^(0+128)
  1744     13D4                     u5727:
  1745     13D4  0BC3               	decfsz	??_main^(0+128),f
  1746     13D5  2BD4               	goto	u5727
  1747     13D6  0BC4               	decfsz	(??_main^(0+128)+1),f
  1748     13D7  2BD4               	goto	u5727
  1749     13D8  0BC5               	decfsz	(??_main^(0+128)+2),f
  1750     13D9  2BD4               	goto	u5727
  1751     13DA  0000               	nop
  1752     13DB                     l3706:
  1753                           
  1754                           ;main_M.c: 90:         I2C_Master_Start();
  1755     13DB  160A  158A  230E  160A  118A  	fcall	_I2C_Master_Start
  1756     13E0                     l3708:
  1757                           
  1758                           ;main_M.c: 91:         I2C_Master_Write(0x31);
  1759     13E0  3031               	movlw	49
  1760     13E1  00F0               	movwf	I2C_Master_Write@d
  1761     13E2  3000               	movlw	0
  1762     13E3  00F1               	movwf	I2C_Master_Write@d+1
  1763     13E4  160A  158A  2320  160A  118A  	fcall	_I2C_Master_Write
  1764     13E9                     l3710:
  1765                           
  1766                           ;main_M.c: 92:         color = I2C_Master_Read(0);
  1767     13E9  3000               	movlw	0
  1768     13EA  00F0               	movwf	I2C_Master_Read@a
  1769     13EB  00F1               	movwf	I2C_Master_Read@a+1
  1770     13EC  160A  118A  2001  160A  118A  	fcall	_I2C_Master_Read
  1771     13F1  0870               	movf	?_I2C_Master_Read,w
  1772     13F2  1683               	bsf	3,5	;RP0=1, select bank1
  1773     13F3  1303               	bcf	3,6	;RP1=0, select bank1
  1774     13F4  00CE               	movwf	_color^(0+128)
  1775     13F5                     l3712:
  1776                           
  1777                           ;main_M.c: 93:         I2C_Master_Stop();
  1778     13F5  160A  158A  2317  160A  118A  	fcall	_I2C_Master_Stop
  1779                           
  1780                           ;main_M.c: 94:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1781     13FA  3003               	movlw	3
  1782     13FB  1683               	bsf	3,5	;RP0=1, select bank1
  1783     13FC  1303               	bcf	3,6	;RP1=0, select bank1
  1784     13FD  00C5               	movwf	(??_main^(0+128)+2)
  1785     13FE  3008               	movlw	8
  1786     13FF  00C4               	movwf	(??_main^(0+128)+1)
  1787     1400  3076               	movlw	118
  1788     1401  00C3               	movwf	??_main^(0+128)
  1789     1402                     u5737:
  1790     1402  0BC3               	decfsz	??_main^(0+128),f
  1791     1403  2C02               	goto	u5737
  1792     1404  0BC4               	decfsz	(??_main^(0+128)+1),f
  1793     1405  2C02               	goto	u5737
  1794     1406  0BC5               	decfsz	(??_main^(0+128)+2),f
  1795     1407  2C02               	goto	u5737
  1796     1408  0000               	nop
  1797     1409                     l3714:
  1798                           
  1799                           ;main_M.c: 95:         I2C_Master_Start();
  1800     1409  160A  158A  230E  160A  118A  	fcall	_I2C_Master_Start
  1801     140E                     l3716:
  1802                           
  1803                           ;main_M.c: 96:         I2C_Master_Write(0x21);
  1804     140E  3021               	movlw	33
  1805     140F  00F0               	movwf	I2C_Master_Write@d
  1806     1410  3000               	movlw	0
  1807     1411  00F1               	movwf	I2C_Master_Write@d+1
  1808     1412  160A  158A  2320  160A  118A  	fcall	_I2C_Master_Write
  1809     1417                     l3718:
  1810                           
  1811                           ;main_M.c: 97:         linea = I2C_Master_Read(0);
  1812     1417  3000               	movlw	0
  1813     1418  00F0               	movwf	I2C_Master_Read@a
  1814     1419  00F1               	movwf	I2C_Master_Read@a+1
  1815     141A  160A  118A  2001  160A  118A  	fcall	_I2C_Master_Read
  1816     141F  0870               	movf	?_I2C_Master_Read,w
  1817     1420  1683               	bsf	3,5	;RP0=1, select bank1
  1818     1421  1303               	bcf	3,6	;RP1=0, select bank1
  1819     1422  00CD               	movwf	_linea^(0+128)
  1820     1423                     l3720:
  1821                           
  1822                           ;main_M.c: 98:         I2C_Master_Stop();
  1823     1423  160A  158A  2317  160A  118A  	fcall	_I2C_Master_Stop
  1824                           
  1825                           ;main_M.c: 99:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1826     1428  3003               	movlw	3
  1827     1429  1683               	bsf	3,5	;RP0=1, select bank1
  1828     142A  1303               	bcf	3,6	;RP1=0, select bank1
  1829     142B  00C5               	movwf	(??_main^(0+128)+2)
  1830     142C  3008               	movlw	8
  1831     142D  00C4               	movwf	(??_main^(0+128)+1)
  1832     142E  3076               	movlw	118
  1833     142F  00C3               	movwf	??_main^(0+128)
  1834     1430                     u5747:
  1835     1430  0BC3               	decfsz	??_main^(0+128),f
  1836     1431  2C30               	goto	u5747
  1837     1432  0BC4               	decfsz	(??_main^(0+128)+1),f
  1838     1433  2C30               	goto	u5747
  1839     1434  0BC5               	decfsz	(??_main^(0+128)+2),f
  1840     1435  2C30               	goto	u5747
  1841     1436  0000               	nop
  1842     1437                     l3722:
  1843                           
  1844                           ;main_M.c: 101:         sprintf(distanciaLCD, "Distancia: %.1f", distancia);
  1845     1437  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1846     1438  1683               	bsf	3,5	;RP0=1, select bank1
  1847     1439  1303               	bcf	3,6	;RP1=0, select bank1
  1848     143A  00A0               	movwf	sprintf@f^(0+128)
  1849     143B  084A               	movf	(_distancia+3)^(0+128),w
  1850     143C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1851     143D  0849               	movf	(_distancia+2)^(0+128),w
  1852     143E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1853     143F  0848               	movf	(_distancia+1)^(0+128),w
  1854     1440  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1855     1441  0847               	movf	_distancia^(0+128),w
  1856     1442  00A1               	movwf	(?_sprintf^(0+128)+1)
  1857     1443  30CF               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1858     1444  120A  118A  21B0  160A  118A  	fcall	_sprintf
  1859     1449                     l3724:
  1860                           
  1861                           ;main_M.c: 103:         Lcd_Set_Cursor_4bits(1,1);
  1862     1449  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1863     144A  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1864     144B  3001               	movlw	1
  1865     144C  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1866     1451                     l3726:
  1867                           
  1868                           ;main_M.c: 104:         Lcd_Write_String_4bits(distanciaLCD);
  1869     1451  30CF               	movlw	(low (_distanciaLCD| 0))& (0+255)
  1870     1452  00F5               	movwf	Lcd_Write_String_4bits@a
  1871     1453  3000               	movlw	0
  1872     1454  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1873     1455  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  1874     145A                     l3728:
  1875                           
  1876                           ;main_M.c: 107:         if (color == 0){
  1877     145A  1683               	bsf	3,5	;RP0=1, select bank1
  1878     145B  1303               	bcf	3,6	;RP1=0, select bank1
  1879     145C  084E               	movf	_color^(0+128),w
  1880     145D  1D03               	btfss	3,2
  1881     145E  2C60               	goto	u5611
  1882     145F  2C61               	goto	u5610
  1883     1460                     u5611:
  1884     1460  2C73               	goto	l3734
  1885     1461                     u5610:
  1886     1461                     l3730:
  1887                           
  1888                           ;main_M.c: 108:             Lcd_Set_Cursor_4bits(2,1);
  1889     1461  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1890     1462  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1891     1463  3002               	movlw	2
  1892     1464  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1893     1469                     l3732:
  1894                           
  1895                           ;main_M.c: 109:             Lcd_Write_String_4bits("NADA");
  1896     1469  30B4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1897     146A  00F5               	movwf	Lcd_Write_String_4bits@a
  1898     146B  3080               	movlw	128
  1899     146C  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1900     146D  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  1901                           
  1902                           ;main_M.c: 111:         }
  1903     1472  2CD6               	goto	l3762
  1904     1473                     l3734:
  1905     1473  034E               	decf	_color^(0+128),w
  1906     1474  1D03               	btfss	3,2
  1907     1475  2C77               	goto	u5621
  1908     1476  2C78               	goto	u5620
  1909     1477                     u5621:
  1910     1477  2C90               	goto	l3742
  1911     1478                     u5620:
  1912     1478                     l3736:
  1913                           
  1914                           ;main_M.c: 115:             CCPR1L = 62;
  1915     1478  303E               	movlw	62
  1916     1479  1283               	bcf	3,5	;RP0=0, select bank0
  1917     147A  1303               	bcf	3,6	;RP1=0, select bank0
  1918     147B  0095               	movwf	21	;volatile
  1919                           
  1920                           ;main_M.c: 116:             CCPR2L = 62;
  1921     147C  303E               	movlw	62
  1922     147D  009B               	movwf	27	;volatile
  1923     147E                     l3738:
  1924                           
  1925                           ;main_M.c: 117:             Lcd_Set_Cursor_4bits(2,1);
  1926     147E  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1927     147F  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1928     1480  3002               	movlw	2
  1929     1481  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1930     1486                     l3740:
  1931                           
  1932                           ;main_M.c: 118:             Lcd_Write_String_4bits("VERDE");
  1933     1486  30A8               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1934     1487  00F5               	movwf	Lcd_Write_String_4bits@a
  1935     1488  3080               	movlw	128
  1936     1489  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1937     148A  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  1938                           
  1939                           ;main_M.c: 119:         }
  1940     148F  2CD6               	goto	l3762
  1941     1490                     l3742:
  1942     1490  3002               	movlw	2
  1943     1491  064E               	xorwf	_color^(0+128),w
  1944     1492  1D03               	btfss	3,2
  1945     1493  2C95               	goto	u5631
  1946     1494  2C96               	goto	u5630
  1947     1495                     u5631:
  1948     1495  2CB3               	goto	l3752
  1949     1496                     u5630:
  1950     1496                     l3744:
  1951                           
  1952                           ;main_M.c: 123:             CCPR1L = 125;
  1953     1496  307D               	movlw	125
  1954     1497  1283               	bcf	3,5	;RP0=0, select bank0
  1955     1498  1303               	bcf	3,6	;RP1=0, select bank0
  1956     1499  0095               	movwf	21	;volatile
  1957                           
  1958                           ;main_M.c: 124:             CCPR2L = 125;
  1959     149A  307D               	movlw	125
  1960     149B  009B               	movwf	27	;volatile
  1961     149C                     l3746:
  1962                           
  1963                           ;main_M.c: 125:             Lcd_Clear_4bits();
  1964     149C  160A  158A  2342  160A  118A  	fcall	_Lcd_Clear_4bits
  1965     14A1                     l3748:
  1966                           
  1967                           ;main_M.c: 126:             Lcd_Set_Cursor_4bits(2,1);
  1968     14A1  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1969     14A2  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1970     14A3  3002               	movlw	2
  1971     14A4  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1972     14A9                     l3750:
  1973                           
  1974                           ;main_M.c: 127:             Lcd_Write_String_4bits("AZUL");
  1975     14A9  30B9               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1976     14AA  00F5               	movwf	Lcd_Write_String_4bits@a
  1977     14AB  3080               	movlw	128
  1978     14AC  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1979     14AD  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  1980                           
  1981                           ;main_M.c: 129:         }
  1982     14B2  2CD6               	goto	l3762
  1983     14B3                     l3752:
  1984     14B3  3003               	movlw	3
  1985     14B4  064E               	xorwf	_color^(0+128),w
  1986     14B5  1D03               	btfss	3,2
  1987     14B6  2CB8               	goto	u5641
  1988     14B7  2CB9               	goto	u5640
  1989     14B8                     u5641:
  1990     14B8  2CD6               	goto	l176
  1991     14B9                     u5640:
  1992     14B9                     l3754:
  1993                           
  1994                           ;main_M.c: 133:             CCPR1L = 187;
  1995     14B9  30BB               	movlw	187
  1996     14BA  1283               	bcf	3,5	;RP0=0, select bank0
  1997     14BB  1303               	bcf	3,6	;RP1=0, select bank0
  1998     14BC  0095               	movwf	21	;volatile
  1999                           
  2000                           ;main_M.c: 134:             CCPR2L = 187;
  2001     14BD  30BB               	movlw	187
  2002     14BE  009B               	movwf	27	;volatile
  2003     14BF                     l3756:
  2004                           
  2005                           ;main_M.c: 135:             Lcd_Clear_4bits();
  2006     14BF  160A  158A  2342  160A  118A  	fcall	_Lcd_Clear_4bits
  2007     14C4                     l3758:
  2008                           
  2009                           ;main_M.c: 136:             Lcd_Set_Cursor_4bits(2,1);
  2010     14C4  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  2011     14C5  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  2012     14C6  3002               	movlw	2
  2013     14C7  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2014     14CC                     l3760:
  2015                           
  2016                           ;main_M.c: 137:             Lcd_Write_String_4bits("ROJO");
  2017     14CC  30BE               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2018     14CD  00F5               	movwf	Lcd_Write_String_4bits@a
  2019     14CE  3080               	movlw	128
  2020     14CF  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2021     14D0  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2022     14D5  2CD6               	goto	l3762
  2023     14D6                     l176:
  2024     14D6                     l3762:
  2025                           
  2026                           ;main_M.c: 141:         if (distancia < 5){
  2027     14D6  1683               	bsf	3,5	;RP0=1, select bank1
  2028     14D7  1303               	bcf	3,6	;RP1=0, select bank1
  2029     14D8  084A               	movf	(_distancia+3)^(0+128),w
  2030     14D9  00F3               	movwf	___flge@ff1+3
  2031     14DA  0849               	movf	(_distancia+2)^(0+128),w
  2032     14DB  00F2               	movwf	___flge@ff1+2
  2033     14DC  0848               	movf	(_distancia+1)^(0+128),w
  2034     14DD  00F1               	movwf	___flge@ff1+1
  2035     14DE  0847               	movf	_distancia^(0+128),w
  2036     14DF  00F0               	movwf	___flge@ff1
  2037     14E0  3040               	movlw	64
  2038     14E1  00F7               	movwf	___flge@ff2+3
  2039     14E2  30A0               	movlw	160
  2040     14E3  00F6               	movwf	___flge@ff2+2
  2041     14E4  3000               	movlw	0
  2042     14E5  00F5               	movwf	___flge@ff2+1
  2043     14E6  3000               	movlw	0
  2044     14E7  00F4               	movwf	___flge@ff2
  2045     14E8  120A  158A  2002  160A  118A  	fcall	___flge
  2046     14ED  1803               	btfsc	3,0
  2047     14EE  2CF0               	goto	u5651
  2048     14EF  2CF1               	goto	u5650
  2049     14F0                     u5651:
  2050     14F0  2D19               	goto	l3772
  2051     14F1                     u5650:
  2052     14F1                     l3764:
  2053                           
  2054                           ;main_M.c: 143:             PORTAbits.RA0 = 0;
  2055     14F1  1283               	bcf	3,5	;RP0=0, select bank0
  2056     14F2  1303               	bcf	3,6	;RP1=0, select bank0
  2057     14F3  1005               	bcf	5,0	;volatile
  2058                           
  2059                           ;main_M.c: 144:             PORTAbits.RA1 = 0;
  2060     14F4  1085               	bcf	5,1	;volatile
  2061                           
  2062                           ;main_M.c: 145:             PORTAbits.RA2 = 0;
  2063     14F5  1105               	bcf	5,2	;volatile
  2064                           
  2065                           ;main_M.c: 146:             PORTAbits.RA3 = 0;
  2066     14F6  1185               	bcf	5,3	;volatile
  2067     14F7                     l3766:
  2068                           
  2069                           ;main_M.c: 147:             Lcd_Set_Cursor_4bits(2,7);
  2070     14F7  3007               	movlw	7
  2071     14F8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2072     14F9  3002               	movlw	2
  2073     14FA  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2074     14FF                     l3768:
  2075                           
  2076                           ;main_M.c: 148:             Lcd_Write_String_4bits("TAPADO");
  2077     14FF  30A1               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2078     1500  00F5               	movwf	Lcd_Write_String_4bits@a
  2079     1501  3080               	movlw	128
  2080     1502  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2081     1503  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2082     1508                     l3770:
  2083                           
  2084                           ;main_M.c: 149:             Lcd_Set_Cursor_4bits(2,16);
  2085     1508  3010               	movlw	16
  2086     1509  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2087     150A  3002               	movlw	2
  2088     150B  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2089                           
  2090                           ;main_M.c: 150:             Lcd_Write_String_4bits("N");
  2091     1510  30C5               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2092     1511  00F5               	movwf	Lcd_Write_String_4bits@a
  2093     1512  3080               	movlw	128
  2094     1513  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2095     1514  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2096     1519                     l3772:
  2097                           
  2098                           ;main_M.c: 154:         if (distancia > 5){
  2099     1519  3040               	movlw	64
  2100     151A  00F3               	movwf	___flge@ff1+3
  2101     151B  30A0               	movlw	160
  2102     151C  00F2               	movwf	___flge@ff1+2
  2103     151D  3000               	movlw	0
  2104     151E  00F1               	movwf	___flge@ff1+1
  2105     151F  3000               	movlw	0
  2106     1520  00F0               	movwf	___flge@ff1
  2107     1521  1683               	bsf	3,5	;RP0=1, select bank1
  2108     1522  1303               	bcf	3,6	;RP1=0, select bank1
  2109     1523  084A               	movf	(_distancia+3)^(0+128),w
  2110     1524  00F7               	movwf	___flge@ff2+3
  2111     1525  0849               	movf	(_distancia+2)^(0+128),w
  2112     1526  00F6               	movwf	___flge@ff2+2
  2113     1527  0848               	movf	(_distancia+1)^(0+128),w
  2114     1528  00F5               	movwf	___flge@ff2+1
  2115     1529  0847               	movf	_distancia^(0+128),w
  2116     152A  00F4               	movwf	___flge@ff2
  2117     152B  120A  158A  2002  160A  118A  	fcall	___flge
  2118     1530  1803               	btfsc	3,0
  2119     1531  2D33               	goto	u5661
  2120     1532  2D34               	goto	u5660
  2121     1533                     u5661:
  2122     1533  2D5C               	goto	l3782
  2123     1534                     u5660:
  2124     1534                     l3774:
  2125                           
  2126                           ;main_M.c: 156:             PORTAbits.RA0 = 0;
  2127     1534  1283               	bcf	3,5	;RP0=0, select bank0
  2128     1535  1303               	bcf	3,6	;RP1=0, select bank0
  2129     1536  1005               	bcf	5,0	;volatile
  2130                           
  2131                           ;main_M.c: 157:             PORTAbits.RA1 = 1;
  2132     1537  1485               	bsf	5,1	;volatile
  2133                           
  2134                           ;main_M.c: 158:             PORTAbits.RA2 = 1;
  2135     1538  1505               	bsf	5,2	;volatile
  2136                           
  2137                           ;main_M.c: 159:             PORTAbits.RA3 = 0;
  2138     1539  1185               	bcf	5,3	;volatile
  2139     153A                     l3776:
  2140                           
  2141                           ;main_M.c: 160:             Lcd_Set_Cursor_4bits(2,7);
  2142     153A  3007               	movlw	7
  2143     153B  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2144     153C  3002               	movlw	2
  2145     153D  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2146     1542                     l3778:
  2147                           
  2148                           ;main_M.c: 161:             Lcd_Write_String_4bits("LIBRE");
  2149     1542  30AE               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2150     1543  00F5               	movwf	Lcd_Write_String_4bits@a
  2151     1544  3080               	movlw	128
  2152     1545  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2153     1546  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2154     154B                     l3780:
  2155                           
  2156                           ;main_M.c: 162:             Lcd_Set_Cursor_4bits(2,16);
  2157     154B  3010               	movlw	16
  2158     154C  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2159     154D  3002               	movlw	2
  2160     154E  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2161                           
  2162                           ;main_M.c: 163:             Lcd_Write_String_4bits("N");
  2163     1553  30C5               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2164     1554  00F5               	movwf	Lcd_Write_String_4bits@a
  2165     1555  3080               	movlw	128
  2166     1556  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2167     1557  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2168     155C                     l3782:
  2169                           
  2170                           ;main_M.c: 166:         if (linea == 1){
  2171     155C  1683               	bsf	3,5	;RP0=1, select bank1
  2172     155D  1303               	bcf	3,6	;RP1=0, select bank1
  2173     155E  034D               	decf	_linea^(0+128),w
  2174     155F  1D03               	btfss	3,2
  2175     1560  2D62               	goto	u5671
  2176     1561  2D63               	goto	u5670
  2177     1562                     u5671:
  2178     1562  2D7A               	goto	l3790
  2179     1563                     u5670:
  2180     1563                     l3784:
  2181                           
  2182                           ;main_M.c: 168:             PORTAbits.RA0 = 0;
  2183     1563  1283               	bcf	3,5	;RP0=0, select bank0
  2184     1564  1303               	bcf	3,6	;RP1=0, select bank0
  2185     1565  1005               	bcf	5,0	;volatile
  2186                           
  2187                           ;main_M.c: 169:             PORTAbits.RA1 = 1;
  2188     1566  1485               	bsf	5,1	;volatile
  2189                           
  2190                           ;main_M.c: 170:             PORTAbits.RA2 = 0;
  2191     1567  1105               	bcf	5,2	;volatile
  2192                           
  2193                           ;main_M.c: 171:             PORTAbits.RA3 = 0;
  2194     1568  1185               	bcf	5,3	;volatile
  2195     1569                     l3786:
  2196                           
  2197                           ;main_M.c: 172:             Lcd_Set_Cursor_4bits(2,16);
  2198     1569  3010               	movlw	16
  2199     156A  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2200     156B  3002               	movlw	2
  2201     156C  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2202     1571                     l3788:
  2203                           
  2204                           ;main_M.c: 173:             Lcd_Write_String_4bits("!");
  2205     1571  30C3               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2206     1572  00F5               	movwf	Lcd_Write_String_4bits@a
  2207     1573  3080               	movlw	128
  2208     1574  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2209     1575  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2210     157A                     l3790:
  2211                           
  2212                           ;main_M.c: 177:         if (linea == 2){
  2213     157A  3002               	movlw	2
  2214     157B  1683               	bsf	3,5	;RP0=1, select bank1
  2215     157C  1303               	bcf	3,6	;RP1=0, select bank1
  2216     157D  064D               	xorwf	_linea^(0+128),w
  2217     157E  1D03               	btfss	3,2
  2218     157F  2D81               	goto	u5681
  2219     1580  2D82               	goto	u5680
  2220     1581                     u5681:
  2221     1581  2D99               	goto	l3798
  2222     1582                     u5680:
  2223     1582                     l3792:
  2224                           
  2225                           ;main_M.c: 179:             PORTAbits.RA0 = 0;
  2226     1582  1283               	bcf	3,5	;RP0=0, select bank0
  2227     1583  1303               	bcf	3,6	;RP1=0, select bank0
  2228     1584  1005               	bcf	5,0	;volatile
  2229                           
  2230                           ;main_M.c: 180:             PORTAbits.RA1 = 0;
  2231     1585  1085               	bcf	5,1	;volatile
  2232                           
  2233                           ;main_M.c: 181:             PORTAbits.RA2 = 1;
  2234     1586  1505               	bsf	5,2	;volatile
  2235                           
  2236                           ;main_M.c: 182:             PORTAbits.RA3 = 0;
  2237     1587  1185               	bcf	5,3	;volatile
  2238     1588                     l3794:
  2239                           
  2240                           ;main_M.c: 183:             Lcd_Set_Cursor_4bits(2,16);
  2241     1588  3010               	movlw	16
  2242     1589  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2243     158A  3002               	movlw	2
  2244     158B  160A  158A  2593  160A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2245     1590                     l3796:
  2246                           
  2247                           ;main_M.c: 184:             Lcd_Write_String_4bits("!");
  2248     1590  30C3               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2249     1591  00F5               	movwf	Lcd_Write_String_4bits@a
  2250     1592  3080               	movlw	128
  2251     1593  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2252     1594  160A  158A  250D  160A  118A  	fcall	_Lcd_Write_String_4bits
  2253     1599                     l3798:
  2254                           
  2255                           ;main_M.c: 188:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2256     1599  301A               	movlw	26
  2257     159A  1683               	bsf	3,5	;RP0=1, select bank1
  2258     159B  1303               	bcf	3,6	;RP1=0, select bank1
  2259     159C  00C4               	movwf	(??_main^(0+128)+1)
  2260     159D  30F7               	movlw	247
  2261     159E  00C3               	movwf	??_main^(0+128)
  2262     159F                     u5757:
  2263     159F  0BC3               	decfsz	??_main^(0+128),f
  2264     15A0  2D9F               	goto	u5757
  2265     15A1  0BC4               	decfsz	(??_main^(0+128)+1),f
  2266     15A2  2D9F               	goto	u5757
  2267     15A3  2DA4               	nop2
  2268     15A4  2B91               	goto	l3698
  2269     15A5  120A  118A  2800   	ljmp	start
  2270     15A8                     __end_of_main:
  2271                           
  2272                           	psect	text1
  2273     01B0                     __ptext1:	
  2274 ;; *************** function _sprintf *****************
  2275 ;; Defined at:
  2276 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  sp              1    wreg     PTR unsigned char 
  2279 ;;		 -> distanciaLCD(16), 
  2280 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2281 ;;		 -> STR_1(16), 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2284 ;;		 -> distanciaLCD(16), 
  2285 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2286 ;;  tmpval          4   23[BANK1 ] struct .
  2287 ;;  val             4   17[BANK1 ] unsigned long 
  2288 ;;  prec            2   28[BANK1 ] int 
  2289 ;;  eexp            2   21[BANK1 ] int 
  2290 ;;  flag            2   15[BANK1 ] unsigned short 
  2291 ;;  cp              2    0        PTR const unsigned char 
  2292 ;;  len             2    0        unsigned int 
  2293 ;;  width           2    0        int 
  2294 ;;  c               1   34[BANK1 ] unsigned char 
  2295 ;;  ap              1   14[BANK1 ] PTR void [1]
  2296 ;;		 -> ?_sprintf(2), 
  2297 ;;  d               1    0        unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  2    0[BANK1 ] int 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       0       5       0       0
  2308 ;;      Locals:         0       0      25       0       0
  2309 ;;      Temps:          0       0       5       0       0
  2310 ;;      Totals:         0       0      35       0       0
  2311 ;;Total ram usage:       35 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 3
  2314 ;; This function calls:
  2315 ;;		___awdiv
  2316 ;;		___fladd
  2317 ;;		___fleq
  2318 ;;		___flge
  2319 ;;		___flmul
  2320 ;;		___flneg
  2321 ;;		___flsub
  2322 ;;		___fltol
  2323 ;;		___lldiv
  2324 ;;		___llmod
  2325 ;;		___wmul
  2326 ;;		___xxtofl
  2327 ;;		__div_to_l_
  2328 ;;		__tdiv_to_l_
  2329 ;;		_fround
  2330 ;;		_isdigit
  2331 ;;		_scale
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337     01B0                     _sprintf:	
  2338                           ;psect for function _sprintf
  2339                           
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2343                           ;sprintf@sp stored from wreg
  2344     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2345     01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2346     01B2  00BB               	movwf	sprintf@sp^(0+128)
  2347     01B3                     l3474:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2350     01B3  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2351     01B4  00AE               	movwf	sprintf@ap^(0+128)
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2354     01B5  2FDB               	goto	l3668
  2355     01B6                     l3476:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2358     01B6  3025               	movlw	37
  2359     01B7  0642               	xorwf	sprintf@c^(0+128),w
  2360     01B8  1903               	btfsc	3,2
  2361     01B9  29BB               	goto	u5261
  2362     01BA  29BC               	goto	u5260
  2363     01BB                     u5261:
  2364     01BB  29C6               	goto	l3482
  2365     01BC                     u5260:
  2366     01BC                     l3478:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2369     01BC  083B               	movf	sprintf@sp^(0+128),w
  2370     01BD  0084               	movwf	4
  2371     01BE  0842               	movf	sprintf@c^(0+128),w
  2372     01BF  1383               	bcf	3,7	;select IRP bank0
  2373     01C0  0080               	movwf	0
  2374     01C1                     l3480:
  2375     01C1  3001               	movlw	1
  2376     01C2  00A5               	movwf	??_sprintf^(0+128)
  2377     01C3  0825               	movf	??_sprintf^(0+128),w
  2378     01C4  07BB               	addwf	sprintf@sp^(0+128),f
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2381     01C5  2FDB               	goto	l3668
  2382     01C6                     l3482:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2385     01C6  01AF               	clrf	sprintf@flag^(0+128)
  2386     01C7  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2387     01C8                     l3484:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2390     01C8  0820               	movf	sprintf@f^(0+128),w
  2391     01C9  0084               	movwf	4
  2392     01CA  120A  118A  200D  120A  118A  	fcall	stringdir
  2393     01CF  3A2E               	xorlw	46
  2394     01D0  1D03               	skipz
  2395     01D1  29D3               	goto	u5271
  2396     01D2  29D4               	goto	u5270
  2397     01D3                     u5271:
  2398     01D3  2A19               	goto	l3500
  2399     01D4                     u5270:
  2400     01D4                     l3486:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2403     01D4  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2404     01D5                     l3488:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2407     01D5  3001               	movlw	1
  2408     01D6  00A5               	movwf	??_sprintf^(0+128)
  2409     01D7  0825               	movf	??_sprintf^(0+128),w
  2410     01D8  07A0               	addwf	sprintf@f^(0+128),f
  2411     01D9                     l3490:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2414     01D9  01BC               	clrf	sprintf@prec^(0+128)
  2415     01DA  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2418     01DB  2A08               	goto	l3498
  2419     01DC                     l3492:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2422     01DC  300A               	movlw	10
  2423     01DD  00F0               	movwf	___wmul@multiplier
  2424     01DE  3000               	movlw	0
  2425     01DF  00F1               	movwf	___wmul@multiplier+1
  2426     01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2427     01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2428     01E2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2429     01E3  00F3               	movwf	___wmul@multiplicand+1
  2430     01E4  083C               	movf	sprintf@prec^(0+128),w
  2431     01E5  00F2               	movwf	___wmul@multiplicand
  2432     01E6  160A  158A  23F3  120A  118A  	fcall	___wmul
  2433     01EB  0871               	movf	?___wmul+1,w
  2434     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2435     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2436     01EE  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2437     01EF  0870               	movf	?___wmul,w
  2438     01F0  00BC               	movwf	sprintf@prec^(0+128)
  2439     01F1                     l3494:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2442     01F1  0820               	movf	sprintf@f^(0+128),w
  2443     01F2  0084               	movwf	4
  2444     01F3  120A  118A  200D  120A  118A  	fcall	stringdir
  2445     01F8  3ED0               	addlw	208
  2446     01F9  00A5               	movwf	??_sprintf^(0+128)
  2447     01FA  30FF               	movlw	255
  2448     01FB  1803               	skipnc
  2449     01FC  3000               	movlw	0
  2450     01FD  00A6               	movwf	(??_sprintf^(0+128)+1)
  2451     01FE  0825               	movf	??_sprintf^(0+128),w
  2452     01FF  07BC               	addwf	sprintf@prec^(0+128),f
  2453     0200  1803               	skipnc
  2454     0201  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2455     0202  0826               	movf	(??_sprintf+1)^(0+128),w
  2456     0203  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2457     0204                     l3496:
  2458     0204  3001               	movlw	1
  2459     0205  00A5               	movwf	??_sprintf^(0+128)
  2460     0206  0825               	movf	??_sprintf^(0+128),w
  2461     0207  07A0               	addwf	sprintf@f^(0+128),f
  2462     0208                     l3498:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2465     0208  0820               	movf	sprintf@f^(0+128),w
  2466     0209  0084               	movwf	4
  2467     020A  120A  118A  200D  120A  118A  	fcall	stringdir
  2468     020F  160A  158A  235C  120A  118A  	fcall	_isdigit
  2469     0214  1803               	btfsc	3,0
  2470     0215  2A17               	goto	u5281
  2471     0216  2A18               	goto	u5280
  2472     0217                     u5281:
  2473     0217  29DC               	goto	l3492
  2474     0218                     u5280:
  2475     0218  2A1F               	goto	l3506
  2476     0219                     l3500:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2479     0219  01BC               	clrf	sprintf@prec^(0+128)
  2480     021A  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2481     021B                     l3502:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2484     021B  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2485     021C  2A1F               	goto	l3506
  2486     021D                     l388:	
  2487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2488                           
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2491     021D  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2494     021E  2A3B               	goto	l3508
  2495     021F                     l3506:
  2496     021F  3001               	movlw	1
  2497     0220  1683               	bsf	3,5	;RP0=1, select bank1
  2498     0221  1303               	bcf	3,6	;RP1=0, select bank1
  2499     0222  07A0               	addwf	sprintf@f^(0+128),f
  2500     0223  30FF               	movlw	-1
  2501     0224  0720               	addwf	sprintf@f^(0+128),w
  2502     0225  0084               	movwf	4
  2503     0226  120A  118A  200D  120A  118A  	fcall	stringdir
  2504     022B  00C2               	movwf	sprintf@c^(0+128)
  2505     022C  00A5               	movwf	??_sprintf^(0+128)
  2506     022D  01A6               	clrf	(??_sprintf^(0+128)+1)
  2507                           
  2508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2509                           ; Switch size 1, requested type "simple"
  2510                           ; Number of cases is 1, Range of values is 0 to 0
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte            4     3 (average)
  2514                           ; direct_byte           11     8 (fixed)
  2515                           ; jumptable            260     6 (fixed)
  2516                           ;	Chosen strategy is simple_byte
  2517     022E  0826               	movf	(??_sprintf+1)^(0+128),w
  2518     022F  3A00               	xorlw	0	; case 0
  2519     0230  1903               	skipnz
  2520     0231  2A33               	goto	l3850
  2521     0232  2FDB               	goto	l3668
  2522     0233                     l3850:
  2523                           
  2524                           ; Switch size 1, requested type "simple"
  2525                           ; Number of cases is 2, Range of values is 0 to 102
  2526                           ; switch strategies available:
  2527                           ; Name         Instructions Cycles
  2528                           ; simple_byte            7     4 (average)
  2529                           ; jumptable            260     6 (fixed)
  2530                           ;	Chosen strategy is simple_byte
  2531     0233  0825               	movf	??_sprintf^(0+128),w
  2532     0234  3A00               	xorlw	0	; case 0
  2533     0235  1903               	skipnz
  2534     0236  2FEB               	goto	l3670
  2535     0237  3A66               	xorlw	102	; case 102
  2536     0238  1903               	skipnz
  2537     0239  2A1D               	goto	l388
  2538     023A  2FDB               	goto	l3668
  2539     023B                     l3508:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2542     023B  3000               	movlw	0
  2543     023C  052F               	andwf	sprintf@flag^(0+128),w
  2544     023D  00A5               	movwf	??_sprintf^(0+128)
  2545     023E  3007               	movlw	7
  2546     023F  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2547     0240  00A6               	movwf	(??_sprintf+1)^(0+128)
  2548     0241  0825               	movf	??_sprintf^(0+128),w
  2549     0242  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2550     0243  1903               	btfsc	3,2
  2551     0244  2A46               	goto	u5291
  2552     0245  2A47               	goto	u5290
  2553     0246                     u5291:
  2554     0246  2F98               	goto	l3650
  2555     0247                     u5290:
  2556     0247                     l3510:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2559     0247  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2560     0248  2A4A               	goto	u5301
  2561     0249  2A4B               	goto	u5300
  2562     024A                     u5301:
  2563     024A  2A4F               	goto	l3514
  2564     024B                     u5300:
  2565     024B                     l3512:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2568     024B  3006               	movlw	6
  2569     024C  00BC               	movwf	sprintf@prec^(0+128)
  2570     024D  3000               	movlw	0
  2571     024E  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2572     024F                     l3514:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2575     024F  082E               	movf	sprintf@ap^(0+128),w
  2576     0250  0084               	movwf	4
  2577     0251  1383               	bcf	3,7	;select IRP bank0
  2578     0252  0800               	movf	0,w
  2579     0253  00BE               	movwf	sprintf@fval^(0+128)
  2580     0254  0A84               	incf	4,f
  2581     0255  0800               	movf	0,w
  2582     0256  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2583     0257  0A84               	incf	4,f
  2584     0258  0800               	movf	0,w
  2585     0259  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2586     025A  0A84               	incf	4,f
  2587     025B  0800               	movf	0,w
  2588     025C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2589     025D                     l3516:
  2590     025D  3004               	movlw	4
  2591     025E  00A5               	movwf	??_sprintf^(0+128)
  2592     025F  0825               	movf	??_sprintf^(0+128),w
  2593     0260  07AE               	addwf	sprintf@ap^(0+128),f
  2594     0261                     l3518:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2597     0261  0841               	movf	(sprintf@fval+3)^(0+128),w
  2598     0262  00F3               	movwf	___flge@ff1+3
  2599     0263  0840               	movf	(sprintf@fval+2)^(0+128),w
  2600     0264  00F2               	movwf	___flge@ff1+2
  2601     0265  083F               	movf	(sprintf@fval+1)^(0+128),w
  2602     0266  00F1               	movwf	___flge@ff1+1
  2603     0267  083E               	movf	sprintf@fval^(0+128),w
  2604     0268  00F0               	movwf	___flge@ff1
  2605     0269  3000               	movlw	0
  2606     026A  00F7               	movwf	___flge@ff2+3
  2607     026B  3000               	movlw	0
  2608     026C  00F6               	movwf	___flge@ff2+2
  2609     026D  3000               	movlw	0
  2610     026E  00F5               	movwf	___flge@ff2+1
  2611     026F  3000               	movlw	0
  2612     0270  00F4               	movwf	___flge@ff2
  2613     0271  120A  158A  2002  120A  118A  	fcall	___flge
  2614     0276  1803               	btfsc	3,0
  2615     0277  2A79               	goto	u5311
  2616     0278  2A7A               	goto	u5310
  2617     0279                     u5311:
  2618     0279  2A97               	goto	l3524
  2619     027A                     u5310:
  2620     027A                     l3520:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2623     027A  1683               	bsf	3,5	;RP0=1, select bank1
  2624     027B  1303               	bcf	3,6	;RP1=0, select bank1
  2625     027C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2626     027D  00F3               	movwf	___flneg@f1+3
  2627     027E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2628     027F  00F2               	movwf	___flneg@f1+2
  2629     0280  083F               	movf	(sprintf@fval+1)^(0+128),w
  2630     0281  00F1               	movwf	___flneg@f1+1
  2631     0282  083E               	movf	sprintf@fval^(0+128),w
  2632     0283  00F0               	movwf	___flneg@f1
  2633     0284  160A  158A  232A  120A  118A  	fcall	___flneg
  2634     0289  0873               	movf	?___flneg+3,w
  2635     028A  1683               	bsf	3,5	;RP0=1, select bank1
  2636     028B  1303               	bcf	3,6	;RP1=0, select bank1
  2637     028C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2638     028D  0872               	movf	?___flneg+2,w
  2639     028E  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2640     028F  0871               	movf	?___flneg+1,w
  2641     0290  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2642     0291  0870               	movf	?___flneg,w
  2643     0292  00BE               	movwf	sprintf@fval^(0+128)
  2644     0293                     l3522:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2647     0293  3003               	movlw	3
  2648     0294  04AF               	iorwf	sprintf@flag^(0+128),f
  2649     0295  3000               	movlw	0
  2650     0296  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2651     0297                     l3524:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2654     0297  1683               	bsf	3,5	;RP0=1, select bank1
  2655     0298  1303               	bcf	3,6	;RP1=0, select bank1
  2656     0299  01B5               	clrf	sprintf@eexp^(0+128)
  2657     029A  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2658     029B                     l3526:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2661     029B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2662     029C  00F3               	movwf	___fleq@ff1+3
  2663     029D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2664     029E  00F2               	movwf	___fleq@ff1+2
  2665     029F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2666     02A0  00F1               	movwf	___fleq@ff1+1
  2667     02A1  083E               	movf	sprintf@fval^(0+128),w
  2668     02A2  00F0               	movwf	___fleq@ff1
  2669     02A3  3000               	movlw	0
  2670     02A4  00F7               	movwf	___fleq@ff2+3
  2671     02A5  3000               	movlw	0
  2672     02A6  00F6               	movwf	___fleq@ff2+2
  2673     02A7  3000               	movlw	0
  2674     02A8  00F5               	movwf	___fleq@ff2+1
  2675     02A9  3000               	movlw	0
  2676     02AA  00F4               	movwf	___fleq@ff2
  2677     02AB  160A  158A  25D9  120A  118A  	fcall	___fleq
  2678     02B0  1803               	btfsc	3,0
  2679     02B1  2AB3               	goto	u5321
  2680     02B2  2AB4               	goto	u5320
  2681     02B3                     u5321:
  2682     02B3  2BA4               	goto	l3552
  2683     02B4                     u5320:
  2684     02B4                     l3528:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2687     02B4  1003               	clrc
  2688     02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2689     02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2690     02B7  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2691     02B8  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2692     02B9  3E82               	addlw	130
  2693     02BA  00B5               	movwf	sprintf@eexp^(0+128)
  2694     02BB  30FF               	movlw	255
  2695     02BC  1803               	skipnc
  2696     02BD  3000               	movlw	0
  2697     02BE  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2698     02BF                     l3530:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2701     02BF  30FF               	movlw	255
  2702     02C0  07B5               	addwf	sprintf@eexp^(0+128),f
  2703     02C1  1803               	skipnc
  2704     02C2  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2705     02C3  30FF               	movlw	255
  2706     02C4  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2707     02C5                     l3532:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2710     02C5  3003               	movlw	3
  2711     02C6  00F0               	movwf	___wmul@multiplier
  2712     02C7  3000               	movlw	0
  2713     02C8  00F1               	movwf	___wmul@multiplier+1
  2714     02C9  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2715     02CA  00F3               	movwf	___wmul@multiplicand+1
  2716     02CB  0835               	movf	sprintf@eexp^(0+128),w
  2717     02CC  00F2               	movwf	___wmul@multiplicand
  2718     02CD  160A  158A  23F3  120A  118A  	fcall	___wmul
  2719     02D2  0871               	movf	?___wmul+1,w
  2720     02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2721     02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2722     02D5  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2723     02D6  0870               	movf	?___wmul,w
  2724     02D7  00B5               	movwf	sprintf@eexp^(0+128)
  2725     02D8                     l3534:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2728     02D8  300A               	movlw	10
  2729     02D9  00F7               	movwf	___awdiv@divisor
  2730     02DA  3000               	movlw	0
  2731     02DB  00F8               	movwf	___awdiv@divisor+1
  2732     02DC  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2733     02DD  00FA               	movwf	___awdiv@dividend+1
  2734     02DE  0835               	movf	sprintf@eexp^(0+128),w
  2735     02DF  00F9               	movwf	___awdiv@dividend
  2736     02E0  160A  158A  2797  120A  118A  	fcall	___awdiv
  2737     02E5  0878               	movf	?___awdiv+1,w
  2738     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2739     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2740     02E8  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2741     02E9  0877               	movf	?___awdiv,w
  2742     02EA  00B5               	movwf	sprintf@eexp^(0+128)
  2743     02EB                     l3536:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2746     02EB  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2747     02EC  2AEE               	goto	u5331
  2748     02ED  2AEF               	goto	u5330
  2749     02EE                     u5331:
  2750     02EE  2AF5               	goto	l3540
  2751     02EF                     u5330:
  2752     02EF                     l3538:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2755     02EF  30FF               	movlw	255
  2756     02F0  07B5               	addwf	sprintf@eexp^(0+128),f
  2757     02F1  1803               	skipnc
  2758     02F2  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2759     02F3  30FF               	movlw	255
  2760     02F4  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2761     02F5                     l3540:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2764     02F5  0335               	decf	sprintf@eexp^(0+128),w
  2765     02F6  3AFF               	xorlw	255
  2766     02F7  120A  158A  24A1  120A  118A  	fcall	_scale
  2767     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2768     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2769     02FE  0841               	movf	?_scale+3,w
  2770     02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2771     0300  1303               	bcf	3,6	;RP1=0, select bank1
  2772     0301  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2773     0302  1283               	bcf	3,5	;RP0=0, select bank0
  2774     0303  1303               	bcf	3,6	;RP1=0, select bank0
  2775     0304  0840               	movf	?_scale+2,w
  2776     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2777     0306  1303               	bcf	3,6	;RP1=0, select bank1
  2778     0307  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2779     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2780     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2781     030A  083F               	movf	?_scale+1,w
  2782     030B  1683               	bsf	3,5	;RP0=1, select bank1
  2783     030C  1303               	bcf	3,6	;RP1=0, select bank1
  2784     030D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2785     030E  1283               	bcf	3,5	;RP0=0, select bank0
  2786     030F  1303               	bcf	3,6	;RP1=0, select bank0
  2787     0310  083E               	movf	?_scale,w
  2788     0311  1683               	bsf	3,5	;RP0=1, select bank1
  2789     0312  1303               	bcf	3,6	;RP1=0, select bank1
  2790     0313  00B7               	movwf	sprintf@tmpval^(0+128)
  2791     0314                     l3542:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2794     0314  0841               	movf	(sprintf@fval+3)^(0+128),w
  2795     0315  1283               	bcf	3,5	;RP0=0, select bank0
  2796     0316  1303               	bcf	3,6	;RP1=0, select bank0
  2797     0317  00A7               	movwf	___flmul@b+3
  2798     0318  1683               	bsf	3,5	;RP0=1, select bank1
  2799     0319  1303               	bcf	3,6	;RP1=0, select bank1
  2800     031A  0840               	movf	(sprintf@fval+2)^(0+128),w
  2801     031B  1283               	bcf	3,5	;RP0=0, select bank0
  2802     031C  1303               	bcf	3,6	;RP1=0, select bank0
  2803     031D  00A6               	movwf	___flmul@b+2
  2804     031E  1683               	bsf	3,5	;RP0=1, select bank1
  2805     031F  1303               	bcf	3,6	;RP1=0, select bank1
  2806     0320  083F               	movf	(sprintf@fval+1)^(0+128),w
  2807     0321  1283               	bcf	3,5	;RP0=0, select bank0
  2808     0322  1303               	bcf	3,6	;RP1=0, select bank0
  2809     0323  00A5               	movwf	___flmul@b+1
  2810     0324  1683               	bsf	3,5	;RP0=1, select bank1
  2811     0325  1303               	bcf	3,6	;RP1=0, select bank1
  2812     0326  083E               	movf	sprintf@fval^(0+128),w
  2813     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0328  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0329  00A4               	movwf	___flmul@b
  2816     032A  1683               	bsf	3,5	;RP0=1, select bank1
  2817     032B  1303               	bcf	3,6	;RP1=0, select bank1
  2818     032C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2819     032D  1283               	bcf	3,5	;RP0=0, select bank0
  2820     032E  1303               	bcf	3,6	;RP1=0, select bank0
  2821     032F  00AB               	movwf	___flmul@a+3
  2822     0330  1683               	bsf	3,5	;RP0=1, select bank1
  2823     0331  1303               	bcf	3,6	;RP1=0, select bank1
  2824     0332  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2825     0333  1283               	bcf	3,5	;RP0=0, select bank0
  2826     0334  1303               	bcf	3,6	;RP1=0, select bank0
  2827     0335  00AA               	movwf	___flmul@a+2
  2828     0336  1683               	bsf	3,5	;RP0=1, select bank1
  2829     0337  1303               	bcf	3,6	;RP1=0, select bank1
  2830     0338  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2831     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2832     033A  1303               	bcf	3,6	;RP1=0, select bank0
  2833     033B  00A9               	movwf	___flmul@a+1
  2834     033C  1683               	bsf	3,5	;RP0=1, select bank1
  2835     033D  1303               	bcf	3,6	;RP1=0, select bank1
  2836     033E  0837               	movf	sprintf@tmpval^(0+128),w
  2837     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2838     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2839     0341  00A8               	movwf	___flmul@a
  2840     0342  120A  158A  215C  120A  118A  	fcall	___flmul
  2841     0347  1283               	bcf	3,5	;RP0=0, select bank0
  2842     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2843     0349  0827               	movf	?___flmul+3,w
  2844     034A  1683               	bsf	3,5	;RP0=1, select bank1
  2845     034B  1303               	bcf	3,6	;RP1=0, select bank1
  2846     034C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2847     034D  1283               	bcf	3,5	;RP0=0, select bank0
  2848     034E  1303               	bcf	3,6	;RP1=0, select bank0
  2849     034F  0826               	movf	?___flmul+2,w
  2850     0350  1683               	bsf	3,5	;RP0=1, select bank1
  2851     0351  1303               	bcf	3,6	;RP1=0, select bank1
  2852     0352  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2853     0353  1283               	bcf	3,5	;RP0=0, select bank0
  2854     0354  1303               	bcf	3,6	;RP1=0, select bank0
  2855     0355  0825               	movf	?___flmul+1,w
  2856     0356  1683               	bsf	3,5	;RP0=1, select bank1
  2857     0357  1303               	bcf	3,6	;RP1=0, select bank1
  2858     0358  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2859     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2860     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2861     035B  0824               	movf	?___flmul,w
  2862     035C  1683               	bsf	3,5	;RP0=1, select bank1
  2863     035D  1303               	bcf	3,6	;RP1=0, select bank1
  2864     035E  00B7               	movwf	sprintf@tmpval^(0+128)
  2865     035F                     l3544:
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2868     035F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2869     0360  00F3               	movwf	___flge@ff1+3
  2870     0361  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2871     0362  00F2               	movwf	___flge@ff1+2
  2872     0363  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2873     0364  00F1               	movwf	___flge@ff1+1
  2874     0365  0837               	movf	sprintf@tmpval^(0+128),w
  2875     0366  00F0               	movwf	___flge@ff1
  2876     0367  303F               	movlw	63
  2877     0368  00F7               	movwf	___flge@ff2+3
  2878     0369  3080               	movlw	128
  2879     036A  00F6               	movwf	___flge@ff2+2
  2880     036B  3000               	movlw	0
  2881     036C  00F5               	movwf	___flge@ff2+1
  2882     036D  3000               	movlw	0
  2883     036E  00F4               	movwf	___flge@ff2
  2884     036F  120A  158A  2002  120A  118A  	fcall	___flge
  2885     0374  1803               	btfsc	3,0
  2886     0375  2B77               	goto	u5341
  2887     0376  2B78               	goto	u5340
  2888     0377                     u5341:
  2889     0377  2B81               	goto	l3548
  2890     0378                     u5340:
  2891     0378                     l3546:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2894     0378  30FF               	movlw	255
  2895     0379  1683               	bsf	3,5	;RP0=1, select bank1
  2896     037A  1303               	bcf	3,6	;RP1=0, select bank1
  2897     037B  07B5               	addwf	sprintf@eexp^(0+128),f
  2898     037C  1803               	skipnc
  2899     037D  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2900     037E  30FF               	movlw	255
  2901     037F  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2902     0380  2BA4               	goto	l3552
  2903     0381                     l3548:
  2904     0381  1683               	bsf	3,5	;RP0=1, select bank1
  2905     0382  1303               	bcf	3,6	;RP1=0, select bank1
  2906     0383  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2907     0384  00F3               	movwf	___flge@ff1+3
  2908     0385  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2909     0386  00F2               	movwf	___flge@ff1+2
  2910     0387  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2911     0388  00F1               	movwf	___flge@ff1+1
  2912     0389  0837               	movf	sprintf@tmpval^(0+128),w
  2913     038A  00F0               	movwf	___flge@ff1
  2914     038B  3041               	movlw	65
  2915     038C  00F7               	movwf	___flge@ff2+3
  2916     038D  3020               	movlw	32
  2917     038E  00F6               	movwf	___flge@ff2+2
  2918     038F  3000               	movlw	0
  2919     0390  00F5               	movwf	___flge@ff2+1
  2920     0391  3000               	movlw	0
  2921     0392  00F4               	movwf	___flge@ff2
  2922     0393  120A  158A  2002  120A  118A  	fcall	___flge
  2923     0398  1C03               	btfss	3,0
  2924     0399  2B9B               	goto	u5351
  2925     039A  2B9C               	goto	u5350
  2926     039B                     u5351:
  2927     039B  2BA4               	goto	l3552
  2928     039C                     u5350:
  2929     039C                     l3550:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2932     039C  3001               	movlw	1
  2933     039D  1683               	bsf	3,5	;RP0=1, select bank1
  2934     039E  1303               	bcf	3,6	;RP1=0, select bank1
  2935     039F  07B5               	addwf	sprintf@eexp^(0+128),f
  2936     03A0  1803               	skipnc
  2937     03A1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2938     03A2  3000               	movlw	0
  2939     03A3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2940     03A4                     l3552:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2943     03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2944     03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2945     03A6  083D               	movf	(sprintf@prec+1)^(0+128),w
  2946     03A7  3A80               	xorlw	128
  2947     03A8  00FF               	movwf	btemp+1
  2948     03A9  3080               	movlw	128
  2949     03AA  027F               	subwf	btemp+1,w
  2950     03AB  1D03               	skipz
  2951     03AC  2BAF               	goto	u5365
  2952     03AD  300D               	movlw	13
  2953     03AE  023C               	subwf	sprintf@prec^(0+128),w
  2954     03AF                     u5365:
  2955     03AF  1803               	skipnc
  2956     03B0  2BB2               	goto	u5361
  2957     03B1  2BB3               	goto	u5360
  2958     03B2                     u5361:
  2959     03B2  2BFA               	goto	l3556
  2960     03B3                     u5360:
  2961     03B3                     l3554:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2964     03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2965     03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2966     03B5  083C               	movf	sprintf@prec^(0+128),w
  2967     03B6  160A  118A  215E  120A  118A  	fcall	_fround
  2968     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2969     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2970     03BD  0841               	movf	?_fround+3,w
  2971     03BE  00D5               	movwf	___fladd@b+3
  2972     03BF  0840               	movf	?_fround+2,w
  2973     03C0  00D4               	movwf	___fladd@b+2
  2974     03C1  083F               	movf	?_fround+1,w
  2975     03C2  00D3               	movwf	___fladd@b+1
  2976     03C3  083E               	movf	?_fround,w
  2977     03C4  00D2               	movwf	___fladd@b
  2978     03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2979     03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2980     03C7  0841               	movf	(sprintf@fval+3)^(0+128),w
  2981     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2982     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2983     03CA  00D9               	movwf	___fladd@a+3
  2984     03CB  1683               	bsf	3,5	;RP0=1, select bank1
  2985     03CC  1303               	bcf	3,6	;RP1=0, select bank1
  2986     03CD  0840               	movf	(sprintf@fval+2)^(0+128),w
  2987     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2988     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2989     03D0  00D8               	movwf	___fladd@a+2
  2990     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2991     03D2  1303               	bcf	3,6	;RP1=0, select bank1
  2992     03D3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2993     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2994     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2995     03D6  00D7               	movwf	___fladd@a+1
  2996     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2997     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2998     03D9  083E               	movf	sprintf@fval^(0+128),w
  2999     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3000     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3001     03DC  00D6               	movwf	___fladd@a
  3002     03DD  160A  118A  25A8  120A  118A  	fcall	___fladd
  3003     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3004     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3005     03E4  0855               	movf	?___fladd+3,w
  3006     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  3007     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  3008     03E7  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3009     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3010     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3011     03EA  0854               	movf	?___fladd+2,w
  3012     03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3013     03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3014     03ED  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3015     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3016     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3017     03F0  0853               	movf	?___fladd+1,w
  3018     03F1  1683               	bsf	3,5	;RP0=1, select bank1
  3019     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  3020     03F3  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3021     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3022     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3023     03F6  0852               	movf	?___fladd,w
  3024     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  3025     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  3026     03F9  00BE               	movwf	sprintf@fval^(0+128)
  3027     03FA                     l3556:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3030     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3031     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3032     03FC  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3033     03FD  3A80               	xorlw	128
  3034     03FE  00FF               	movwf	btemp+1
  3035     03FF  3080               	movlw	128
  3036     0400  027F               	subwf	btemp+1,w
  3037     0401  1D03               	skipz
  3038     0402  2C05               	goto	u5375
  3039     0403  300A               	movlw	10
  3040     0404  0235               	subwf	sprintf@eexp^(0+128),w
  3041     0405                     u5375:
  3042     0405  1803               	skipnc
  3043     0406  2C08               	goto	u5371
  3044     0407  2C09               	goto	u5370
  3045     0408                     u5371:
  3046     0408  2C5A               	goto	l3564
  3047     0409                     u5370:
  3048     0409                     l3558:
  3049     0409  1683               	bsf	3,5	;RP0=1, select bank1
  3050     040A  1303               	bcf	3,6	;RP1=0, select bank1
  3051     040B  0841               	movf	(sprintf@fval+3)^(0+128),w
  3052     040C  00F3               	movwf	___fleq@ff1+3
  3053     040D  0840               	movf	(sprintf@fval+2)^(0+128),w
  3054     040E  00F2               	movwf	___fleq@ff1+2
  3055     040F  083F               	movf	(sprintf@fval+1)^(0+128),w
  3056     0410  00F1               	movwf	___fleq@ff1+1
  3057     0411  083E               	movf	sprintf@fval^(0+128),w
  3058     0412  00F0               	movwf	___fleq@ff1
  3059     0413  3000               	movlw	0
  3060     0414  00F7               	movwf	___fleq@ff2+3
  3061     0415  3000               	movlw	0
  3062     0416  00F6               	movwf	___fleq@ff2+2
  3063     0417  3000               	movlw	0
  3064     0418  00F5               	movwf	___fleq@ff2+1
  3065     0419  3000               	movlw	0
  3066     041A  00F4               	movwf	___fleq@ff2
  3067     041B  160A  158A  25D9  120A  118A  	fcall	___fleq
  3068     0420  1803               	btfsc	3,0
  3069     0421  2C23               	goto	u5381
  3070     0422  2C24               	goto	u5380
  3071     0423                     u5381:
  3072     0423  2CCC               	goto	l3578
  3073     0424                     u5380:
  3074     0424                     l3560:
  3075     0424  1683               	bsf	3,5	;RP0=1, select bank1
  3076     0425  1303               	bcf	3,6	;RP1=0, select bank1
  3077     0426  0841               	movf	(sprintf@fval+3)^(0+128),w
  3078     0427  1283               	bcf	3,5	;RP0=0, select bank0
  3079     0428  1303               	bcf	3,6	;RP1=0, select bank0
  3080     0429  00D4               	movwf	___fltol@f1+3
  3081     042A  1683               	bsf	3,5	;RP0=1, select bank1
  3082     042B  1303               	bcf	3,6	;RP1=0, select bank1
  3083     042C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3084     042D  1283               	bcf	3,5	;RP0=0, select bank0
  3085     042E  1303               	bcf	3,6	;RP1=0, select bank0
  3086     042F  00D3               	movwf	___fltol@f1+2
  3087     0430  1683               	bsf	3,5	;RP0=1, select bank1
  3088     0431  1303               	bcf	3,6	;RP1=0, select bank1
  3089     0432  083F               	movf	(sprintf@fval+1)^(0+128),w
  3090     0433  1283               	bcf	3,5	;RP0=0, select bank0
  3091     0434  1303               	bcf	3,6	;RP1=0, select bank0
  3092     0435  00D2               	movwf	___fltol@f1+1
  3093     0436  1683               	bsf	3,5	;RP0=1, select bank1
  3094     0437  1303               	bcf	3,6	;RP1=0, select bank1
  3095     0438  083E               	movf	sprintf@fval^(0+128),w
  3096     0439  1283               	bcf	3,5	;RP0=0, select bank0
  3097     043A  1303               	bcf	3,6	;RP1=0, select bank0
  3098     043B  00D1               	movwf	___fltol@f1
  3099     043C  160A  118A  202F  120A  118A  	fcall	___fltol
  3100     0441  1283               	bcf	3,5	;RP0=0, select bank0
  3101     0442  1303               	bcf	3,6	;RP1=0, select bank0
  3102     0443  0854               	movf	?___fltol+3,w
  3103     0444  0453               	iorwf	?___fltol+2,w
  3104     0445  0452               	iorwf	?___fltol+1,w
  3105     0446  0451               	iorwf	?___fltol,w
  3106     0447  1D03               	skipz
  3107     0448  2C4A               	goto	u5391
  3108     0449  2C4B               	goto	u5390
  3109     044A                     u5391:
  3110     044A  2CCC               	goto	l3578
  3111     044B                     u5390:
  3112     044B                     l3562:
  3113     044B  1683               	bsf	3,5	;RP0=1, select bank1
  3114     044C  1303               	bcf	3,6	;RP1=0, select bank1
  3115     044D  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3116     044E  3A80               	xorlw	128
  3117     044F  00FF               	movwf	btemp+1
  3118     0450  3080               	movlw	128
  3119     0451  027F               	subwf	btemp+1,w
  3120     0452  1D03               	skipz
  3121     0453  2C56               	goto	u5405
  3122     0454  3002               	movlw	2
  3123     0455  0235               	subwf	sprintf@eexp^(0+128),w
  3124     0456                     u5405:
  3125     0456  1C03               	skipc
  3126     0457  2C59               	goto	u5401
  3127     0458  2C5A               	goto	u5400
  3128     0459                     u5401:
  3129     0459  2CCC               	goto	l3578
  3130     045A                     u5400:
  3131     045A                     l3564:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3134     045A  1683               	bsf	3,5	;RP0=1, select bank1
  3135     045B  1303               	bcf	3,6	;RP1=0, select bank1
  3136     045C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3137     045D  00F3               	movwf	___flge@ff1+3
  3138     045E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3139     045F  00F2               	movwf	___flge@ff1+2
  3140     0460  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3141     0461  00F1               	movwf	___flge@ff1+1
  3142     0462  0837               	movf	sprintf@tmpval^(0+128),w
  3143     0463  00F0               	movwf	___flge@ff1
  3144     0464  3040               	movlw	64
  3145     0465  00F7               	movwf	___flge@ff2+3
  3146     0466  3089               	movlw	137
  3147     0467  00F6               	movwf	___flge@ff2+2
  3148     0468  3070               	movlw	112
  3149     0469  00F5               	movwf	___flge@ff2+1
  3150     046A  305F               	movlw	95
  3151     046B  00F4               	movwf	___flge@ff2
  3152     046C  120A  158A  2002  120A  118A  	fcall	___flge
  3153     0471  1803               	btfsc	3,0
  3154     0472  2C74               	goto	u5411
  3155     0473  2C75               	goto	u5410
  3156     0474                     u5411:
  3157     0474  2C7E               	goto	l3568
  3158     0475                     u5410:
  3159     0475                     l3566:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3162     0475  30F7               	movlw	247
  3163     0476  1683               	bsf	3,5	;RP0=1, select bank1
  3164     0477  1303               	bcf	3,6	;RP1=0, select bank1
  3165     0478  07B5               	addwf	sprintf@eexp^(0+128),f
  3166     0479  1803               	skipnc
  3167     047A  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3168     047B  30FF               	movlw	255
  3169     047C  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3172     047D  2C86               	goto	l3570
  3173     047E                     l3568:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3176     047E  30F8               	movlw	248
  3177     047F  1683               	bsf	3,5	;RP0=1, select bank1
  3178     0480  1303               	bcf	3,6	;RP1=0, select bank1
  3179     0481  07B5               	addwf	sprintf@eexp^(0+128),f
  3180     0482  1803               	skipnc
  3181     0483  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3182     0484  30FF               	movlw	255
  3183     0485  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3184     0486                     l3570:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3187     0486  0835               	movf	sprintf@eexp^(0+128),w
  3188     0487  120A  158A  24A1  120A  118A  	fcall	_scale
  3189     048C  1283               	bcf	3,5	;RP0=0, select bank0
  3190     048D  1303               	bcf	3,6	;RP1=0, select bank0
  3191     048E  0841               	movf	?_scale+3,w
  3192     048F  1683               	bsf	3,5	;RP0=1, select bank1
  3193     0490  1303               	bcf	3,6	;RP1=0, select bank1
  3194     0491  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3195     0492  1283               	bcf	3,5	;RP0=0, select bank0
  3196     0493  1303               	bcf	3,6	;RP1=0, select bank0
  3197     0494  0840               	movf	?_scale+2,w
  3198     0495  1683               	bsf	3,5	;RP0=1, select bank1
  3199     0496  1303               	bcf	3,6	;RP1=0, select bank1
  3200     0497  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3201     0498  1283               	bcf	3,5	;RP0=0, select bank0
  3202     0499  1303               	bcf	3,6	;RP1=0, select bank0
  3203     049A  083F               	movf	?_scale+1,w
  3204     049B  1683               	bsf	3,5	;RP0=1, select bank1
  3205     049C  1303               	bcf	3,6	;RP1=0, select bank1
  3206     049D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3207     049E  1283               	bcf	3,5	;RP0=0, select bank0
  3208     049F  1303               	bcf	3,6	;RP1=0, select bank0
  3209     04A0  083E               	movf	?_scale,w
  3210     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  3211     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  3212     04A3  00B7               	movwf	sprintf@tmpval^(0+128)
  3213     04A4                     l3572:
  3214     04A4  0841               	movf	(sprintf@fval+3)^(0+128),w
  3215     04A5  00F3               	movwf	__div_to_l_@f1+3
  3216     04A6  0840               	movf	(sprintf@fval+2)^(0+128),w
  3217     04A7  00F2               	movwf	__div_to_l_@f1+2
  3218     04A8  083F               	movf	(sprintf@fval+1)^(0+128),w
  3219     04A9  00F1               	movwf	__div_to_l_@f1+1
  3220     04AA  083E               	movf	sprintf@fval^(0+128),w
  3221     04AB  00F0               	movwf	__div_to_l_@f1
  3222     04AC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3223     04AD  00F7               	movwf	__div_to_l_@f2+3
  3224     04AE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3225     04AF  00F6               	movwf	__div_to_l_@f2+2
  3226     04B0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3227     04B1  00F5               	movwf	__div_to_l_@f2+1
  3228     04B2  0837               	movf	sprintf@tmpval^(0+128),w
  3229     04B3  00F4               	movwf	__div_to_l_@f2
  3230     04B4  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  3231     04B9  0873               	movf	?__div_to_l_+3,w
  3232     04BA  1683               	bsf	3,5	;RP0=1, select bank1
  3233     04BB  1303               	bcf	3,6	;RP1=0, select bank1
  3234     04BC  00B4               	movwf	(sprintf@val+3)^(0+128)
  3235     04BD  0872               	movf	?__div_to_l_+2,w
  3236     04BE  00B3               	movwf	(sprintf@val+2)^(0+128)
  3237     04BF  0871               	movf	?__div_to_l_+1,w
  3238     04C0  00B2               	movwf	(sprintf@val+1)^(0+128)
  3239     04C1  0870               	movf	?__div_to_l_,w
  3240     04C2  00B1               	movwf	sprintf@val^(0+128)
  3241     04C3                     l3576:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3244     04C3  3000               	movlw	0
  3245     04C4  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3246     04C5  3000               	movlw	0
  3247     04C6  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3248     04C7  3000               	movlw	0
  3249     04C8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3250     04C9  3000               	movlw	0
  3251     04CA  00BE               	movwf	sprintf@fval^(0+128)
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3254     04CB  2D50               	goto	l3584
  3255     04CC                     l3578:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3258     04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3259     04CD  1303               	bcf	3,6	;RP1=0, select bank1
  3260     04CE  0841               	movf	(sprintf@fval+3)^(0+128),w
  3261     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  3262     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  3263     04D1  00D4               	movwf	___fltol@f1+3
  3264     04D2  1683               	bsf	3,5	;RP0=1, select bank1
  3265     04D3  1303               	bcf	3,6	;RP1=0, select bank1
  3266     04D4  0840               	movf	(sprintf@fval+2)^(0+128),w
  3267     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  3268     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  3269     04D7  00D3               	movwf	___fltol@f1+2
  3270     04D8  1683               	bsf	3,5	;RP0=1, select bank1
  3271     04D9  1303               	bcf	3,6	;RP1=0, select bank1
  3272     04DA  083F               	movf	(sprintf@fval+1)^(0+128),w
  3273     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3274     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  3275     04DD  00D2               	movwf	___fltol@f1+1
  3276     04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3277     04DF  1303               	bcf	3,6	;RP1=0, select bank1
  3278     04E0  083E               	movf	sprintf@fval^(0+128),w
  3279     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3280     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3281     04E3  00D1               	movwf	___fltol@f1
  3282     04E4  160A  118A  202F  120A  118A  	fcall	___fltol
  3283     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  3284     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  3285     04EB  0854               	movf	?___fltol+3,w
  3286     04EC  1683               	bsf	3,5	;RP0=1, select bank1
  3287     04ED  1303               	bcf	3,6	;RP1=0, select bank1
  3288     04EE  00B4               	movwf	(sprintf@val+3)^(0+128)
  3289     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3290     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3291     04F1  0853               	movf	?___fltol+2,w
  3292     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3293     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3294     04F4  00B3               	movwf	(sprintf@val+2)^(0+128)
  3295     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3296     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3297     04F7  0852               	movf	?___fltol+1,w
  3298     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3299     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3300     04FA  00B2               	movwf	(sprintf@val+1)^(0+128)
  3301     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3302     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3303     04FD  0851               	movf	?___fltol,w
  3304     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3305     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3306     0500  00B1               	movwf	sprintf@val^(0+128)
  3307     0501                     l3580:
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3310     0501  0834               	movf	(sprintf@val+3)^(0+128),w
  3311     0502  00F9               	movwf	___xxtofl@val+3
  3312     0503  0833               	movf	(sprintf@val+2)^(0+128),w
  3313     0504  00F8               	movwf	___xxtofl@val+2
  3314     0505  0832               	movf	(sprintf@val+1)^(0+128),w
  3315     0506  00F7               	movwf	___xxtofl@val+1
  3316     0507  0831               	movf	sprintf@val^(0+128),w
  3317     0508  00F6               	movwf	___xxtofl@val
  3318     0509  3000               	movlw	0
  3319     050A  120A  118A  20F6  120A  118A  	fcall	___xxtofl
  3320     050F  0879               	movf	?___xxtofl+3,w
  3321     0510  1283               	bcf	3,5	;RP0=0, select bank0
  3322     0511  1303               	bcf	3,6	;RP1=0, select bank0
  3323     0512  00E9               	movwf	___flsub@a+3
  3324     0513  0878               	movf	?___xxtofl+2,w
  3325     0514  00E8               	movwf	___flsub@a+2
  3326     0515  0877               	movf	?___xxtofl+1,w
  3327     0516  00E7               	movwf	___flsub@a+1
  3328     0517  0876               	movf	?___xxtofl,w
  3329     0518  00E6               	movwf	___flsub@a
  3330     0519  1683               	bsf	3,5	;RP0=1, select bank1
  3331     051A  1303               	bcf	3,6	;RP1=0, select bank1
  3332     051B  0841               	movf	(sprintf@fval+3)^(0+128),w
  3333     051C  1283               	bcf	3,5	;RP0=0, select bank0
  3334     051D  1303               	bcf	3,6	;RP1=0, select bank0
  3335     051E  00ED               	movwf	___flsub@b+3
  3336     051F  1683               	bsf	3,5	;RP0=1, select bank1
  3337     0520  1303               	bcf	3,6	;RP1=0, select bank1
  3338     0521  0840               	movf	(sprintf@fval+2)^(0+128),w
  3339     0522  1283               	bcf	3,5	;RP0=0, select bank0
  3340     0523  1303               	bcf	3,6	;RP1=0, select bank0
  3341     0524  00EC               	movwf	___flsub@b+2
  3342     0525  1683               	bsf	3,5	;RP0=1, select bank1
  3343     0526  1303               	bcf	3,6	;RP1=0, select bank1
  3344     0527  083F               	movf	(sprintf@fval+1)^(0+128),w
  3345     0528  1283               	bcf	3,5	;RP0=0, select bank0
  3346     0529  1303               	bcf	3,6	;RP1=0, select bank0
  3347     052A  00EB               	movwf	___flsub@b+1
  3348     052B  1683               	bsf	3,5	;RP0=1, select bank1
  3349     052C  1303               	bcf	3,6	;RP1=0, select bank1
  3350     052D  083E               	movf	sprintf@fval^(0+128),w
  3351     052E  1283               	bcf	3,5	;RP0=0, select bank0
  3352     052F  1303               	bcf	3,6	;RP1=0, select bank0
  3353     0530  00EA               	movwf	___flsub@b
  3354     0531  160A  158A  23AA  120A  118A  	fcall	___flsub
  3355     0536  1283               	bcf	3,5	;RP0=0, select bank0
  3356     0537  1303               	bcf	3,6	;RP1=0, select bank0
  3357     0538  0869               	movf	?___flsub+3,w
  3358     0539  1683               	bsf	3,5	;RP0=1, select bank1
  3359     053A  1303               	bcf	3,6	;RP1=0, select bank1
  3360     053B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3361     053C  1283               	bcf	3,5	;RP0=0, select bank0
  3362     053D  1303               	bcf	3,6	;RP1=0, select bank0
  3363     053E  0868               	movf	?___flsub+2,w
  3364     053F  1683               	bsf	3,5	;RP0=1, select bank1
  3365     0540  1303               	bcf	3,6	;RP1=0, select bank1
  3366     0541  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3367     0542  1283               	bcf	3,5	;RP0=0, select bank0
  3368     0543  1303               	bcf	3,6	;RP1=0, select bank0
  3369     0544  0867               	movf	?___flsub+1,w
  3370     0545  1683               	bsf	3,5	;RP0=1, select bank1
  3371     0546  1303               	bcf	3,6	;RP1=0, select bank1
  3372     0547  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3373     0548  1283               	bcf	3,5	;RP0=0, select bank0
  3374     0549  1303               	bcf	3,6	;RP1=0, select bank0
  3375     054A  0866               	movf	?___flsub,w
  3376     054B  1683               	bsf	3,5	;RP0=1, select bank1
  3377     054C  1303               	bcf	3,6	;RP1=0, select bank1
  3378     054D  00BE               	movwf	sprintf@fval^(0+128)
  3379     054E                     l3582:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3382     054E  01B5               	clrf	sprintf@eexp^(0+128)
  3383     054F  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3384     0550                     l3584:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3387     0550  01C2               	clrf	sprintf@c^(0+128)
  3388     0551  0AC2               	incf	sprintf@c^(0+128),f
  3389     0552                     l3590:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3392     0552  0842               	movf	sprintf@c^(0+128),w
  3393     0553  00A5               	movwf	??_sprintf^(0+128)
  3394     0554  3001               	movlw	1
  3395     0555                     u5425:
  3396     0555  1003               	clrc
  3397     0556  0DA5               	rlf	??_sprintf^(0+128),f
  3398     0557  3EFF               	addlw	-1
  3399     0558  1D03               	skipz
  3400     0559  2D55               	goto	u5425
  3401     055A  1003               	clrc
  3402     055B  0D25               	rlf	??_sprintf^(0+128),w
  3403     055C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3404     055D  0084               	movwf	4
  3405     055E  120A  118A  200D  120A  118A  	fcall	stringdir
  3406     0563  00A6               	movwf	(??_sprintf+1)^(0+128)
  3407     0564  120A  118A  200D  120A  118A  	fcall	stringdir
  3408     0569  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3409     056A  120A  118A  200D  120A  118A  	fcall	stringdir
  3410     056F  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3411     0570  120A  118A  200D  120A  118A  	fcall	stringdir
  3412     0575  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3413     0576  0829               	movf	(??_sprintf+4)^(0+128),w
  3414     0577  0234               	subwf	(sprintf@val+3)^(0+128),w
  3415     0578  1D03               	skipz
  3416     0579  2D84               	goto	u5435
  3417     057A  0828               	movf	(??_sprintf+3)^(0+128),w
  3418     057B  0233               	subwf	(sprintf@val+2)^(0+128),w
  3419     057C  1D03               	skipz
  3420     057D  2D84               	goto	u5435
  3421     057E  0827               	movf	(??_sprintf+2)^(0+128),w
  3422     057F  0232               	subwf	(sprintf@val+1)^(0+128),w
  3423     0580  1D03               	skipz
  3424     0581  2D84               	goto	u5435
  3425     0582  0826               	movf	(??_sprintf+1)^(0+128),w
  3426     0583  0231               	subwf	sprintf@val^(0+128),w
  3427     0584                     u5435:
  3428     0584  1803               	skipnc
  3429     0585  2D87               	goto	u5431
  3430     0586  2D88               	goto	u5430
  3431     0587                     u5431:
  3432     0587  2D89               	goto	l3594
  3433     0588                     u5430:
  3434     0588  2D93               	goto	l3596
  3435     0589                     l3594:
  3436     0589  3001               	movlw	1
  3437     058A  00A5               	movwf	??_sprintf^(0+128)
  3438     058B  0825               	movf	??_sprintf^(0+128),w
  3439     058C  07C2               	addwf	sprintf@c^(0+128),f
  3440     058D  300A               	movlw	10
  3441     058E  0642               	xorwf	sprintf@c^(0+128),w
  3442     058F  1D03               	btfss	3,2
  3443     0590  2D92               	goto	u5441
  3444     0591  2D93               	goto	u5440
  3445     0592                     u5441:
  3446     0592  2D52               	goto	l3590
  3447     0593                     u5440:
  3448     0593                     l3596:
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3451     0593  3003               	movlw	3
  3452     0594  052F               	andwf	sprintf@flag^(0+128),w
  3453     0595  00A5               	movwf	??_sprintf^(0+128)
  3454     0596  3000               	movlw	0
  3455     0597  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3456     0598  00A6               	movwf	(??_sprintf+1)^(0+128)
  3457     0599  0825               	movf	??_sprintf^(0+128),w
  3458     059A  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3459     059B  1903               	btfsc	3,2
  3460     059C  2D9E               	goto	u5451
  3461     059D  2D9F               	goto	u5450
  3462     059E                     u5451:
  3463     059E  2E0D               	goto	l414
  3464     059F                     u5450:
  3465     059F                     l3598:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3468     059F  083B               	movf	sprintf@sp^(0+128),w
  3469     05A0  0084               	movwf	4
  3470     05A1  302D               	movlw	45
  3471     05A2  1383               	bcf	3,7	;select IRP bank0
  3472     05A3  0080               	movwf	0
  3473     05A4                     l3600:
  3474     05A4  3001               	movlw	1
  3475     05A5  00A5               	movwf	??_sprintf^(0+128)
  3476     05A6  0825               	movf	??_sprintf^(0+128),w
  3477     05A7  07BB               	addwf	sprintf@sp^(0+128),f
  3478     05A8  2E0D               	goto	l414
  3479     05A9                     l3602:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3482     05A9  0842               	movf	sprintf@c^(0+128),w
  3483     05AA  00A5               	movwf	??_sprintf^(0+128)
  3484     05AB  3001               	movlw	1
  3485     05AC                     u5465:
  3486     05AC  1003               	clrc
  3487     05AD  0DA5               	rlf	??_sprintf^(0+128),f
  3488     05AE  3EFF               	addlw	-1
  3489     05AF  1D03               	skipz
  3490     05B0  2DAC               	goto	u5465
  3491     05B1  1003               	clrc
  3492     05B2  0D25               	rlf	??_sprintf^(0+128),w
  3493     05B3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3494     05B4  0084               	movwf	4
  3495     05B5  120A  118A  200D  120A  118A  	fcall	stringdir
  3496     05BA  00F0               	movwf	___lldiv@divisor
  3497     05BB  120A  118A  200D  120A  118A  	fcall	stringdir
  3498     05C0  00F1               	movwf	___lldiv@divisor+1
  3499     05C1  120A  118A  200D  120A  118A  	fcall	stringdir
  3500     05C6  00F2               	movwf	___lldiv@divisor+2
  3501     05C7  120A  118A  200D  120A  118A  	fcall	stringdir
  3502     05CC  00F3               	movwf	___lldiv@divisor+3
  3503     05CD  0834               	movf	(sprintf@val+3)^(0+128),w
  3504     05CE  00F7               	movwf	___lldiv@dividend+3
  3505     05CF  0833               	movf	(sprintf@val+2)^(0+128),w
  3506     05D0  00F6               	movwf	___lldiv@dividend+2
  3507     05D1  0832               	movf	(sprintf@val+1)^(0+128),w
  3508     05D2  00F5               	movwf	___lldiv@dividend+1
  3509     05D3  0831               	movf	sprintf@val^(0+128),w
  3510     05D4  00F4               	movwf	___lldiv@dividend
  3511     05D5  160A  158A  2731  120A  118A  	fcall	___lldiv
  3512     05DA  0873               	movf	?___lldiv+3,w
  3513     05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3514     05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3515     05DD  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3516     05DE  0872               	movf	?___lldiv+2,w
  3517     05DF  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3518     05E0  0871               	movf	?___lldiv+1,w
  3519     05E1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3520     05E2  0870               	movf	?___lldiv,w
  3521     05E3  00B7               	movwf	sprintf@tmpval^(0+128)
  3522     05E4                     l3604:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3525     05E4  3000               	movlw	0
  3526     05E5  00F3               	movwf	___llmod@divisor+3
  3527     05E6  3000               	movlw	0
  3528     05E7  00F2               	movwf	___llmod@divisor+2
  3529     05E8  3000               	movlw	0
  3530     05E9  00F1               	movwf	___llmod@divisor+1
  3531     05EA  300A               	movlw	10
  3532     05EB  00F0               	movwf	___llmod@divisor
  3533     05EC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3534     05ED  00F7               	movwf	___llmod@dividend+3
  3535     05EE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3536     05EF  00F6               	movwf	___llmod@dividend+2
  3537     05F0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3538     05F1  00F5               	movwf	___llmod@dividend+1
  3539     05F2  0837               	movf	sprintf@tmpval^(0+128),w
  3540     05F3  00F4               	movwf	___llmod@dividend
  3541     05F4  160A  158A  2627  120A  118A  	fcall	___llmod
  3542     05F9  0873               	movf	?___llmod+3,w
  3543     05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3544     05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3545     05FC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3546     05FD  0872               	movf	?___llmod+2,w
  3547     05FE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3548     05FF  0871               	movf	?___llmod+1,w
  3549     0600  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3550     0601  0870               	movf	?___llmod,w
  3551     0602  00B7               	movwf	sprintf@tmpval^(0+128)
  3552     0603                     l3606:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3555     0603  083B               	movf	sprintf@sp^(0+128),w
  3556     0604  0084               	movwf	4
  3557     0605  0837               	movf	sprintf@tmpval^(0+128),w
  3558     0606  3E30               	addlw	48
  3559     0607  1383               	bcf	3,7	;select IRP bank0
  3560     0608  0080               	movwf	0
  3561     0609  3001               	movlw	1
  3562     060A  00A5               	movwf	??_sprintf^(0+128)
  3563     060B  0825               	movf	??_sprintf^(0+128),w
  3564     060C  07BB               	addwf	sprintf@sp^(0+128),f
  3565     060D                     l414:	
  3566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3567                           
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3570     060D  3001               	movlw	1
  3571     060E  02C2               	subwf	sprintf@c^(0+128),f
  3572     060F  0A42               	incf	sprintf@c^(0+128),w
  3573     0610  1D03               	btfss	3,2
  3574     0611  2E13               	goto	u5471
  3575     0612  2E14               	goto	u5470
  3576     0613                     u5471:
  3577     0613  2DA9               	goto	l3602
  3578     0614                     u5470:
  3579     0614  2E26               	goto	l3614
  3580     0615                     l3608:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3583     0615  1683               	bsf	3,5	;RP0=1, select bank1
  3584     0616  1303               	bcf	3,6	;RP1=0, select bank1
  3585     0617  083B               	movf	sprintf@sp^(0+128),w
  3586     0618  0084               	movwf	4
  3587     0619  3030               	movlw	48
  3588     061A  1383               	bcf	3,7	;select IRP bank0
  3589     061B  0080               	movwf	0
  3590     061C                     l3610:
  3591     061C  3001               	movlw	1
  3592     061D  00A5               	movwf	??_sprintf^(0+128)
  3593     061E  0825               	movf	??_sprintf^(0+128),w
  3594     061F  07BB               	addwf	sprintf@sp^(0+128),f
  3595     0620                     l3612:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3598     0620  30FF               	movlw	255
  3599     0621  07B5               	addwf	sprintf@eexp^(0+128),f
  3600     0622  1803               	skipnc
  3601     0623  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3602     0624  30FF               	movlw	255
  3603     0625  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3604     0626                     l3614:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3607     0626  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3608     0627  3A80               	xorlw	128
  3609     0628  00FF               	movwf	btemp+1
  3610     0629  3080               	movlw	128
  3611     062A  027F               	subwf	btemp+1,w
  3612     062B  1D03               	skipz
  3613     062C  2E2F               	goto	u5485
  3614     062D  3001               	movlw	1
  3615     062E  0235               	subwf	sprintf@eexp^(0+128),w
  3616     062F                     u5485:
  3617     062F  1803               	skipnc
  3618     0630  2E32               	goto	u5481
  3619     0631  2E33               	goto	u5480
  3620     0632                     u5481:
  3621     0632  2E15               	goto	l3608
  3622     0633                     u5480:
  3623     0633                     l3616:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3626     0633  1683               	bsf	3,5	;RP0=1, select bank1
  3627     0634  1303               	bcf	3,6	;RP1=0, select bank1
  3628     0635  083D               	movf	(sprintf@prec+1)^(0+128),w
  3629     0636  3A80               	xorlw	128
  3630     0637  00FF               	movwf	btemp+1
  3631     0638  3080               	movlw	128
  3632     0639  027F               	subwf	btemp+1,w
  3633     063A  1D03               	skipz
  3634     063B  2E3E               	goto	u5495
  3635     063C  3009               	movlw	9
  3636     063D  023C               	subwf	sprintf@prec^(0+128),w
  3637     063E                     u5495:
  3638     063E  1C03               	skipc
  3639     063F  2E41               	goto	u5491
  3640     0640  2E42               	goto	u5490
  3641     0641                     u5491:
  3642     0641  2E47               	goto	l3620
  3643     0642                     u5490:
  3644     0642                     l3618:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3647     0642  3008               	movlw	8
  3648     0643  1683               	bsf	3,5	;RP0=1, select bank1
  3649     0644  1303               	bcf	3,6	;RP1=0, select bank1
  3650     0645  00C2               	movwf	sprintf@c^(0+128)
  3651     0646  2E4B               	goto	l421
  3652     0647                     l3620:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3655     0647  1683               	bsf	3,5	;RP0=1, select bank1
  3656     0648  1303               	bcf	3,6	;RP1=0, select bank1
  3657     0649  083C               	movf	sprintf@prec^(0+128),w
  3658     064A  00C2               	movwf	sprintf@c^(0+128)
  3659     064B                     l421:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3662     064B  0842               	movf	sprintf@c^(0+128),w
  3663     064C  00A5               	movwf	??_sprintf^(0+128)
  3664     064D  01A6               	clrf	(??_sprintf^(0+128)+1)
  3665     064E  0825               	movf	??_sprintf^(0+128),w
  3666     064F  02BC               	subwf	sprintf@prec^(0+128),f
  3667     0650  0826               	movf	(??_sprintf+1)^(0+128),w
  3668     0651  1C03               	skipc
  3669     0652  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3670     0653  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3671     0654                     l3622:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3674     0654  0842               	movf	sprintf@c^(0+128),w
  3675     0655  1903               	btfsc	3,2
  3676     0656  2E58               	goto	u5501
  3677     0657  2E59               	goto	u5500
  3678     0658                     u5501:
  3679     0658  2E62               	goto	l3628
  3680     0659                     u5500:
  3681     0659                     l3624:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3684     0659  083B               	movf	sprintf@sp^(0+128),w
  3685     065A  0084               	movwf	4
  3686     065B  302E               	movlw	46
  3687     065C  1383               	bcf	3,7	;select IRP bank0
  3688     065D  0080               	movwf	0
  3689     065E                     l3626:
  3690     065E  3001               	movlw	1
  3691     065F  00A5               	movwf	??_sprintf^(0+128)
  3692     0660  0825               	movf	??_sprintf^(0+128),w
  3693     0661  07BB               	addwf	sprintf@sp^(0+128),f
  3694     0662                     l3628:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3697     0662  0842               	movf	sprintf@c^(0+128),w
  3698     0663  120A  158A  24A1  120A  118A  	fcall	_scale
  3699     0668  1283               	bcf	3,5	;RP0=0, select bank0
  3700     0669  1303               	bcf	3,6	;RP1=0, select bank0
  3701     066A  0841               	movf	?_scale+3,w
  3702     066B  1683               	bsf	3,5	;RP0=1, select bank1
  3703     066C  1303               	bcf	3,6	;RP1=0, select bank1
  3704     066D  00AD               	movwf	(_sprintf$1369+3)^(0+128)
  3705     066E  1283               	bcf	3,5	;RP0=0, select bank0
  3706     066F  1303               	bcf	3,6	;RP1=0, select bank0
  3707     0670  0840               	movf	?_scale+2,w
  3708     0671  1683               	bsf	3,5	;RP0=1, select bank1
  3709     0672  1303               	bcf	3,6	;RP1=0, select bank1
  3710     0673  00AC               	movwf	(_sprintf$1369+2)^(0+128)
  3711     0674  1283               	bcf	3,5	;RP0=0, select bank0
  3712     0675  1303               	bcf	3,6	;RP1=0, select bank0
  3713     0676  083F               	movf	?_scale+1,w
  3714     0677  1683               	bsf	3,5	;RP0=1, select bank1
  3715     0678  1303               	bcf	3,6	;RP1=0, select bank1
  3716     0679  00AB               	movwf	(_sprintf$1369+1)^(0+128)
  3717     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3718     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3719     067C  083E               	movf	?_scale,w
  3720     067D  1683               	bsf	3,5	;RP0=1, select bank1
  3721     067E  1303               	bcf	3,6	;RP1=0, select bank1
  3722     067F  00AA               	movwf	_sprintf$1369^(0+128)
  3723     0680                     l3630:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3726     0680  082D               	movf	(_sprintf$1369+3)^(0+128),w
  3727     0681  1283               	bcf	3,5	;RP0=0, select bank0
  3728     0682  1303               	bcf	3,6	;RP1=0, select bank0
  3729     0683  00AB               	movwf	___flmul@a+3
  3730     0684  1683               	bsf	3,5	;RP0=1, select bank1
  3731     0685  1303               	bcf	3,6	;RP1=0, select bank1
  3732     0686  082C               	movf	(_sprintf$1369+2)^(0+128),w
  3733     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3734     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3735     0689  00AA               	movwf	___flmul@a+2
  3736     068A  1683               	bsf	3,5	;RP0=1, select bank1
  3737     068B  1303               	bcf	3,6	;RP1=0, select bank1
  3738     068C  082B               	movf	(_sprintf$1369+1)^(0+128),w
  3739     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3740     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3741     068F  00A9               	movwf	___flmul@a+1
  3742     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3743     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3744     0692  082A               	movf	_sprintf$1369^(0+128),w
  3745     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3746     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3747     0695  00A8               	movwf	___flmul@a
  3748     0696  1683               	bsf	3,5	;RP0=1, select bank1
  3749     0697  1303               	bcf	3,6	;RP1=0, select bank1
  3750     0698  0841               	movf	(sprintf@fval+3)^(0+128),w
  3751     0699  1283               	bcf	3,5	;RP0=0, select bank0
  3752     069A  1303               	bcf	3,6	;RP1=0, select bank0
  3753     069B  00A7               	movwf	___flmul@b+3
  3754     069C  1683               	bsf	3,5	;RP0=1, select bank1
  3755     069D  1303               	bcf	3,6	;RP1=0, select bank1
  3756     069E  0840               	movf	(sprintf@fval+2)^(0+128),w
  3757     069F  1283               	bcf	3,5	;RP0=0, select bank0
  3758     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3759     06A1  00A6               	movwf	___flmul@b+2
  3760     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3761     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3762     06A4  083F               	movf	(sprintf@fval+1)^(0+128),w
  3763     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3764     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3765     06A7  00A5               	movwf	___flmul@b+1
  3766     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3767     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3768     06AA  083E               	movf	sprintf@fval^(0+128),w
  3769     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3770     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3771     06AD  00A4               	movwf	___flmul@b
  3772     06AE  120A  158A  215C  120A  118A  	fcall	___flmul
  3773     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3774     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3775     06B5  0827               	movf	?___flmul+3,w
  3776     06B6  00D4               	movwf	___fltol@f1+3
  3777     06B7  0826               	movf	?___flmul+2,w
  3778     06B8  00D3               	movwf	___fltol@f1+2
  3779     06B9  0825               	movf	?___flmul+1,w
  3780     06BA  00D2               	movwf	___fltol@f1+1
  3781     06BB  0824               	movf	?___flmul,w
  3782     06BC  00D1               	movwf	___fltol@f1
  3783     06BD  160A  118A  202F  120A  118A  	fcall	___fltol
  3784     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3785     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3786     06C4  0854               	movf	?___fltol+3,w
  3787     06C5  1683               	bsf	3,5	;RP0=1, select bank1
  3788     06C6  1303               	bcf	3,6	;RP1=0, select bank1
  3789     06C7  00B4               	movwf	(sprintf@val+3)^(0+128)
  3790     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3791     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3792     06CA  0853               	movf	?___fltol+2,w
  3793     06CB  1683               	bsf	3,5	;RP0=1, select bank1
  3794     06CC  1303               	bcf	3,6	;RP1=0, select bank1
  3795     06CD  00B3               	movwf	(sprintf@val+2)^(0+128)
  3796     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3797     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3798     06D0  0852               	movf	?___fltol+1,w
  3799     06D1  1683               	bsf	3,5	;RP0=1, select bank1
  3800     06D2  1303               	bcf	3,6	;RP1=0, select bank1
  3801     06D3  00B2               	movwf	(sprintf@val+1)^(0+128)
  3802     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3803     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3804     06D6  0851               	movf	?___fltol,w
  3805     06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3806     06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3807     06D9  00B1               	movwf	sprintf@val^(0+128)
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3810     06DA  2F7A               	goto	l3640
  3811     06DB                     l3632:
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3814     06DB  0842               	movf	sprintf@c^(0+128),w
  3815     06DC  00A5               	movwf	??_sprintf^(0+128)
  3816     06DD  3001               	movlw	1
  3817     06DE                     u5515:
  3818     06DE  1003               	clrc
  3819     06DF  0DA5               	rlf	??_sprintf^(0+128),f
  3820     06E0  3EFF               	addlw	-1
  3821     06E1  1D03               	skipz
  3822     06E2  2EDE               	goto	u5515
  3823     06E3  1003               	clrc
  3824     06E4  0D25               	rlf	??_sprintf^(0+128),w
  3825     06E5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3826     06E6  0084               	movwf	4
  3827     06E7  120A  118A  200D  120A  118A  	fcall	stringdir
  3828     06EC  00F0               	movwf	___lldiv@divisor
  3829     06ED  120A  118A  200D  120A  118A  	fcall	stringdir
  3830     06F2  00F1               	movwf	___lldiv@divisor+1
  3831     06F3  120A  118A  200D  120A  118A  	fcall	stringdir
  3832     06F8  00F2               	movwf	___lldiv@divisor+2
  3833     06F9  120A  118A  200D  120A  118A  	fcall	stringdir
  3834     06FE  00F3               	movwf	___lldiv@divisor+3
  3835     06FF  0834               	movf	(sprintf@val+3)^(0+128),w
  3836     0700  00F7               	movwf	___lldiv@dividend+3
  3837     0701  0833               	movf	(sprintf@val+2)^(0+128),w
  3838     0702  00F6               	movwf	___lldiv@dividend+2
  3839     0703  0832               	movf	(sprintf@val+1)^(0+128),w
  3840     0704  00F5               	movwf	___lldiv@dividend+1
  3841     0705  0831               	movf	sprintf@val^(0+128),w
  3842     0706  00F4               	movwf	___lldiv@dividend
  3843     0707  160A  158A  2731  120A  118A  	fcall	___lldiv
  3844     070C  0873               	movf	?___lldiv+3,w
  3845     070D  1683               	bsf	3,5	;RP0=1, select bank1
  3846     070E  1303               	bcf	3,6	;RP1=0, select bank1
  3847     070F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3848     0710  0872               	movf	?___lldiv+2,w
  3849     0711  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3850     0712  0871               	movf	?___lldiv+1,w
  3851     0713  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3852     0714  0870               	movf	?___lldiv,w
  3853     0715  00B7               	movwf	sprintf@tmpval^(0+128)
  3854     0716                     l3634:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3857     0716  3000               	movlw	0
  3858     0717  00F3               	movwf	___llmod@divisor+3
  3859     0718  3000               	movlw	0
  3860     0719  00F2               	movwf	___llmod@divisor+2
  3861     071A  3000               	movlw	0
  3862     071B  00F1               	movwf	___llmod@divisor+1
  3863     071C  300A               	movlw	10
  3864     071D  00F0               	movwf	___llmod@divisor
  3865     071E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3866     071F  00F7               	movwf	___llmod@dividend+3
  3867     0720  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3868     0721  00F6               	movwf	___llmod@dividend+2
  3869     0722  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3870     0723  00F5               	movwf	___llmod@dividend+1
  3871     0724  0837               	movf	sprintf@tmpval^(0+128),w
  3872     0725  00F4               	movwf	___llmod@dividend
  3873     0726  160A  158A  2627  120A  118A  	fcall	___llmod
  3874     072B  0873               	movf	?___llmod+3,w
  3875     072C  1683               	bsf	3,5	;RP0=1, select bank1
  3876     072D  1303               	bcf	3,6	;RP1=0, select bank1
  3877     072E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3878     072F  0872               	movf	?___llmod+2,w
  3879     0730  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3880     0731  0871               	movf	?___llmod+1,w
  3881     0732  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3882     0733  0870               	movf	?___llmod,w
  3883     0734  00B7               	movwf	sprintf@tmpval^(0+128)
  3884     0735                     l3636:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3887     0735  083B               	movf	sprintf@sp^(0+128),w
  3888     0736  0084               	movwf	4
  3889     0737  0837               	movf	sprintf@tmpval^(0+128),w
  3890     0738  3E30               	addlw	48
  3891     0739  1383               	bcf	3,7	;select IRP bank0
  3892     073A  0080               	movwf	0
  3893     073B  3001               	movlw	1
  3894     073C  00A5               	movwf	??_sprintf^(0+128)
  3895     073D  0825               	movf	??_sprintf^(0+128),w
  3896     073E  07BB               	addwf	sprintf@sp^(0+128),f
  3897     073F                     l3638:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3900     073F  0842               	movf	sprintf@c^(0+128),w
  3901     0740  00A5               	movwf	??_sprintf^(0+128)
  3902     0741  3001               	movlw	1
  3903     0742                     u5525:
  3904     0742  1003               	clrc
  3905     0743  0DA5               	rlf	??_sprintf^(0+128),f
  3906     0744  3EFF               	addlw	-1
  3907     0745  1D03               	skipz
  3908     0746  2F42               	goto	u5525
  3909     0747  1003               	clrc
  3910     0748  0D25               	rlf	??_sprintf^(0+128),w
  3911     0749  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3912     074A  0084               	movwf	4
  3913     074B  120A  118A  200D  120A  118A  	fcall	stringdir
  3914     0750  00F0               	movwf	___llmod@divisor
  3915     0751  120A  118A  200D  120A  118A  	fcall	stringdir
  3916     0756  00F1               	movwf	___llmod@divisor+1
  3917     0757  120A  118A  200D  120A  118A  	fcall	stringdir
  3918     075C  00F2               	movwf	___llmod@divisor+2
  3919     075D  120A  118A  200D  120A  118A  	fcall	stringdir
  3920     0762  00F3               	movwf	___llmod@divisor+3
  3921     0763  0834               	movf	(sprintf@val+3)^(0+128),w
  3922     0764  00F7               	movwf	___llmod@dividend+3
  3923     0765  0833               	movf	(sprintf@val+2)^(0+128),w
  3924     0766  00F6               	movwf	___llmod@dividend+2
  3925     0767  0832               	movf	(sprintf@val+1)^(0+128),w
  3926     0768  00F5               	movwf	___llmod@dividend+1
  3927     0769  0831               	movf	sprintf@val^(0+128),w
  3928     076A  00F4               	movwf	___llmod@dividend
  3929     076B  160A  158A  2627  120A  118A  	fcall	___llmod
  3930     0770  0873               	movf	?___llmod+3,w
  3931     0771  1683               	bsf	3,5	;RP0=1, select bank1
  3932     0772  1303               	bcf	3,6	;RP1=0, select bank1
  3933     0773  00B4               	movwf	(sprintf@val+3)^(0+128)
  3934     0774  0872               	movf	?___llmod+2,w
  3935     0775  00B3               	movwf	(sprintf@val+2)^(0+128)
  3936     0776  0871               	movf	?___llmod+1,w
  3937     0777  00B2               	movwf	(sprintf@val+1)^(0+128)
  3938     0778  0870               	movf	?___llmod,w
  3939     0779  00B1               	movwf	sprintf@val^(0+128)
  3940     077A                     l3640:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3943     077A  3001               	movlw	1
  3944     077B  02C2               	subwf	sprintf@c^(0+128),f
  3945     077C  0A42               	incf	sprintf@c^(0+128),w
  3946     077D  1D03               	btfss	3,2
  3947     077E  2F80               	goto	u5531
  3948     077F  2F81               	goto	u5530
  3949     0780                     u5531:
  3950     0780  2EDB               	goto	l3632
  3951     0781                     u5530:
  3952     0781  2F91               	goto	l3648
  3953     0782                     l3642:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3956     0782  083B               	movf	sprintf@sp^(0+128),w
  3957     0783  0084               	movwf	4
  3958     0784  3030               	movlw	48
  3959     0785  1383               	bcf	3,7	;select IRP bank0
  3960     0786  0080               	movwf	0
  3961     0787                     l3644:
  3962     0787  3001               	movlw	1
  3963     0788  00A5               	movwf	??_sprintf^(0+128)
  3964     0789  0825               	movf	??_sprintf^(0+128),w
  3965     078A  07BB               	addwf	sprintf@sp^(0+128),f
  3966     078B                     l3646:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3969     078B  30FF               	movlw	255
  3970     078C  07BC               	addwf	sprintf@prec^(0+128),f
  3971     078D  1803               	skipnc
  3972     078E  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3973     078F  30FF               	movlw	255
  3974     0790  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3975     0791                     l3648:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3978     0791  083C               	movf	sprintf@prec^(0+128),w
  3979     0792  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3980     0793  1D03               	btfss	3,2
  3981     0794  2F96               	goto	u5541
  3982     0795  2F97               	goto	u5540
  3983     0796                     u5541:
  3984     0796  2F82               	goto	l3642
  3985     0797                     u5540:
  3986     0797  2FDB               	goto	l3668
  3987     0798                     l3650:
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3990     0798  083C               	movf	sprintf@prec^(0+128),w
  3991     0799  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3992     079A  1D03               	btfss	3,2
  3993     079B  2F9D               	goto	u5551
  3994     079C  2F9E               	goto	u5550
  3995     079D                     u5551:
  3996     079D  2FAC               	goto	l429
  3997     079E                     u5550:
  3998     079E                     l3652:
  3999     079E  0834               	movf	(sprintf@val+3)^(0+128),w
  4000     079F  0433               	iorwf	(sprintf@val+2)^(0+128),w
  4001     07A0  0432               	iorwf	(sprintf@val+1)^(0+128),w
  4002     07A1  0431               	iorwf	sprintf@val^(0+128),w
  4003     07A2  1D03               	skipz
  4004     07A3  2FA5               	goto	u5561
  4005     07A4  2FA6               	goto	u5560
  4006     07A5                     u5561:
  4007     07A5  2FAC               	goto	l429
  4008     07A6                     u5560:
  4009     07A6                     l3654:
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4012     07A6  3001               	movlw	1
  4013     07A7  07BC               	addwf	sprintf@prec^(0+128),f
  4014     07A8  1803               	skipnc
  4015     07A9  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4016     07AA  3000               	movlw	0
  4017     07AB  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4018     07AC                     l429:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4021     07AC  083D               	movf	(sprintf@prec+1)^(0+128),w
  4022     07AD  3A80               	xorlw	128
  4023     07AE  3C80               	sublw	128
  4024     07AF  1D03               	skipz
  4025     07B0  2FB3               	goto	u5575
  4026     07B1  083C               	movf	sprintf@prec^(0+128),w
  4027     07B2  0242               	subwf	sprintf@c^(0+128),w
  4028     07B3                     u5575:
  4029     07B3  1803               	skipnc
  4030     07B4  2FB6               	goto	u5571
  4031     07B5  2FB7               	goto	u5570
  4032     07B6                     u5571:
  4033     07B6  2FB8               	goto	l3658
  4034     07B7                     u5570:
  4035     07B7                     l3656:
  4036     07B7  2FC7               	goto	l3662
  4037     07B8                     l3658:
  4038     07B8  1683               	bsf	3,5	;RP0=1, select bank1
  4039     07B9  1303               	bcf	3,6	;RP1=0, select bank1
  4040     07BA  083D               	movf	(sprintf@prec+1)^(0+128),w
  4041     07BB  3A80               	xorlw	128
  4042     07BC  00A5               	movwf	??_sprintf^(0+128)
  4043     07BD  3080               	movlw	128
  4044     07BE  0225               	subwf	??_sprintf^(0+128),w
  4045     07BF  1D03               	skipz
  4046     07C0  2FC3               	goto	u5585
  4047     07C1  0842               	movf	sprintf@c^(0+128),w
  4048     07C2  023C               	subwf	sprintf@prec^(0+128),w
  4049     07C3                     u5585:
  4050     07C3  1803               	skipnc
  4051     07C4  2FC6               	goto	u5581
  4052     07C5  2FC7               	goto	u5580
  4053     07C6                     u5581:
  4054     07C6  2FC7               	goto	l3662
  4055     07C7                     u5580:
  4056     07C7                     l3660:
  4057     07C7                     l3662:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4060     07C7  3003               	movlw	3
  4061     07C8  1683               	bsf	3,5	;RP0=1, select bank1
  4062     07C9  1303               	bcf	3,6	;RP1=0, select bank1
  4063     07CA  052F               	andwf	sprintf@flag^(0+128),w
  4064     07CB  00A5               	movwf	??_sprintf^(0+128)
  4065     07CC  3000               	movlw	0
  4066     07CD  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4067     07CE  00A6               	movwf	(??_sprintf+1)^(0+128)
  4068     07CF  0825               	movf	??_sprintf^(0+128),w
  4069     07D0  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4070     07D1  1903               	btfsc	3,2
  4071     07D2  2FD4               	goto	u5591
  4072     07D3  2FD5               	goto	u5590
  4073     07D4                     u5591:
  4074     07D4  2FDB               	goto	l3668
  4075     07D5                     u5590:
  4076     07D5                     l3664:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4079     07D5  083B               	movf	sprintf@sp^(0+128),w
  4080     07D6  0084               	movwf	4
  4081     07D7  302D               	movlw	45
  4082     07D8  1383               	bcf	3,7	;select IRP bank0
  4083     07D9  0080               	movwf	0
  4084     07DA  29C1               	goto	l3480
  4085     07DB                     l3668:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4088     07DB  3001               	movlw	1
  4089     07DC  07A0               	addwf	sprintf@f^(0+128),f
  4090     07DD  30FF               	movlw	-1
  4091     07DE  0720               	addwf	sprintf@f^(0+128),w
  4092     07DF  0084               	movwf	4
  4093     07E0  120A  118A  200D  120A  118A  	fcall	stringdir
  4094     07E5  00C2               	movwf	sprintf@c^(0+128)
  4095     07E6  0842               	movf	sprintf@c^(0+128),w
  4096     07E7  1D03               	btfss	3,2
  4097     07E8  2FEA               	goto	u5601
  4098     07E9  2FEB               	goto	u5600
  4099     07EA                     u5601:
  4100     07EA  29B6               	goto	l3476
  4101     07EB                     u5600:
  4102     07EB                     l3670:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4105     07EB  083B               	movf	sprintf@sp^(0+128),w
  4106     07EC  0084               	movwf	4
  4107     07ED  1383               	bcf	3,7	;select IRP bank0
  4108     07EE  0180               	clrf	0
  4109     07EF                     l435:
  4110     07EF  0008               	return
  4111     07F0                     __end_of_sprintf:
  4112                           
  4113                           	psect	text2
  4114     0CA1                     __ptext2:	
  4115 ;; *************** function _scale *****************
  4116 ;; Defined at:
  4117 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  scl             1    wreg     char 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  scl             1   48[BANK0 ] char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  4   30[BANK0 ] char 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         0       4       0       0       0
  4132 ;;      Locals:         0       5       0       0       0
  4133 ;;      Temps:          0      10       0       0       0
  4134 ;;      Totals:         0      19       0       0       0
  4135 ;;Total ram usage:       19 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; Hardware stack levels required when called: 2
  4138 ;; This function calls:
  4139 ;;		___awdiv
  4140 ;;		___awmod
  4141 ;;		___flmul
  4142 ;; This function is called by:
  4143 ;;		_sprintf
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147     0CA1                     _scale:	
  4148                           ;psect for function _scale
  4149                           
  4150                           
  4151                           ;incstack = 0
  4152                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4153                           ;scale@scl stored from wreg
  4154     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4155     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4156     0CA3  00D0               	movwf	scale@scl
  4157     0CA4                     l3036:
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4160     0CA4  1FD0               	btfss	scale@scl,7
  4161     0CA5  2CA7               	goto	u4271
  4162     0CA6  2CA8               	goto	u4270
  4163     0CA7                     u4271:
  4164     0CA7  2E55               	goto	l3058
  4165     0CA8                     u4270:
  4166     0CA8                     l3038:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4169     0CA8  09D0               	comf	scale@scl,f
  4170     0CA9  0AD0               	incf	scale@scl,f
  4171     0CAA                     l3040:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4174     0CAA  0850               	movf	scale@scl,w
  4175     0CAB  3A80               	xorlw	128
  4176     0CAC  3E12               	addlw	-238
  4177     0CAD  1C03               	skipc
  4178     0CAE  2CB0               	goto	u4281
  4179     0CAF  2CB1               	goto	u4280
  4180     0CB0                     u4281:
  4181     0CB0  2D99               	goto	l3048
  4182     0CB1                     u4280:
  4183     0CB1                     l3042:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4186     0CB1  300A               	movlw	10
  4187     0CB2  00F7               	movwf	___awdiv@divisor
  4188     0CB3  3000               	movlw	0
  4189     0CB4  00F8               	movwf	___awdiv@divisor+1
  4190     0CB5  0850               	movf	scale@scl,w
  4191     0CB6  00F2               	movwf	___awmod@dividend
  4192     0CB7  01F3               	clrf	___awmod@dividend+1
  4193     0CB8  1BF2               	btfsc	___awmod@dividend,7
  4194     0CB9  03F3               	decf	___awmod@dividend+1,f
  4195     0CBA  3064               	movlw	100
  4196     0CBB  00F0               	movwf	___awmod@divisor
  4197     0CBC  3000               	movlw	0
  4198     0CBD  00F1               	movwf	___awmod@divisor+1
  4199     0CBE  160A  158A  267B  120A  158A  	fcall	___awmod
  4200     0CC3  0871               	movf	?___awmod+1,w
  4201     0CC4  00FA               	movwf	___awdiv@dividend+1
  4202     0CC5  0870               	movf	?___awmod,w
  4203     0CC6  00F9               	movwf	___awdiv@dividend
  4204     0CC7  160A  158A  2797  120A  158A  	fcall	___awdiv
  4205     0CCC  0877               	movf	?___awdiv,w
  4206     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4207     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4208     0CCF  00C2               	movwf	??_scale
  4209     0CD0  3001               	movlw	1
  4210     0CD1                     u4295:
  4211     0CD1  1003               	clrc
  4212     0CD2  0DC2               	rlf	??_scale,f
  4213     0CD3  3EFF               	addlw	-1
  4214     0CD4  1D03               	skipz
  4215     0CD5  2CD1               	goto	u4295
  4216     0CD6  1003               	clrc
  4217     0CD7  0D42               	rlf	??_scale,w
  4218     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4219     0CD9  0084               	movwf	4
  4220     0CDA  120A  118A  200D  120A  158A  	fcall	stringdir
  4221     0CDF  00C3               	movwf	??_scale+1
  4222     0CE0  120A  118A  200D  120A  158A  	fcall	stringdir
  4223     0CE5  00C4               	movwf	??_scale+2
  4224     0CE6  120A  118A  200D  120A  158A  	fcall	stringdir
  4225     0CEB  00C5               	movwf	??_scale+3
  4226     0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  4227     0CF1  00C6               	movwf	??_scale+4
  4228     0CF2  0846               	movf	??_scale+4,w
  4229     0CF3  00A7               	movwf	___flmul@b+3
  4230     0CF4  0845               	movf	??_scale+3,w
  4231     0CF5  00A6               	movwf	___flmul@b+2
  4232     0CF6  0844               	movf	??_scale+2,w
  4233     0CF7  00A5               	movwf	___flmul@b+1
  4234     0CF8  0843               	movf	??_scale+1,w
  4235     0CF9  00A4               	movwf	___flmul@b
  4236     0CFA  3064               	movlw	100
  4237     0CFB  00F7               	movwf	___awdiv@divisor
  4238     0CFC  3000               	movlw	0
  4239     0CFD  00F8               	movwf	___awdiv@divisor+1
  4240     0CFE  0850               	movf	scale@scl,w
  4241     0CFF  00F9               	movwf	___awdiv@dividend
  4242     0D00  01FA               	clrf	___awdiv@dividend+1
  4243     0D01  1BF9               	btfsc	___awdiv@dividend,7
  4244     0D02  03FA               	decf	___awdiv@dividend+1,f
  4245     0D03  160A  158A  2797  120A  158A  	fcall	___awdiv
  4246     0D08  0877               	movf	?___awdiv,w
  4247     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4248     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4249     0D0B  00C7               	movwf	??_scale+5
  4250     0D0C  3001               	movlw	1
  4251     0D0D                     u4305:
  4252     0D0D  1003               	clrc
  4253     0D0E  0DC7               	rlf	??_scale+5,f
  4254     0D0F  3EFF               	addlw	-1
  4255     0D10  1D03               	skipz
  4256     0D11  2D0D               	goto	u4305
  4257     0D12  1003               	clrc
  4258     0D13  0D47               	rlf	??_scale+5,w
  4259     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4260     0D15  0084               	movwf	4
  4261     0D16  120A  118A  200D  120A  158A  	fcall	stringdir
  4262     0D1B  00C8               	movwf	??_scale+6
  4263     0D1C  120A  118A  200D  120A  158A  	fcall	stringdir
  4264     0D21  00C9               	movwf	??_scale+7
  4265     0D22  120A  118A  200D  120A  158A  	fcall	stringdir
  4266     0D27  00CA               	movwf	??_scale+8
  4267     0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  4268     0D2D  00CB               	movwf	??_scale+9
  4269     0D2E  084B               	movf	??_scale+9,w
  4270     0D2F  00AB               	movwf	___flmul@a+3
  4271     0D30  084A               	movf	??_scale+8,w
  4272     0D31  00AA               	movwf	___flmul@a+2
  4273     0D32  0849               	movf	??_scale+7,w
  4274     0D33  00A9               	movwf	___flmul@a+1
  4275     0D34  0848               	movf	??_scale+6,w
  4276     0D35  00A8               	movwf	___flmul@a
  4277     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4278     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4279     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4280     0D3D  0827               	movf	?___flmul+3,w
  4281     0D3E  00CF               	movwf	_scale$1368+3
  4282     0D3F  0826               	movf	?___flmul+2,w
  4283     0D40  00CE               	movwf	_scale$1368+2
  4284     0D41  0825               	movf	?___flmul+1,w
  4285     0D42  00CD               	movwf	_scale$1368+1
  4286     0D43  0824               	movf	?___flmul,w
  4287     0D44  00CC               	movwf	_scale$1368
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4290     0D45  300A               	movlw	10
  4291     0D46  00F0               	movwf	___awmod@divisor
  4292     0D47  3000               	movlw	0
  4293     0D48  00F1               	movwf	___awmod@divisor+1
  4294     0D49  0850               	movf	scale@scl,w
  4295     0D4A  00F2               	movwf	___awmod@dividend
  4296     0D4B  01F3               	clrf	___awmod@dividend+1
  4297     0D4C  1BF2               	btfsc	___awmod@dividend,7
  4298     0D4D  03F3               	decf	___awmod@dividend+1,f
  4299     0D4E  160A  158A  267B  120A  158A  	fcall	___awmod
  4300     0D53  0870               	movf	?___awmod,w
  4301     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4302     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4303     0D56  00C2               	movwf	??_scale
  4304     0D57  3001               	movlw	1
  4305     0D58                     u4315:
  4306     0D58  1003               	clrc
  4307     0D59  0DC2               	rlf	??_scale,f
  4308     0D5A  3EFF               	addlw	-1
  4309     0D5B  1D03               	skipz
  4310     0D5C  2D58               	goto	u4315
  4311     0D5D  1003               	clrc
  4312     0D5E  0D42               	rlf	??_scale,w
  4313     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4314     0D60  0084               	movwf	4
  4315     0D61  120A  118A  200D  120A  158A  	fcall	stringdir
  4316     0D66  00C3               	movwf	??_scale+1
  4317     0D67  120A  118A  200D  120A  158A  	fcall	stringdir
  4318     0D6C  00C4               	movwf	??_scale+2
  4319     0D6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4320     0D72  00C5               	movwf	??_scale+3
  4321     0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  4322     0D78  00C6               	movwf	??_scale+4
  4323     0D79  0846               	movf	??_scale+4,w
  4324     0D7A  00A7               	movwf	___flmul@b+3
  4325     0D7B  0845               	movf	??_scale+3,w
  4326     0D7C  00A6               	movwf	___flmul@b+2
  4327     0D7D  0844               	movf	??_scale+2,w
  4328     0D7E  00A5               	movwf	___flmul@b+1
  4329     0D7F  0843               	movf	??_scale+1,w
  4330     0D80  00A4               	movwf	___flmul@b
  4331     0D81  084F               	movf	_scale$1368+3,w
  4332     0D82  00AB               	movwf	___flmul@a+3
  4333     0D83  084E               	movf	_scale$1368+2,w
  4334     0D84  00AA               	movwf	___flmul@a+2
  4335     0D85  084D               	movf	_scale$1368+1,w
  4336     0D86  00A9               	movwf	___flmul@a+1
  4337     0D87  084C               	movf	_scale$1368,w
  4338     0D88  00A8               	movwf	___flmul@a
  4339     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4340     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4341     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4342     0D90  0827               	movf	?___flmul+3,w
  4343     0D91  00C1               	movwf	?_scale+3
  4344     0D92  0826               	movf	?___flmul+2,w
  4345     0D93  00C0               	movwf	?_scale+2
  4346     0D94  0825               	movf	?___flmul+1,w
  4347     0D95  00BF               	movwf	?_scale+1
  4348     0D96  0824               	movf	?___flmul,w
  4349     0D97  00BE               	movwf	?_scale
  4350     0D98  2FFF               	goto	l369
  4351     0D99                     l3048:
  4352     0D99  0850               	movf	scale@scl,w
  4353     0D9A  3A80               	xorlw	128
  4354     0D9B  3E75               	addlw	-139
  4355     0D9C  1C03               	skipc
  4356     0D9D  2D9F               	goto	u4321
  4357     0D9E  2DA0               	goto	u4320
  4358     0D9F                     u4321:
  4359     0D9F  2E28               	goto	l3054
  4360     0DA0                     u4320:
  4361     0DA0                     l3050:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4364     0DA0  300A               	movlw	10
  4365     0DA1  00F0               	movwf	___awmod@divisor
  4366     0DA2  3000               	movlw	0
  4367     0DA3  00F1               	movwf	___awmod@divisor+1
  4368     0DA4  0850               	movf	scale@scl,w
  4369     0DA5  00F2               	movwf	___awmod@dividend
  4370     0DA6  01F3               	clrf	___awmod@dividend+1
  4371     0DA7  1BF2               	btfsc	___awmod@dividend,7
  4372     0DA8  03F3               	decf	___awmod@dividend+1,f
  4373     0DA9  160A  158A  267B  120A  158A  	fcall	___awmod
  4374     0DAE  0870               	movf	?___awmod,w
  4375     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4376     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4377     0DB1  00C2               	movwf	??_scale
  4378     0DB2  3001               	movlw	1
  4379     0DB3                     u4335:
  4380     0DB3  1003               	clrc
  4381     0DB4  0DC2               	rlf	??_scale,f
  4382     0DB5  3EFF               	addlw	-1
  4383     0DB6  1D03               	skipz
  4384     0DB7  2DB3               	goto	u4335
  4385     0DB8  1003               	clrc
  4386     0DB9  0D42               	rlf	??_scale,w
  4387     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4388     0DBB  0084               	movwf	4
  4389     0DBC  120A  118A  200D  120A  158A  	fcall	stringdir
  4390     0DC1  00C3               	movwf	??_scale+1
  4391     0DC2  120A  118A  200D  120A  158A  	fcall	stringdir
  4392     0DC7  00C4               	movwf	??_scale+2
  4393     0DC8  120A  118A  200D  120A  158A  	fcall	stringdir
  4394     0DCD  00C5               	movwf	??_scale+3
  4395     0DCE  120A  118A  200D  120A  158A  	fcall	stringdir
  4396     0DD3  00C6               	movwf	??_scale+4
  4397     0DD4  0846               	movf	??_scale+4,w
  4398     0DD5  00A7               	movwf	___flmul@b+3
  4399     0DD6  0845               	movf	??_scale+3,w
  4400     0DD7  00A6               	movwf	___flmul@b+2
  4401     0DD8  0844               	movf	??_scale+2,w
  4402     0DD9  00A5               	movwf	___flmul@b+1
  4403     0DDA  0843               	movf	??_scale+1,w
  4404     0DDB  00A4               	movwf	___flmul@b
  4405     0DDC  300A               	movlw	10
  4406     0DDD  00F7               	movwf	___awdiv@divisor
  4407     0DDE  3000               	movlw	0
  4408     0DDF  00F8               	movwf	___awdiv@divisor+1
  4409     0DE0  0850               	movf	scale@scl,w
  4410     0DE1  00F9               	movwf	___awdiv@dividend
  4411     0DE2  01FA               	clrf	___awdiv@dividend+1
  4412     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  4413     0DE4  03FA               	decf	___awdiv@dividend+1,f
  4414     0DE5  160A  158A  2797  120A  158A  	fcall	___awdiv
  4415     0DEA  0877               	movf	?___awdiv,w
  4416     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4417     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4418     0DED  00C7               	movwf	??_scale+5
  4419     0DEE  3001               	movlw	1
  4420     0DEF                     u4345:
  4421     0DEF  1003               	clrc
  4422     0DF0  0DC7               	rlf	??_scale+5,f
  4423     0DF1  3EFF               	addlw	-1
  4424     0DF2  1D03               	skipz
  4425     0DF3  2DEF               	goto	u4345
  4426     0DF4  1003               	clrc
  4427     0DF5  0D47               	rlf	??_scale+5,w
  4428     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4429     0DF7  0084               	movwf	4
  4430     0DF8  120A  118A  200D  120A  158A  	fcall	stringdir
  4431     0DFD  00C8               	movwf	??_scale+6
  4432     0DFE  120A  118A  200D  120A  158A  	fcall	stringdir
  4433     0E03  00C9               	movwf	??_scale+7
  4434     0E04  120A  118A  200D  120A  158A  	fcall	stringdir
  4435     0E09  00CA               	movwf	??_scale+8
  4436     0E0A  120A  118A  200D  120A  158A  	fcall	stringdir
  4437     0E0F  00CB               	movwf	??_scale+9
  4438     0E10  084B               	movf	??_scale+9,w
  4439     0E11  00AB               	movwf	___flmul@a+3
  4440     0E12  084A               	movf	??_scale+8,w
  4441     0E13  00AA               	movwf	___flmul@a+2
  4442     0E14  0849               	movf	??_scale+7,w
  4443     0E15  00A9               	movwf	___flmul@a+1
  4444     0E16  0848               	movf	??_scale+6,w
  4445     0E17  00A8               	movwf	___flmul@a
  4446     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4447     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4448     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4449     0E1F  0827               	movf	?___flmul+3,w
  4450     0E20  00C1               	movwf	?_scale+3
  4451     0E21  0826               	movf	?___flmul+2,w
  4452     0E22  00C0               	movwf	?_scale+2
  4453     0E23  0825               	movf	?___flmul+1,w
  4454     0E24  00BF               	movwf	?_scale+1
  4455     0E25  0824               	movf	?___flmul,w
  4456     0E26  00BE               	movwf	?_scale
  4457     0E27  2FFF               	goto	l369
  4458     0E28                     l3054:
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4461     0E28  0850               	movf	scale@scl,w
  4462     0E29  00C2               	movwf	??_scale
  4463     0E2A  3001               	movlw	1
  4464     0E2B                     u4355:
  4465     0E2B  1003               	clrc
  4466     0E2C  0DC2               	rlf	??_scale,f
  4467     0E2D  3EFF               	addlw	-1
  4468     0E2E  1D03               	skipz
  4469     0E2F  2E2B               	goto	u4355
  4470     0E30  1003               	clrc
  4471     0E31  0D42               	rlf	??_scale,w
  4472     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4473     0E33  0084               	movwf	4
  4474     0E34  120A  118A  200D  120A  158A  	fcall	stringdir
  4475     0E39  00C3               	movwf	??_scale+1
  4476     0E3A  120A  118A  200D  120A  158A  	fcall	stringdir
  4477     0E3F  00C4               	movwf	??_scale+2
  4478     0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  4479     0E45  00C5               	movwf	??_scale+3
  4480     0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  4481     0E4B  00C6               	movwf	??_scale+4
  4482     0E4C  0846               	movf	??_scale+4,w
  4483     0E4D  00C1               	movwf	?_scale+3
  4484     0E4E  0845               	movf	??_scale+3,w
  4485     0E4F  00C0               	movwf	?_scale+2
  4486     0E50  0844               	movf	??_scale+2,w
  4487     0E51  00BF               	movwf	?_scale+1
  4488     0E52  0843               	movf	??_scale+1,w
  4489     0E53  00BE               	movwf	?_scale
  4490     0E54  2FFF               	goto	l369
  4491     0E55                     l3058:
  4492                           
  4493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4494     0E55  0850               	movf	scale@scl,w
  4495     0E56  3A80               	xorlw	128
  4496     0E57  3E12               	addlw	-238
  4497     0E58  1C03               	skipc
  4498     0E59  2E5B               	goto	u4361
  4499     0E5A  2E5C               	goto	u4360
  4500     0E5B                     u4361:
  4501     0E5B  2F44               	goto	l3066
  4502     0E5C                     u4360:
  4503     0E5C                     l3060:
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4506     0E5C  300A               	movlw	10
  4507     0E5D  00F7               	movwf	___awdiv@divisor
  4508     0E5E  3000               	movlw	0
  4509     0E5F  00F8               	movwf	___awdiv@divisor+1
  4510     0E60  0850               	movf	scale@scl,w
  4511     0E61  00F2               	movwf	___awmod@dividend
  4512     0E62  01F3               	clrf	___awmod@dividend+1
  4513     0E63  1BF2               	btfsc	___awmod@dividend,7
  4514     0E64  03F3               	decf	___awmod@dividend+1,f
  4515     0E65  3064               	movlw	100
  4516     0E66  00F0               	movwf	___awmod@divisor
  4517     0E67  3000               	movlw	0
  4518     0E68  00F1               	movwf	___awmod@divisor+1
  4519     0E69  160A  158A  267B  120A  158A  	fcall	___awmod
  4520     0E6E  0871               	movf	?___awmod+1,w
  4521     0E6F  00FA               	movwf	___awdiv@dividend+1
  4522     0E70  0870               	movf	?___awmod,w
  4523     0E71  00F9               	movwf	___awdiv@dividend
  4524     0E72  160A  158A  2797  120A  158A  	fcall	___awdiv
  4525     0E77  0877               	movf	?___awdiv,w
  4526     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4527     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0E7A  00C2               	movwf	??_scale
  4529     0E7B  3001               	movlw	1
  4530     0E7C                     u4375:
  4531     0E7C  1003               	clrc
  4532     0E7D  0DC2               	rlf	??_scale,f
  4533     0E7E  3EFF               	addlw	-1
  4534     0E7F  1D03               	skipz
  4535     0E80  2E7C               	goto	u4375
  4536     0E81  1003               	clrc
  4537     0E82  0D42               	rlf	??_scale,w
  4538     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4539     0E84  0084               	movwf	4
  4540     0E85  120A  118A  200D  120A  158A  	fcall	stringdir
  4541     0E8A  00C3               	movwf	??_scale+1
  4542     0E8B  120A  118A  200D  120A  158A  	fcall	stringdir
  4543     0E90  00C4               	movwf	??_scale+2
  4544     0E91  120A  118A  200D  120A  158A  	fcall	stringdir
  4545     0E96  00C5               	movwf	??_scale+3
  4546     0E97  120A  118A  200D  120A  158A  	fcall	stringdir
  4547     0E9C  00C6               	movwf	??_scale+4
  4548     0E9D  0846               	movf	??_scale+4,w
  4549     0E9E  00A7               	movwf	___flmul@b+3
  4550     0E9F  0845               	movf	??_scale+3,w
  4551     0EA0  00A6               	movwf	___flmul@b+2
  4552     0EA1  0844               	movf	??_scale+2,w
  4553     0EA2  00A5               	movwf	___flmul@b+1
  4554     0EA3  0843               	movf	??_scale+1,w
  4555     0EA4  00A4               	movwf	___flmul@b
  4556     0EA5  3064               	movlw	100
  4557     0EA6  00F7               	movwf	___awdiv@divisor
  4558     0EA7  3000               	movlw	0
  4559     0EA8  00F8               	movwf	___awdiv@divisor+1
  4560     0EA9  0850               	movf	scale@scl,w
  4561     0EAA  00F9               	movwf	___awdiv@dividend
  4562     0EAB  01FA               	clrf	___awdiv@dividend+1
  4563     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4564     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4565     0EAE  160A  158A  2797  120A  158A  	fcall	___awdiv
  4566     0EB3  0877               	movf	?___awdiv,w
  4567     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4568     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4569     0EB6  00C7               	movwf	??_scale+5
  4570     0EB7  3001               	movlw	1
  4571     0EB8                     u4385:
  4572     0EB8  1003               	clrc
  4573     0EB9  0DC7               	rlf	??_scale+5,f
  4574     0EBA  3EFF               	addlw	-1
  4575     0EBB  1D03               	skipz
  4576     0EBC  2EB8               	goto	u4385
  4577     0EBD  1003               	clrc
  4578     0EBE  0D47               	rlf	??_scale+5,w
  4579     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4580     0EC0  0084               	movwf	4
  4581     0EC1  120A  118A  200D  120A  158A  	fcall	stringdir
  4582     0EC6  00C8               	movwf	??_scale+6
  4583     0EC7  120A  118A  200D  120A  158A  	fcall	stringdir
  4584     0ECC  00C9               	movwf	??_scale+7
  4585     0ECD  120A  118A  200D  120A  158A  	fcall	stringdir
  4586     0ED2  00CA               	movwf	??_scale+8
  4587     0ED3  120A  118A  200D  120A  158A  	fcall	stringdir
  4588     0ED8  00CB               	movwf	??_scale+9
  4589     0ED9  084B               	movf	??_scale+9,w
  4590     0EDA  00AB               	movwf	___flmul@a+3
  4591     0EDB  084A               	movf	??_scale+8,w
  4592     0EDC  00AA               	movwf	___flmul@a+2
  4593     0EDD  0849               	movf	??_scale+7,w
  4594     0EDE  00A9               	movwf	___flmul@a+1
  4595     0EDF  0848               	movf	??_scale+6,w
  4596     0EE0  00A8               	movwf	___flmul@a
  4597     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4598     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4599     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4600     0EE8  0827               	movf	?___flmul+3,w
  4601     0EE9  00CF               	movwf	_scale$1368+3
  4602     0EEA  0826               	movf	?___flmul+2,w
  4603     0EEB  00CE               	movwf	_scale$1368+2
  4604     0EEC  0825               	movf	?___flmul+1,w
  4605     0EED  00CD               	movwf	_scale$1368+1
  4606     0EEE  0824               	movf	?___flmul,w
  4607     0EEF  00CC               	movwf	_scale$1368
  4608                           
  4609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4610     0EF0  300A               	movlw	10
  4611     0EF1  00F0               	movwf	___awmod@divisor
  4612     0EF2  3000               	movlw	0
  4613     0EF3  00F1               	movwf	___awmod@divisor+1
  4614     0EF4  0850               	movf	scale@scl,w
  4615     0EF5  00F2               	movwf	___awmod@dividend
  4616     0EF6  01F3               	clrf	___awmod@dividend+1
  4617     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4618     0EF8  03F3               	decf	___awmod@dividend+1,f
  4619     0EF9  160A  158A  267B  120A  158A  	fcall	___awmod
  4620     0EFE  0870               	movf	?___awmod,w
  4621     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4622     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4623     0F01  00C2               	movwf	??_scale
  4624     0F02  3001               	movlw	1
  4625     0F03                     u4395:
  4626     0F03  1003               	clrc
  4627     0F04  0DC2               	rlf	??_scale,f
  4628     0F05  3EFF               	addlw	-1
  4629     0F06  1D03               	skipz
  4630     0F07  2F03               	goto	u4395
  4631     0F08  1003               	clrc
  4632     0F09  0D42               	rlf	??_scale,w
  4633     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4634     0F0B  0084               	movwf	4
  4635     0F0C  120A  118A  200D  120A  158A  	fcall	stringdir
  4636     0F11  00C3               	movwf	??_scale+1
  4637     0F12  120A  118A  200D  120A  158A  	fcall	stringdir
  4638     0F17  00C4               	movwf	??_scale+2
  4639     0F18  120A  118A  200D  120A  158A  	fcall	stringdir
  4640     0F1D  00C5               	movwf	??_scale+3
  4641     0F1E  120A  118A  200D  120A  158A  	fcall	stringdir
  4642     0F23  00C6               	movwf	??_scale+4
  4643     0F24  0846               	movf	??_scale+4,w
  4644     0F25  00A7               	movwf	___flmul@b+3
  4645     0F26  0845               	movf	??_scale+3,w
  4646     0F27  00A6               	movwf	___flmul@b+2
  4647     0F28  0844               	movf	??_scale+2,w
  4648     0F29  00A5               	movwf	___flmul@b+1
  4649     0F2A  0843               	movf	??_scale+1,w
  4650     0F2B  00A4               	movwf	___flmul@b
  4651     0F2C  084F               	movf	_scale$1368+3,w
  4652     0F2D  00AB               	movwf	___flmul@a+3
  4653     0F2E  084E               	movf	_scale$1368+2,w
  4654     0F2F  00AA               	movwf	___flmul@a+2
  4655     0F30  084D               	movf	_scale$1368+1,w
  4656     0F31  00A9               	movwf	___flmul@a+1
  4657     0F32  084C               	movf	_scale$1368,w
  4658     0F33  00A8               	movwf	___flmul@a
  4659     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4660     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4661     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4662     0F3B  0827               	movf	?___flmul+3,w
  4663     0F3C  00C1               	movwf	?_scale+3
  4664     0F3D  0826               	movf	?___flmul+2,w
  4665     0F3E  00C0               	movwf	?_scale+2
  4666     0F3F  0825               	movf	?___flmul+1,w
  4667     0F40  00BF               	movwf	?_scale+1
  4668     0F41  0824               	movf	?___flmul,w
  4669     0F42  00BE               	movwf	?_scale
  4670     0F43  2FFF               	goto	l369
  4671     0F44                     l3066:
  4672     0F44  0850               	movf	scale@scl,w
  4673     0F45  3A80               	xorlw	128
  4674     0F46  3E75               	addlw	-139
  4675     0F47  1C03               	skipc
  4676     0F48  2F4A               	goto	u4401
  4677     0F49  2F4B               	goto	u4400
  4678     0F4A                     u4401:
  4679     0F4A  2FD3               	goto	l3072
  4680     0F4B                     u4400:
  4681     0F4B                     l3068:
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4684     0F4B  300A               	movlw	10
  4685     0F4C  00F0               	movwf	___awmod@divisor
  4686     0F4D  3000               	movlw	0
  4687     0F4E  00F1               	movwf	___awmod@divisor+1
  4688     0F4F  0850               	movf	scale@scl,w
  4689     0F50  00F2               	movwf	___awmod@dividend
  4690     0F51  01F3               	clrf	___awmod@dividend+1
  4691     0F52  1BF2               	btfsc	___awmod@dividend,7
  4692     0F53  03F3               	decf	___awmod@dividend+1,f
  4693     0F54  160A  158A  267B  120A  158A  	fcall	___awmod
  4694     0F59  0870               	movf	?___awmod,w
  4695     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4696     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4697     0F5C  00C2               	movwf	??_scale
  4698     0F5D  3001               	movlw	1
  4699     0F5E                     u4415:
  4700     0F5E  1003               	clrc
  4701     0F5F  0DC2               	rlf	??_scale,f
  4702     0F60  3EFF               	addlw	-1
  4703     0F61  1D03               	skipz
  4704     0F62  2F5E               	goto	u4415
  4705     0F63  1003               	clrc
  4706     0F64  0D42               	rlf	??_scale,w
  4707     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4708     0F66  0084               	movwf	4
  4709     0F67  120A  118A  200D  120A  158A  	fcall	stringdir
  4710     0F6C  00C3               	movwf	??_scale+1
  4711     0F6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4712     0F72  00C4               	movwf	??_scale+2
  4713     0F73  120A  118A  200D  120A  158A  	fcall	stringdir
  4714     0F78  00C5               	movwf	??_scale+3
  4715     0F79  120A  118A  200D  120A  158A  	fcall	stringdir
  4716     0F7E  00C6               	movwf	??_scale+4
  4717     0F7F  0846               	movf	??_scale+4,w
  4718     0F80  00A7               	movwf	___flmul@b+3
  4719     0F81  0845               	movf	??_scale+3,w
  4720     0F82  00A6               	movwf	___flmul@b+2
  4721     0F83  0844               	movf	??_scale+2,w
  4722     0F84  00A5               	movwf	___flmul@b+1
  4723     0F85  0843               	movf	??_scale+1,w
  4724     0F86  00A4               	movwf	___flmul@b
  4725     0F87  300A               	movlw	10
  4726     0F88  00F7               	movwf	___awdiv@divisor
  4727     0F89  3000               	movlw	0
  4728     0F8A  00F8               	movwf	___awdiv@divisor+1
  4729     0F8B  0850               	movf	scale@scl,w
  4730     0F8C  00F9               	movwf	___awdiv@dividend
  4731     0F8D  01FA               	clrf	___awdiv@dividend+1
  4732     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4733     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4734     0F90  160A  158A  2797  120A  158A  	fcall	___awdiv
  4735     0F95  0877               	movf	?___awdiv,w
  4736     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4737     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4738     0F98  00C7               	movwf	??_scale+5
  4739     0F99  3001               	movlw	1
  4740     0F9A                     u4425:
  4741     0F9A  1003               	clrc
  4742     0F9B  0DC7               	rlf	??_scale+5,f
  4743     0F9C  3EFF               	addlw	-1
  4744     0F9D  1D03               	skipz
  4745     0F9E  2F9A               	goto	u4425
  4746     0F9F  1003               	clrc
  4747     0FA0  0D47               	rlf	??_scale+5,w
  4748     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4749     0FA2  0084               	movwf	4
  4750     0FA3  120A  118A  200D  120A  158A  	fcall	stringdir
  4751     0FA8  00C8               	movwf	??_scale+6
  4752     0FA9  120A  118A  200D  120A  158A  	fcall	stringdir
  4753     0FAE  00C9               	movwf	??_scale+7
  4754     0FAF  120A  118A  200D  120A  158A  	fcall	stringdir
  4755     0FB4  00CA               	movwf	??_scale+8
  4756     0FB5  120A  118A  200D  120A  158A  	fcall	stringdir
  4757     0FBA  00CB               	movwf	??_scale+9
  4758     0FBB  084B               	movf	??_scale+9,w
  4759     0FBC  00AB               	movwf	___flmul@a+3
  4760     0FBD  084A               	movf	??_scale+8,w
  4761     0FBE  00AA               	movwf	___flmul@a+2
  4762     0FBF  0849               	movf	??_scale+7,w
  4763     0FC0  00A9               	movwf	___flmul@a+1
  4764     0FC1  0848               	movf	??_scale+6,w
  4765     0FC2  00A8               	movwf	___flmul@a
  4766     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4767     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4768     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4769     0FCA  0827               	movf	?___flmul+3,w
  4770     0FCB  00C1               	movwf	?_scale+3
  4771     0FCC  0826               	movf	?___flmul+2,w
  4772     0FCD  00C0               	movwf	?_scale+2
  4773     0FCE  0825               	movf	?___flmul+1,w
  4774     0FCF  00BF               	movwf	?_scale+1
  4775     0FD0  0824               	movf	?___flmul,w
  4776     0FD1  00BE               	movwf	?_scale
  4777     0FD2  2FFF               	goto	l369
  4778     0FD3                     l3072:
  4779                           
  4780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4781     0FD3  0850               	movf	scale@scl,w
  4782     0FD4  00C2               	movwf	??_scale
  4783     0FD5  3001               	movlw	1
  4784     0FD6                     u4435:
  4785     0FD6  1003               	clrc
  4786     0FD7  0DC2               	rlf	??_scale,f
  4787     0FD8  3EFF               	addlw	-1
  4788     0FD9  1D03               	skipz
  4789     0FDA  2FD6               	goto	u4435
  4790     0FDB  1003               	clrc
  4791     0FDC  0D42               	rlf	??_scale,w
  4792     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4793     0FDE  0084               	movwf	4
  4794     0FDF  120A  118A  200D  120A  158A  	fcall	stringdir
  4795     0FE4  00C3               	movwf	??_scale+1
  4796     0FE5  120A  118A  200D  120A  158A  	fcall	stringdir
  4797     0FEA  00C4               	movwf	??_scale+2
  4798     0FEB  120A  118A  200D  120A  158A  	fcall	stringdir
  4799     0FF0  00C5               	movwf	??_scale+3
  4800     0FF1  120A  118A  200D  120A  158A  	fcall	stringdir
  4801     0FF6  00C6               	movwf	??_scale+4
  4802     0FF7  0846               	movf	??_scale+4,w
  4803     0FF8  00C1               	movwf	?_scale+3
  4804     0FF9  0845               	movf	??_scale+3,w
  4805     0FFA  00C0               	movwf	?_scale+2
  4806     0FFB  0844               	movf	??_scale+2,w
  4807     0FFC  00BF               	movwf	?_scale+1
  4808     0FFD  0843               	movf	??_scale+1,w
  4809     0FFE  00BE               	movwf	?_scale
  4810     0FFF                     l369:
  4811     0FFF  0008               	return
  4812     1000                     __end_of_scale:
  4813                           
  4814                           	psect	text3
  4815     1E7B                     __ptext3:	
  4816 ;; *************** function ___awmod *****************
  4817 ;; Defined at:
  4818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  divisor         2    0[COMMON] int 
  4821 ;;  dividend        2    2[COMMON] int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  sign            1    6[COMMON] unsigned char 
  4824 ;;  counter         1    5[COMMON] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    0[COMMON] int 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         4       0       0       0       0
  4835 ;;      Locals:         2       0       0       0       0
  4836 ;;      Temps:          1       0       0       0       0
  4837 ;;      Totals:         7       0       0       0       0
  4838 ;;Total ram usage:        7 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_scale
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847     1E7B                     ___awmod:	
  4848                           ;psect for function ___awmod
  4849                           
  4850     1E7B                     l2548:	
  4851                           ;incstack = 0
  4852                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4853                           
  4854     1E7B  01F6               	clrf	___awmod@sign
  4855     1E7C                     l2550:
  4856     1E7C  1FF3               	btfss	___awmod@dividend+1,7
  4857     1E7D  2E7F               	goto	u3101
  4858     1E7E  2E80               	goto	u3100
  4859     1E7F                     u3101:
  4860     1E7F  2E87               	goto	l2556
  4861     1E80                     u3100:
  4862     1E80                     l2552:
  4863     1E80  09F2               	comf	___awmod@dividend,f
  4864     1E81  09F3               	comf	___awmod@dividend+1,f
  4865     1E82  0AF2               	incf	___awmod@dividend,f
  4866     1E83  1903               	skipnz
  4867     1E84  0AF3               	incf	___awmod@dividend+1,f
  4868     1E85                     l2554:
  4869     1E85  01F6               	clrf	___awmod@sign
  4870     1E86  0AF6               	incf	___awmod@sign,f
  4871     1E87                     l2556:
  4872     1E87  1FF1               	btfss	___awmod@divisor+1,7
  4873     1E88  2E8A               	goto	u3111
  4874     1E89  2E8B               	goto	u3110
  4875     1E8A                     u3111:
  4876     1E8A  2E90               	goto	l2560
  4877     1E8B                     u3110:
  4878     1E8B                     l2558:
  4879     1E8B  09F0               	comf	___awmod@divisor,f
  4880     1E8C  09F1               	comf	___awmod@divisor+1,f
  4881     1E8D  0AF0               	incf	___awmod@divisor,f
  4882     1E8E  1903               	skipnz
  4883     1E8F  0AF1               	incf	___awmod@divisor+1,f
  4884     1E90                     l2560:
  4885     1E90  0870               	movf	___awmod@divisor,w
  4886     1E91  0471               	iorwf	___awmod@divisor+1,w
  4887     1E92  1903               	btfsc	3,2
  4888     1E93  2E95               	goto	u3121
  4889     1E94  2E96               	goto	u3120
  4890     1E95                     u3121:
  4891     1E95  2EC5               	goto	l2578
  4892     1E96                     u3120:
  4893     1E96                     l2562:
  4894     1E96  01F5               	clrf	___awmod@counter
  4895     1E97  0AF5               	incf	___awmod@counter,f
  4896     1E98  2EA4               	goto	l2568
  4897     1E99                     l2564:
  4898     1E99  3001               	movlw	1
  4899     1E9A                     u3135:
  4900     1E9A  1003               	clrc
  4901     1E9B  0DF0               	rlf	___awmod@divisor,f
  4902     1E9C  0DF1               	rlf	___awmod@divisor+1,f
  4903     1E9D  3EFF               	addlw	-1
  4904     1E9E  1D03               	skipz
  4905     1E9F  2E9A               	goto	u3135
  4906     1EA0                     l2566:
  4907     1EA0  3001               	movlw	1
  4908     1EA1  00F4               	movwf	??___awmod
  4909     1EA2  0874               	movf	??___awmod,w
  4910     1EA3  07F5               	addwf	___awmod@counter,f
  4911     1EA4                     l2568:
  4912     1EA4  1FF1               	btfss	___awmod@divisor+1,7
  4913     1EA5  2EA7               	goto	u3141
  4914     1EA6  2EA8               	goto	u3140
  4915     1EA7                     u3141:
  4916     1EA7  2E99               	goto	l2564
  4917     1EA8                     u3140:
  4918     1EA8                     l2570:
  4919     1EA8  0871               	movf	___awmod@divisor+1,w
  4920     1EA9  0273               	subwf	___awmod@dividend+1,w
  4921     1EAA  1D03               	skipz
  4922     1EAB  2EAE               	goto	u3155
  4923     1EAC  0870               	movf	___awmod@divisor,w
  4924     1EAD  0272               	subwf	___awmod@dividend,w
  4925     1EAE                     u3155:
  4926     1EAE  1C03               	skipc
  4927     1EAF  2EB1               	goto	u3151
  4928     1EB0  2EB2               	goto	u3150
  4929     1EB1                     u3151:
  4930     1EB1  2EB8               	goto	l2574
  4931     1EB2                     u3150:
  4932     1EB2                     l2572:
  4933     1EB2  0870               	movf	___awmod@divisor,w
  4934     1EB3  02F2               	subwf	___awmod@dividend,f
  4935     1EB4  0871               	movf	___awmod@divisor+1,w
  4936     1EB5  1C03               	skipc
  4937     1EB6  03F3               	decf	___awmod@dividend+1,f
  4938     1EB7  02F3               	subwf	___awmod@dividend+1,f
  4939     1EB8                     l2574:
  4940     1EB8  3001               	movlw	1
  4941     1EB9                     u3165:
  4942     1EB9  1003               	clrc
  4943     1EBA  0CF1               	rrf	___awmod@divisor+1,f
  4944     1EBB  0CF0               	rrf	___awmod@divisor,f
  4945     1EBC  3EFF               	addlw	-1
  4946     1EBD  1D03               	skipz
  4947     1EBE  2EB9               	goto	u3165
  4948     1EBF                     l2576:
  4949     1EBF  3001               	movlw	1
  4950     1EC0  02F5               	subwf	___awmod@counter,f
  4951     1EC1  1D03               	btfss	3,2
  4952     1EC2  2EC4               	goto	u3171
  4953     1EC3  2EC5               	goto	u3170
  4954     1EC4                     u3171:
  4955     1EC4  2EA8               	goto	l2570
  4956     1EC5                     u3170:
  4957     1EC5                     l2578:
  4958     1EC5  0876               	movf	___awmod@sign,w
  4959     1EC6  1903               	btfsc	3,2
  4960     1EC7  2EC9               	goto	u3181
  4961     1EC8  2ECA               	goto	u3180
  4962     1EC9                     u3181:
  4963     1EC9  2ECF               	goto	l2582
  4964     1ECA                     u3180:
  4965     1ECA                     l2580:
  4966     1ECA  09F2               	comf	___awmod@dividend,f
  4967     1ECB  09F3               	comf	___awmod@dividend+1,f
  4968     1ECC  0AF2               	incf	___awmod@dividend,f
  4969     1ECD  1903               	skipnz
  4970     1ECE  0AF3               	incf	___awmod@dividend+1,f
  4971     1ECF                     l2582:
  4972     1ECF  0873               	movf	___awmod@dividend+1,w
  4973     1ED0  00F1               	movwf	?___awmod+1
  4974     1ED1  0872               	movf	___awmod@dividend,w
  4975     1ED2  00F0               	movwf	?___awmod
  4976     1ED3                     l605:
  4977     1ED3  0008               	return
  4978     1ED4                     __end_of___awmod:
  4979                           
  4980                           	psect	text4
  4981     1F97                     __ptext4:	
  4982 ;; *************** function ___awdiv *****************
  4983 ;; Defined at:
  4984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  divisor         2    7[COMMON] int 
  4987 ;;  dividend        2    9[COMMON] int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  quotient        2    2[BANK0 ] int 
  4990 ;;  sign            1    1[BANK0 ] unsigned char 
  4991 ;;  counter         1    0[BANK0 ] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  2    7[COMMON] int 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         4       0       0       0       0
  5002 ;;      Locals:         0       4       0       0       0
  5003 ;;      Temps:          1       0       0       0       0
  5004 ;;      Totals:         5       4       0       0       0
  5005 ;;Total ram usage:        9 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_scale
  5011 ;;		_sprintf
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015     1F97                     ___awdiv:	
  5016                           ;psect for function ___awdiv
  5017                           
  5018     1F97                     l2504:	
  5019                           ;incstack = 0
  5020                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5021                           
  5022     1F97  1283               	bcf	3,5	;RP0=0, select bank0
  5023     1F98  1303               	bcf	3,6	;RP1=0, select bank0
  5024     1F99  01A1               	clrf	___awdiv@sign
  5025     1F9A                     l2506:
  5026     1F9A  1FF8               	btfss	___awdiv@divisor+1,7
  5027     1F9B  2F9D               	goto	u3001
  5028     1F9C  2F9E               	goto	u3000
  5029     1F9D                     u3001:
  5030     1F9D  2FA5               	goto	l2512
  5031     1F9E                     u3000:
  5032     1F9E                     l2508:
  5033     1F9E  09F7               	comf	___awdiv@divisor,f
  5034     1F9F  09F8               	comf	___awdiv@divisor+1,f
  5035     1FA0  0AF7               	incf	___awdiv@divisor,f
  5036     1FA1  1903               	skipnz
  5037     1FA2  0AF8               	incf	___awdiv@divisor+1,f
  5038     1FA3                     l2510:
  5039     1FA3  01A1               	clrf	___awdiv@sign
  5040     1FA4  0AA1               	incf	___awdiv@sign,f
  5041     1FA5                     l2512:
  5042     1FA5  1FFA               	btfss	___awdiv@dividend+1,7
  5043     1FA6  2FA8               	goto	u3011
  5044     1FA7  2FA9               	goto	u3010
  5045     1FA8                     u3011:
  5046     1FA8  2FB2               	goto	l2518
  5047     1FA9                     u3010:
  5048     1FA9                     l2514:
  5049     1FA9  09F9               	comf	___awdiv@dividend,f
  5050     1FAA  09FA               	comf	___awdiv@dividend+1,f
  5051     1FAB  0AF9               	incf	___awdiv@dividend,f
  5052     1FAC  1903               	skipnz
  5053     1FAD  0AFA               	incf	___awdiv@dividend+1,f
  5054     1FAE                     l2516:
  5055     1FAE  3001               	movlw	1
  5056     1FAF  00FB               	movwf	??___awdiv
  5057     1FB0  087B               	movf	??___awdiv,w
  5058     1FB1  06A1               	xorwf	___awdiv@sign,f
  5059     1FB2                     l2518:
  5060     1FB2  01A2               	clrf	___awdiv@quotient
  5061     1FB3  01A3               	clrf	___awdiv@quotient+1
  5062     1FB4                     l2520:
  5063     1FB4  0877               	movf	___awdiv@divisor,w
  5064     1FB5  0478               	iorwf	___awdiv@divisor+1,w
  5065     1FB6  1903               	btfsc	3,2
  5066     1FB7  2FB9               	goto	u3021
  5067     1FB8  2FBA               	goto	u3020
  5068     1FB9                     u3021:
  5069     1FB9  2FF1               	goto	l2540
  5070     1FBA                     u3020:
  5071     1FBA                     l2522:
  5072     1FBA  01A0               	clrf	___awdiv@counter
  5073     1FBB  0AA0               	incf	___awdiv@counter,f
  5074     1FBC  2FC8               	goto	l2528
  5075     1FBD                     l2524:
  5076     1FBD  3001               	movlw	1
  5077     1FBE                     u3035:
  5078     1FBE  1003               	clrc
  5079     1FBF  0DF7               	rlf	___awdiv@divisor,f
  5080     1FC0  0DF8               	rlf	___awdiv@divisor+1,f
  5081     1FC1  3EFF               	addlw	-1
  5082     1FC2  1D03               	skipz
  5083     1FC3  2FBE               	goto	u3035
  5084     1FC4                     l2526:
  5085     1FC4  3001               	movlw	1
  5086     1FC5  00FB               	movwf	??___awdiv
  5087     1FC6  087B               	movf	??___awdiv,w
  5088     1FC7  07A0               	addwf	___awdiv@counter,f
  5089     1FC8                     l2528:
  5090     1FC8  1FF8               	btfss	___awdiv@divisor+1,7
  5091     1FC9  2FCB               	goto	u3041
  5092     1FCA  2FCC               	goto	u3040
  5093     1FCB                     u3041:
  5094     1FCB  2FBD               	goto	l2524
  5095     1FCC                     u3040:
  5096     1FCC                     l2530:
  5097     1FCC  3001               	movlw	1
  5098     1FCD                     u3055:
  5099     1FCD  1003               	clrc
  5100     1FCE  0DA2               	rlf	___awdiv@quotient,f
  5101     1FCF  0DA3               	rlf	___awdiv@quotient+1,f
  5102     1FD0  3EFF               	addlw	-1
  5103     1FD1  1D03               	skipz
  5104     1FD2  2FCD               	goto	u3055
  5105     1FD3  0878               	movf	___awdiv@divisor+1,w
  5106     1FD4  027A               	subwf	___awdiv@dividend+1,w
  5107     1FD5  1D03               	skipz
  5108     1FD6  2FD9               	goto	u3065
  5109     1FD7  0877               	movf	___awdiv@divisor,w
  5110     1FD8  0279               	subwf	___awdiv@dividend,w
  5111     1FD9                     u3065:
  5112     1FD9  1C03               	skipc
  5113     1FDA  2FDC               	goto	u3061
  5114     1FDB  2FDD               	goto	u3060
  5115     1FDC                     u3061:
  5116     1FDC  2FE4               	goto	l2536
  5117     1FDD                     u3060:
  5118     1FDD                     l2532:
  5119     1FDD  0877               	movf	___awdiv@divisor,w
  5120     1FDE  02F9               	subwf	___awdiv@dividend,f
  5121     1FDF  0878               	movf	___awdiv@divisor+1,w
  5122     1FE0  1C03               	skipc
  5123     1FE1  03FA               	decf	___awdiv@dividend+1,f
  5124     1FE2  02FA               	subwf	___awdiv@dividend+1,f
  5125     1FE3                     l2534:
  5126     1FE3  1422               	bsf	___awdiv@quotient,0
  5127     1FE4                     l2536:
  5128     1FE4  3001               	movlw	1
  5129     1FE5                     u3075:
  5130     1FE5  1003               	clrc
  5131     1FE6  0CF8               	rrf	___awdiv@divisor+1,f
  5132     1FE7  0CF7               	rrf	___awdiv@divisor,f
  5133     1FE8  3EFF               	addlw	-1
  5134     1FE9  1D03               	skipz
  5135     1FEA  2FE5               	goto	u3075
  5136     1FEB                     l2538:
  5137     1FEB  3001               	movlw	1
  5138     1FEC  02A0               	subwf	___awdiv@counter,f
  5139     1FED  1D03               	btfss	3,2
  5140     1FEE  2FF0               	goto	u3081
  5141     1FEF  2FF1               	goto	u3080
  5142     1FF0                     u3081:
  5143     1FF0  2FCC               	goto	l2530
  5144     1FF1                     u3080:
  5145     1FF1                     l2540:
  5146     1FF1  0821               	movf	___awdiv@sign,w
  5147     1FF2  1903               	btfsc	3,2
  5148     1FF3  2FF5               	goto	u3091
  5149     1FF4  2FF6               	goto	u3090
  5150     1FF5                     u3091:
  5151     1FF5  2FFB               	goto	l2544
  5152     1FF6                     u3090:
  5153     1FF6                     l2542:
  5154     1FF6  09A2               	comf	___awdiv@quotient,f
  5155     1FF7  09A3               	comf	___awdiv@quotient+1,f
  5156     1FF8  0AA2               	incf	___awdiv@quotient,f
  5157     1FF9  1903               	skipnz
  5158     1FFA  0AA3               	incf	___awdiv@quotient+1,f
  5159     1FFB                     l2544:
  5160     1FFB  0823               	movf	___awdiv@quotient+1,w
  5161     1FFC  00F8               	movwf	?___awdiv+1
  5162     1FFD  0822               	movf	___awdiv@quotient,w
  5163     1FFE  00F7               	movwf	?___awdiv
  5164     1FFF                     l592:
  5165     1FFF  0008               	return
  5166     2000                     __end_of___awdiv:
  5167                           
  5168                           	psect	text5
  5169     1B5C                     __ptext5:	
  5170 ;; *************** function _isdigit *****************
  5171 ;; Defined at:
  5172 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  c               1    wreg     unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  c               1    1[COMMON] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;		None               void
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5186 ;;      Params:         0       0       0       0       0
  5187 ;;      Locals:         2       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0
  5189 ;;      Totals:         2       0       0       0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_sprintf
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199     1B5C                     _isdigit:	
  5200                           ;psect for function _isdigit
  5201                           
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5205                           ;isdigit@c stored from wreg
  5206     1B5C  00F1               	movwf	isdigit@c
  5207     1B5D                     l3076:
  5208     1B5D  01F0               	clrf	_isdigit$1155
  5209     1B5E                     l3078:
  5210     1B5E  303A               	movlw	58
  5211     1B5F  0271               	subwf	isdigit@c,w
  5212     1B60  1803               	skipnc
  5213     1B61  2B63               	goto	u4441
  5214     1B62  2B64               	goto	u4440
  5215     1B63                     u4441:
  5216     1B63  2B6C               	goto	l3084
  5217     1B64                     u4440:
  5218     1B64                     l3080:
  5219     1B64  3030               	movlw	48
  5220     1B65  0271               	subwf	isdigit@c,w
  5221     1B66  1C03               	skipc
  5222     1B67  2B69               	goto	u4451
  5223     1B68  2B6A               	goto	u4450
  5224     1B69                     u4451:
  5225     1B69  2B6C               	goto	l3084
  5226     1B6A                     u4450:
  5227     1B6A                     l3082:
  5228     1B6A  01F0               	clrf	_isdigit$1155
  5229     1B6B  0AF0               	incf	_isdigit$1155,f
  5230     1B6C                     l3084:
  5231     1B6C  0C70               	rrf	_isdigit$1155,w
  5232     1B6D                     l926:
  5233     1B6D  0008               	return
  5234     1B6E                     __end_of_isdigit:
  5235                           
  5236                           	psect	text6
  5237     115E                     __ptext6:	
  5238 ;; *************** function _fround *****************
  5239 ;; Defined at:
  5240 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  prec            1    wreg     unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  prec            1   49[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  4   30[BANK0 ] unsigned char 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5254 ;;      Params:         0       4       0       0       0
  5255 ;;      Locals:         0       9       0       0       0
  5256 ;;      Temps:          0       7       0       0       0
  5257 ;;      Totals:         0      20       0       0       0
  5258 ;;Total ram usage:       20 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 2
  5261 ;; This function calls:
  5262 ;;		___flmul
  5263 ;;		___lwdiv
  5264 ;;		___lwmod
  5265 ;; This function is called by:
  5266 ;;		_sprintf
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270     115E                     _fround:	
  5271                           ;psect for function _fround
  5272                           
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5276                           ;fround@prec stored from wreg
  5277     115E  1283               	bcf	3,5	;RP0=0, select bank0
  5278     115F  1303               	bcf	3,6	;RP1=0, select bank0
  5279     1160  00D1               	movwf	fround@prec
  5280     1161                     l3018:
  5281                           
  5282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5283     1161  306E               	movlw	110
  5284     1162  0251               	subwf	fround@prec,w
  5285     1163  1C03               	skipc
  5286     1164  2966               	goto	u4191
  5287     1165  2967               	goto	u4190
  5288     1166                     u4191:
  5289     1166  2A74               	goto	l3026
  5290     1167                     u4190:
  5291     1167                     l3020:
  5292                           
  5293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5294     1167  303F               	movlw	63
  5295     1168  00A7               	movwf	___flmul@b+3
  5296     1169  3000               	movlw	0
  5297     116A  00A6               	movwf	___flmul@b+2
  5298     116B  3000               	movlw	0
  5299     116C  00A5               	movwf	___flmul@b+1
  5300     116D  3000               	movlw	0
  5301     116E  00A4               	movwf	___flmul@b
  5302     116F  3064               	movlw	100
  5303     1170  00F6               	movwf	___lwdiv@divisor
  5304     1171  3000               	movlw	0
  5305     1172  00F7               	movwf	___lwdiv@divisor+1
  5306     1173  0851               	movf	fround@prec,w
  5307     1174  00C2               	movwf	??_fround
  5308     1175  01C3               	clrf	??_fround+1
  5309     1176  0842               	movf	??_fround,w
  5310     1177  00F8               	movwf	___lwdiv@dividend
  5311     1178  0843               	movf	??_fround+1,w
  5312     1179  00F9               	movwf	___lwdiv@dividend+1
  5313     117A  160A  158A  254F  160A  118A  	fcall	___lwdiv
  5314     117F  0876               	movf	?___lwdiv,w
  5315     1180  1283               	bcf	3,5	;RP0=0, select bank0
  5316     1181  1303               	bcf	3,6	;RP1=0, select bank0
  5317     1182  00C4               	movwf	??_fround+2
  5318     1183  3001               	movlw	1
  5319     1184                     u4205:
  5320     1184  1003               	clrc
  5321     1185  0DC4               	rlf	??_fround+2,f
  5322     1186  3EFF               	addlw	-1
  5323     1187  1D03               	skipz
  5324     1188  2984               	goto	u4205
  5325     1189  1003               	clrc
  5326     118A  0D44               	rlf	??_fround+2,w
  5327     118B  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5328     118C  0084               	movwf	4
  5329     118D  120A  118A  200D  160A  118A  	fcall	stringdir
  5330     1192  00C5               	movwf	??_fround+3
  5331     1193  120A  118A  200D  160A  118A  	fcall	stringdir
  5332     1198  00C6               	movwf	??_fround+4
  5333     1199  120A  118A  200D  160A  118A  	fcall	stringdir
  5334     119E  00C7               	movwf	??_fround+5
  5335     119F  120A  118A  200D  160A  118A  	fcall	stringdir
  5336     11A4  00C8               	movwf	??_fround+6
  5337     11A5  0848               	movf	??_fround+6,w
  5338     11A6  00AB               	movwf	___flmul@a+3
  5339     11A7  0847               	movf	??_fround+5,w
  5340     11A8  00AA               	movwf	___flmul@a+2
  5341     11A9  0846               	movf	??_fround+4,w
  5342     11AA  00A9               	movwf	___flmul@a+1
  5343     11AB  0845               	movf	??_fround+3,w
  5344     11AC  00A8               	movwf	___flmul@a
  5345     11AD  120A  158A  215C  160A  118A  	fcall	___flmul
  5346     11B2  1283               	bcf	3,5	;RP0=0, select bank0
  5347     11B3  1303               	bcf	3,6	;RP1=0, select bank0
  5348     11B4  0827               	movf	?___flmul+3,w
  5349     11B5  00D0               	movwf	_fround$1366+3
  5350     11B6  0826               	movf	?___flmul+2,w
  5351     11B7  00CF               	movwf	_fround$1366+2
  5352     11B8  0825               	movf	?___flmul+1,w
  5353     11B9  00CE               	movwf	_fround$1366+1
  5354     11BA  0824               	movf	?___flmul,w
  5355     11BB  00CD               	movwf	_fround$1366
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5358     11BC  300A               	movlw	10
  5359     11BD  00F6               	movwf	___lwdiv@divisor
  5360     11BE  3000               	movlw	0
  5361     11BF  00F7               	movwf	___lwdiv@divisor+1
  5362     11C0  0851               	movf	fround@prec,w
  5363     11C1  00C2               	movwf	??_fround
  5364     11C2  01C3               	clrf	??_fround+1
  5365     11C3  0842               	movf	??_fround,w
  5366     11C4  00F2               	movwf	___lwmod@dividend
  5367     11C5  0843               	movf	??_fround+1,w
  5368     11C6  00F3               	movwf	___lwmod@dividend+1
  5369     11C7  3064               	movlw	100
  5370     11C8  00F0               	movwf	___lwmod@divisor
  5371     11C9  3000               	movlw	0
  5372     11CA  00F1               	movwf	___lwmod@divisor+1
  5373     11CB  160A  158A  24D3  160A  118A  	fcall	___lwmod
  5374     11D0  0871               	movf	?___lwmod+1,w
  5375     11D1  00F9               	movwf	___lwdiv@dividend+1
  5376     11D2  0870               	movf	?___lwmod,w
  5377     11D3  00F8               	movwf	___lwdiv@dividend
  5378     11D4  160A  158A  254F  160A  118A  	fcall	___lwdiv
  5379     11D9  0876               	movf	?___lwdiv,w
  5380     11DA  1283               	bcf	3,5	;RP0=0, select bank0
  5381     11DB  1303               	bcf	3,6	;RP1=0, select bank0
  5382     11DC  00C4               	movwf	??_fround+2
  5383     11DD  3001               	movlw	1
  5384     11DE                     u4215:
  5385     11DE  1003               	clrc
  5386     11DF  0DC4               	rlf	??_fround+2,f
  5387     11E0  3EFF               	addlw	-1
  5388     11E1  1D03               	skipz
  5389     11E2  29DE               	goto	u4215
  5390     11E3  1003               	clrc
  5391     11E4  0D44               	rlf	??_fround+2,w
  5392     11E5  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5393     11E6  0084               	movwf	4
  5394     11E7  120A  118A  200D  160A  118A  	fcall	stringdir
  5395     11EC  00C5               	movwf	??_fround+3
  5396     11ED  120A  118A  200D  160A  118A  	fcall	stringdir
  5397     11F2  00C6               	movwf	??_fround+4
  5398     11F3  120A  118A  200D  160A  118A  	fcall	stringdir
  5399     11F8  00C7               	movwf	??_fround+5
  5400     11F9  120A  118A  200D  160A  118A  	fcall	stringdir
  5401     11FE  00C8               	movwf	??_fround+6
  5402     11FF  0848               	movf	??_fround+6,w
  5403     1200  00A7               	movwf	___flmul@b+3
  5404     1201  0847               	movf	??_fround+5,w
  5405     1202  00A6               	movwf	___flmul@b+2
  5406     1203  0846               	movf	??_fround+4,w
  5407     1204  00A5               	movwf	___flmul@b+1
  5408     1205  0845               	movf	??_fround+3,w
  5409     1206  00A4               	movwf	___flmul@b
  5410     1207  0850               	movf	_fround$1366+3,w
  5411     1208  00AB               	movwf	___flmul@a+3
  5412     1209  084F               	movf	_fround$1366+2,w
  5413     120A  00AA               	movwf	___flmul@a+2
  5414     120B  084E               	movf	_fround$1366+1,w
  5415     120C  00A9               	movwf	___flmul@a+1
  5416     120D  084D               	movf	_fround$1366,w
  5417     120E  00A8               	movwf	___flmul@a
  5418     120F  120A  158A  215C  160A  118A  	fcall	___flmul
  5419     1214  1283               	bcf	3,5	;RP0=0, select bank0
  5420     1215  1303               	bcf	3,6	;RP1=0, select bank0
  5421     1216  0827               	movf	?___flmul+3,w
  5422     1217  00CC               	movwf	_fround$1367+3
  5423     1218  0826               	movf	?___flmul+2,w
  5424     1219  00CB               	movwf	_fround$1367+2
  5425     121A  0825               	movf	?___flmul+1,w
  5426     121B  00CA               	movwf	_fround$1367+1
  5427     121C  0824               	movf	?___flmul,w
  5428     121D  00C9               	movwf	_fround$1367
  5429                           
  5430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5431     121E  300A               	movlw	10
  5432     121F  00F0               	movwf	___lwmod@divisor
  5433     1220  3000               	movlw	0
  5434     1221  00F1               	movwf	___lwmod@divisor+1
  5435     1222  0851               	movf	fround@prec,w
  5436     1223  00C2               	movwf	??_fround
  5437     1224  01C3               	clrf	??_fround+1
  5438     1225  0842               	movf	??_fround,w
  5439     1226  00F2               	movwf	___lwmod@dividend
  5440     1227  0843               	movf	??_fround+1,w
  5441     1228  00F3               	movwf	___lwmod@dividend+1
  5442     1229  160A  158A  24D3  160A  118A  	fcall	___lwmod
  5443     122E  0870               	movf	?___lwmod,w
  5444     122F  1283               	bcf	3,5	;RP0=0, select bank0
  5445     1230  1303               	bcf	3,6	;RP1=0, select bank0
  5446     1231  00C4               	movwf	??_fround+2
  5447     1232  3001               	movlw	1
  5448     1233                     u4225:
  5449     1233  1003               	clrc
  5450     1234  0DC4               	rlf	??_fround+2,f
  5451     1235  3EFF               	addlw	-1
  5452     1236  1D03               	skipz
  5453     1237  2A33               	goto	u4225
  5454     1238  1003               	clrc
  5455     1239  0D44               	rlf	??_fround+2,w
  5456     123A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5457     123B  0084               	movwf	4
  5458     123C  120A  118A  200D  160A  118A  	fcall	stringdir
  5459     1241  00C5               	movwf	??_fround+3
  5460     1242  120A  118A  200D  160A  118A  	fcall	stringdir
  5461     1247  00C6               	movwf	??_fround+4
  5462     1248  120A  118A  200D  160A  118A  	fcall	stringdir
  5463     124D  00C7               	movwf	??_fround+5
  5464     124E  120A  118A  200D  160A  118A  	fcall	stringdir
  5465     1253  00C8               	movwf	??_fround+6
  5466     1254  0848               	movf	??_fround+6,w
  5467     1255  00A7               	movwf	___flmul@b+3
  5468     1256  0847               	movf	??_fround+5,w
  5469     1257  00A6               	movwf	___flmul@b+2
  5470     1258  0846               	movf	??_fround+4,w
  5471     1259  00A5               	movwf	___flmul@b+1
  5472     125A  0845               	movf	??_fround+3,w
  5473     125B  00A4               	movwf	___flmul@b
  5474     125C  084C               	movf	_fround$1367+3,w
  5475     125D  00AB               	movwf	___flmul@a+3
  5476     125E  084B               	movf	_fround$1367+2,w
  5477     125F  00AA               	movwf	___flmul@a+2
  5478     1260  084A               	movf	_fround$1367+1,w
  5479     1261  00A9               	movwf	___flmul@a+1
  5480     1262  0849               	movf	_fround$1367,w
  5481     1263  00A8               	movwf	___flmul@a
  5482     1264  120A  158A  215C  160A  118A  	fcall	___flmul
  5483     1269  1283               	bcf	3,5	;RP0=0, select bank0
  5484     126A  1303               	bcf	3,6	;RP1=0, select bank0
  5485     126B  0827               	movf	?___flmul+3,w
  5486     126C  00C1               	movwf	?_fround+3
  5487     126D  0826               	movf	?___flmul+2,w
  5488     126E  00C0               	movwf	?_fround+2
  5489     126F  0825               	movf	?___flmul+1,w
  5490     1270  00BF               	movwf	?_fround+1
  5491     1271  0824               	movf	?___flmul,w
  5492     1272  00BE               	movwf	?_fround
  5493     1273  2B68               	goto	l362
  5494     1274                     l3026:
  5495     1274  300B               	movlw	11
  5496     1275  0251               	subwf	fround@prec,w
  5497     1276  1C03               	skipc
  5498     1277  2A79               	goto	u4231
  5499     1278  2A7A               	goto	u4230
  5500     1279                     u4231:
  5501     1279  2B25               	goto	l3032
  5502     127A                     u4230:
  5503     127A                     l3028:
  5504                           
  5505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5506     127A  303F               	movlw	63
  5507     127B  00A7               	movwf	___flmul@b+3
  5508     127C  3000               	movlw	0
  5509     127D  00A6               	movwf	___flmul@b+2
  5510     127E  3000               	movlw	0
  5511     127F  00A5               	movwf	___flmul@b+1
  5512     1280  3000               	movlw	0
  5513     1281  00A4               	movwf	___flmul@b
  5514     1282  300A               	movlw	10
  5515     1283  00F6               	movwf	___lwdiv@divisor
  5516     1284  3000               	movlw	0
  5517     1285  00F7               	movwf	___lwdiv@divisor+1
  5518     1286  0851               	movf	fround@prec,w
  5519     1287  00C2               	movwf	??_fround
  5520     1288  01C3               	clrf	??_fround+1
  5521     1289  0842               	movf	??_fround,w
  5522     128A  00F8               	movwf	___lwdiv@dividend
  5523     128B  0843               	movf	??_fround+1,w
  5524     128C  00F9               	movwf	___lwdiv@dividend+1
  5525     128D  160A  158A  254F  160A  118A  	fcall	___lwdiv
  5526     1292  0876               	movf	?___lwdiv,w
  5527     1293  1283               	bcf	3,5	;RP0=0, select bank0
  5528     1294  1303               	bcf	3,6	;RP1=0, select bank0
  5529     1295  00C4               	movwf	??_fround+2
  5530     1296  3001               	movlw	1
  5531     1297                     u4245:
  5532     1297  1003               	clrc
  5533     1298  0DC4               	rlf	??_fround+2,f
  5534     1299  3EFF               	addlw	-1
  5535     129A  1D03               	skipz
  5536     129B  2A97               	goto	u4245
  5537     129C  1003               	clrc
  5538     129D  0D44               	rlf	??_fround+2,w
  5539     129E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5540     129F  0084               	movwf	4
  5541     12A0  120A  118A  200D  160A  118A  	fcall	stringdir
  5542     12A5  00C5               	movwf	??_fround+3
  5543     12A6  120A  118A  200D  160A  118A  	fcall	stringdir
  5544     12AB  00C6               	movwf	??_fround+4
  5545     12AC  120A  118A  200D  160A  118A  	fcall	stringdir
  5546     12B1  00C7               	movwf	??_fround+5
  5547     12B2  120A  118A  200D  160A  118A  	fcall	stringdir
  5548     12B7  00C8               	movwf	??_fround+6
  5549     12B8  0848               	movf	??_fround+6,w
  5550     12B9  00AB               	movwf	___flmul@a+3
  5551     12BA  0847               	movf	??_fround+5,w
  5552     12BB  00AA               	movwf	___flmul@a+2
  5553     12BC  0846               	movf	??_fround+4,w
  5554     12BD  00A9               	movwf	___flmul@a+1
  5555     12BE  0845               	movf	??_fround+3,w
  5556     12BF  00A8               	movwf	___flmul@a
  5557     12C0  120A  158A  215C  160A  118A  	fcall	___flmul
  5558     12C5  1283               	bcf	3,5	;RP0=0, select bank0
  5559     12C6  1303               	bcf	3,6	;RP1=0, select bank0
  5560     12C7  0827               	movf	?___flmul+3,w
  5561     12C8  00D0               	movwf	_fround$1366+3
  5562     12C9  0826               	movf	?___flmul+2,w
  5563     12CA  00CF               	movwf	_fround$1366+2
  5564     12CB  0825               	movf	?___flmul+1,w
  5565     12CC  00CE               	movwf	_fround$1366+1
  5566     12CD  0824               	movf	?___flmul,w
  5567     12CE  00CD               	movwf	_fround$1366
  5568                           
  5569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5570     12CF  300A               	movlw	10
  5571     12D0  00F0               	movwf	___lwmod@divisor
  5572     12D1  3000               	movlw	0
  5573     12D2  00F1               	movwf	___lwmod@divisor+1
  5574     12D3  0851               	movf	fround@prec,w
  5575     12D4  00C2               	movwf	??_fround
  5576     12D5  01C3               	clrf	??_fround+1
  5577     12D6  0842               	movf	??_fround,w
  5578     12D7  00F2               	movwf	___lwmod@dividend
  5579     12D8  0843               	movf	??_fround+1,w
  5580     12D9  00F3               	movwf	___lwmod@dividend+1
  5581     12DA  160A  158A  24D3  160A  118A  	fcall	___lwmod
  5582     12DF  0870               	movf	?___lwmod,w
  5583     12E0  1283               	bcf	3,5	;RP0=0, select bank0
  5584     12E1  1303               	bcf	3,6	;RP1=0, select bank0
  5585     12E2  00C4               	movwf	??_fround+2
  5586     12E3  3001               	movlw	1
  5587     12E4                     u4255:
  5588     12E4  1003               	clrc
  5589     12E5  0DC4               	rlf	??_fround+2,f
  5590     12E6  3EFF               	addlw	-1
  5591     12E7  1D03               	skipz
  5592     12E8  2AE4               	goto	u4255
  5593     12E9  1003               	clrc
  5594     12EA  0D44               	rlf	??_fround+2,w
  5595     12EB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5596     12EC  0084               	movwf	4
  5597     12ED  120A  118A  200D  160A  118A  	fcall	stringdir
  5598     12F2  00C5               	movwf	??_fround+3
  5599     12F3  120A  118A  200D  160A  118A  	fcall	stringdir
  5600     12F8  00C6               	movwf	??_fround+4
  5601     12F9  120A  118A  200D  160A  118A  	fcall	stringdir
  5602     12FE  00C7               	movwf	??_fround+5
  5603     12FF  120A  118A  200D  160A  118A  	fcall	stringdir
  5604     1304  00C8               	movwf	??_fround+6
  5605     1305  0848               	movf	??_fround+6,w
  5606     1306  00A7               	movwf	___flmul@b+3
  5607     1307  0847               	movf	??_fround+5,w
  5608     1308  00A6               	movwf	___flmul@b+2
  5609     1309  0846               	movf	??_fround+4,w
  5610     130A  00A5               	movwf	___flmul@b+1
  5611     130B  0845               	movf	??_fround+3,w
  5612     130C  00A4               	movwf	___flmul@b
  5613     130D  0850               	movf	_fround$1366+3,w
  5614     130E  00AB               	movwf	___flmul@a+3
  5615     130F  084F               	movf	_fround$1366+2,w
  5616     1310  00AA               	movwf	___flmul@a+2
  5617     1311  084E               	movf	_fround$1366+1,w
  5618     1312  00A9               	movwf	___flmul@a+1
  5619     1313  084D               	movf	_fround$1366,w
  5620     1314  00A8               	movwf	___flmul@a
  5621     1315  120A  158A  215C  160A  118A  	fcall	___flmul
  5622     131A  1283               	bcf	3,5	;RP0=0, select bank0
  5623     131B  1303               	bcf	3,6	;RP1=0, select bank0
  5624     131C  0827               	movf	?___flmul+3,w
  5625     131D  00C1               	movwf	?_fround+3
  5626     131E  0826               	movf	?___flmul+2,w
  5627     131F  00C0               	movwf	?_fround+2
  5628     1320  0825               	movf	?___flmul+1,w
  5629     1321  00BF               	movwf	?_fround+1
  5630     1322  0824               	movf	?___flmul,w
  5631     1323  00BE               	movwf	?_fround
  5632     1324  2B68               	goto	l362
  5633     1325                     l3032:
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5636     1325  303F               	movlw	63
  5637     1326  00A7               	movwf	___flmul@b+3
  5638     1327  3000               	movlw	0
  5639     1328  00A6               	movwf	___flmul@b+2
  5640     1329  3000               	movlw	0
  5641     132A  00A5               	movwf	___flmul@b+1
  5642     132B  3000               	movlw	0
  5643     132C  00A4               	movwf	___flmul@b
  5644     132D  0851               	movf	fround@prec,w
  5645     132E  00C2               	movwf	??_fround
  5646     132F  3001               	movlw	1
  5647     1330                     u4265:
  5648     1330  1003               	clrc
  5649     1331  0DC2               	rlf	??_fround,f
  5650     1332  3EFF               	addlw	-1
  5651     1333  1D03               	skipz
  5652     1334  2B30               	goto	u4265
  5653     1335  1003               	clrc
  5654     1336  0D42               	rlf	??_fround,w
  5655     1337  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5656     1338  0084               	movwf	4
  5657     1339  120A  118A  200D  160A  118A  	fcall	stringdir
  5658     133E  00C3               	movwf	??_fround+1
  5659     133F  120A  118A  200D  160A  118A  	fcall	stringdir
  5660     1344  00C4               	movwf	??_fround+2
  5661     1345  120A  118A  200D  160A  118A  	fcall	stringdir
  5662     134A  00C5               	movwf	??_fround+3
  5663     134B  120A  118A  200D  160A  118A  	fcall	stringdir
  5664     1350  00C6               	movwf	??_fround+4
  5665     1351  0846               	movf	??_fround+4,w
  5666     1352  00AB               	movwf	___flmul@a+3
  5667     1353  0845               	movf	??_fround+3,w
  5668     1354  00AA               	movwf	___flmul@a+2
  5669     1355  0844               	movf	??_fround+2,w
  5670     1356  00A9               	movwf	___flmul@a+1
  5671     1357  0843               	movf	??_fround+1,w
  5672     1358  00A8               	movwf	___flmul@a
  5673     1359  120A  158A  215C  160A  118A  	fcall	___flmul
  5674     135E  1283               	bcf	3,5	;RP0=0, select bank0
  5675     135F  1303               	bcf	3,6	;RP1=0, select bank0
  5676     1360  0827               	movf	?___flmul+3,w
  5677     1361  00C1               	movwf	?_fround+3
  5678     1362  0826               	movf	?___flmul+2,w
  5679     1363  00C0               	movwf	?_fround+2
  5680     1364  0825               	movf	?___flmul+1,w
  5681     1365  00BF               	movwf	?_fround+1
  5682     1366  0824               	movf	?___flmul,w
  5683     1367  00BE               	movwf	?_fround
  5684     1368                     l362:
  5685     1368  0008               	return
  5686     1369                     __end_of_fround:
  5687                           
  5688                           	psect	text7
  5689     1CD3                     __ptext7:	
  5690 ;; *************** function ___lwmod *****************
  5691 ;; Defined at:
  5692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  divisor         2    0[COMMON] unsigned int 
  5695 ;;  dividend        2    2[COMMON] unsigned int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  counter         1    5[COMMON] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2    0[COMMON] unsigned int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5707 ;;      Params:         4       0       0       0       0
  5708 ;;      Locals:         1       0       0       0       0
  5709 ;;      Temps:          1       0       0       0       0
  5710 ;;      Totals:         6       0       0       0       0
  5711 ;;Total ram usage:        6 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_fround
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720     1CD3                     ___lwmod:	
  5721                           ;psect for function ___lwmod
  5722                           
  5723     1CD3                     l2612:	
  5724                           ;incstack = 0
  5725                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5726                           
  5727     1CD3  0870               	movf	___lwmod@divisor,w
  5728     1CD4  0471               	iorwf	___lwmod@divisor+1,w
  5729     1CD5  1903               	btfsc	3,2
  5730     1CD6  2CD8               	goto	u3261
  5731     1CD7  2CD9               	goto	u3260
  5732     1CD8                     u3261:
  5733     1CD8  2D08               	goto	l2630
  5734     1CD9                     u3260:
  5735     1CD9                     l2614:
  5736     1CD9  01F5               	clrf	___lwmod@counter
  5737     1CDA  0AF5               	incf	___lwmod@counter,f
  5738     1CDB  2CE7               	goto	l2620
  5739     1CDC                     l2616:
  5740     1CDC  3001               	movlw	1
  5741     1CDD                     u3275:
  5742     1CDD  1003               	clrc
  5743     1CDE  0DF0               	rlf	___lwmod@divisor,f
  5744     1CDF  0DF1               	rlf	___lwmod@divisor+1,f
  5745     1CE0  3EFF               	addlw	-1
  5746     1CE1  1D03               	skipz
  5747     1CE2  2CDD               	goto	u3275
  5748     1CE3                     l2618:
  5749     1CE3  3001               	movlw	1
  5750     1CE4  00F4               	movwf	??___lwmod
  5751     1CE5  0874               	movf	??___lwmod,w
  5752     1CE6  07F5               	addwf	___lwmod@counter,f
  5753     1CE7                     l2620:
  5754     1CE7  1FF1               	btfss	___lwmod@divisor+1,7
  5755     1CE8  2CEA               	goto	u3281
  5756     1CE9  2CEB               	goto	u3280
  5757     1CEA                     u3281:
  5758     1CEA  2CDC               	goto	l2616
  5759     1CEB                     u3280:
  5760     1CEB                     l2622:
  5761     1CEB  0871               	movf	___lwmod@divisor+1,w
  5762     1CEC  0273               	subwf	___lwmod@dividend+1,w
  5763     1CED  1D03               	skipz
  5764     1CEE  2CF1               	goto	u3295
  5765     1CEF  0870               	movf	___lwmod@divisor,w
  5766     1CF0  0272               	subwf	___lwmod@dividend,w
  5767     1CF1                     u3295:
  5768     1CF1  1C03               	skipc
  5769     1CF2  2CF4               	goto	u3291
  5770     1CF3  2CF5               	goto	u3290
  5771     1CF4                     u3291:
  5772     1CF4  2CFB               	goto	l2626
  5773     1CF5                     u3290:
  5774     1CF5                     l2624:
  5775     1CF5  0870               	movf	___lwmod@divisor,w
  5776     1CF6  02F2               	subwf	___lwmod@dividend,f
  5777     1CF7  0871               	movf	___lwmod@divisor+1,w
  5778     1CF8  1C03               	skipc
  5779     1CF9  03F3               	decf	___lwmod@dividend+1,f
  5780     1CFA  02F3               	subwf	___lwmod@dividend+1,f
  5781     1CFB                     l2626:
  5782     1CFB  3001               	movlw	1
  5783     1CFC                     u3305:
  5784     1CFC  1003               	clrc
  5785     1CFD  0CF1               	rrf	___lwmod@divisor+1,f
  5786     1CFE  0CF0               	rrf	___lwmod@divisor,f
  5787     1CFF  3EFF               	addlw	-1
  5788     1D00  1D03               	skipz
  5789     1D01  2CFC               	goto	u3305
  5790     1D02                     l2628:
  5791     1D02  3001               	movlw	1
  5792     1D03  02F5               	subwf	___lwmod@counter,f
  5793     1D04  1D03               	btfss	3,2
  5794     1D05  2D07               	goto	u3311
  5795     1D06  2D08               	goto	u3310
  5796     1D07                     u3311:
  5797     1D07  2CEB               	goto	l2622
  5798     1D08                     u3310:
  5799     1D08                     l2630:
  5800     1D08  0873               	movf	___lwmod@dividend+1,w
  5801     1D09  00F1               	movwf	?___lwmod+1
  5802     1D0A  0872               	movf	___lwmod@dividend,w
  5803     1D0B  00F0               	movwf	?___lwmod
  5804     1D0C                     l755:
  5805     1D0C  0008               	return
  5806     1D0D                     __end_of___lwmod:
  5807                           
  5808                           	psect	text8
  5809     1D4F                     __ptext8:	
  5810 ;; *************** function ___lwdiv *****************
  5811 ;; Defined at:
  5812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  divisor         2    6[COMMON] unsigned int 
  5815 ;;  dividend        2    8[COMMON] unsigned int 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  quotient        2   11[COMMON] unsigned int 
  5818 ;;  counter         1   13[COMMON] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  2    6[COMMON] unsigned int 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5828 ;;      Params:         4       0       0       0       0
  5829 ;;      Locals:         3       0       0       0       0
  5830 ;;      Temps:          1       0       0       0       0
  5831 ;;      Totals:         8       0       0       0       0
  5832 ;;Total ram usage:        8 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_fround
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841     1D4F                     ___lwdiv:	
  5842                           ;psect for function ___lwdiv
  5843                           
  5844     1D4F                     l2586:	
  5845                           ;incstack = 0
  5846                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5847                           
  5848     1D4F  01FB               	clrf	___lwdiv@quotient
  5849     1D50  01FC               	clrf	___lwdiv@quotient+1
  5850     1D51                     l2588:
  5851     1D51  0876               	movf	___lwdiv@divisor,w
  5852     1D52  0477               	iorwf	___lwdiv@divisor+1,w
  5853     1D53  1903               	btfsc	3,2
  5854     1D54  2D56               	goto	u3191
  5855     1D55  2D57               	goto	u3190
  5856     1D56                     u3191:
  5857     1D56  2D8E               	goto	l2608
  5858     1D57                     u3190:
  5859     1D57                     l2590:
  5860     1D57  01FD               	clrf	___lwdiv@counter
  5861     1D58  0AFD               	incf	___lwdiv@counter,f
  5862     1D59  2D65               	goto	l2596
  5863     1D5A                     l2592:
  5864     1D5A  3001               	movlw	1
  5865     1D5B                     u3205:
  5866     1D5B  1003               	clrc
  5867     1D5C  0DF6               	rlf	___lwdiv@divisor,f
  5868     1D5D  0DF7               	rlf	___lwdiv@divisor+1,f
  5869     1D5E  3EFF               	addlw	-1
  5870     1D5F  1D03               	skipz
  5871     1D60  2D5B               	goto	u3205
  5872     1D61                     l2594:
  5873     1D61  3001               	movlw	1
  5874     1D62  00FA               	movwf	??___lwdiv
  5875     1D63  087A               	movf	??___lwdiv,w
  5876     1D64  07FD               	addwf	___lwdiv@counter,f
  5877     1D65                     l2596:
  5878     1D65  1FF7               	btfss	___lwdiv@divisor+1,7
  5879     1D66  2D68               	goto	u3211
  5880     1D67  2D69               	goto	u3210
  5881     1D68                     u3211:
  5882     1D68  2D5A               	goto	l2592
  5883     1D69                     u3210:
  5884     1D69                     l2598:
  5885     1D69  3001               	movlw	1
  5886     1D6A                     u3225:
  5887     1D6A  1003               	clrc
  5888     1D6B  0DFB               	rlf	___lwdiv@quotient,f
  5889     1D6C  0DFC               	rlf	___lwdiv@quotient+1,f
  5890     1D6D  3EFF               	addlw	-1
  5891     1D6E  1D03               	skipz
  5892     1D6F  2D6A               	goto	u3225
  5893     1D70  0877               	movf	___lwdiv@divisor+1,w
  5894     1D71  0279               	subwf	___lwdiv@dividend+1,w
  5895     1D72  1D03               	skipz
  5896     1D73  2D76               	goto	u3235
  5897     1D74  0876               	movf	___lwdiv@divisor,w
  5898     1D75  0278               	subwf	___lwdiv@dividend,w
  5899     1D76                     u3235:
  5900     1D76  1C03               	skipc
  5901     1D77  2D79               	goto	u3231
  5902     1D78  2D7A               	goto	u3230
  5903     1D79                     u3231:
  5904     1D79  2D81               	goto	l2604
  5905     1D7A                     u3230:
  5906     1D7A                     l2600:
  5907     1D7A  0876               	movf	___lwdiv@divisor,w
  5908     1D7B  02F8               	subwf	___lwdiv@dividend,f
  5909     1D7C  0877               	movf	___lwdiv@divisor+1,w
  5910     1D7D  1C03               	skipc
  5911     1D7E  03F9               	decf	___lwdiv@dividend+1,f
  5912     1D7F  02F9               	subwf	___lwdiv@dividend+1,f
  5913     1D80                     l2602:
  5914     1D80  147B               	bsf	___lwdiv@quotient,0
  5915     1D81                     l2604:
  5916     1D81  3001               	movlw	1
  5917     1D82                     u3245:
  5918     1D82  1003               	clrc
  5919     1D83  0CF7               	rrf	___lwdiv@divisor+1,f
  5920     1D84  0CF6               	rrf	___lwdiv@divisor,f
  5921     1D85  3EFF               	addlw	-1
  5922     1D86  1D03               	skipz
  5923     1D87  2D82               	goto	u3245
  5924     1D88                     l2606:
  5925     1D88  3001               	movlw	1
  5926     1D89  02FD               	subwf	___lwdiv@counter,f
  5927     1D8A  1D03               	btfss	3,2
  5928     1D8B  2D8D               	goto	u3251
  5929     1D8C  2D8E               	goto	u3250
  5930     1D8D                     u3251:
  5931     1D8D  2D69               	goto	l2598
  5932     1D8E                     u3250:
  5933     1D8E                     l2608:
  5934     1D8E  087C               	movf	___lwdiv@quotient+1,w
  5935     1D8F  00F7               	movwf	?___lwdiv+1
  5936     1D90  087B               	movf	___lwdiv@quotient,w
  5937     1D91  00F6               	movwf	?___lwdiv
  5938     1D92                     l745:
  5939     1D92  0008               	return
  5940     1D93                     __end_of___lwdiv:
  5941                           
  5942                           	psect	text9
  5943     095C                     __ptext9:	
  5944 ;; *************** function ___flmul *****************
  5945 ;; Defined at:
  5946 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  b               4    4[BANK0 ] unsigned int 
  5949 ;;  a               4    8[BANK0 ] unsigned int 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  prod            4   24[BANK0 ] struct .
  5952 ;;  grs             4   18[BANK0 ] unsigned long 
  5953 ;;  temp            2   28[BANK0 ] struct .
  5954 ;;  bexp            1   23[BANK0 ] unsigned char 
  5955 ;;  aexp            1   22[BANK0 ] unsigned char 
  5956 ;;  sign            1   17[BANK0 ] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  4    4[BANK0 ] unsigned char 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5966 ;;      Params:         0       8       0       0       0
  5967 ;;      Locals:         0      13       0       0       0
  5968 ;;      Temps:          0       5       0       0       0
  5969 ;;      Totals:         0      26       0       0       0
  5970 ;;Total ram usage:       26 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; Hardware stack levels required when called: 1
  5973 ;; This function calls:
  5974 ;;		__Umul8_16
  5975 ;; This function is called by:
  5976 ;;		_fround
  5977 ;;		_scale
  5978 ;;		_sprintf
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982     095C                     ___flmul:	
  5983                           ;psect for function ___flmul
  5984                           
  5985     095C                     l2828:	
  5986                           ;incstack = 0
  5987                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5988                           
  5989     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5990     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5991     095E  0827               	movf	___flmul@b+3,w
  5992     095F  3980               	andlw	128
  5993     0960  00B1               	movwf	___flmul@sign
  5994     0961                     l2830:
  5995     0961  0827               	movf	___flmul@b+3,w
  5996     0962  00AC               	movwf	??___flmul
  5997     0963  072C               	addwf	??___flmul,w
  5998     0964  00B7               	movwf	___flmul@bexp
  5999     0965                     l2832:
  6000     0965  1FA6               	btfss	___flmul@b+2,7
  6001     0966  2968               	goto	u3781
  6002     0967  2969               	goto	u3780
  6003     0968                     u3781:
  6004     0968  296A               	goto	l2836
  6005     0969                     u3780:
  6006     0969                     l2834:
  6007     0969  1437               	bsf	___flmul@bexp,0
  6008     096A                     l2836:
  6009     096A  0837               	movf	___flmul@bexp,w
  6010     096B  1903               	btfsc	3,2
  6011     096C  296E               	goto	u3791
  6012     096D  296F               	goto	u3790
  6013     096E                     u3791:
  6014     096E  297E               	goto	l2844
  6015     096F                     u3790:
  6016     096F                     l2838:
  6017     096F  0A37               	incf	___flmul@bexp,w
  6018     0970  1D03               	btfss	3,2
  6019     0971  2973               	goto	u3801
  6020     0972  2974               	goto	u3800
  6021     0973                     u3801:
  6022     0973  297C               	goto	l2842
  6023     0974                     u3800:
  6024     0974                     l2840:
  6025     0974  3000               	movlw	0
  6026     0975  00A7               	movwf	___flmul@b+3
  6027     0976  3000               	movlw	0
  6028     0977  00A6               	movwf	___flmul@b+2
  6029     0978  3000               	movlw	0
  6030     0979  00A5               	movwf	___flmul@b+1
  6031     097A  3000               	movlw	0
  6032     097B  00A4               	movwf	___flmul@b
  6033     097C                     l2842:
  6034     097C  17A6               	bsf	___flmul@b+2,7
  6035     097D  2986               	goto	l2846
  6036     097E                     l2844:
  6037     097E  3000               	movlw	0
  6038     097F  00A7               	movwf	___flmul@b+3
  6039     0980  3000               	movlw	0
  6040     0981  00A6               	movwf	___flmul@b+2
  6041     0982  3000               	movlw	0
  6042     0983  00A5               	movwf	___flmul@b+1
  6043     0984  3000               	movlw	0
  6044     0985  00A4               	movwf	___flmul@b
  6045     0986                     l2846:
  6046     0986  082B               	movf	___flmul@a+3,w
  6047     0987  3980               	andlw	128
  6048     0988  00AC               	movwf	??___flmul
  6049     0989  082C               	movf	??___flmul,w
  6050     098A  06B1               	xorwf	___flmul@sign,f
  6051     098B                     l2848:
  6052     098B  082B               	movf	___flmul@a+3,w
  6053     098C  00AC               	movwf	??___flmul
  6054     098D  072C               	addwf	??___flmul,w
  6055     098E  00B6               	movwf	___flmul@aexp
  6056     098F                     l2850:
  6057     098F  1FAA               	btfss	___flmul@a+2,7
  6058     0990  2992               	goto	u3811
  6059     0991  2993               	goto	u3810
  6060     0992                     u3811:
  6061     0992  2994               	goto	l2854
  6062     0993                     u3810:
  6063     0993                     l2852:
  6064     0993  1436               	bsf	___flmul@aexp,0
  6065     0994                     l2854:
  6066     0994  0836               	movf	___flmul@aexp,w
  6067     0995  1903               	btfsc	3,2
  6068     0996  2998               	goto	u3821
  6069     0997  2999               	goto	u3820
  6070     0998                     u3821:
  6071     0998  29A8               	goto	l2862
  6072     0999                     u3820:
  6073     0999                     l2856:
  6074     0999  0A36               	incf	___flmul@aexp,w
  6075     099A  1D03               	btfss	3,2
  6076     099B  299D               	goto	u3831
  6077     099C  299E               	goto	u3830
  6078     099D                     u3831:
  6079     099D  29A6               	goto	l2860
  6080     099E                     u3830:
  6081     099E                     l2858:
  6082     099E  3000               	movlw	0
  6083     099F  00AB               	movwf	___flmul@a+3
  6084     09A0  3000               	movlw	0
  6085     09A1  00AA               	movwf	___flmul@a+2
  6086     09A2  3000               	movlw	0
  6087     09A3  00A9               	movwf	___flmul@a+1
  6088     09A4  3000               	movlw	0
  6089     09A5  00A8               	movwf	___flmul@a
  6090     09A6                     l2860:
  6091     09A6  17AA               	bsf	___flmul@a+2,7
  6092     09A7  29B0               	goto	l2864
  6093     09A8                     l2862:
  6094     09A8  3000               	movlw	0
  6095     09A9  00AB               	movwf	___flmul@a+3
  6096     09AA  3000               	movlw	0
  6097     09AB  00AA               	movwf	___flmul@a+2
  6098     09AC  3000               	movlw	0
  6099     09AD  00A9               	movwf	___flmul@a+1
  6100     09AE  3000               	movlw	0
  6101     09AF  00A8               	movwf	___flmul@a
  6102     09B0                     l2864:
  6103     09B0  0836               	movf	___flmul@aexp,w
  6104     09B1  1903               	btfsc	3,2
  6105     09B2  29B4               	goto	u3841
  6106     09B3  29B5               	goto	u3840
  6107     09B4                     u3841:
  6108     09B4  29BA               	goto	l2868
  6109     09B5                     u3840:
  6110     09B5                     l2866:
  6111     09B5  0837               	movf	___flmul@bexp,w
  6112     09B6  1D03               	btfss	3,2
  6113     09B7  29B9               	goto	u3851
  6114     09B8  29BA               	goto	u3850
  6115     09B9                     u3851:
  6116     09B9  29C3               	goto	l2872
  6117     09BA                     u3850:
  6118     09BA                     l2868:
  6119     09BA  3000               	movlw	0
  6120     09BB  00A7               	movwf	?___flmul+3
  6121     09BC  3000               	movlw	0
  6122     09BD  00A6               	movwf	?___flmul+2
  6123     09BE  3000               	movlw	0
  6124     09BF  00A5               	movwf	?___flmul+1
  6125     09C0  3000               	movlw	0
  6126     09C1  00A4               	movwf	?___flmul
  6127     09C2  2CA0               	goto	l862
  6128     09C3                     l2872:
  6129     09C3  0824               	movf	___flmul@b,w
  6130     09C4  00F0               	movwf	__Umul8_16@multiplicand
  6131     09C5  082A               	movf	___flmul@a+2,w
  6132     09C6  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6133     09CB  0871               	movf	?__Umul8_16+1,w
  6134     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6135     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6136     09CE  00BD               	movwf	___flmul@temp+1
  6137     09CF  0870               	movf	?__Umul8_16,w
  6138     09D0  00BC               	movwf	___flmul@temp
  6139     09D1                     l2874:
  6140     09D1  083C               	movf	___flmul@temp,w
  6141     09D2  00AC               	movwf	??___flmul
  6142     09D3  01AD               	clrf	??___flmul+1
  6143     09D4  01AE               	clrf	??___flmul+2
  6144     09D5  01AF               	clrf	??___flmul+3
  6145     09D6  082F               	movf	??___flmul+3,w
  6146     09D7  00B5               	movwf	___flmul@grs+3
  6147     09D8  082E               	movf	??___flmul+2,w
  6148     09D9  00B4               	movwf	___flmul@grs+2
  6149     09DA  082D               	movf	??___flmul+1,w
  6150     09DB  00B3               	movwf	___flmul@grs+1
  6151     09DC  082C               	movf	??___flmul,w
  6152     09DD  00B2               	movwf	___flmul@grs
  6153     09DE                     l2876:
  6154     09DE  083D               	movf	___flmul@temp+1,w
  6155     09DF  00AC               	movwf	??___flmul
  6156     09E0  01AD               	clrf	??___flmul+1
  6157     09E1  01AE               	clrf	??___flmul+2
  6158     09E2  01AF               	clrf	??___flmul+3
  6159     09E3  082F               	movf	??___flmul+3,w
  6160     09E4  00BB               	movwf	___flmul@prod+3
  6161     09E5  082E               	movf	??___flmul+2,w
  6162     09E6  00BA               	movwf	___flmul@prod+2
  6163     09E7  082D               	movf	??___flmul+1,w
  6164     09E8  00B9               	movwf	___flmul@prod+1
  6165     09E9  082C               	movf	??___flmul,w
  6166     09EA  00B8               	movwf	___flmul@prod
  6167     09EB  0825               	movf	___flmul@b+1,w
  6168     09EC  00F0               	movwf	__Umul8_16@multiplicand
  6169     09ED  0829               	movf	___flmul@a+1,w
  6170     09EE  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6171     09F3  0871               	movf	?__Umul8_16+1,w
  6172     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  6173     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  6174     09F6  00BD               	movwf	___flmul@temp+1
  6175     09F7  0870               	movf	?__Umul8_16,w
  6176     09F8  00BC               	movwf	___flmul@temp
  6177     09F9                     l2878:
  6178     09F9  083C               	movf	___flmul@temp,w
  6179     09FA  00AC               	movwf	??___flmul
  6180     09FB  01AD               	clrf	??___flmul+1
  6181     09FC  01AE               	clrf	??___flmul+2
  6182     09FD  01AF               	clrf	??___flmul+3
  6183     09FE  082C               	movf	??___flmul,w
  6184     09FF  07B2               	addwf	___flmul@grs,f
  6185     0A00  082D               	movf	??___flmul+1,w
  6186     0A01  1103               	clrz
  6187     0A02  1803               	skipnc
  6188     0A03  3E01               	addlw	1
  6189     0A04  1903               	skipnz
  6190     0A05  2A07               	goto	u3861
  6191     0A06  07B3               	addwf	___flmul@grs+1,f
  6192     0A07                     u3861:
  6193     0A07  082E               	movf	??___flmul+2,w
  6194     0A08  1103               	clrz
  6195     0A09  1803               	skipnc
  6196     0A0A  3E01               	addlw	1
  6197     0A0B  1903               	skipnz
  6198     0A0C  2A0E               	goto	u3862
  6199     0A0D  07B4               	addwf	___flmul@grs+2,f
  6200     0A0E                     u3862:
  6201     0A0E  082F               	movf	??___flmul+3,w
  6202     0A0F  1103               	clrz
  6203     0A10  1803               	skipnc
  6204     0A11  3E01               	addlw	1
  6205     0A12  1903               	skipnz
  6206     0A13  2A15               	goto	u3863
  6207     0A14  07B5               	addwf	___flmul@grs+3,f
  6208     0A15                     u3863:
  6209     0A15                     l2880:
  6210     0A15  083D               	movf	___flmul@temp+1,w
  6211     0A16  00AC               	movwf	??___flmul
  6212     0A17  01AD               	clrf	??___flmul+1
  6213     0A18  01AE               	clrf	??___flmul+2
  6214     0A19  01AF               	clrf	??___flmul+3
  6215     0A1A  082C               	movf	??___flmul,w
  6216     0A1B  07B8               	addwf	___flmul@prod,f
  6217     0A1C  082D               	movf	??___flmul+1,w
  6218     0A1D  1103               	clrz
  6219     0A1E  1803               	skipnc
  6220     0A1F  3E01               	addlw	1
  6221     0A20  1903               	skipnz
  6222     0A21  2A23               	goto	u3871
  6223     0A22  07B9               	addwf	___flmul@prod+1,f
  6224     0A23                     u3871:
  6225     0A23  082E               	movf	??___flmul+2,w
  6226     0A24  1103               	clrz
  6227     0A25  1803               	skipnc
  6228     0A26  3E01               	addlw	1
  6229     0A27  1903               	skipnz
  6230     0A28  2A2A               	goto	u3872
  6231     0A29  07BA               	addwf	___flmul@prod+2,f
  6232     0A2A                     u3872:
  6233     0A2A  082F               	movf	??___flmul+3,w
  6234     0A2B  1103               	clrz
  6235     0A2C  1803               	skipnc
  6236     0A2D  3E01               	addlw	1
  6237     0A2E  1903               	skipnz
  6238     0A2F  2A31               	goto	u3873
  6239     0A30  07BB               	addwf	___flmul@prod+3,f
  6240     0A31                     u3873:
  6241     0A31  0826               	movf	___flmul@b+2,w
  6242     0A32  00F0               	movwf	__Umul8_16@multiplicand
  6243     0A33  0828               	movf	___flmul@a,w
  6244     0A34  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6245     0A39  0871               	movf	?__Umul8_16+1,w
  6246     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  6247     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  6248     0A3C  00BD               	movwf	___flmul@temp+1
  6249     0A3D  0870               	movf	?__Umul8_16,w
  6250     0A3E  00BC               	movwf	___flmul@temp
  6251     0A3F                     l2882:
  6252     0A3F  083C               	movf	___flmul@temp,w
  6253     0A40  00AC               	movwf	??___flmul
  6254     0A41  01AD               	clrf	??___flmul+1
  6255     0A42  01AE               	clrf	??___flmul+2
  6256     0A43  01AF               	clrf	??___flmul+3
  6257     0A44  082C               	movf	??___flmul,w
  6258     0A45  07B2               	addwf	___flmul@grs,f
  6259     0A46  082D               	movf	??___flmul+1,w
  6260     0A47  1103               	clrz
  6261     0A48  1803               	skipnc
  6262     0A49  3E01               	addlw	1
  6263     0A4A  1903               	skipnz
  6264     0A4B  2A4D               	goto	u3881
  6265     0A4C  07B3               	addwf	___flmul@grs+1,f
  6266     0A4D                     u3881:
  6267     0A4D  082E               	movf	??___flmul+2,w
  6268     0A4E  1103               	clrz
  6269     0A4F  1803               	skipnc
  6270     0A50  3E01               	addlw	1
  6271     0A51  1903               	skipnz
  6272     0A52  2A54               	goto	u3882
  6273     0A53  07B4               	addwf	___flmul@grs+2,f
  6274     0A54                     u3882:
  6275     0A54  082F               	movf	??___flmul+3,w
  6276     0A55  1103               	clrz
  6277     0A56  1803               	skipnc
  6278     0A57  3E01               	addlw	1
  6279     0A58  1903               	skipnz
  6280     0A59  2A5B               	goto	u3883
  6281     0A5A  07B5               	addwf	___flmul@grs+3,f
  6282     0A5B                     u3883:
  6283     0A5B                     l2884:
  6284     0A5B  083D               	movf	___flmul@temp+1,w
  6285     0A5C  00AC               	movwf	??___flmul
  6286     0A5D  01AD               	clrf	??___flmul+1
  6287     0A5E  01AE               	clrf	??___flmul+2
  6288     0A5F  01AF               	clrf	??___flmul+3
  6289     0A60  082C               	movf	??___flmul,w
  6290     0A61  07B8               	addwf	___flmul@prod,f
  6291     0A62  082D               	movf	??___flmul+1,w
  6292     0A63  1103               	clrz
  6293     0A64  1803               	skipnc
  6294     0A65  3E01               	addlw	1
  6295     0A66  1903               	skipnz
  6296     0A67  2A69               	goto	u3891
  6297     0A68  07B9               	addwf	___flmul@prod+1,f
  6298     0A69                     u3891:
  6299     0A69  082E               	movf	??___flmul+2,w
  6300     0A6A  1103               	clrz
  6301     0A6B  1803               	skipnc
  6302     0A6C  3E01               	addlw	1
  6303     0A6D  1903               	skipnz
  6304     0A6E  2A70               	goto	u3892
  6305     0A6F  07BA               	addwf	___flmul@prod+2,f
  6306     0A70                     u3892:
  6307     0A70  082F               	movf	??___flmul+3,w
  6308     0A71  1103               	clrz
  6309     0A72  1803               	skipnc
  6310     0A73  3E01               	addlw	1
  6311     0A74  1903               	skipnz
  6312     0A75  2A77               	goto	u3893
  6313     0A76  07BB               	addwf	___flmul@prod+3,f
  6314     0A77                     u3893:
  6315     0A77                     l2886:
  6316     0A77  3008               	movlw	8
  6317     0A78  00AC               	movwf	??___flmul
  6318     0A79                     u3905:
  6319     0A79  1003               	clrc
  6320     0A7A  0DB2               	rlf	___flmul@grs,f
  6321     0A7B  0DB3               	rlf	___flmul@grs+1,f
  6322     0A7C  0DB4               	rlf	___flmul@grs+2,f
  6323     0A7D  0DB5               	rlf	___flmul@grs+3,f
  6324     0A7E  0BAC               	decfsz	??___flmul,f
  6325     0A7F  2A79               	goto	u3905
  6326     0A80                     l2888:
  6327     0A80  0825               	movf	___flmul@b+1,w
  6328     0A81  00F0               	movwf	__Umul8_16@multiplicand
  6329     0A82  0828               	movf	___flmul@a,w
  6330     0A83  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6331     0A88  0871               	movf	?__Umul8_16+1,w
  6332     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  6333     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  6334     0A8B  00BD               	movwf	___flmul@temp+1
  6335     0A8C  0870               	movf	?__Umul8_16,w
  6336     0A8D  00BC               	movwf	___flmul@temp
  6337     0A8E                     l2890:
  6338     0A8E  083C               	movf	___flmul@temp,w
  6339     0A8F  00AC               	movwf	??___flmul
  6340     0A90  083D               	movf	___flmul@temp+1,w
  6341     0A91  00AD               	movwf	??___flmul+1
  6342     0A92  01AE               	clrf	??___flmul+2
  6343     0A93  01AF               	clrf	??___flmul+3
  6344     0A94  082C               	movf	??___flmul,w
  6345     0A95  07B2               	addwf	___flmul@grs,f
  6346     0A96  082D               	movf	??___flmul+1,w
  6347     0A97  1103               	clrz
  6348     0A98  1803               	skipnc
  6349     0A99  3E01               	addlw	1
  6350     0A9A  1903               	skipnz
  6351     0A9B  2A9D               	goto	u3911
  6352     0A9C  07B3               	addwf	___flmul@grs+1,f
  6353     0A9D                     u3911:
  6354     0A9D  082E               	movf	??___flmul+2,w
  6355     0A9E  1103               	clrz
  6356     0A9F  1803               	skipnc
  6357     0AA0  3E01               	addlw	1
  6358     0AA1  1903               	skipnz
  6359     0AA2  2AA4               	goto	u3912
  6360     0AA3  07B4               	addwf	___flmul@grs+2,f
  6361     0AA4                     u3912:
  6362     0AA4  082F               	movf	??___flmul+3,w
  6363     0AA5  1103               	clrz
  6364     0AA6  1803               	skipnc
  6365     0AA7  3E01               	addlw	1
  6366     0AA8  1903               	skipnz
  6367     0AA9  2AAB               	goto	u3913
  6368     0AAA  07B5               	addwf	___flmul@grs+3,f
  6369     0AAB                     u3913:
  6370     0AAB                     l2892:
  6371     0AAB  0824               	movf	___flmul@b,w
  6372     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  6373     0AAD  0829               	movf	___flmul@a+1,w
  6374     0AAE  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6375     0AB3  0871               	movf	?__Umul8_16+1,w
  6376     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  6377     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  6378     0AB6  00BD               	movwf	___flmul@temp+1
  6379     0AB7  0870               	movf	?__Umul8_16,w
  6380     0AB8  00BC               	movwf	___flmul@temp
  6381     0AB9                     l2894:
  6382     0AB9  083C               	movf	___flmul@temp,w
  6383     0ABA  00AC               	movwf	??___flmul
  6384     0ABB  083D               	movf	___flmul@temp+1,w
  6385     0ABC  00AD               	movwf	??___flmul+1
  6386     0ABD  01AE               	clrf	??___flmul+2
  6387     0ABE  01AF               	clrf	??___flmul+3
  6388     0ABF  082C               	movf	??___flmul,w
  6389     0AC0  07B2               	addwf	___flmul@grs,f
  6390     0AC1  082D               	movf	??___flmul+1,w
  6391     0AC2  1103               	clrz
  6392     0AC3  1803               	skipnc
  6393     0AC4  3E01               	addlw	1
  6394     0AC5  1903               	skipnz
  6395     0AC6  2AC8               	goto	u3921
  6396     0AC7  07B3               	addwf	___flmul@grs+1,f
  6397     0AC8                     u3921:
  6398     0AC8  082E               	movf	??___flmul+2,w
  6399     0AC9  1103               	clrz
  6400     0ACA  1803               	skipnc
  6401     0ACB  3E01               	addlw	1
  6402     0ACC  1903               	skipnz
  6403     0ACD  2ACF               	goto	u3922
  6404     0ACE  07B4               	addwf	___flmul@grs+2,f
  6405     0ACF                     u3922:
  6406     0ACF  082F               	movf	??___flmul+3,w
  6407     0AD0  1103               	clrz
  6408     0AD1  1803               	skipnc
  6409     0AD2  3E01               	addlw	1
  6410     0AD3  1903               	skipnz
  6411     0AD4  2AD6               	goto	u3923
  6412     0AD5  07B5               	addwf	___flmul@grs+3,f
  6413     0AD6                     u3923:
  6414     0AD6                     l2896:
  6415     0AD6  3008               	movlw	8
  6416     0AD7  00AC               	movwf	??___flmul
  6417     0AD8                     u3935:
  6418     0AD8  1003               	clrc
  6419     0AD9  0DB2               	rlf	___flmul@grs,f
  6420     0ADA  0DB3               	rlf	___flmul@grs+1,f
  6421     0ADB  0DB4               	rlf	___flmul@grs+2,f
  6422     0ADC  0DB5               	rlf	___flmul@grs+3,f
  6423     0ADD  0BAC               	decfsz	??___flmul,f
  6424     0ADE  2AD8               	goto	u3935
  6425     0ADF  0824               	movf	___flmul@b,w
  6426     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  6427     0AE1  0828               	movf	___flmul@a,w
  6428     0AE2  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6429     0AE7  0871               	movf	?__Umul8_16+1,w
  6430     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  6431     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  6432     0AEA  00BD               	movwf	___flmul@temp+1
  6433     0AEB  0870               	movf	?__Umul8_16,w
  6434     0AEC  00BC               	movwf	___flmul@temp
  6435     0AED                     l2898:
  6436     0AED  083C               	movf	___flmul@temp,w
  6437     0AEE  00AC               	movwf	??___flmul
  6438     0AEF  083D               	movf	___flmul@temp+1,w
  6439     0AF0  00AD               	movwf	??___flmul+1
  6440     0AF1  01AE               	clrf	??___flmul+2
  6441     0AF2  01AF               	clrf	??___flmul+3
  6442     0AF3  082C               	movf	??___flmul,w
  6443     0AF4  07B2               	addwf	___flmul@grs,f
  6444     0AF5  082D               	movf	??___flmul+1,w
  6445     0AF6  1103               	clrz
  6446     0AF7  1803               	skipnc
  6447     0AF8  3E01               	addlw	1
  6448     0AF9  1903               	skipnz
  6449     0AFA  2AFC               	goto	u3941
  6450     0AFB  07B3               	addwf	___flmul@grs+1,f
  6451     0AFC                     u3941:
  6452     0AFC  082E               	movf	??___flmul+2,w
  6453     0AFD  1103               	clrz
  6454     0AFE  1803               	skipnc
  6455     0AFF  3E01               	addlw	1
  6456     0B00  1903               	skipnz
  6457     0B01  2B03               	goto	u3942
  6458     0B02  07B4               	addwf	___flmul@grs+2,f
  6459     0B03                     u3942:
  6460     0B03  082F               	movf	??___flmul+3,w
  6461     0B04  1103               	clrz
  6462     0B05  1803               	skipnc
  6463     0B06  3E01               	addlw	1
  6464     0B07  1903               	skipnz
  6465     0B08  2B0A               	goto	u3943
  6466     0B09  07B5               	addwf	___flmul@grs+3,f
  6467     0B0A                     u3943:
  6468     0B0A                     l2900:
  6469     0B0A  0825               	movf	___flmul@b+1,w
  6470     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  6471     0B0C  082A               	movf	___flmul@a+2,w
  6472     0B0D  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6473     0B12  0871               	movf	?__Umul8_16+1,w
  6474     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  6475     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  6476     0B15  00BD               	movwf	___flmul@temp+1
  6477     0B16  0870               	movf	?__Umul8_16,w
  6478     0B17  00BC               	movwf	___flmul@temp
  6479     0B18  083C               	movf	___flmul@temp,w
  6480     0B19  00AC               	movwf	??___flmul
  6481     0B1A  083D               	movf	___flmul@temp+1,w
  6482     0B1B  00AD               	movwf	??___flmul+1
  6483     0B1C  01AE               	clrf	??___flmul+2
  6484     0B1D  01AF               	clrf	??___flmul+3
  6485     0B1E  082C               	movf	??___flmul,w
  6486     0B1F  07B8               	addwf	___flmul@prod,f
  6487     0B20  082D               	movf	??___flmul+1,w
  6488     0B21  1103               	clrz
  6489     0B22  1803               	skipnc
  6490     0B23  3E01               	addlw	1
  6491     0B24  1903               	skipnz
  6492     0B25  2B27               	goto	u3951
  6493     0B26  07B9               	addwf	___flmul@prod+1,f
  6494     0B27                     u3951:
  6495     0B27  082E               	movf	??___flmul+2,w
  6496     0B28  1103               	clrz
  6497     0B29  1803               	skipnc
  6498     0B2A  3E01               	addlw	1
  6499     0B2B  1903               	skipnz
  6500     0B2C  2B2E               	goto	u3952
  6501     0B2D  07BA               	addwf	___flmul@prod+2,f
  6502     0B2E                     u3952:
  6503     0B2E  082F               	movf	??___flmul+3,w
  6504     0B2F  1103               	clrz
  6505     0B30  1803               	skipnc
  6506     0B31  3E01               	addlw	1
  6507     0B32  1903               	skipnz
  6508     0B33  2B35               	goto	u3953
  6509     0B34  07BB               	addwf	___flmul@prod+3,f
  6510     0B35                     u3953:
  6511     0B35                     l2902:
  6512     0B35  0826               	movf	___flmul@b+2,w
  6513     0B36  00F0               	movwf	__Umul8_16@multiplicand
  6514     0B37  0829               	movf	___flmul@a+1,w
  6515     0B38  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6516     0B3D  0871               	movf	?__Umul8_16+1,w
  6517     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6518     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6519     0B40  00BD               	movwf	___flmul@temp+1
  6520     0B41  0870               	movf	?__Umul8_16,w
  6521     0B42  00BC               	movwf	___flmul@temp
  6522     0B43                     l2904:
  6523     0B43  083C               	movf	___flmul@temp,w
  6524     0B44  00AC               	movwf	??___flmul
  6525     0B45  083D               	movf	___flmul@temp+1,w
  6526     0B46  00AD               	movwf	??___flmul+1
  6527     0B47  01AE               	clrf	??___flmul+2
  6528     0B48  01AF               	clrf	??___flmul+3
  6529     0B49  082C               	movf	??___flmul,w
  6530     0B4A  07B8               	addwf	___flmul@prod,f
  6531     0B4B  082D               	movf	??___flmul+1,w
  6532     0B4C  1103               	clrz
  6533     0B4D  1803               	skipnc
  6534     0B4E  3E01               	addlw	1
  6535     0B4F  1903               	skipnz
  6536     0B50  2B52               	goto	u3961
  6537     0B51  07B9               	addwf	___flmul@prod+1,f
  6538     0B52                     u3961:
  6539     0B52  082E               	movf	??___flmul+2,w
  6540     0B53  1103               	clrz
  6541     0B54  1803               	skipnc
  6542     0B55  3E01               	addlw	1
  6543     0B56  1903               	skipnz
  6544     0B57  2B59               	goto	u3962
  6545     0B58  07BA               	addwf	___flmul@prod+2,f
  6546     0B59                     u3962:
  6547     0B59  082F               	movf	??___flmul+3,w
  6548     0B5A  1103               	clrz
  6549     0B5B  1803               	skipnc
  6550     0B5C  3E01               	addlw	1
  6551     0B5D  1903               	skipnz
  6552     0B5E  2B60               	goto	u3963
  6553     0B5F  07BB               	addwf	___flmul@prod+3,f
  6554     0B60                     u3963:
  6555     0B60  0826               	movf	___flmul@b+2,w
  6556     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6557     0B62  082A               	movf	___flmul@a+2,w
  6558     0B63  160A  158A  243F  120A  158A  	fcall	__Umul8_16
  6559     0B68  0871               	movf	?__Umul8_16+1,w
  6560     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6561     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6562     0B6B  00BD               	movwf	___flmul@temp+1
  6563     0B6C  0870               	movf	?__Umul8_16,w
  6564     0B6D  00BC               	movwf	___flmul@temp
  6565     0B6E                     l2906:
  6566     0B6E  083C               	movf	___flmul@temp,w
  6567     0B6F  00AC               	movwf	??___flmul
  6568     0B70  083D               	movf	___flmul@temp+1,w
  6569     0B71  00AD               	movwf	??___flmul+1
  6570     0B72  01AE               	clrf	??___flmul+2
  6571     0B73  01AF               	clrf	??___flmul+3
  6572     0B74  3008               	movlw	8
  6573     0B75                     u3975:
  6574     0B75  1003               	clrc
  6575     0B76  0DAC               	rlf	??___flmul,f
  6576     0B77  0DAD               	rlf	??___flmul+1,f
  6577     0B78  0DAE               	rlf	??___flmul+2,f
  6578     0B79  0DAF               	rlf	??___flmul+3,f
  6579     0B7A                     u3970:
  6580     0B7A  3EFF               	addlw	-1
  6581     0B7B  1D03               	skipz
  6582     0B7C  2B75               	goto	u3975
  6583     0B7D  082C               	movf	??___flmul,w
  6584     0B7E  07B8               	addwf	___flmul@prod,f
  6585     0B7F  082D               	movf	??___flmul+1,w
  6586     0B80  1103               	clrz
  6587     0B81  1803               	skipnc
  6588     0B82  3E01               	addlw	1
  6589     0B83  1903               	skipnz
  6590     0B84  2B86               	goto	u3981
  6591     0B85  07B9               	addwf	___flmul@prod+1,f
  6592     0B86                     u3981:
  6593     0B86  082E               	movf	??___flmul+2,w
  6594     0B87  1103               	clrz
  6595     0B88  1803               	skipnc
  6596     0B89  3E01               	addlw	1
  6597     0B8A  1903               	skipnz
  6598     0B8B  2B8D               	goto	u3982
  6599     0B8C  07BA               	addwf	___flmul@prod+2,f
  6600     0B8D                     u3982:
  6601     0B8D  082F               	movf	??___flmul+3,w
  6602     0B8E  1103               	clrz
  6603     0B8F  1803               	skipnc
  6604     0B90  3E01               	addlw	1
  6605     0B91  1903               	skipnz
  6606     0B92  2B94               	goto	u3983
  6607     0B93  07BB               	addwf	___flmul@prod+3,f
  6608     0B94                     u3983:
  6609     0B94                     l2908:
  6610     0B94  0832               	movf	___flmul@grs,w
  6611     0B95  00AC               	movwf	??___flmul
  6612     0B96  0833               	movf	___flmul@grs+1,w
  6613     0B97  00AD               	movwf	??___flmul+1
  6614     0B98  0834               	movf	___flmul@grs+2,w
  6615     0B99  00AE               	movwf	??___flmul+2
  6616     0B9A  0835               	movf	___flmul@grs+3,w
  6617     0B9B  00AF               	movwf	??___flmul+3
  6618     0B9C  3018               	movlw	24
  6619     0B9D                     u3995:
  6620     0B9D  1003               	clrc
  6621     0B9E  0CAF               	rrf	??___flmul+3,f
  6622     0B9F  0CAE               	rrf	??___flmul+2,f
  6623     0BA0  0CAD               	rrf	??___flmul+1,f
  6624     0BA1  0CAC               	rrf	??___flmul,f
  6625     0BA2                     u3990:
  6626     0BA2  3EFF               	addlw	-1
  6627     0BA3  1D03               	skipz
  6628     0BA4  2B9D               	goto	u3995
  6629     0BA5  082C               	movf	??___flmul,w
  6630     0BA6  07B8               	addwf	___flmul@prod,f
  6631     0BA7  082D               	movf	??___flmul+1,w
  6632     0BA8  1103               	clrz
  6633     0BA9  1803               	skipnc
  6634     0BAA  3E01               	addlw	1
  6635     0BAB  1903               	skipnz
  6636     0BAC  2BAE               	goto	u4001
  6637     0BAD  07B9               	addwf	___flmul@prod+1,f
  6638     0BAE                     u4001:
  6639     0BAE  082E               	movf	??___flmul+2,w
  6640     0BAF  1103               	clrz
  6641     0BB0  1803               	skipnc
  6642     0BB1  3E01               	addlw	1
  6643     0BB2  1903               	skipnz
  6644     0BB3  2BB5               	goto	u4002
  6645     0BB4  07BA               	addwf	___flmul@prod+2,f
  6646     0BB5                     u4002:
  6647     0BB5  082F               	movf	??___flmul+3,w
  6648     0BB6  1103               	clrz
  6649     0BB7  1803               	skipnc
  6650     0BB8  3E01               	addlw	1
  6651     0BB9  1903               	skipnz
  6652     0BBA  2BBC               	goto	u4003
  6653     0BBB  07BB               	addwf	___flmul@prod+3,f
  6654     0BBC                     u4003:
  6655     0BBC                     l2910:
  6656     0BBC  3008               	movlw	8
  6657     0BBD  00AC               	movwf	??___flmul
  6658     0BBE                     u4015:
  6659     0BBE  1003               	clrc
  6660     0BBF  0DB2               	rlf	___flmul@grs,f
  6661     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6662     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6663     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6664     0BC3  0BAC               	decfsz	??___flmul,f
  6665     0BC4  2BBE               	goto	u4015
  6666     0BC5                     l2912:
  6667     0BC5  0837               	movf	___flmul@bexp,w
  6668     0BC6  0736               	addwf	___flmul@aexp,w
  6669     0BC7  00AC               	movwf	??___flmul
  6670     0BC8  01AD               	clrf	??___flmul+1
  6671     0BC9  0DAD               	rlf	??___flmul+1,f
  6672     0BCA  082C               	movf	??___flmul,w
  6673     0BCB  3E82               	addlw	130
  6674     0BCC  00BC               	movwf	___flmul@temp
  6675     0BCD  082D               	movf	??___flmul+1,w
  6676     0BCE  1803               	skipnc
  6677     0BCF  3E01               	addlw	1
  6678     0BD0  3EFF               	addlw	255
  6679     0BD1  00BD               	movwf	___flmul@temp+1
  6680     0BD2  2BF0               	goto	l2924
  6681     0BD3                     l2914:
  6682     0BD3  3001               	movlw	1
  6683     0BD4  00AC               	movwf	??___flmul
  6684     0BD5                     u4025:
  6685     0BD5  1003               	clrc
  6686     0BD6  0DB8               	rlf	___flmul@prod,f
  6687     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6688     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6689     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6690     0BDA  0BAC               	decfsz	??___flmul,f
  6691     0BDB  2BD5               	goto	u4025
  6692     0BDC                     l2916:
  6693     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6694     0BDD  2BDF               	goto	u4031
  6695     0BDE  2BE0               	goto	u4030
  6696     0BDF                     u4031:
  6697     0BDF  2BE1               	goto	l2920
  6698     0BE0                     u4030:
  6699     0BE0                     l2918:
  6700     0BE0  1438               	bsf	___flmul@prod,0
  6701     0BE1                     l2920:
  6702     0BE1  3001               	movlw	1
  6703     0BE2  00AC               	movwf	??___flmul
  6704     0BE3                     u4045:
  6705     0BE3  1003               	clrc
  6706     0BE4  0DB2               	rlf	___flmul@grs,f
  6707     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6708     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6709     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6710     0BE8  0BAC               	decfsz	??___flmul,f
  6711     0BE9  2BE3               	goto	u4045
  6712     0BEA                     l2922:
  6713     0BEA  30FF               	movlw	255
  6714     0BEB  07BC               	addwf	___flmul@temp,f
  6715     0BEC  1803               	skipnc
  6716     0BED  0ABD               	incf	___flmul@temp+1,f
  6717     0BEE  30FF               	movlw	255
  6718     0BEF  07BD               	addwf	___flmul@temp+1,f
  6719     0BF0                     l2924:
  6720     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6721     0BF1  2BF3               	goto	u4051
  6722     0BF2  2BF4               	goto	u4050
  6723     0BF3                     u4051:
  6724     0BF3  2BD3               	goto	l2914
  6725     0BF4                     u4050:
  6726     0BF4                     l2926:
  6727     0BF4  01B6               	clrf	___flmul@aexp
  6728     0BF5                     l2928:
  6729     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6730     0BF6  2BF8               	goto	u4061
  6731     0BF7  2BF9               	goto	u4060
  6732     0BF8                     u4061:
  6733     0BF8  2C15               	goto	l2936
  6734     0BF9                     u4060:
  6735     0BF9                     l2930:
  6736     0BF9  30FF               	movlw	255
  6737     0BFA  0532               	andwf	___flmul@grs,w
  6738     0BFB  00AC               	movwf	??___flmul
  6739     0BFC  30FF               	movlw	255
  6740     0BFD  0533               	andwf	___flmul@grs+1,w
  6741     0BFE  00AD               	movwf	??___flmul+1
  6742     0BFF  30FF               	movlw	255
  6743     0C00  0534               	andwf	___flmul@grs+2,w
  6744     0C01  00AE               	movwf	??___flmul+2
  6745     0C02  307F               	movlw	127
  6746     0C03  0535               	andwf	___flmul@grs+3,w
  6747     0C04  00AF               	movwf	??___flmul+3
  6748     0C05  082F               	movf	??___flmul+3,w
  6749     0C06  042E               	iorwf	??___flmul+2,w
  6750     0C07  042D               	iorwf	??___flmul+1,w
  6751     0C08  042C               	iorwf	??___flmul,w
  6752     0C09  1903               	skipnz
  6753     0C0A  2C0C               	goto	u4071
  6754     0C0B  2C0D               	goto	u4070
  6755     0C0C                     u4071:
  6756     0C0C  2C10               	goto	l868
  6757     0C0D                     u4070:
  6758     0C0D                     l2932:
  6759     0C0D  01B6               	clrf	___flmul@aexp
  6760     0C0E  0AB6               	incf	___flmul@aexp,f
  6761     0C0F  2C15               	goto	l2936
  6762     0C10                     l868:
  6763     0C10  1C38               	btfss	___flmul@prod,0
  6764     0C11  2C13               	goto	u4081
  6765     0C12  2C14               	goto	u4080
  6766     0C13                     u4081:
  6767     0C13  2C15               	goto	l2936
  6768     0C14                     u4080:
  6769     0C14  2C0D               	goto	l2932
  6770     0C15                     l2936:
  6771     0C15  0836               	movf	___flmul@aexp,w
  6772     0C16  1903               	btfsc	3,2
  6773     0C17  2C19               	goto	u4091
  6774     0C18  2C1A               	goto	u4090
  6775     0C19                     u4091:
  6776     0C19  2C4B               	goto	l2946
  6777     0C1A                     u4090:
  6778     0C1A                     l2938:
  6779     0C1A  3001               	movlw	1
  6780     0C1B  07B8               	addwf	___flmul@prod,f
  6781     0C1C  3000               	movlw	0
  6782     0C1D  1803               	skipnc
  6783     0C1E  3001               	movlw	1
  6784     0C1F  07B9               	addwf	___flmul@prod+1,f
  6785     0C20  3000               	movlw	0
  6786     0C21  1803               	skipnc
  6787     0C22  3001               	movlw	1
  6788     0C23  07BA               	addwf	___flmul@prod+2,f
  6789     0C24  3000               	movlw	0
  6790     0C25  1803               	skipnc
  6791     0C26  3001               	movlw	1
  6792     0C27  07BB               	addwf	___flmul@prod+3,f
  6793     0C28                     l2940:
  6794     0C28  1C3B               	btfss	___flmul@prod+3,0
  6795     0C29  2C2B               	goto	u4101
  6796     0C2A  2C2C               	goto	u4100
  6797     0C2B                     u4101:
  6798     0C2B  2C4B               	goto	l2946
  6799     0C2C                     u4100:
  6800     0C2C                     l2942:
  6801     0C2C  0838               	movf	___flmul@prod,w
  6802     0C2D  00AC               	movwf	??___flmul
  6803     0C2E  0839               	movf	___flmul@prod+1,w
  6804     0C2F  00AD               	movwf	??___flmul+1
  6805     0C30  083A               	movf	___flmul@prod+2,w
  6806     0C31  00AE               	movwf	??___flmul+2
  6807     0C32  083B               	movf	___flmul@prod+3,w
  6808     0C33  00AF               	movwf	??___flmul+3
  6809     0C34  3001               	movlw	1
  6810     0C35  00B0               	movwf	??___flmul+4
  6811     0C36                     u4115:
  6812     0C36  0D2F               	rlf	??___flmul+3,w
  6813     0C37  0CAF               	rrf	??___flmul+3,f
  6814     0C38  0CAE               	rrf	??___flmul+2,f
  6815     0C39  0CAD               	rrf	??___flmul+1,f
  6816     0C3A  0CAC               	rrf	??___flmul,f
  6817     0C3B                     u4110:
  6818     0C3B  0BB0               	decfsz	??___flmul+4,f
  6819     0C3C  2C36               	goto	u4115
  6820     0C3D  082F               	movf	??___flmul+3,w
  6821     0C3E  00BB               	movwf	___flmul@prod+3
  6822     0C3F  082E               	movf	??___flmul+2,w
  6823     0C40  00BA               	movwf	___flmul@prod+2
  6824     0C41  082D               	movf	??___flmul+1,w
  6825     0C42  00B9               	movwf	___flmul@prod+1
  6826     0C43  082C               	movf	??___flmul,w
  6827     0C44  00B8               	movwf	___flmul@prod
  6828     0C45                     l2944:
  6829     0C45  3001               	movlw	1
  6830     0C46  07BC               	addwf	___flmul@temp,f
  6831     0C47  1803               	skipnc
  6832     0C48  0ABD               	incf	___flmul@temp+1,f
  6833     0C49  3000               	movlw	0
  6834     0C4A  07BD               	addwf	___flmul@temp+1,f
  6835     0C4B                     l2946:
  6836     0C4B  083D               	movf	___flmul@temp+1,w
  6837     0C4C  3A80               	xorlw	128
  6838     0C4D  00FF               	movwf	btemp+1
  6839     0C4E  3080               	movlw	128
  6840     0C4F  027F               	subwf	btemp+1,w
  6841     0C50  1D03               	skipz
  6842     0C51  2C54               	goto	u4125
  6843     0C52  30FF               	movlw	255
  6844     0C53  023C               	subwf	___flmul@temp,w
  6845     0C54                     u4125:
  6846     0C54  1C03               	skipc
  6847     0C55  2C57               	goto	u4121
  6848     0C56  2C58               	goto	u4120
  6849     0C57                     u4121:
  6850     0C57  2C63               	goto	l2950
  6851     0C58                     u4120:
  6852     0C58                     l2948:
  6853     0C58  307F               	movlw	127
  6854     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6855     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6856     0C5B  00BB               	movwf	___flmul@prod+3
  6857     0C5C  3080               	movlw	128
  6858     0C5D  00BA               	movwf	___flmul@prod+2
  6859     0C5E  3000               	movlw	0
  6860     0C5F  00B9               	movwf	___flmul@prod+1
  6861     0C60  3000               	movlw	0
  6862     0C61  00B8               	movwf	___flmul@prod
  6863     0C62  2C94               	goto	l874
  6864     0C63                     l2950:
  6865     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6866     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6867     0C65  083D               	movf	___flmul@temp+1,w
  6868     0C66  3A80               	xorlw	128
  6869     0C67  00FF               	movwf	btemp+1
  6870     0C68  3080               	movlw	128
  6871     0C69  027F               	subwf	btemp+1,w
  6872     0C6A  1D03               	skipz
  6873     0C6B  2C6E               	goto	u4135
  6874     0C6C  3001               	movlw	1
  6875     0C6D  023C               	subwf	___flmul@temp,w
  6876     0C6E                     u4135:
  6877     0C6E  1803               	skipnc
  6878     0C6F  2C71               	goto	u4131
  6879     0C70  2C72               	goto	u4130
  6880     0C71                     u4131:
  6881     0C71  2C7E               	goto	l2956
  6882     0C72                     u4130:
  6883     0C72                     l2952:
  6884     0C72  3000               	movlw	0
  6885     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6886     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6887     0C75  00BB               	movwf	___flmul@prod+3
  6888     0C76  3000               	movlw	0
  6889     0C77  00BA               	movwf	___flmul@prod+2
  6890     0C78  3000               	movlw	0
  6891     0C79  00B9               	movwf	___flmul@prod+1
  6892     0C7A  3000               	movlw	0
  6893     0C7B  00B8               	movwf	___flmul@prod
  6894     0C7C                     l2954:
  6895     0C7C  01B1               	clrf	___flmul@sign
  6896     0C7D  2C94               	goto	l874
  6897     0C7E                     l2956:
  6898     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6899     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6900     0C80  083C               	movf	___flmul@temp,w
  6901     0C81  00B7               	movwf	___flmul@bexp
  6902     0C82  30FF               	movlw	255
  6903     0C83  05B8               	andwf	___flmul@prod,f
  6904     0C84  30FF               	movlw	255
  6905     0C85  05B9               	andwf	___flmul@prod+1,f
  6906     0C86  307F               	movlw	127
  6907     0C87  05BA               	andwf	___flmul@prod+2,f
  6908     0C88  3000               	movlw	0
  6909     0C89  05BB               	andwf	___flmul@prod+3,f
  6910     0C8A                     l2958:
  6911     0C8A  1C37               	btfss	___flmul@bexp,0
  6912     0C8B  2C8D               	goto	u4141
  6913     0C8C  2C8E               	goto	u4140
  6914     0C8D                     u4141:
  6915     0C8D  2C8F               	goto	l2962
  6916     0C8E                     u4140:
  6917     0C8E                     l2960:
  6918     0C8E  17BA               	bsf	___flmul@prod+2,7
  6919     0C8F                     l2962:
  6920     0C8F  0837               	movf	___flmul@bexp,w
  6921     0C90  00AC               	movwf	??___flmul
  6922     0C91  1003               	clrc
  6923     0C92  0C2C               	rrf	??___flmul,w
  6924     0C93  00BB               	movwf	___flmul@prod+3
  6925     0C94                     l874:
  6926     0C94  0831               	movf	___flmul@sign,w
  6927     0C95  00AC               	movwf	??___flmul
  6928     0C96  082C               	movf	??___flmul,w
  6929     0C97  04BB               	iorwf	___flmul@prod+3,f
  6930     0C98                     l2964:
  6931     0C98  083B               	movf	___flmul@prod+3,w
  6932     0C99  00A7               	movwf	?___flmul+3
  6933     0C9A  083A               	movf	___flmul@prod+2,w
  6934     0C9B  00A6               	movwf	?___flmul+2
  6935     0C9C  0839               	movf	___flmul@prod+1,w
  6936     0C9D  00A5               	movwf	?___flmul+1
  6937     0C9E  0838               	movf	___flmul@prod,w
  6938     0C9F  00A4               	movwf	?___flmul
  6939     0CA0                     l862:
  6940     0CA0  0008               	return
  6941     0CA1                     __end_of___flmul:
  6942                           
  6943                           	psect	text10
  6944     1C3F                     __ptext10:	
  6945 ;; *************** function __Umul8_16 *****************
  6946 ;; Defined at:
  6947 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  multiplier      1    wreg     unsigned char 
  6950 ;;  multiplicand    1    0[COMMON] unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  multiplier      1    8[COMMON] unsigned char 
  6953 ;;  word_mpld       2    6[COMMON] unsigned int 
  6954 ;;  product         2    4[COMMON] unsigned int 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  2    0[COMMON] unsigned int 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6964 ;;      Params:         2       0       0       0       0
  6965 ;;      Locals:         5       0       0       0       0
  6966 ;;      Temps:          2       0       0       0       0
  6967 ;;      Totals:         9       0       0       0       0
  6968 ;;Total ram usage:        9 bytes
  6969 ;; Hardware stack levels used: 1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		___flmul
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977     1C3F                     __Umul8_16:	
  6978                           ;psect for function __Umul8_16
  6979                           
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6983                           ;__Umul8_16@multiplier stored from wreg
  6984     1C3F  00F8               	movwf	__Umul8_16@multiplier
  6985     1C40                     l2456:
  6986     1C40  01F4               	clrf	__Umul8_16@product
  6987     1C41  01F5               	clrf	__Umul8_16@product+1
  6988     1C42                     l2458:
  6989     1C42  0870               	movf	__Umul8_16@multiplicand,w
  6990     1C43  00F2               	movwf	??__Umul8_16
  6991     1C44  01F3               	clrf	??__Umul8_16+1
  6992     1C45  0872               	movf	??__Umul8_16,w
  6993     1C46  00F6               	movwf	__Umul8_16@word_mpld
  6994     1C47  0873               	movf	??__Umul8_16+1,w
  6995     1C48  00F7               	movwf	__Umul8_16@word_mpld+1
  6996     1C49                     l2460:
  6997     1C49  1C78               	btfss	__Umul8_16@multiplier,0
  6998     1C4A  2C4C               	goto	u2901
  6999     1C4B  2C4D               	goto	u2900
  7000     1C4C                     u2901:
  7001     1C4C  2C53               	goto	l881
  7002     1C4D                     u2900:
  7003     1C4D                     l2462:
  7004     1C4D  0876               	movf	__Umul8_16@word_mpld,w
  7005     1C4E  07F4               	addwf	__Umul8_16@product,f
  7006     1C4F  1803               	skipnc
  7007     1C50  0AF5               	incf	__Umul8_16@product+1,f
  7008     1C51  0877               	movf	__Umul8_16@word_mpld+1,w
  7009     1C52  07F5               	addwf	__Umul8_16@product+1,f
  7010     1C53                     l881:
  7011     1C53  3001               	movlw	1
  7012     1C54                     u2915:
  7013     1C54  1003               	clrc
  7014     1C55  0DF6               	rlf	__Umul8_16@word_mpld,f
  7015     1C56  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7016     1C57  3EFF               	addlw	-1
  7017     1C58  1D03               	skipz
  7018     1C59  2C54               	goto	u2915
  7019     1C5A  1003               	clrc
  7020     1C5B  0CF8               	rrf	__Umul8_16@multiplier,f
  7021     1C5C                     l2464:
  7022     1C5C  0878               	movf	__Umul8_16@multiplier,w
  7023     1C5D  1D03               	btfss	3,2
  7024     1C5E  2C60               	goto	u2921
  7025     1C5F  2C61               	goto	u2920
  7026     1C60                     u2921:
  7027     1C60  2C49               	goto	l2460
  7028     1C61                     u2920:
  7029     1C61                     l2466:
  7030     1C61  0875               	movf	__Umul8_16@product+1,w
  7031     1C62  00F1               	movwf	?__Umul8_16+1
  7032     1C63  0874               	movf	__Umul8_16@product,w
  7033     1C64  00F0               	movwf	?__Umul8_16
  7034     1C65                     l883:
  7035     1C65  0008               	return
  7036     1C66                     __end_of__Umul8_16:
  7037                           
  7038                           	psect	text11
  7039     10A7                     __ptext11:	
  7040 ;; *************** function __tdiv_to_l_ *****************
  7041 ;; Defined at:
  7042 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  f1              4    0[COMMON] float 
  7045 ;;  f2              4    4[COMMON] float 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  quot            4    0[BANK0 ] unsigned long 
  7048 ;;  exp1            1    5[BANK0 ] unsigned char 
  7049 ;;  cntr            1    4[BANK0 ] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  4    0[COMMON] unsigned long 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7059 ;;      Params:         8       0       0       0       0
  7060 ;;      Locals:         0       6       0       0       0
  7061 ;;      Temps:          3       0       0       0       0
  7062 ;;      Totals:        11       6       0       0       0
  7063 ;;Total ram usage:       17 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_sprintf
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072     10A7                     __tdiv_to_l_:	
  7073                           ;psect for function __tdiv_to_l_
  7074                           
  7075     10A7                     l3088:	
  7076                           ;incstack = 0
  7077                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7078                           
  7079     10A7  0870               	movf	__tdiv_to_l_@f1,w
  7080     10A8  00F8               	movwf	??__tdiv_to_l_
  7081     10A9  0871               	movf	__tdiv_to_l_@f1+1,w
  7082     10AA  00F9               	movwf	??__tdiv_to_l_+1
  7083     10AB  0872               	movf	__tdiv_to_l_@f1+2,w
  7084     10AC  00FA               	movwf	??__tdiv_to_l_+2
  7085     10AD  1003               	clrc
  7086     10AE  0D79               	rlf	??__tdiv_to_l_+1,w
  7087     10AF  0D7A               	rlf	??__tdiv_to_l_+2,w
  7088     10B0  1283               	bcf	3,5	;RP0=0, select bank0
  7089     10B1  1303               	bcf	3,6	;RP1=0, select bank0
  7090     10B2  00A5               	movwf	__tdiv_to_l_@exp1
  7091     10B3  0825               	movf	__tdiv_to_l_@exp1,w
  7092     10B4  1D03               	btfss	3,2
  7093     10B5  28B7               	goto	u4461
  7094     10B6  28B8               	goto	u4460
  7095     10B7                     u4461:
  7096     10B7  28C1               	goto	l3094
  7097     10B8                     u4460:
  7098     10B8                     l3090:
  7099     10B8  3000               	movlw	0
  7100     10B9  00F3               	movwf	?__tdiv_to_l_+3
  7101     10BA  3000               	movlw	0
  7102     10BB  00F2               	movwf	?__tdiv_to_l_+2
  7103     10BC  3000               	movlw	0
  7104     10BD  00F1               	movwf	?__tdiv_to_l_+1
  7105     10BE  3000               	movlw	0
  7106     10BF  00F0               	movwf	?__tdiv_to_l_
  7107     10C0  295D               	goto	l656
  7108     10C1                     l3094:
  7109     10C1  0874               	movf	__tdiv_to_l_@f2,w
  7110     10C2  00F8               	movwf	??__tdiv_to_l_
  7111     10C3  0875               	movf	__tdiv_to_l_@f2+1,w
  7112     10C4  00F9               	movwf	??__tdiv_to_l_+1
  7113     10C5  0876               	movf	__tdiv_to_l_@f2+2,w
  7114     10C6  00FA               	movwf	??__tdiv_to_l_+2
  7115     10C7  1003               	clrc
  7116     10C8  0D79               	rlf	??__tdiv_to_l_+1,w
  7117     10C9  0D7A               	rlf	??__tdiv_to_l_+2,w
  7118     10CA  00A4               	movwf	__tdiv_to_l_@cntr
  7119     10CB  0824               	movf	__tdiv_to_l_@cntr,w
  7120     10CC  1D03               	btfss	3,2
  7121     10CD  28CF               	goto	u4471
  7122     10CE  28D0               	goto	u4470
  7123     10CF                     u4471:
  7124     10CF  28D1               	goto	l657
  7125     10D0                     u4470:
  7126     10D0  28B8               	goto	l3090
  7127     10D1                     l657:
  7128     10D1  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7129     10D2                     l3100:
  7130     10D2  30FF               	movlw	255
  7131     10D3  05F0               	andwf	__tdiv_to_l_@f1,f
  7132     10D4  30FF               	movlw	255
  7133     10D5  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7134     10D6  3000               	movlw	0
  7135     10D7  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7136     10D8                     l3102:
  7137     10D8  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7138     10D9  30FF               	movlw	255
  7139     10DA  05F4               	andwf	__tdiv_to_l_@f2,f
  7140     10DB  30FF               	movlw	255
  7141     10DC  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7142     10DD  3000               	movlw	0
  7143     10DE  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7144     10DF  3000               	movlw	0
  7145     10E0  00A3               	movwf	__tdiv_to_l_@quot+3
  7146     10E1  3000               	movlw	0
  7147     10E2  00A2               	movwf	__tdiv_to_l_@quot+2
  7148     10E3  3000               	movlw	0
  7149     10E4  00A1               	movwf	__tdiv_to_l_@quot+1
  7150     10E5  3000               	movlw	0
  7151     10E6  00A0               	movwf	__tdiv_to_l_@quot
  7152     10E7                     l3104:
  7153     10E7  307F               	movlw	127
  7154     10E8  02A5               	subwf	__tdiv_to_l_@exp1,f
  7155     10E9                     l3106:
  7156     10E9  3098               	movlw	152
  7157     10EA  0724               	addwf	__tdiv_to_l_@cntr,w
  7158     10EB  00F8               	movwf	??__tdiv_to_l_
  7159     10EC  0878               	movf	??__tdiv_to_l_,w
  7160     10ED  02A5               	subwf	__tdiv_to_l_@exp1,f
  7161     10EE  3018               	movlw	24
  7162     10EF  00A4               	movwf	__tdiv_to_l_@cntr
  7163     10F0                     l3108:
  7164     10F0  3001               	movlw	1
  7165     10F1  00F8               	movwf	??__tdiv_to_l_
  7166     10F2                     u4485:
  7167     10F2  1003               	clrc
  7168     10F3  0DA0               	rlf	__tdiv_to_l_@quot,f
  7169     10F4  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7170     10F5  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7171     10F6  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7172     10F7  0BF8               	decfsz	??__tdiv_to_l_,f
  7173     10F8  28F2               	goto	u4485
  7174     10F9                     l3110:
  7175     10F9  0876               	movf	__tdiv_to_l_@f2+2,w
  7176     10FA  0272               	subwf	__tdiv_to_l_@f1+2,w
  7177     10FB  1D03               	skipz
  7178     10FC  2903               	goto	u4495
  7179     10FD  0875               	movf	__tdiv_to_l_@f2+1,w
  7180     10FE  0271               	subwf	__tdiv_to_l_@f1+1,w
  7181     10FF  1D03               	skipz
  7182     1100  2903               	goto	u4495
  7183     1101  0874               	movf	__tdiv_to_l_@f2,w
  7184     1102  0270               	subwf	__tdiv_to_l_@f1,w
  7185     1103                     u4495:
  7186     1103  1C03               	skipc
  7187     1104  2906               	goto	u4491
  7188     1105  2907               	goto	u4490
  7189     1106                     u4491:
  7190     1106  2912               	goto	l3116
  7191     1107                     u4490:
  7192     1107                     l3112:
  7193     1107  0874               	movf	__tdiv_to_l_@f2,w
  7194     1108  02F0               	subwf	__tdiv_to_l_@f1,f
  7195     1109  0875               	movf	__tdiv_to_l_@f2+1,w
  7196     110A  1C03               	skipc
  7197     110B  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7198     110C  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7199     110D  0876               	movf	__tdiv_to_l_@f2+2,w
  7200     110E  1C03               	skipc
  7201     110F  0A76               	incf	__tdiv_to_l_@f2+2,w
  7202     1110  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7203     1111                     l3114:
  7204     1111  1420               	bsf	__tdiv_to_l_@quot,0
  7205     1112                     l3116:
  7206     1112  3001               	movlw	1
  7207     1113                     u4505:
  7208     1113  1003               	clrc
  7209     1114  0DF0               	rlf	__tdiv_to_l_@f1,f
  7210     1115  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7211     1116  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7212     1117  3EFF               	addlw	-1
  7213     1118  1D03               	skipz
  7214     1119  2913               	goto	u4505
  7215     111A                     l3118:
  7216     111A  3001               	movlw	1
  7217     111B  02A4               	subwf	__tdiv_to_l_@cntr,f
  7218     111C  1D03               	btfss	3,2
  7219     111D  291F               	goto	u4511
  7220     111E  2920               	goto	u4510
  7221     111F                     u4511:
  7222     111F  28F0               	goto	l3108
  7223     1120                     u4510:
  7224     1120                     l660:
  7225     1120  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7226     1121  2923               	goto	u4521
  7227     1122  2924               	goto	u4520
  7228     1123                     u4521:
  7229     1123  293E               	goto	l3128
  7230     1124                     u4520:
  7231     1124                     l3120:
  7232     1124  0825               	movf	__tdiv_to_l_@exp1,w
  7233     1125  3A80               	xorlw	128
  7234     1126  3E97               	addlw	151
  7235     1127  1803               	skipnc
  7236     1128  292A               	goto	u4531
  7237     1129  292B               	goto	u4530
  7238     112A                     u4531:
  7239     112A  292C               	goto	l3126
  7240     112B                     u4530:
  7241     112B  28B8               	goto	l3090
  7242     112C                     l3126:
  7243     112C  3001               	movlw	1
  7244     112D                     u4545:
  7245     112D  1003               	clrc
  7246     112E  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7247     112F  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7248     1130  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7249     1131  0CA0               	rrf	__tdiv_to_l_@quot,f
  7250     1132  3EFF               	addlw	-1
  7251     1133  1D03               	skipz
  7252     1134  292D               	goto	u4545
  7253     1135  3001               	movlw	1
  7254     1136  00F8               	movwf	??__tdiv_to_l_
  7255     1137  0878               	movf	??__tdiv_to_l_,w
  7256     1138  07A5               	addwf	__tdiv_to_l_@exp1,f
  7257     1139  1D03               	btfss	3,2
  7258     113A  293C               	goto	u4551
  7259     113B  293D               	goto	u4550
  7260     113C                     u4551:
  7261     113C  292C               	goto	l3126
  7262     113D                     u4550:
  7263     113D  2955               	goto	l3136
  7264     113E                     l3128:
  7265     113E  3018               	movlw	24
  7266     113F  0225               	subwf	__tdiv_to_l_@exp1,w
  7267     1140  1C03               	skipc
  7268     1141  2943               	goto	u4561
  7269     1142  2944               	goto	u4560
  7270     1143                     u4561:
  7271     1143  2950               	goto	l667
  7272     1144                     u4560:
  7273     1144  28B8               	goto	l3090
  7274     1145                     l3134:
  7275     1145  3001               	movlw	1
  7276     1146  00F8               	movwf	??__tdiv_to_l_
  7277     1147                     u4575:
  7278     1147  1003               	clrc
  7279     1148  0DA0               	rlf	__tdiv_to_l_@quot,f
  7280     1149  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7281     114A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7282     114B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7283     114C  0BF8               	decfsz	??__tdiv_to_l_,f
  7284     114D  2947               	goto	u4575
  7285     114E  3001               	movlw	1
  7286     114F  02A5               	subwf	__tdiv_to_l_@exp1,f
  7287     1150                     l667:
  7288     1150  0825               	movf	__tdiv_to_l_@exp1,w
  7289     1151  1D03               	btfss	3,2
  7290     1152  2954               	goto	u4581
  7291     1153  2955               	goto	u4580
  7292     1154                     u4581:
  7293     1154  2945               	goto	l3134
  7294     1155                     u4580:
  7295     1155                     l3136:
  7296     1155  0823               	movf	__tdiv_to_l_@quot+3,w
  7297     1156  00F3               	movwf	?__tdiv_to_l_+3
  7298     1157  0822               	movf	__tdiv_to_l_@quot+2,w
  7299     1158  00F2               	movwf	?__tdiv_to_l_+2
  7300     1159  0821               	movf	__tdiv_to_l_@quot+1,w
  7301     115A  00F1               	movwf	?__tdiv_to_l_+1
  7302     115B  0820               	movf	__tdiv_to_l_@quot,w
  7303     115C  00F0               	movwf	?__tdiv_to_l_
  7304     115D                     l656:
  7305     115D  0008               	return
  7306     115E                     __end_of__tdiv_to_l_:
  7307                           
  7308                           	psect	text12
  7309     08A4                     __ptext12:	
  7310 ;; *************** function __div_to_l_ *****************
  7311 ;; Defined at:
  7312 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  f1              4    0[COMMON] unsigned long 
  7315 ;;  f2              4    4[COMMON] unsigned long 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  quot            4    0[BANK0 ] unsigned long 
  7318 ;;  exp1            1    5[BANK0 ] unsigned char 
  7319 ;;  cntr            1    4[BANK0 ] unsigned char 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  4    0[COMMON] unsigned long 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7329 ;;      Params:         8       0       0       0       0
  7330 ;;      Locals:         0       6       0       0       0
  7331 ;;      Temps:          1       0       0       0       0
  7332 ;;      Totals:         9       6       0       0       0
  7333 ;;Total ram usage:       15 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_sprintf
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342     08A4                     __div_to_l_:	
  7343                           ;psect for function __div_to_l_
  7344                           
  7345     08A4                     l3140:	
  7346                           ;incstack = 0
  7347                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7348                           
  7349     08A4  1003               	clrc
  7350     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  7351     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  7352     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  7353     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  7354     08A9  00A5               	movwf	__div_to_l_@exp1
  7355     08AA  0825               	movf	__div_to_l_@exp1,w
  7356     08AB  1D03               	btfss	3,2
  7357     08AC  28AE               	goto	u4591
  7358     08AD  28AF               	goto	u4590
  7359     08AE                     u4591:
  7360     08AE  28B8               	goto	l3146
  7361     08AF                     u4590:
  7362     08AF                     l3142:
  7363     08AF  3000               	movlw	0
  7364     08B0  00F3               	movwf	?__div_to_l_+3
  7365     08B1  3000               	movlw	0
  7366     08B2  00F2               	movwf	?__div_to_l_+2
  7367     08B3  3000               	movlw	0
  7368     08B4  00F1               	movwf	?__div_to_l_+1
  7369     08B5  3000               	movlw	0
  7370     08B6  00F0               	movwf	?__div_to_l_
  7371     08B7  295B               	goto	l609
  7372     08B8                     l3146:
  7373     08B8  1003               	clrc
  7374     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  7375     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  7376     08BB  00A4               	movwf	__div_to_l_@cntr
  7377     08BC  0824               	movf	__div_to_l_@cntr,w
  7378     08BD  1D03               	btfss	3,2
  7379     08BE  28C0               	goto	u4601
  7380     08BF  28C1               	goto	u4600
  7381     08C0                     u4601:
  7382     08C0  28C2               	goto	l610
  7383     08C1                     u4600:
  7384     08C1  28AF               	goto	l3142
  7385     08C2                     l610:
  7386     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  7387     08C3                     l3152:
  7388     08C3  30FF               	movlw	255
  7389     08C4  05F0               	andwf	__div_to_l_@f1,f
  7390     08C5  30FF               	movlw	255
  7391     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  7392     08C7  30FF               	movlw	255
  7393     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  7394     08C9  3000               	movlw	0
  7395     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  7396     08CB                     l3154:
  7397     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  7398     08CC  30FF               	movlw	255
  7399     08CD  05F4               	andwf	__div_to_l_@f2,f
  7400     08CE  30FF               	movlw	255
  7401     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  7402     08D0  30FF               	movlw	255
  7403     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  7404     08D2  3000               	movlw	0
  7405     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  7406     08D4  3000               	movlw	0
  7407     08D5  00A3               	movwf	__div_to_l_@quot+3
  7408     08D6  3000               	movlw	0
  7409     08D7  00A2               	movwf	__div_to_l_@quot+2
  7410     08D8  3000               	movlw	0
  7411     08D9  00A1               	movwf	__div_to_l_@quot+1
  7412     08DA  3000               	movlw	0
  7413     08DB  00A0               	movwf	__div_to_l_@quot
  7414     08DC                     l3156:
  7415     08DC  307F               	movlw	127
  7416     08DD  02A5               	subwf	__div_to_l_@exp1,f
  7417     08DE                     l3158:
  7418     08DE  30A0               	movlw	160
  7419     08DF  0724               	addwf	__div_to_l_@cntr,w
  7420     08E0  00F8               	movwf	??__div_to_l_
  7421     08E1  0878               	movf	??__div_to_l_,w
  7422     08E2  02A5               	subwf	__div_to_l_@exp1,f
  7423     08E3  3020               	movlw	32
  7424     08E4  00A4               	movwf	__div_to_l_@cntr
  7425     08E5                     l3160:
  7426     08E5  3001               	movlw	1
  7427     08E6  00F8               	movwf	??__div_to_l_
  7428     08E7                     u4615:
  7429     08E7  1003               	clrc
  7430     08E8  0DA0               	rlf	__div_to_l_@quot,f
  7431     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  7432     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  7433     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  7434     08EC  0BF8               	decfsz	??__div_to_l_,f
  7435     08ED  28E7               	goto	u4615
  7436     08EE                     l3162:
  7437     08EE  0877               	movf	__div_to_l_@f2+3,w
  7438     08EF  0273               	subwf	__div_to_l_@f1+3,w
  7439     08F0  1D03               	skipz
  7440     08F1  28FC               	goto	u4625
  7441     08F2  0876               	movf	__div_to_l_@f2+2,w
  7442     08F3  0272               	subwf	__div_to_l_@f1+2,w
  7443     08F4  1D03               	skipz
  7444     08F5  28FC               	goto	u4625
  7445     08F6  0875               	movf	__div_to_l_@f2+1,w
  7446     08F7  0271               	subwf	__div_to_l_@f1+1,w
  7447     08F8  1D03               	skipz
  7448     08F9  28FC               	goto	u4625
  7449     08FA  0874               	movf	__div_to_l_@f2,w
  7450     08FB  0270               	subwf	__div_to_l_@f1,w
  7451     08FC                     u4625:
  7452     08FC  1C03               	skipc
  7453     08FD  28FF               	goto	u4621
  7454     08FE  2900               	goto	u4620
  7455     08FF                     u4621:
  7456     08FF  290F               	goto	l3168
  7457     0900                     u4620:
  7458     0900                     l3164:
  7459     0900  0874               	movf	__div_to_l_@f2,w
  7460     0901  02F0               	subwf	__div_to_l_@f1,f
  7461     0902  0875               	movf	__div_to_l_@f2+1,w
  7462     0903  1C03               	skipc
  7463     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  7464     0905  02F1               	subwf	__div_to_l_@f1+1,f
  7465     0906  0876               	movf	__div_to_l_@f2+2,w
  7466     0907  1C03               	skipc
  7467     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  7468     0909  02F2               	subwf	__div_to_l_@f1+2,f
  7469     090A  0877               	movf	__div_to_l_@f2+3,w
  7470     090B  1C03               	skipc
  7471     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  7472     090D  02F3               	subwf	__div_to_l_@f1+3,f
  7473     090E                     l3166:
  7474     090E  1420               	bsf	__div_to_l_@quot,0
  7475     090F                     l3168:
  7476     090F  3001               	movlw	1
  7477     0910  00F8               	movwf	??__div_to_l_
  7478     0911                     u4635:
  7479     0911  1003               	clrc
  7480     0912  0DF0               	rlf	__div_to_l_@f1,f
  7481     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  7482     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  7483     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  7484     0916  0BF8               	decfsz	??__div_to_l_,f
  7485     0917  2911               	goto	u4635
  7486     0918                     l3170:
  7487     0918  3001               	movlw	1
  7488     0919  02A4               	subwf	__div_to_l_@cntr,f
  7489     091A  1D03               	btfss	3,2
  7490     091B  291D               	goto	u4641
  7491     091C  291E               	goto	u4640
  7492     091D                     u4641:
  7493     091D  28E5               	goto	l3160
  7494     091E                     u4640:
  7495     091E                     l613:
  7496     091E  1FA5               	btfss	__div_to_l_@exp1,7
  7497     091F  2921               	goto	u4651
  7498     0920  2922               	goto	u4650
  7499     0921                     u4651:
  7500     0921  293C               	goto	l3180
  7501     0922                     u4650:
  7502     0922                     l3172:
  7503     0922  0825               	movf	__div_to_l_@exp1,w
  7504     0923  3A80               	xorlw	128
  7505     0924  3E9F               	addlw	159
  7506     0925  1803               	skipnc
  7507     0926  2928               	goto	u4661
  7508     0927  2929               	goto	u4660
  7509     0928                     u4661:
  7510     0928  292A               	goto	l3178
  7511     0929                     u4660:
  7512     0929  28AF               	goto	l3142
  7513     092A                     l3178:
  7514     092A  3001               	movlw	1
  7515     092B                     u4675:
  7516     092B  1003               	clrc
  7517     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  7518     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  7519     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  7520     092F  0CA0               	rrf	__div_to_l_@quot,f
  7521     0930  3EFF               	addlw	-1
  7522     0931  1D03               	skipz
  7523     0932  292B               	goto	u4675
  7524     0933  3001               	movlw	1
  7525     0934  00F8               	movwf	??__div_to_l_
  7526     0935  0878               	movf	??__div_to_l_,w
  7527     0936  07A5               	addwf	__div_to_l_@exp1,f
  7528     0937  1D03               	btfss	3,2
  7529     0938  293A               	goto	u4681
  7530     0939  293B               	goto	u4680
  7531     093A                     u4681:
  7532     093A  292A               	goto	l3178
  7533     093B                     u4680:
  7534     093B  2953               	goto	l3188
  7535     093C                     l3180:
  7536     093C  3020               	movlw	32
  7537     093D  0225               	subwf	__div_to_l_@exp1,w
  7538     093E  1C03               	skipc
  7539     093F  2941               	goto	u4691
  7540     0940  2942               	goto	u4690
  7541     0941                     u4691:
  7542     0941  294E               	goto	l620
  7543     0942                     u4690:
  7544     0942  28AF               	goto	l3142
  7545     0943                     l3186:
  7546     0943  3001               	movlw	1
  7547     0944  00F8               	movwf	??__div_to_l_
  7548     0945                     u4705:
  7549     0945  1003               	clrc
  7550     0946  0DA0               	rlf	__div_to_l_@quot,f
  7551     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  7552     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  7553     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  7554     094A  0BF8               	decfsz	??__div_to_l_,f
  7555     094B  2945               	goto	u4705
  7556     094C  3001               	movlw	1
  7557     094D  02A5               	subwf	__div_to_l_@exp1,f
  7558     094E                     l620:
  7559     094E  0825               	movf	__div_to_l_@exp1,w
  7560     094F  1D03               	btfss	3,2
  7561     0950  2952               	goto	u4711
  7562     0951  2953               	goto	u4710
  7563     0952                     u4711:
  7564     0952  2943               	goto	l3186
  7565     0953                     u4710:
  7566     0953                     l3188:
  7567     0953  0823               	movf	__div_to_l_@quot+3,w
  7568     0954  00F3               	movwf	?__div_to_l_+3
  7569     0955  0822               	movf	__div_to_l_@quot+2,w
  7570     0956  00F2               	movwf	?__div_to_l_+2
  7571     0957  0821               	movf	__div_to_l_@quot+1,w
  7572     0958  00F1               	movwf	?__div_to_l_+1
  7573     0959  0820               	movf	__div_to_l_@quot,w
  7574     095A  00F0               	movwf	?__div_to_l_
  7575     095B                     l609:
  7576     095B  0008               	return
  7577     095C                     __end_of__div_to_l_:
  7578                           
  7579                           	psect	text13
  7580     00F6                     __ptext13:	
  7581 ;; *************** function ___xxtofl *****************
  7582 ;; Defined at:
  7583 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  sign            1    wreg     unsigned char 
  7586 ;;  val             4    6[COMMON] long 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  sign            1    0[BANK0 ] unsigned char 
  7589 ;;  arg             4    2[BANK0 ] unsigned long 
  7590 ;;  exp             1    1[BANK0 ] unsigned char 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  4    6[COMMON] unsigned char 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7600 ;;      Params:         4       0       0       0       0
  7601 ;;      Locals:         0       6       0       0       0
  7602 ;;      Temps:          4       0       0       0       0
  7603 ;;      Totals:         8       6       0       0       0
  7604 ;;Total ram usage:       14 bytes
  7605 ;; Hardware stack levels used: 1
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_main
  7610 ;;		_sprintf
  7611 ;;		_medir_distancia
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615     00F6                     ___xxtofl:	
  7616                           ;psect for function ___xxtofl
  7617                           
  7618                           
  7619                           ;incstack = 0
  7620                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7621                           ;___xxtofl@sign stored from wreg
  7622     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  7623     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  7624     00F8  00A0               	movwf	___xxtofl@sign
  7625     00F9                     l3308:
  7626     00F9  0820               	movf	___xxtofl@sign,w
  7627     00FA  1903               	btfsc	3,2
  7628     00FB  28FD               	goto	u5031
  7629     00FC  28FE               	goto	u5030
  7630     00FD                     u5031:
  7631     00FD  2912               	goto	l3314
  7632     00FE                     u5030:
  7633     00FE                     l3310:
  7634     00FE  1FF9               	btfss	___xxtofl@val+3,7
  7635     00FF  2901               	goto	u5041
  7636     0100  2902               	goto	u5040
  7637     0101                     u5041:
  7638     0101  2912               	goto	l3314
  7639     0102                     u5040:
  7640     0102                     l3312:
  7641     0102  0976               	comf	___xxtofl@val,w
  7642     0103  00A2               	movwf	___xxtofl@arg
  7643     0104  0977               	comf	___xxtofl@val+1,w
  7644     0105  00A3               	movwf	___xxtofl@arg+1
  7645     0106  0978               	comf	___xxtofl@val+2,w
  7646     0107  00A4               	movwf	___xxtofl@arg+2
  7647     0108  0979               	comf	___xxtofl@val+3,w
  7648     0109  00A5               	movwf	___xxtofl@arg+3
  7649     010A  0AA2               	incf	___xxtofl@arg,f
  7650     010B  1903               	skipnz
  7651     010C  0AA3               	incf	___xxtofl@arg+1,f
  7652     010D  1903               	skipnz
  7653     010E  0AA4               	incf	___xxtofl@arg+2,f
  7654     010F  1903               	skipnz
  7655     0110  0AA5               	incf	___xxtofl@arg+3,f
  7656     0111  291A               	goto	l906
  7657     0112                     l3314:
  7658     0112  0879               	movf	___xxtofl@val+3,w
  7659     0113  00A5               	movwf	___xxtofl@arg+3
  7660     0114  0878               	movf	___xxtofl@val+2,w
  7661     0115  00A4               	movwf	___xxtofl@arg+2
  7662     0116  0877               	movf	___xxtofl@val+1,w
  7663     0117  00A3               	movwf	___xxtofl@arg+1
  7664     0118  0876               	movf	___xxtofl@val,w
  7665     0119  00A2               	movwf	___xxtofl@arg
  7666     011A                     l906:
  7667     011A  0879               	movf	___xxtofl@val+3,w
  7668     011B  0478               	iorwf	___xxtofl@val+2,w
  7669     011C  0477               	iorwf	___xxtofl@val+1,w
  7670     011D  0476               	iorwf	___xxtofl@val,w
  7671     011E  1D03               	skipz
  7672     011F  2921               	goto	u5051
  7673     0120  2922               	goto	u5050
  7674     0121                     u5051:
  7675     0121  292B               	goto	l3320
  7676     0122                     u5050:
  7677     0122                     l3316:
  7678     0122  3000               	movlw	0
  7679     0123  00F9               	movwf	?___xxtofl+3
  7680     0124  3000               	movlw	0
  7681     0125  00F8               	movwf	?___xxtofl+2
  7682     0126  3000               	movlw	0
  7683     0127  00F7               	movwf	?___xxtofl+1
  7684     0128  3000               	movlw	0
  7685     0129  00F6               	movwf	?___xxtofl
  7686     012A  29AF               	goto	l908
  7687     012B                     l3320:
  7688     012B  3096               	movlw	150
  7689     012C  00A1               	movwf	___xxtofl@exp
  7690     012D  293B               	goto	l3324
  7691     012E                     l3322:
  7692     012E  3001               	movlw	1
  7693     012F  00FA               	movwf	??___xxtofl
  7694     0130  087A               	movf	??___xxtofl,w
  7695     0131  07A1               	addwf	___xxtofl@exp,f
  7696     0132  3001               	movlw	1
  7697     0133                     u5065:
  7698     0133  1003               	clrc
  7699     0134  0CA5               	rrf	___xxtofl@arg+3,f
  7700     0135  0CA4               	rrf	___xxtofl@arg+2,f
  7701     0136  0CA3               	rrf	___xxtofl@arg+1,f
  7702     0137  0CA2               	rrf	___xxtofl@arg,f
  7703     0138  3EFF               	addlw	-1
  7704     0139  1D03               	skipz
  7705     013A  2933               	goto	u5065
  7706     013B                     l3324:
  7707     013B  30FE               	movlw	254
  7708     013C  0525               	andwf	___xxtofl@arg+3,w
  7709     013D  1D03               	btfss	3,2
  7710     013E  2940               	goto	u5071
  7711     013F  2941               	goto	u5070
  7712     0140                     u5071:
  7713     0140  292E               	goto	l3322
  7714     0141                     u5070:
  7715     0141  295D               	goto	l912
  7716     0142                     l3326:
  7717     0142  3001               	movlw	1
  7718     0143  00FA               	movwf	??___xxtofl
  7719     0144  087A               	movf	??___xxtofl,w
  7720     0145  07A1               	addwf	___xxtofl@exp,f
  7721     0146                     l3328:
  7722     0146  3001               	movlw	1
  7723     0147  07A2               	addwf	___xxtofl@arg,f
  7724     0148  3000               	movlw	0
  7725     0149  1803               	skipnc
  7726     014A  3001               	movlw	1
  7727     014B  07A3               	addwf	___xxtofl@arg+1,f
  7728     014C  3000               	movlw	0
  7729     014D  1803               	skipnc
  7730     014E  3001               	movlw	1
  7731     014F  07A4               	addwf	___xxtofl@arg+2,f
  7732     0150  3000               	movlw	0
  7733     0151  1803               	skipnc
  7734     0152  3001               	movlw	1
  7735     0153  07A5               	addwf	___xxtofl@arg+3,f
  7736     0154                     l3330:
  7737     0154  3001               	movlw	1
  7738     0155                     u5085:
  7739     0155  1003               	clrc
  7740     0156  0CA5               	rrf	___xxtofl@arg+3,f
  7741     0157  0CA4               	rrf	___xxtofl@arg+2,f
  7742     0158  0CA3               	rrf	___xxtofl@arg+1,f
  7743     0159  0CA2               	rrf	___xxtofl@arg,f
  7744     015A  3EFF               	addlw	-1
  7745     015B  1D03               	skipz
  7746     015C  2955               	goto	u5085
  7747     015D                     l912:
  7748     015D  30FF               	movlw	255
  7749     015E  0525               	andwf	___xxtofl@arg+3,w
  7750     015F  1D03               	btfss	3,2
  7751     0160  2962               	goto	u5091
  7752     0161  2963               	goto	u5090
  7753     0162                     u5091:
  7754     0162  2942               	goto	l3326
  7755     0163                     u5090:
  7756     0163  296F               	goto	l3334
  7757     0164                     l3332:
  7758     0164  3001               	movlw	1
  7759     0165  02A1               	subwf	___xxtofl@exp,f
  7760     0166  3001               	movlw	1
  7761     0167  00FA               	movwf	??___xxtofl
  7762     0168                     u5105:
  7763     0168  1003               	clrc
  7764     0169  0DA2               	rlf	___xxtofl@arg,f
  7765     016A  0DA3               	rlf	___xxtofl@arg+1,f
  7766     016B  0DA4               	rlf	___xxtofl@arg+2,f
  7767     016C  0DA5               	rlf	___xxtofl@arg+3,f
  7768     016D  0BFA               	decfsz	??___xxtofl,f
  7769     016E  2968               	goto	u5105
  7770     016F                     l3334:
  7771     016F  1BA4               	btfsc	___xxtofl@arg+2,7
  7772     0170  2972               	goto	u5111
  7773     0171  2973               	goto	u5110
  7774     0172                     u5111:
  7775     0172  2979               	goto	l919
  7776     0173                     u5110:
  7777     0173                     l3336:
  7778     0173  3002               	movlw	2
  7779     0174  0221               	subwf	___xxtofl@exp,w
  7780     0175  1803               	skipnc
  7781     0176  2978               	goto	u5121
  7782     0177  2979               	goto	u5120
  7783     0178                     u5121:
  7784     0178  2964               	goto	l3332
  7785     0179                     u5120:
  7786     0179                     l919:
  7787     0179  1821               	btfsc	___xxtofl@exp,0
  7788     017A  297C               	goto	u5131
  7789     017B  297D               	goto	u5130
  7790     017C                     u5131:
  7791     017C  2985               	goto	l920
  7792     017D                     u5130:
  7793     017D                     l3338:
  7794     017D  30FF               	movlw	255
  7795     017E  05A2               	andwf	___xxtofl@arg,f
  7796     017F  30FF               	movlw	255
  7797     0180  05A3               	andwf	___xxtofl@arg+1,f
  7798     0181  307F               	movlw	127
  7799     0182  05A4               	andwf	___xxtofl@arg+2,f
  7800     0183  30FF               	movlw	255
  7801     0184  05A5               	andwf	___xxtofl@arg+3,f
  7802     0185                     l920:
  7803     0185  1003               	clrc
  7804     0186  0CA1               	rrf	___xxtofl@exp,f
  7805     0187                     l3340:
  7806     0187  0821               	movf	___xxtofl@exp,w
  7807     0188  00FA               	movwf	??___xxtofl
  7808     0189  01FB               	clrf	??___xxtofl+1
  7809     018A  01FC               	clrf	??___xxtofl+2
  7810     018B  01FD               	clrf	??___xxtofl+3
  7811     018C  3018               	movlw	24
  7812     018D                     u5145:
  7813     018D  1003               	clrc
  7814     018E  0DFA               	rlf	??___xxtofl,f
  7815     018F  0DFB               	rlf	??___xxtofl+1,f
  7816     0190  0DFC               	rlf	??___xxtofl+2,f
  7817     0191  0DFD               	rlf	??___xxtofl+3,f
  7818     0192                     u5140:
  7819     0192  3EFF               	addlw	-1
  7820     0193  1D03               	skipz
  7821     0194  298D               	goto	u5145
  7822     0195  087A               	movf	??___xxtofl,w
  7823     0196  04A2               	iorwf	___xxtofl@arg,f
  7824     0197  087B               	movf	??___xxtofl+1,w
  7825     0198  04A3               	iorwf	___xxtofl@arg+1,f
  7826     0199  087C               	movf	??___xxtofl+2,w
  7827     019A  04A4               	iorwf	___xxtofl@arg+2,f
  7828     019B  087D               	movf	??___xxtofl+3,w
  7829     019C  04A5               	iorwf	___xxtofl@arg+3,f
  7830     019D                     l3342:
  7831     019D  0820               	movf	___xxtofl@sign,w
  7832     019E  1903               	btfsc	3,2
  7833     019F  29A1               	goto	u5151
  7834     01A0  29A2               	goto	u5150
  7835     01A1                     u5151:
  7836     01A1  29A7               	goto	l3348
  7837     01A2                     u5150:
  7838     01A2                     l3344:
  7839     01A2  1FF9               	btfss	___xxtofl@val+3,7
  7840     01A3  29A5               	goto	u5161
  7841     01A4  29A6               	goto	u5160
  7842     01A5                     u5161:
  7843     01A5  29A7               	goto	l3348
  7844     01A6                     u5160:
  7845     01A6                     l3346:
  7846     01A6  17A5               	bsf	___xxtofl@arg+3,7
  7847     01A7                     l3348:
  7848     01A7  0825               	movf	___xxtofl@arg+3,w
  7849     01A8  00F9               	movwf	?___xxtofl+3
  7850     01A9  0824               	movf	___xxtofl@arg+2,w
  7851     01AA  00F8               	movwf	?___xxtofl+2
  7852     01AB  0823               	movf	___xxtofl@arg+1,w
  7853     01AC  00F7               	movwf	?___xxtofl+1
  7854     01AD  0822               	movf	___xxtofl@arg,w
  7855     01AE  00F6               	movwf	?___xxtofl
  7856     01AF                     l908:
  7857     01AF  0008               	return
  7858     01B0                     __end_of___xxtofl:
  7859                           
  7860                           	psect	text14
  7861     1BF3                     __ptext14:	
  7862 ;; *************** function ___wmul *****************
  7863 ;; Defined at:
  7864 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  multiplier      2    0[COMMON] unsigned int 
  7867 ;;  multiplicand    2    2[COMMON] unsigned int 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  product         2    4[COMMON] unsigned int 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  2    0[COMMON] unsigned int 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7879 ;;      Params:         4       0       0       0       0
  7880 ;;      Locals:         2       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0
  7882 ;;      Totals:         6       0       0       0       0
  7883 ;;Total ram usage:        6 bytes
  7884 ;; Hardware stack levels used: 1
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_sprintf
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892     1BF3                     ___wmul:	
  7893                           ;psect for function ___wmul
  7894                           
  7895     1BF3                     l3192:	
  7896                           ;incstack = 0
  7897                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7898                           
  7899     1BF3  01F4               	clrf	___wmul@product
  7900     1BF4  01F5               	clrf	___wmul@product+1
  7901     1BF5                     l3194:
  7902     1BF5  1C70               	btfss	___wmul@multiplier,0
  7903     1BF6  2BF8               	goto	u4721
  7904     1BF7  2BF9               	goto	u4720
  7905     1BF8                     u4721:
  7906     1BF8  2BFF               	goto	l439
  7907     1BF9                     u4720:
  7908     1BF9                     l3196:
  7909     1BF9  0872               	movf	___wmul@multiplicand,w
  7910     1BFA  07F4               	addwf	___wmul@product,f
  7911     1BFB  1803               	skipnc
  7912     1BFC  0AF5               	incf	___wmul@product+1,f
  7913     1BFD  0873               	movf	___wmul@multiplicand+1,w
  7914     1BFE  07F5               	addwf	___wmul@product+1,f
  7915     1BFF                     l439:
  7916     1BFF  3001               	movlw	1
  7917     1C00                     u4735:
  7918     1C00  1003               	clrc
  7919     1C01  0DF2               	rlf	___wmul@multiplicand,f
  7920     1C02  0DF3               	rlf	___wmul@multiplicand+1,f
  7921     1C03  3EFF               	addlw	-1
  7922     1C04  1D03               	skipz
  7923     1C05  2C00               	goto	u4735
  7924     1C06                     l3198:
  7925     1C06  3001               	movlw	1
  7926     1C07                     u4745:
  7927     1C07  1003               	clrc
  7928     1C08  0CF1               	rrf	___wmul@multiplier+1,f
  7929     1C09  0CF0               	rrf	___wmul@multiplier,f
  7930     1C0A  3EFF               	addlw	-1
  7931     1C0B  1D03               	skipz
  7932     1C0C  2C07               	goto	u4745
  7933     1C0D                     l3200:
  7934     1C0D  0870               	movf	___wmul@multiplier,w
  7935     1C0E  0471               	iorwf	___wmul@multiplier+1,w
  7936     1C0F  1D03               	btfss	3,2
  7937     1C10  2C12               	goto	u4751
  7938     1C11  2C13               	goto	u4750
  7939     1C12                     u4751:
  7940     1C12  2BF5               	goto	l3194
  7941     1C13                     u4750:
  7942     1C13                     l3202:
  7943     1C13  0875               	movf	___wmul@product+1,w
  7944     1C14  00F1               	movwf	?___wmul+1
  7945     1C15  0874               	movf	___wmul@product,w
  7946     1C16  00F0               	movwf	?___wmul
  7947     1C17                     l441:
  7948     1C17  0008               	return
  7949     1C18                     __end_of___wmul:
  7950                           
  7951                           	psect	text15
  7952     1E27                     __ptext15:	
  7953 ;; *************** function ___llmod *****************
  7954 ;; Defined at:
  7955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  divisor         4    0[COMMON] unsigned long 
  7958 ;;  dividend        4    4[COMMON] unsigned long 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  counter         1    9[COMMON] unsigned char 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  4    0[COMMON] unsigned long 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7970 ;;      Params:         8       0       0       0       0
  7971 ;;      Locals:         1       0       0       0       0
  7972 ;;      Temps:          1       0       0       0       0
  7973 ;;      Totals:        10       0       0       0       0
  7974 ;;Total ram usage:       10 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_sprintf
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983     1E27                     ___llmod:	
  7984                           ;psect for function ___llmod
  7985                           
  7986     1E27                     l3282:	
  7987                           ;incstack = 0
  7988                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7989                           
  7990     1E27  0873               	movf	___llmod@divisor+3,w
  7991     1E28  0472               	iorwf	___llmod@divisor+2,w
  7992     1E29  0471               	iorwf	___llmod@divisor+1,w
  7993     1E2A  0470               	iorwf	___llmod@divisor,w
  7994     1E2B  1903               	skipnz
  7995     1E2C  2E2E               	goto	u4971
  7996     1E2D  2E2F               	goto	u4970
  7997     1E2E                     u4971:
  7998     1E2E  2E72               	goto	l3298
  7999     1E2F                     u4970:
  8000     1E2F                     l3284:
  8001     1E2F  01F9               	clrf	___llmod@counter
  8002     1E30  0AF9               	incf	___llmod@counter,f
  8003     1E31  2E3F               	goto	l3288
  8004     1E32                     l3286:
  8005     1E32  3001               	movlw	1
  8006     1E33  00F8               	movwf	??___llmod
  8007     1E34                     u4985:
  8008     1E34  1003               	clrc
  8009     1E35  0DF0               	rlf	___llmod@divisor,f
  8010     1E36  0DF1               	rlf	___llmod@divisor+1,f
  8011     1E37  0DF2               	rlf	___llmod@divisor+2,f
  8012     1E38  0DF3               	rlf	___llmod@divisor+3,f
  8013     1E39  0BF8               	decfsz	??___llmod,f
  8014     1E3A  2E34               	goto	u4985
  8015     1E3B  3001               	movlw	1
  8016     1E3C  00F8               	movwf	??___llmod
  8017     1E3D  0878               	movf	??___llmod,w
  8018     1E3E  07F9               	addwf	___llmod@counter,f
  8019     1E3F                     l3288:
  8020     1E3F  1FF3               	btfss	___llmod@divisor+3,7
  8021     1E40  2E42               	goto	u4991
  8022     1E41  2E43               	goto	u4990
  8023     1E42                     u4991:
  8024     1E42  2E32               	goto	l3286
  8025     1E43                     u4990:
  8026     1E43                     l3290:
  8027     1E43  0873               	movf	___llmod@divisor+3,w
  8028     1E44  0277               	subwf	___llmod@dividend+3,w
  8029     1E45  1D03               	skipz
  8030     1E46  2E51               	goto	u5005
  8031     1E47  0872               	movf	___llmod@divisor+2,w
  8032     1E48  0276               	subwf	___llmod@dividend+2,w
  8033     1E49  1D03               	skipz
  8034     1E4A  2E51               	goto	u5005
  8035     1E4B  0871               	movf	___llmod@divisor+1,w
  8036     1E4C  0275               	subwf	___llmod@dividend+1,w
  8037     1E4D  1D03               	skipz
  8038     1E4E  2E51               	goto	u5005
  8039     1E4F  0870               	movf	___llmod@divisor,w
  8040     1E50  0274               	subwf	___llmod@dividend,w
  8041     1E51                     u5005:
  8042     1E51  1C03               	skipc
  8043     1E52  2E54               	goto	u5001
  8044     1E53  2E55               	goto	u5000
  8045     1E54                     u5001:
  8046     1E54  2E63               	goto	l3294
  8047     1E55                     u5000:
  8048     1E55                     l3292:
  8049     1E55  0870               	movf	___llmod@divisor,w
  8050     1E56  02F4               	subwf	___llmod@dividend,f
  8051     1E57  0871               	movf	___llmod@divisor+1,w
  8052     1E58  1C03               	skipc
  8053     1E59  0F71               	incfsz	___llmod@divisor+1,w
  8054     1E5A  02F5               	subwf	___llmod@dividend+1,f
  8055     1E5B  0872               	movf	___llmod@divisor+2,w
  8056     1E5C  1C03               	skipc
  8057     1E5D  0F72               	incfsz	___llmod@divisor+2,w
  8058     1E5E  02F6               	subwf	___llmod@dividend+2,f
  8059     1E5F  0873               	movf	___llmod@divisor+3,w
  8060     1E60  1C03               	skipc
  8061     1E61  0F73               	incfsz	___llmod@divisor+3,w
  8062     1E62  02F7               	subwf	___llmod@dividend+3,f
  8063     1E63                     l3294:
  8064     1E63  3001               	movlw	1
  8065     1E64                     u5015:
  8066     1E64  1003               	clrc
  8067     1E65  0CF3               	rrf	___llmod@divisor+3,f
  8068     1E66  0CF2               	rrf	___llmod@divisor+2,f
  8069     1E67  0CF1               	rrf	___llmod@divisor+1,f
  8070     1E68  0CF0               	rrf	___llmod@divisor,f
  8071     1E69  3EFF               	addlw	-1
  8072     1E6A  1D03               	skipz
  8073     1E6B  2E64               	goto	u5015
  8074     1E6C                     l3296:
  8075     1E6C  3001               	movlw	1
  8076     1E6D  02F9               	subwf	___llmod@counter,f
  8077     1E6E  1D03               	btfss	3,2
  8078     1E6F  2E71               	goto	u5021
  8079     1E70  2E72               	goto	u5020
  8080     1E71                     u5021:
  8081     1E71  2E43               	goto	l3290
  8082     1E72                     u5020:
  8083     1E72                     l3298:
  8084     1E72  0877               	movf	___llmod@dividend+3,w
  8085     1E73  00F3               	movwf	?___llmod+3
  8086     1E74  0876               	movf	___llmod@dividend+2,w
  8087     1E75  00F2               	movwf	?___llmod+2
  8088     1E76  0875               	movf	___llmod@dividend+1,w
  8089     1E77  00F1               	movwf	?___llmod+1
  8090     1E78  0874               	movf	___llmod@dividend,w
  8091     1E79  00F0               	movwf	?___llmod
  8092     1E7A                     l695:
  8093     1E7A  0008               	return
  8094     1E7B                     __end_of___llmod:
  8095                           
  8096                           	psect	text16
  8097     102F                     __ptext16:	
  8098 ;; *************** function ___fltol *****************
  8099 ;; Defined at:
  8100 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  f1              4   49[BANK0 ] unsigned long 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  exp1            1   58[BANK0 ] unsigned char 
  8105 ;;  sign1           1   57[BANK0 ] unsigned char 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  4   49[BANK0 ] long 
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8115 ;;      Params:         0       4       0       0       0
  8116 ;;      Locals:         0       2       0       0       0
  8117 ;;      Temps:          0       4       0       0       0
  8118 ;;      Totals:         0      10       0       0       0
  8119 ;;Total ram usage:       10 bytes
  8120 ;; Hardware stack levels used: 1
  8121 ;; This function calls:
  8122 ;;		Nothing
  8123 ;; This function is called by:
  8124 ;;		_sprintf
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128     102F                     ___fltol:	
  8129                           ;psect for function ___fltol
  8130                           
  8131     102F                     l3246:	
  8132                           ;incstack = 0
  8133                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8134                           
  8135     102F  1003               	clrc
  8136     1030  1283               	bcf	3,5	;RP0=0, select bank0
  8137     1031  1303               	bcf	3,6	;RP1=0, select bank0
  8138     1032  0D53               	rlf	___fltol@f1+2,w
  8139     1033  0D54               	rlf	___fltol@f1+3,w
  8140     1034  00DA               	movwf	___fltol@exp1
  8141     1035  085A               	movf	___fltol@exp1,w
  8142     1036  1D03               	btfss	3,2
  8143     1037  2839               	goto	u4871
  8144     1038  283A               	goto	u4870
  8145     1039                     u4871:
  8146     1039  2843               	goto	l3252
  8147     103A                     u4870:
  8148     103A                     l3248:
  8149     103A  3000               	movlw	0
  8150     103B  00D4               	movwf	?___fltol+3
  8151     103C  3000               	movlw	0
  8152     103D  00D3               	movwf	?___fltol+2
  8153     103E  3000               	movlw	0
  8154     103F  00D2               	movwf	?___fltol+1
  8155     1040  3000               	movlw	0
  8156     1041  00D1               	movwf	?___fltol
  8157     1042  28A6               	goto	l642
  8158     1043                     l3252:
  8159     1043  0851               	movf	___fltol@f1,w
  8160     1044  00D5               	movwf	??___fltol
  8161     1045  0852               	movf	___fltol@f1+1,w
  8162     1046  00D6               	movwf	??___fltol+1
  8163     1047  0853               	movf	___fltol@f1+2,w
  8164     1048  00D7               	movwf	??___fltol+2
  8165     1049  0854               	movf	___fltol@f1+3,w
  8166     104A  00D8               	movwf	??___fltol+3
  8167     104B  301F               	movlw	31
  8168     104C                     u4885:
  8169     104C  1003               	clrc
  8170     104D  0CD8               	rrf	??___fltol+3,f
  8171     104E  0CD7               	rrf	??___fltol+2,f
  8172     104F  0CD6               	rrf	??___fltol+1,f
  8173     1050  0CD5               	rrf	??___fltol,f
  8174     1051                     u4880:
  8175     1051  3EFF               	addlw	-1
  8176     1052  1D03               	skipz
  8177     1053  284C               	goto	u4885
  8178     1054  0855               	movf	??___fltol,w
  8179     1055  00D9               	movwf	___fltol@sign1
  8180     1056                     l3254:
  8181     1056  17D3               	bsf	___fltol@f1+2,7
  8182     1057                     l3256:
  8183     1057  30FF               	movlw	255
  8184     1058  05D1               	andwf	___fltol@f1,f
  8185     1059  30FF               	movlw	255
  8186     105A  05D2               	andwf	___fltol@f1+1,f
  8187     105B  30FF               	movlw	255
  8188     105C  05D3               	andwf	___fltol@f1+2,f
  8189     105D  3000               	movlw	0
  8190     105E  05D4               	andwf	___fltol@f1+3,f
  8191     105F                     l3258:
  8192     105F  3096               	movlw	150
  8193     1060  02DA               	subwf	___fltol@exp1,f
  8194     1061                     l3260:
  8195     1061  1FDA               	btfss	___fltol@exp1,7
  8196     1062  2864               	goto	u4891
  8197     1063  2865               	goto	u4890
  8198     1064                     u4891:
  8199     1064  287F               	goto	l3270
  8200     1065                     u4890:
  8201     1065                     l3262:
  8202     1065  085A               	movf	___fltol@exp1,w
  8203     1066  3A80               	xorlw	128
  8204     1067  3E97               	addlw	151
  8205     1068  1803               	skipnc
  8206     1069  286B               	goto	u4901
  8207     106A  286C               	goto	u4900
  8208     106B                     u4901:
  8209     106B  286D               	goto	l3268
  8210     106C                     u4900:
  8211     106C  283A               	goto	l3248
  8212     106D                     l3268:
  8213     106D  3001               	movlw	1
  8214     106E                     u4915:
  8215     106E  1003               	clrc
  8216     106F  0CD4               	rrf	___fltol@f1+3,f
  8217     1070  0CD3               	rrf	___fltol@f1+2,f
  8218     1071  0CD2               	rrf	___fltol@f1+1,f
  8219     1072  0CD1               	rrf	___fltol@f1,f
  8220     1073  3EFF               	addlw	-1
  8221     1074  1D03               	skipz
  8222     1075  286E               	goto	u4915
  8223     1076  3001               	movlw	1
  8224     1077  00D5               	movwf	??___fltol
  8225     1078  0855               	movf	??___fltol,w
  8226     1079  07DA               	addwf	___fltol@exp1,f
  8227     107A  1D03               	btfss	3,2
  8228     107B  287D               	goto	u4921
  8229     107C  287E               	goto	u4920
  8230     107D                     u4921:
  8231     107D  286D               	goto	l3268
  8232     107E                     u4920:
  8233     107E  2896               	goto	l3278
  8234     107F                     l3270:
  8235     107F  3020               	movlw	32
  8236     1080  025A               	subwf	___fltol@exp1,w
  8237     1081  1C03               	skipc
  8238     1082  2884               	goto	u4931
  8239     1083  2885               	goto	u4930
  8240     1084                     u4931:
  8241     1084  2891               	goto	l649
  8242     1085                     u4930:
  8243     1085  283A               	goto	l3248
  8244     1086                     l3276:
  8245     1086  3001               	movlw	1
  8246     1087  00D5               	movwf	??___fltol
  8247     1088                     u4945:
  8248     1088  1003               	clrc
  8249     1089  0DD1               	rlf	___fltol@f1,f
  8250     108A  0DD2               	rlf	___fltol@f1+1,f
  8251     108B  0DD3               	rlf	___fltol@f1+2,f
  8252     108C  0DD4               	rlf	___fltol@f1+3,f
  8253     108D  0BD5               	decfsz	??___fltol,f
  8254     108E  2888               	goto	u4945
  8255     108F  3001               	movlw	1
  8256     1090  02DA               	subwf	___fltol@exp1,f
  8257     1091                     l649:
  8258     1091  085A               	movf	___fltol@exp1,w
  8259     1092  1D03               	btfss	3,2
  8260     1093  2895               	goto	u4951
  8261     1094  2896               	goto	u4950
  8262     1095                     u4951:
  8263     1095  2886               	goto	l3276
  8264     1096                     u4950:
  8265     1096                     l3278:
  8266     1096  0859               	movf	___fltol@sign1,w
  8267     1097  1903               	btfsc	3,2
  8268     1098  289A               	goto	u4961
  8269     1099  289B               	goto	u4960
  8270     109A                     u4961:
  8271     109A  28A6               	goto	l652
  8272     109B                     u4960:
  8273     109B                     l3280:
  8274     109B  09D1               	comf	___fltol@f1,f
  8275     109C  09D2               	comf	___fltol@f1+1,f
  8276     109D  09D3               	comf	___fltol@f1+2,f
  8277     109E  09D4               	comf	___fltol@f1+3,f
  8278     109F  0AD1               	incf	___fltol@f1,f
  8279     10A0  1903               	skipnz
  8280     10A1  0AD2               	incf	___fltol@f1+1,f
  8281     10A2  1903               	skipnz
  8282     10A3  0AD3               	incf	___fltol@f1+2,f
  8283     10A4  1903               	skipnz
  8284     10A5  0AD4               	incf	___fltol@f1+3,f
  8285     10A6                     l652:
  8286     10A6                     l642:
  8287     10A6  0008               	return
  8288     10A7                     __end_of___fltol:
  8289                           
  8290                           	psect	text17
  8291     1BAA                     __ptext17:	
  8292 ;; *************** function ___flsub *****************
  8293 ;; Defined at:
  8294 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  a               4   70[BANK0 ] long 
  8297 ;;  b               4   74[BANK0 ] long 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  4   70[BANK0 ] long 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8309 ;;      Params:         0       8       0       0       0
  8310 ;;      Locals:         0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0
  8312 ;;      Totals:         0       8       0       0       0
  8313 ;;Total ram usage:        8 bytes
  8314 ;; Hardware stack levels used: 1
  8315 ;; Hardware stack levels required when called: 1
  8316 ;; This function calls:
  8317 ;;		___fladd
  8318 ;; This function is called by:
  8319 ;;		_sprintf
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323     1BAA                     ___flsub:	
  8324                           ;psect for function ___flsub
  8325                           
  8326     1BAA                     l3302:	
  8327                           ;incstack = 0
  8328                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8329                           
  8330     1BAA  3080               	movlw	128
  8331     1BAB  1283               	bcf	3,5	;RP0=0, select bank0
  8332     1BAC  1303               	bcf	3,6	;RP1=0, select bank0
  8333     1BAD  06E9               	xorwf	___flsub@a+3,f
  8334     1BAE                     l3304:
  8335     1BAE  086D               	movf	___flsub@b+3,w
  8336     1BAF  00D5               	movwf	___fladd@b+3
  8337     1BB0  086C               	movf	___flsub@b+2,w
  8338     1BB1  00D4               	movwf	___fladd@b+2
  8339     1BB2  086B               	movf	___flsub@b+1,w
  8340     1BB3  00D3               	movwf	___fladd@b+1
  8341     1BB4  086A               	movf	___flsub@b,w
  8342     1BB5  00D2               	movwf	___fladd@b
  8343     1BB6  0869               	movf	___flsub@a+3,w
  8344     1BB7  00D9               	movwf	___fladd@a+3
  8345     1BB8  0868               	movf	___flsub@a+2,w
  8346     1BB9  00D8               	movwf	___fladd@a+2
  8347     1BBA  0867               	movf	___flsub@a+1,w
  8348     1BBB  00D7               	movwf	___fladd@a+1
  8349     1BBC  0866               	movf	___flsub@a,w
  8350     1BBD  00D6               	movwf	___fladd@a
  8351     1BBE  160A  118A  25A8  160A  158A  	fcall	___fladd
  8352     1BC3  1283               	bcf	3,5	;RP0=0, select bank0
  8353     1BC4  1303               	bcf	3,6	;RP1=0, select bank0
  8354     1BC5  0855               	movf	?___fladd+3,w
  8355     1BC6  00E9               	movwf	?___flsub+3
  8356     1BC7  0854               	movf	?___fladd+2,w
  8357     1BC8  00E8               	movwf	?___flsub+2
  8358     1BC9  0853               	movf	?___fladd+1,w
  8359     1BCA  00E7               	movwf	?___flsub+1
  8360     1BCB  0852               	movf	?___fladd,w
  8361     1BCC  00E6               	movwf	?___flsub
  8362     1BCD                     l812:
  8363     1BCD  0008               	return
  8364     1BCE                     __end_of___flsub:
  8365                           
  8366                           	psect	text18
  8367     15A8                     __ptext18:	
  8368 ;; *************** function ___fladd *****************
  8369 ;; Defined at:
  8370 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  b               4   50[BANK0 ] long 
  8373 ;;  a               4   54[BANK0 ] long 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  grs             1   69[BANK0 ] unsigned char 
  8376 ;;  bexp            1   68[BANK0 ] unsigned char 
  8377 ;;  aexp            1   67[BANK0 ] unsigned char 
  8378 ;;  signs           1   66[BANK0 ] unsigned char 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  4   50[BANK0 ] unsigned char 
  8381 ;; Registers used:
  8382 ;;		wreg, status,2, status,0, btemp+1
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8388 ;;      Params:         0       8       0       0       0
  8389 ;;      Locals:         0       4       0       0       0
  8390 ;;      Temps:          0       8       0       0       0
  8391 ;;      Totals:         0      20       0       0       0
  8392 ;;Total ram usage:       20 bytes
  8393 ;; Hardware stack levels used: 1
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_sprintf
  8398 ;;		___flsub
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402     15A8                     ___fladd:	
  8403                           ;psect for function ___fladd
  8404                           
  8405     15A8                     l2634:	
  8406                           ;incstack = 0
  8407                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8408                           
  8409     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8410     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8411     15AA  0855               	movf	___fladd@b+3,w
  8412     15AB  3980               	andlw	128
  8413     15AC  00E2               	movwf	___fladd@signs
  8414     15AD                     l2636:
  8415     15AD  0855               	movf	___fladd@b+3,w
  8416     15AE  00DA               	movwf	??___fladd
  8417     15AF  075A               	addwf	??___fladd,w
  8418     15B0  00E4               	movwf	___fladd@bexp
  8419     15B1                     l2638:
  8420     15B1  1FD4               	btfss	___fladd@b+2,7
  8421     15B2  2DB4               	goto	u3321
  8422     15B3  2DB5               	goto	u3320
  8423     15B4                     u3321:
  8424     15B4  2DB6               	goto	l2642
  8425     15B5                     u3320:
  8426     15B5                     l2640:
  8427     15B5  1464               	bsf	___fladd@bexp,0
  8428     15B6                     l2642:
  8429     15B6  0864               	movf	___fladd@bexp,w
  8430     15B7  1903               	btfsc	3,2
  8431     15B8  2DBA               	goto	u3331
  8432     15B9  2DBB               	goto	u3330
  8433     15BA                     u3331:
  8434     15BA  2DCB               	goto	l2652
  8435     15BB                     u3330:
  8436     15BB                     l2644:
  8437     15BB  0A64               	incf	___fladd@bexp,w
  8438     15BC  1D03               	btfss	3,2
  8439     15BD  2DBF               	goto	u3341
  8440     15BE  2DC0               	goto	u3340
  8441     15BF                     u3341:
  8442     15BF  2DC8               	goto	l2648
  8443     15C0                     u3340:
  8444     15C0                     l2646:
  8445     15C0  3000               	movlw	0
  8446     15C1  00D5               	movwf	___fladd@b+3
  8447     15C2  3000               	movlw	0
  8448     15C3  00D4               	movwf	___fladd@b+2
  8449     15C4  3000               	movlw	0
  8450     15C5  00D3               	movwf	___fladd@b+1
  8451     15C6  3000               	movlw	0
  8452     15C7  00D2               	movwf	___fladd@b
  8453     15C8                     l2648:
  8454     15C8  17D4               	bsf	___fladd@b+2,7
  8455     15C9                     l2650:
  8456     15C9  01D5               	clrf	___fladd@b+3
  8457     15CA  2DD3               	goto	l2654
  8458     15CB                     l2652:
  8459     15CB  3000               	movlw	0
  8460     15CC  00D5               	movwf	___fladd@b+3
  8461     15CD  3000               	movlw	0
  8462     15CE  00D4               	movwf	___fladd@b+2
  8463     15CF  3000               	movlw	0
  8464     15D0  00D3               	movwf	___fladd@b+1
  8465     15D1  3000               	movlw	0
  8466     15D2  00D2               	movwf	___fladd@b
  8467     15D3                     l2654:
  8468     15D3  0859               	movf	___fladd@a+3,w
  8469     15D4  3980               	andlw	128
  8470     15D5  00E3               	movwf	___fladd@aexp
  8471     15D6                     l2656:
  8472     15D6  0863               	movf	___fladd@aexp,w
  8473     15D7  0662               	xorwf	___fladd@signs,w
  8474     15D8  1903               	skipnz
  8475     15D9  2DDB               	goto	u3351
  8476     15DA  2DDC               	goto	u3350
  8477     15DB                     u3351:
  8478     15DB  2DDD               	goto	l2660
  8479     15DC                     u3350:
  8480     15DC                     l2658:
  8481     15DC  1762               	bsf	___fladd@signs,6
  8482     15DD                     l2660:
  8483     15DD  0859               	movf	___fladd@a+3,w
  8484     15DE  00DA               	movwf	??___fladd
  8485     15DF  075A               	addwf	??___fladd,w
  8486     15E0  00E3               	movwf	___fladd@aexp
  8487     15E1                     l2662:
  8488     15E1  1FD8               	btfss	___fladd@a+2,7
  8489     15E2  2DE4               	goto	u3361
  8490     15E3  2DE5               	goto	u3360
  8491     15E4                     u3361:
  8492     15E4  2DE6               	goto	l2666
  8493     15E5                     u3360:
  8494     15E5                     l2664:
  8495     15E5  1463               	bsf	___fladd@aexp,0
  8496     15E6                     l2666:
  8497     15E6  0863               	movf	___fladd@aexp,w
  8498     15E7  1903               	btfsc	3,2
  8499     15E8  2DEA               	goto	u3371
  8500     15E9  2DEB               	goto	u3370
  8501     15EA                     u3371:
  8502     15EA  2DFB               	goto	l2676
  8503     15EB                     u3370:
  8504     15EB                     l2668:
  8505     15EB  0A63               	incf	___fladd@aexp,w
  8506     15EC  1D03               	btfss	3,2
  8507     15ED  2DEF               	goto	u3381
  8508     15EE  2DF0               	goto	u3380
  8509     15EF                     u3381:
  8510     15EF  2DF8               	goto	l2672
  8511     15F0                     u3380:
  8512     15F0                     l2670:
  8513     15F0  3000               	movlw	0
  8514     15F1  00D9               	movwf	___fladd@a+3
  8515     15F2  3000               	movlw	0
  8516     15F3  00D8               	movwf	___fladd@a+2
  8517     15F4  3000               	movlw	0
  8518     15F5  00D7               	movwf	___fladd@a+1
  8519     15F6  3000               	movlw	0
  8520     15F7  00D6               	movwf	___fladd@a
  8521     15F8                     l2672:
  8522     15F8  17D8               	bsf	___fladd@a+2,7
  8523     15F9                     l2674:
  8524     15F9  01D9               	clrf	___fladd@a+3
  8525     15FA  2E03               	goto	l766
  8526     15FB                     l2676:
  8527     15FB  3000               	movlw	0
  8528     15FC  00D9               	movwf	___fladd@a+3
  8529     15FD  3000               	movlw	0
  8530     15FE  00D8               	movwf	___fladd@a+2
  8531     15FF  3000               	movlw	0
  8532     1600  00D7               	movwf	___fladd@a+1
  8533     1601  3000               	movlw	0
  8534     1602  00D6               	movwf	___fladd@a
  8535     1603                     l766:
  8536     1603  0864               	movf	___fladd@bexp,w
  8537     1604  0263               	subwf	___fladd@aexp,w
  8538     1605  1803               	skipnc
  8539     1606  2E08               	goto	u3391
  8540     1607  2E09               	goto	u3390
  8541     1608                     u3391:
  8542     1608  2E2F               	goto	l2712
  8543     1609                     u3390:
  8544     1609                     l2678:
  8545     1609  1F62               	btfss	___fladd@signs,6
  8546     160A  2E0C               	goto	u3401
  8547     160B  2E0D               	goto	u3400
  8548     160C                     u3401:
  8549     160C  2E11               	goto	l2682
  8550     160D                     u3400:
  8551     160D                     l2680:
  8552     160D  3080               	movlw	128
  8553     160E  00DA               	movwf	??___fladd
  8554     160F  085A               	movf	??___fladd,w
  8555     1610  06E2               	xorwf	___fladd@signs,f
  8556     1611                     l2682:
  8557     1611  0864               	movf	___fladd@bexp,w
  8558     1612  00E5               	movwf	___fladd@grs
  8559     1613                     l2684:
  8560     1613  0863               	movf	___fladd@aexp,w
  8561     1614  00E4               	movwf	___fladd@bexp
  8562     1615                     l2686:
  8563     1615  0865               	movf	___fladd@grs,w
  8564     1616  00E3               	movwf	___fladd@aexp
  8565     1617                     l2688:
  8566     1617  0852               	movf	___fladd@b,w
  8567     1618  00E5               	movwf	___fladd@grs
  8568     1619                     l2690:
  8569     1619  0856               	movf	___fladd@a,w
  8570     161A  00D2               	movwf	___fladd@b
  8571     161B                     l2692:
  8572     161B  0865               	movf	___fladd@grs,w
  8573     161C  00D6               	movwf	___fladd@a
  8574     161D                     l2694:
  8575     161D  0853               	movf	___fladd@b+1,w
  8576     161E  00E5               	movwf	___fladd@grs
  8577     161F                     l2696:
  8578     161F  0857               	movf	___fladd@a+1,w
  8579     1620  00D3               	movwf	___fladd@b+1
  8580     1621                     l2698:
  8581     1621  0865               	movf	___fladd@grs,w
  8582     1622  00D7               	movwf	___fladd@a+1
  8583     1623                     l2700:
  8584     1623  0854               	movf	___fladd@b+2,w
  8585     1624  00E5               	movwf	___fladd@grs
  8586     1625                     l2702:
  8587     1625  0858               	movf	___fladd@a+2,w
  8588     1626  00D4               	movwf	___fladd@b+2
  8589     1627                     l2704:
  8590     1627  0865               	movf	___fladd@grs,w
  8591     1628  00D8               	movwf	___fladd@a+2
  8592     1629                     l2706:
  8593     1629  0855               	movf	___fladd@b+3,w
  8594     162A  00E5               	movwf	___fladd@grs
  8595     162B                     l2708:
  8596     162B  0859               	movf	___fladd@a+3,w
  8597     162C  00D5               	movwf	___fladd@b+3
  8598     162D                     l2710:
  8599     162D  0865               	movf	___fladd@grs,w
  8600     162E  00D9               	movwf	___fladd@a+3
  8601     162F                     l2712:
  8602     162F  01E5               	clrf	___fladd@grs
  8603     1630                     l2714:
  8604     1630  0863               	movf	___fladd@aexp,w
  8605     1631  00DA               	movwf	??___fladd
  8606     1632  01DB               	clrf	??___fladd+1
  8607     1633  085B               	movf	??___fladd+1,w
  8608     1634  00DD               	movwf	??___fladd+3
  8609     1635  0864               	movf	___fladd@bexp,w
  8610     1636  025A               	subwf	??___fladd,w
  8611     1637  00DC               	movwf	??___fladd+2
  8612     1638  1C03               	skipc
  8613     1639  03DD               	decf	??___fladd+3,f
  8614     163A  085D               	movf	??___fladd+3,w
  8615     163B  3A80               	xorlw	128
  8616     163C  00FF               	movwf	btemp+1
  8617     163D  3080               	movlw	128
  8618     163E  027F               	subwf	btemp+1,w
  8619     163F  1D03               	skipz
  8620     1640  2E43               	goto	u3415
  8621     1641  301A               	movlw	26
  8622     1642  025C               	subwf	??___fladd+2,w
  8623     1643                     u3415:
  8624     1643  1C03               	skipc
  8625     1644  2E46               	goto	u3411
  8626     1645  2E47               	goto	u3410
  8627     1646                     u3411:
  8628     1646  2E7E               	goto	l2730
  8629     1647                     u3410:
  8630     1647                     l2716:
  8631     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8632     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8633     1649  0855               	movf	___fladd@b+3,w
  8634     164A  0454               	iorwf	___fladd@b+2,w
  8635     164B  0453               	iorwf	___fladd@b+1,w
  8636     164C  0452               	iorwf	___fladd@b,w
  8637     164D  1D03               	skipz
  8638     164E  2E50               	goto	u3421
  8639     164F  2E52               	goto	u3420
  8640     1650                     u3421:
  8641     1650  3001               	movlw	1
  8642     1651  2E53               	goto	u3430
  8643     1652                     u3420:
  8644     1652  3000               	movlw	0
  8645     1653                     u3430:
  8646     1653  00E5               	movwf	___fladd@grs
  8647     1654  3000               	movlw	0
  8648     1655  00D5               	movwf	___fladd@b+3
  8649     1656  3000               	movlw	0
  8650     1657  00D4               	movwf	___fladd@b+2
  8651     1658  3000               	movlw	0
  8652     1659  00D3               	movwf	___fladd@b+1
  8653     165A  3000               	movlw	0
  8654     165B  00D2               	movwf	___fladd@b
  8655     165C  0863               	movf	___fladd@aexp,w
  8656     165D  00E4               	movwf	___fladd@bexp
  8657     165E  2E86               	goto	l770
  8658     165F                     l772:
  8659     165F  1C65               	btfss	___fladd@grs,0
  8660     1660  2E62               	goto	u3441
  8661     1661  2E63               	goto	u3440
  8662     1662                     u3441:
  8663     1662  2E6A               	goto	l2720
  8664     1663                     u3440:
  8665     1663                     l2718:
  8666     1663  0865               	movf	___fladd@grs,w
  8667     1664  00DA               	movwf	??___fladd
  8668     1665  1003               	clrc
  8669     1666  0C5A               	rrf	??___fladd,w
  8670     1667  3801               	iorlw	1
  8671     1668  00E5               	movwf	___fladd@grs
  8672     1669  2E6C               	goto	l2722
  8673     166A                     l2720:
  8674     166A  1003               	clrc
  8675     166B  0CE5               	rrf	___fladd@grs,f
  8676     166C                     l2722:
  8677     166C  1C52               	btfss	___fladd@b,0
  8678     166D  2E6F               	goto	u3451
  8679     166E  2E70               	goto	u3450
  8680     166F                     u3451:
  8681     166F  2E71               	goto	l2726
  8682     1670                     u3450:
  8683     1670                     l2724:
  8684     1670  17E5               	bsf	___fladd@grs,7
  8685     1671                     l2726:
  8686     1671  3001               	movlw	1
  8687     1672  00DA               	movwf	??___fladd
  8688     1673                     u3465:
  8689     1673  0D55               	rlf	___fladd@b+3,w
  8690     1674  0CD5               	rrf	___fladd@b+3,f
  8691     1675  0CD4               	rrf	___fladd@b+2,f
  8692     1676  0CD3               	rrf	___fladd@b+1,f
  8693     1677  0CD2               	rrf	___fladd@b,f
  8694     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8695     1679  2E73               	goto	u3465
  8696     167A                     l2728:
  8697     167A  3001               	movlw	1
  8698     167B  00DA               	movwf	??___fladd
  8699     167C  085A               	movf	??___fladd,w
  8700     167D  07E4               	addwf	___fladd@bexp,f
  8701     167E                     l2730:
  8702     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8703     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8704     1680  0863               	movf	___fladd@aexp,w
  8705     1681  0264               	subwf	___fladd@bexp,w
  8706     1682  1C03               	skipc
  8707     1683  2E85               	goto	u3471
  8708     1684  2E86               	goto	u3470
  8709     1685                     u3471:
  8710     1685  2E5F               	goto	l772
  8711     1686                     u3470:
  8712     1686                     l770:
  8713     1686  1B62               	btfsc	___fladd@signs,6
  8714     1687  2E89               	goto	u3481
  8715     1688  2E8A               	goto	u3480
  8716     1689                     u3481:
  8717     1689  2ED3               	goto	l2756
  8718     168A                     u3480:
  8719     168A                     l2732:
  8720     168A  0864               	movf	___fladd@bexp,w
  8721     168B  1D03               	btfss	3,2
  8722     168C  2E8E               	goto	u3491
  8723     168D  2E8F               	goto	u3490
  8724     168E                     u3491:
  8725     168E  2E98               	goto	l2738
  8726     168F                     u3490:
  8727     168F                     l2734:
  8728     168F  3000               	movlw	0
  8729     1690  00D5               	movwf	?___fladd+3
  8730     1691  3000               	movlw	0
  8731     1692  00D4               	movwf	?___fladd+2
  8732     1693  3000               	movlw	0
  8733     1694  00D3               	movwf	?___fladd+1
  8734     1695  3000               	movlw	0
  8735     1696  00D2               	movwf	?___fladd
  8736     1697  2FFF               	goto	l779
  8737     1698                     l2738:
  8738     1698  0856               	movf	___fladd@a,w
  8739     1699  07D2               	addwf	___fladd@b,f
  8740     169A  0857               	movf	___fladd@a+1,w
  8741     169B  1103               	clrz
  8742     169C  1803               	skipnc
  8743     169D  3E01               	addlw	1
  8744     169E  1903               	skipnz
  8745     169F  2EA1               	goto	u3501
  8746     16A0  07D3               	addwf	___fladd@b+1,f
  8747     16A1                     u3501:
  8748     16A1  0858               	movf	___fladd@a+2,w
  8749     16A2  1103               	clrz
  8750     16A3  1803               	skipnc
  8751     16A4  3E01               	addlw	1
  8752     16A5  1903               	skipnz
  8753     16A6  2EA8               	goto	u3502
  8754     16A7  07D4               	addwf	___fladd@b+2,f
  8755     16A8                     u3502:
  8756     16A8  0859               	movf	___fladd@a+3,w
  8757     16A9  1103               	clrz
  8758     16AA  1803               	skipnc
  8759     16AB  3E01               	addlw	1
  8760     16AC  1903               	skipnz
  8761     16AD  2EAF               	goto	u3503
  8762     16AE  07D5               	addwf	___fladd@b+3,f
  8763     16AF                     u3503:
  8764     16AF                     l2740:
  8765     16AF  1C55               	btfss	___fladd@b+3,0
  8766     16B0  2EB2               	goto	u3511
  8767     16B1  2EB3               	goto	u3510
  8768     16B2                     u3511:
  8769     16B2  2F87               	goto	l2790
  8770     16B3                     u3510:
  8771     16B3                     l2742:
  8772     16B3  1C65               	btfss	___fladd@grs,0
  8773     16B4  2EB6               	goto	u3521
  8774     16B5  2EB7               	goto	u3520
  8775     16B6                     u3521:
  8776     16B6  2EBE               	goto	l2746
  8777     16B7                     u3520:
  8778     16B7                     l2744:
  8779     16B7  0865               	movf	___fladd@grs,w
  8780     16B8  00DA               	movwf	??___fladd
  8781     16B9  1003               	clrc
  8782     16BA  0C5A               	rrf	??___fladd,w
  8783     16BB  3801               	iorlw	1
  8784     16BC  00E5               	movwf	___fladd@grs
  8785     16BD  2EC0               	goto	l2748
  8786     16BE                     l2746:
  8787     16BE  1003               	clrc
  8788     16BF  0CE5               	rrf	___fladd@grs,f
  8789     16C0                     l2748:
  8790     16C0  1C52               	btfss	___fladd@b,0
  8791     16C1  2EC3               	goto	u3531
  8792     16C2  2EC4               	goto	u3530
  8793     16C3                     u3531:
  8794     16C3  2EC5               	goto	l2752
  8795     16C4                     u3530:
  8796     16C4                     l2750:
  8797     16C4  17E5               	bsf	___fladd@grs,7
  8798     16C5                     l2752:
  8799     16C5  3001               	movlw	1
  8800     16C6  00DA               	movwf	??___fladd
  8801     16C7                     u3545:
  8802     16C7  0D55               	rlf	___fladd@b+3,w
  8803     16C8  0CD5               	rrf	___fladd@b+3,f
  8804     16C9  0CD4               	rrf	___fladd@b+2,f
  8805     16CA  0CD3               	rrf	___fladd@b+1,f
  8806     16CB  0CD2               	rrf	___fladd@b,f
  8807     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8808     16CD  2EC7               	goto	u3545
  8809     16CE                     l2754:
  8810     16CE  3001               	movlw	1
  8811     16CF  00DA               	movwf	??___fladd
  8812     16D0  085A               	movf	??___fladd,w
  8813     16D1  07E4               	addwf	___fladd@bexp,f
  8814     16D2  2F87               	goto	l2790
  8815     16D3                     l2756:
  8816     16D3  0855               	movf	___fladd@b+3,w
  8817     16D4  3A80               	xorlw	128
  8818     16D5  00FF               	movwf	btemp+1
  8819     16D6  0859               	movf	___fladd@a+3,w
  8820     16D7  3A80               	xorlw	128
  8821     16D8  027F               	subwf	btemp+1,w
  8822     16D9  1D03               	skipz
  8823     16DA  2EE5               	goto	u3553
  8824     16DB  0858               	movf	___fladd@a+2,w
  8825     16DC  0254               	subwf	___fladd@b+2,w
  8826     16DD  1D03               	skipz
  8827     16DE  2EE5               	goto	u3553
  8828     16DF  0857               	movf	___fladd@a+1,w
  8829     16E0  0253               	subwf	___fladd@b+1,w
  8830     16E1  1D03               	skipz
  8831     16E2  2EE5               	goto	u3553
  8832     16E3  0856               	movf	___fladd@a,w
  8833     16E4  0252               	subwf	___fladd@b,w
  8834     16E5                     u3553:
  8835     16E5  1803               	skipnc
  8836     16E6  2EE8               	goto	u3551
  8837     16E7  2EE9               	goto	u3550
  8838     16E8                     u3551:
  8839     16E8  2F41               	goto	l2766
  8840     16E9                     u3550:
  8841     16E9                     l2758:
  8842     16E9  30FF               	movlw	255
  8843     16EA  00DA               	movwf	??___fladd
  8844     16EB  30FF               	movlw	255
  8845     16EC  00DB               	movwf	??___fladd+1
  8846     16ED  30FF               	movlw	255
  8847     16EE  00DC               	movwf	??___fladd+2
  8848     16EF  30FF               	movlw	255
  8849     16F0  00DD               	movwf	??___fladd+3
  8850     16F1  0856               	movf	___fladd@a,w
  8851     16F2  00DE               	movwf	??___fladd+4
  8852     16F3  0857               	movf	___fladd@a+1,w
  8853     16F4  00DF               	movwf	??___fladd+5
  8854     16F5  0858               	movf	___fladd@a+2,w
  8855     16F6  00E0               	movwf	??___fladd+6
  8856     16F7  0859               	movf	___fladd@a+3,w
  8857     16F8  00E1               	movwf	??___fladd+7
  8858     16F9  0852               	movf	___fladd@b,w
  8859     16FA  02DE               	subwf	??___fladd+4,f
  8860     16FB  0853               	movf	___fladd@b+1,w
  8861     16FC  1C03               	skipc
  8862     16FD  0F53               	incfsz	___fladd@b+1,w
  8863     16FE  2F00               	goto	u3561
  8864     16FF  2F01               	goto	u3562
  8865     1700                     u3561:
  8866     1700  02DF               	subwf	??___fladd+5,f
  8867     1701                     u3562:
  8868     1701  0854               	movf	___fladd@b+2,w
  8869     1702  1C03               	skipc
  8870     1703  0F54               	incfsz	___fladd@b+2,w
  8871     1704  2F06               	goto	u3563
  8872     1705  2F07               	goto	u3564
  8873     1706                     u3563:
  8874     1706  02E0               	subwf	??___fladd+6,f
  8875     1707                     u3564:
  8876     1707  0855               	movf	___fladd@b+3,w
  8877     1708  1C03               	skipc
  8878     1709  0F55               	incfsz	___fladd@b+3,w
  8879     170A  2F0C               	goto	u3565
  8880     170B  2F0D               	goto	u3566
  8881     170C                     u3565:
  8882     170C  02E1               	subwf	??___fladd+7,f
  8883     170D                     u3566:
  8884     170D  085E               	movf	??___fladd+4,w
  8885     170E  07DA               	addwf	??___fladd,f
  8886     170F  085F               	movf	??___fladd+5,w
  8887     1710  1803               	skipnc
  8888     1711  0F5F               	incfsz	??___fladd+5,w
  8889     1712  2F14               	goto	u3570
  8890     1713  2F15               	goto	u3571
  8891     1714                     u3570:
  8892     1714  07DB               	addwf	??___fladd+1,f
  8893     1715                     u3571:
  8894     1715  0860               	movf	??___fladd+6,w
  8895     1716  1803               	skipnc
  8896     1717  0F60               	incfsz	??___fladd+6,w
  8897     1718  2F1A               	goto	u3572
  8898     1719  2F1B               	goto	u3573
  8899     171A                     u3572:
  8900     171A  07DC               	addwf	??___fladd+2,f
  8901     171B                     u3573:
  8902     171B  0861               	movf	??___fladd+7,w
  8903     171C  1803               	skipnc
  8904     171D  0A61               	incf	??___fladd+7,w
  8905     171E  07DD               	addwf	??___fladd+3,f
  8906     171F  085D               	movf	??___fladd+3,w
  8907     1720  00D5               	movwf	___fladd@b+3
  8908     1721  085C               	movf	??___fladd+2,w
  8909     1722  00D4               	movwf	___fladd@b+2
  8910     1723  085B               	movf	??___fladd+1,w
  8911     1724  00D3               	movwf	___fladd@b+1
  8912     1725  085A               	movf	??___fladd,w
  8913     1726  00D2               	movwf	___fladd@b
  8914     1727                     l2760:
  8915     1727  3080               	movlw	128
  8916     1728  00DA               	movwf	??___fladd
  8917     1729  085A               	movf	??___fladd,w
  8918     172A  06E2               	xorwf	___fladd@signs,f
  8919     172B  09E5               	comf	___fladd@grs,f
  8920     172C  0AE5               	incf	___fladd@grs,f
  8921     172D                     l2762:
  8922     172D  0865               	movf	___fladd@grs,w
  8923     172E  1D03               	btfss	3,2
  8924     172F  2F31               	goto	u3581
  8925     1730  2F32               	goto	u3580
  8926     1731                     u3581:
  8927     1731  2F4F               	goto	l787
  8928     1732                     u3580:
  8929     1732                     l2764:
  8930     1732  3001               	movlw	1
  8931     1733  07D2               	addwf	___fladd@b,f
  8932     1734  3000               	movlw	0
  8933     1735  1803               	skipnc
  8934     1736  3001               	movlw	1
  8935     1737  07D3               	addwf	___fladd@b+1,f
  8936     1738  3000               	movlw	0
  8937     1739  1803               	skipnc
  8938     173A  3001               	movlw	1
  8939     173B  07D4               	addwf	___fladd@b+2,f
  8940     173C  3000               	movlw	0
  8941     173D  1803               	skipnc
  8942     173E  3001               	movlw	1
  8943     173F  07D5               	addwf	___fladd@b+3,f
  8944     1740  2F4F               	goto	l787
  8945     1741                     l2766:
  8946     1741  0856               	movf	___fladd@a,w
  8947     1742  02D2               	subwf	___fladd@b,f
  8948     1743  0857               	movf	___fladd@a+1,w
  8949     1744  1C03               	skipc
  8950     1745  0F57               	incfsz	___fladd@a+1,w
  8951     1746  02D3               	subwf	___fladd@b+1,f
  8952     1747  0858               	movf	___fladd@a+2,w
  8953     1748  1C03               	skipc
  8954     1749  0F58               	incfsz	___fladd@a+2,w
  8955     174A  02D4               	subwf	___fladd@b+2,f
  8956     174B  0859               	movf	___fladd@a+3,w
  8957     174C  1C03               	skipc
  8958     174D  0F59               	incfsz	___fladd@a+3,w
  8959     174E  02D5               	subwf	___fladd@b+3,f
  8960     174F                     l787:
  8961     174F  0855               	movf	___fladd@b+3,w
  8962     1750  0454               	iorwf	___fladd@b+2,w
  8963     1751  0453               	iorwf	___fladd@b+1,w
  8964     1752  0452               	iorwf	___fladd@b,w
  8965     1753  1D03               	skipz
  8966     1754  2F56               	goto	u3591
  8967     1755  2F57               	goto	u3590
  8968     1756                     u3591:
  8969     1756  2F83               	goto	l2788
  8970     1757                     u3590:
  8971     1757                     l2768:
  8972     1757  0865               	movf	___fladd@grs,w
  8973     1758  1D03               	btfss	3,2
  8974     1759  2F5B               	goto	u3601
  8975     175A  2F5C               	goto	u3600
  8976     175B                     u3601:
  8977     175B  2F83               	goto	l2788
  8978     175C                     u3600:
  8979     175C                     l2770:
  8980     175C  3000               	movlw	0
  8981     175D  00D5               	movwf	?___fladd+3
  8982     175E  3000               	movlw	0
  8983     175F  00D4               	movwf	?___fladd+2
  8984     1760  3000               	movlw	0
  8985     1761  00D3               	movwf	?___fladd+1
  8986     1762  3000               	movlw	0
  8987     1763  00D2               	movwf	?___fladd
  8988     1764  2FFF               	goto	l779
  8989     1765                     l2774:
  8990     1765  3001               	movlw	1
  8991     1766  00DA               	movwf	??___fladd
  8992     1767                     u3615:
  8993     1767  1003               	clrc
  8994     1768  0DD2               	rlf	___fladd@b,f
  8995     1769  0DD3               	rlf	___fladd@b+1,f
  8996     176A  0DD4               	rlf	___fladd@b+2,f
  8997     176B  0DD5               	rlf	___fladd@b+3,f
  8998     176C  0BDA               	decfsz	??___fladd,f
  8999     176D  2F67               	goto	u3615
  9000     176E                     l2776:
  9001     176E  1FE5               	btfss	___fladd@grs,7
  9002     176F  2F71               	goto	u3621
  9003     1770  2F72               	goto	u3620
  9004     1771                     u3621:
  9005     1771  2F73               	goto	l791
  9006     1772                     u3620:
  9007     1772                     l2778:
  9008     1772  1452               	bsf	___fladd@b,0
  9009     1773                     l791:
  9010     1773  1C65               	btfss	___fladd@grs,0
  9011     1774  2F76               	goto	u3631
  9012     1775  2F77               	goto	u3630
  9013     1776                     u3631:
  9014     1776  2F7A               	goto	l2782
  9015     1777                     u3630:
  9016     1777                     l2780:
  9017     1777  1403               	setc
  9018     1778  0DE5               	rlf	___fladd@grs,f
  9019     1779  2F7C               	goto	l2784
  9020     177A                     l2782:
  9021     177A  1003               	clrc
  9022     177B  0DE5               	rlf	___fladd@grs,f
  9023     177C                     l2784:
  9024     177C  0864               	movf	___fladd@bexp,w
  9025     177D  1903               	btfsc	3,2
  9026     177E  2F80               	goto	u3641
  9027     177F  2F81               	goto	u3640
  9028     1780                     u3641:
  9029     1780  2F83               	goto	l2788
  9030     1781                     u3640:
  9031     1781                     l2786:
  9032     1781  3001               	movlw	1
  9033     1782  02E4               	subwf	___fladd@bexp,f
  9034     1783                     l2788:
  9035     1783  1FD4               	btfss	___fladd@b+2,7
  9036     1784  2F86               	goto	u3651
  9037     1785  2F87               	goto	u3650
  9038     1786                     u3651:
  9039     1786  2F65               	goto	l2774
  9040     1787                     u3650:
  9041     1787                     l2790:
  9042     1787  01E3               	clrf	___fladd@aexp
  9043     1788                     l2792:
  9044     1788  1FE5               	btfss	___fladd@grs,7
  9045     1789  2F8B               	goto	u3661
  9046     178A  2F8C               	goto	u3660
  9047     178B                     u3661:
  9048     178B  2F9A               	goto	l2800
  9049     178C                     u3660:
  9050     178C                     l2794:
  9051     178C  0865               	movf	___fladd@grs,w
  9052     178D  397F               	andlw	127
  9053     178E  1903               	btfsc	3,2
  9054     178F  2F91               	goto	u3671
  9055     1790  2F92               	goto	u3670
  9056     1791                     u3671:
  9057     1791  2F95               	goto	l797
  9058     1792                     u3670:
  9059     1792                     l2796:
  9060     1792  01E3               	clrf	___fladd@aexp
  9061     1793  0AE3               	incf	___fladd@aexp,f
  9062     1794  2F9A               	goto	l2800
  9063     1795                     l797:
  9064     1795  1C52               	btfss	___fladd@b,0
  9065     1796  2F98               	goto	u3681
  9066     1797  2F99               	goto	u3680
  9067     1798                     u3681:
  9068     1798  2F9A               	goto	l2800
  9069     1799                     u3680:
  9070     1799  2F92               	goto	l2796
  9071     179A                     l2800:
  9072     179A  0863               	movf	___fladd@aexp,w
  9073     179B  1903               	btfsc	3,2
  9074     179C  2F9E               	goto	u3691
  9075     179D  2F9F               	goto	u3690
  9076     179E                     u3691:
  9077     179E  2FD3               	goto	l800
  9078     179F                     u3690:
  9079     179F                     l2802:
  9080     179F  3001               	movlw	1
  9081     17A0  07D2               	addwf	___fladd@b,f
  9082     17A1  3000               	movlw	0
  9083     17A2  1803               	skipnc
  9084     17A3  3001               	movlw	1
  9085     17A4  07D3               	addwf	___fladd@b+1,f
  9086     17A5  3000               	movlw	0
  9087     17A6  1803               	skipnc
  9088     17A7  3001               	movlw	1
  9089     17A8  07D4               	addwf	___fladd@b+2,f
  9090     17A9  3000               	movlw	0
  9091     17AA  1803               	skipnc
  9092     17AB  3001               	movlw	1
  9093     17AC  07D5               	addwf	___fladd@b+3,f
  9094     17AD                     l2804:
  9095     17AD  1C55               	btfss	___fladd@b+3,0
  9096     17AE  2FB0               	goto	u3701
  9097     17AF  2FB1               	goto	u3700
  9098     17B0                     u3701:
  9099     17B0  2FD3               	goto	l800
  9100     17B1                     u3700:
  9101     17B1                     l2806:
  9102     17B1  0852               	movf	___fladd@b,w
  9103     17B2  00DA               	movwf	??___fladd
  9104     17B3  0853               	movf	___fladd@b+1,w
  9105     17B4  00DB               	movwf	??___fladd+1
  9106     17B5  0854               	movf	___fladd@b+2,w
  9107     17B6  00DC               	movwf	??___fladd+2
  9108     17B7  0855               	movf	___fladd@b+3,w
  9109     17B8  00DD               	movwf	??___fladd+3
  9110     17B9  3001               	movlw	1
  9111     17BA  00DE               	movwf	??___fladd+4
  9112     17BB                     u3715:
  9113     17BB  0D5D               	rlf	??___fladd+3,w
  9114     17BC  0CDD               	rrf	??___fladd+3,f
  9115     17BD  0CDC               	rrf	??___fladd+2,f
  9116     17BE  0CDB               	rrf	??___fladd+1,f
  9117     17BF  0CDA               	rrf	??___fladd,f
  9118     17C0                     u3710:
  9119     17C0  0BDE               	decfsz	??___fladd+4,f
  9120     17C1  2FBB               	goto	u3715
  9121     17C2  085D               	movf	??___fladd+3,w
  9122     17C3  00D5               	movwf	___fladd@b+3
  9123     17C4  085C               	movf	??___fladd+2,w
  9124     17C5  00D4               	movwf	___fladd@b+2
  9125     17C6  085B               	movf	??___fladd+1,w
  9126     17C7  00D3               	movwf	___fladd@b+1
  9127     17C8  085A               	movf	??___fladd,w
  9128     17C9  00D2               	movwf	___fladd@b
  9129     17CA  0A64               	incf	___fladd@bexp,w
  9130     17CB  1903               	btfsc	3,2
  9131     17CC  2FCE               	goto	u3721
  9132     17CD  2FCF               	goto	u3720
  9133     17CE                     u3721:
  9134     17CE  2FD3               	goto	l800
  9135     17CF                     u3720:
  9136     17CF                     l2808:
  9137     17CF  3001               	movlw	1
  9138     17D0  00DA               	movwf	??___fladd
  9139     17D1  085A               	movf	??___fladd,w
  9140     17D2  07E4               	addwf	___fladd@bexp,f
  9141     17D3                     l800:
  9142     17D3  0A64               	incf	___fladd@bexp,w
  9143     17D4  1903               	btfsc	3,2
  9144     17D5  2FD7               	goto	u3731
  9145     17D6  2FD8               	goto	u3730
  9146     17D7                     u3731:
  9147     17D7  2FDD               	goto	l2812
  9148     17D8                     u3730:
  9149     17D8                     l2810:
  9150     17D8  0864               	movf	___fladd@bexp,w
  9151     17D9  1D03               	btfss	3,2
  9152     17DA  2FDC               	goto	u3741
  9153     17DB  2FDD               	goto	u3740
  9154     17DC                     u3741:
  9155     17DC  2FEB               	goto	l2818
  9156     17DD                     u3740:
  9157     17DD                     l2812:
  9158     17DD  3000               	movlw	0
  9159     17DE  00D5               	movwf	___fladd@b+3
  9160     17DF  3000               	movlw	0
  9161     17E0  00D4               	movwf	___fladd@b+2
  9162     17E1  3000               	movlw	0
  9163     17E2  00D3               	movwf	___fladd@b+1
  9164     17E3  3000               	movlw	0
  9165     17E4  00D2               	movwf	___fladd@b
  9166     17E5                     l2814:
  9167     17E5  0864               	movf	___fladd@bexp,w
  9168     17E6  1D03               	btfss	3,2
  9169     17E7  2FE9               	goto	u3751
  9170     17E8  2FEA               	goto	u3750
  9171     17E9                     u3751:
  9172     17E9  2FEB               	goto	l2818
  9173     17EA                     u3750:
  9174     17EA                     l2816:
  9175     17EA  01E2               	clrf	___fladd@signs
  9176     17EB                     l2818:
  9177     17EB  1C64               	btfss	___fladd@bexp,0
  9178     17EC  2FEE               	goto	u3761
  9179     17ED  2FEF               	goto	u3760
  9180     17EE                     u3761:
  9181     17EE  2FF1               	goto	l2822
  9182     17EF                     u3760:
  9183     17EF                     l2820:
  9184     17EF  17D4               	bsf	___fladd@b+2,7
  9185     17F0  2FF5               	goto	l808
  9186     17F1                     l2822:
  9187     17F1  307F               	movlw	127
  9188     17F2  00DA               	movwf	??___fladd
  9189     17F3  085A               	movf	??___fladd,w
  9190     17F4  05D4               	andwf	___fladd@b+2,f
  9191     17F5                     l808:
  9192     17F5  0864               	movf	___fladd@bexp,w
  9193     17F6  00DA               	movwf	??___fladd
  9194     17F7  1003               	clrc
  9195     17F8  0C5A               	rrf	??___fladd,w
  9196     17F9  00D5               	movwf	___fladd@b+3
  9197     17FA                     l2824:
  9198     17FA  1FE2               	btfss	___fladd@signs,7
  9199     17FB  2FFD               	goto	u3771
  9200     17FC  2FFE               	goto	u3770
  9201     17FD                     u3771:
  9202     17FD  2FFF               	goto	l809
  9203     17FE                     u3770:
  9204     17FE                     l2826:
  9205     17FE  17D5               	bsf	___fladd@b+3,7
  9206     17FF                     l809:
  9207     17FF                     l779:
  9208     17FF  0008               	return
  9209     1800                     __end_of___fladd:
  9210                           
  9211                           	psect	text19
  9212     1B2A                     __ptext19:	
  9213 ;; *************** function ___flneg *****************
  9214 ;; Defined at:
  9215 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  f1              4    0[COMMON] unsigned char 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  4    0[COMMON] unsigned char 
  9222 ;; Registers used:
  9223 ;;		wreg
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9229 ;;      Params:         4       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0
  9232 ;;      Totals:         4       0       0       0       0
  9233 ;;Total ram usage:        4 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_sprintf
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242     1B2A                     ___flneg:	
  9243                           ;psect for function ___flneg
  9244                           
  9245     1B2A                     l3238:	
  9246                           ;incstack = 0
  9247                           ; Regs used in ___flneg: [wreg]
  9248                           
  9249     1B2A  0873               	movf	___flneg@f1+3,w
  9250     1B2B  0472               	iorwf	___flneg@f1+2,w
  9251     1B2C  0471               	iorwf	___flneg@f1+1,w
  9252     1B2D  0470               	iorwf	___flneg@f1,w
  9253     1B2E  1903               	skipnz
  9254     1B2F  2B31               	goto	u4861
  9255     1B30  2B32               	goto	u4860
  9256     1B31                     u4861:
  9257     1B31  2B34               	goto	l3242
  9258     1B32                     u4860:
  9259     1B32                     l3240:
  9260     1B32  3080               	movlw	128
  9261     1B33  06F3               	xorwf	___flneg@f1+3,f
  9262     1B34                     l3242:
  9263     1B34                     l638:
  9264     1B34  0008               	return
  9265     1B35                     __end_of___flneg:
  9266                           
  9267                           	psect	text20
  9268     0802                     __ptext20:	
  9269 ;; *************** function ___flge *****************
  9270 ;; Defined at:
  9271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  ff1             4    0[COMMON] unsigned char 
  9274 ;;  ff2             4    4[COMMON] unsigned char 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;		None               void
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9286 ;;      Params:         8       0       0       0       0
  9287 ;;      Locals:         0       0       0       0       0
  9288 ;;      Temps:          4       0       0       0       0
  9289 ;;      Totals:        12       0       0       0       0
  9290 ;;Total ram usage:       12 bytes
  9291 ;; Hardware stack levels used: 1
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_main
  9296 ;;		_sprintf
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300     0802                     ___flge:	
  9301                           ;psect for function ___flge
  9302                           
  9303     0802                     l3218:	
  9304                           ;incstack = 0
  9305                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9306                           
  9307     0802  3000               	movlw	0
  9308     0803  0570               	andwf	___flge@ff1,w
  9309     0804  00F8               	movwf	??___flge
  9310     0805  3000               	movlw	0
  9311     0806  0571               	andwf	___flge@ff1+1,w
  9312     0807  00F9               	movwf	??___flge+1
  9313     0808  3080               	movlw	128
  9314     0809  0572               	andwf	___flge@ff1+2,w
  9315     080A  00FA               	movwf	??___flge+2
  9316     080B  307F               	movlw	127
  9317     080C  0573               	andwf	___flge@ff1+3,w
  9318     080D  00FB               	movwf	??___flge+3
  9319     080E  087B               	movf	??___flge+3,w
  9320     080F  047A               	iorwf	??___flge+2,w
  9321     0810  0479               	iorwf	??___flge+1,w
  9322     0811  0478               	iorwf	??___flge,w
  9323     0812  1D03               	skipz
  9324     0813  2815               	goto	u4791
  9325     0814  2816               	goto	u4790
  9326     0815                     u4791:
  9327     0815  281E               	goto	l630
  9328     0816                     u4790:
  9329     0816                     l3220:
  9330     0816  3000               	movlw	0
  9331     0817  00F3               	movwf	___flge@ff1+3
  9332     0818  3000               	movlw	0
  9333     0819  00F2               	movwf	___flge@ff1+2
  9334     081A  3000               	movlw	0
  9335     081B  00F1               	movwf	___flge@ff1+1
  9336     081C  3000               	movlw	0
  9337     081D  00F0               	movwf	___flge@ff1
  9338     081E                     l630:
  9339     081E  3000               	movlw	0
  9340     081F  0574               	andwf	___flge@ff2,w
  9341     0820  00F8               	movwf	??___flge
  9342     0821  3000               	movlw	0
  9343     0822  0575               	andwf	___flge@ff2+1,w
  9344     0823  00F9               	movwf	??___flge+1
  9345     0824  3080               	movlw	128
  9346     0825  0576               	andwf	___flge@ff2+2,w
  9347     0826  00FA               	movwf	??___flge+2
  9348     0827  307F               	movlw	127
  9349     0828  0577               	andwf	___flge@ff2+3,w
  9350     0829  00FB               	movwf	??___flge+3
  9351     082A  087B               	movf	??___flge+3,w
  9352     082B  047A               	iorwf	??___flge+2,w
  9353     082C  0479               	iorwf	??___flge+1,w
  9354     082D  0478               	iorwf	??___flge,w
  9355     082E  1D03               	skipz
  9356     082F  2831               	goto	u4801
  9357     0830  2832               	goto	u4800
  9358     0831                     u4801:
  9359     0831  283A               	goto	l3224
  9360     0832                     u4800:
  9361     0832                     l3222:
  9362     0832  3000               	movlw	0
  9363     0833  00F7               	movwf	___flge@ff2+3
  9364     0834  3000               	movlw	0
  9365     0835  00F6               	movwf	___flge@ff2+2
  9366     0836  3000               	movlw	0
  9367     0837  00F5               	movwf	___flge@ff2+1
  9368     0838  3000               	movlw	0
  9369     0839  00F4               	movwf	___flge@ff2
  9370     083A                     l3224:
  9371     083A  1FF3               	btfss	___flge@ff1+3,7
  9372     083B  283D               	goto	u4811
  9373     083C  283E               	goto	u4810
  9374     083D                     u4811:
  9375     083D  2862               	goto	l3228
  9376     083E                     u4810:
  9377     083E                     l3226:
  9378     083E  3000               	movlw	0
  9379     083F  00F8               	movwf	??___flge
  9380     0840  3000               	movlw	0
  9381     0841  00F9               	movwf	??___flge+1
  9382     0842  3000               	movlw	0
  9383     0843  00FA               	movwf	??___flge+2
  9384     0844  3080               	movlw	128
  9385     0845  00FB               	movwf	??___flge+3
  9386     0846  0870               	movf	___flge@ff1,w
  9387     0847  02F8               	subwf	??___flge,f
  9388     0848  0871               	movf	___flge@ff1+1,w
  9389     0849  1C03               	skipc
  9390     084A  0F71               	incfsz	___flge@ff1+1,w
  9391     084B  284D               	goto	u4821
  9392     084C  284E               	goto	u4822
  9393     084D                     u4821:
  9394     084D  02F9               	subwf	??___flge+1,f
  9395     084E                     u4822:
  9396     084E  0872               	movf	___flge@ff1+2,w
  9397     084F  1C03               	skipc
  9398     0850  0F72               	incfsz	___flge@ff1+2,w
  9399     0851  2853               	goto	u4823
  9400     0852  2854               	goto	u4824
  9401     0853                     u4823:
  9402     0853  02FA               	subwf	??___flge+2,f
  9403     0854                     u4824:
  9404     0854  0873               	movf	___flge@ff1+3,w
  9405     0855  1C03               	skipc
  9406     0856  0F73               	incfsz	___flge@ff1+3,w
  9407     0857  2859               	goto	u4825
  9408     0858  285A               	goto	u4826
  9409     0859                     u4825:
  9410     0859  02FB               	subwf	??___flge+3,f
  9411     085A                     u4826:
  9412     085A  087B               	movf	??___flge+3,w
  9413     085B  00F3               	movwf	___flge@ff1+3
  9414     085C  087A               	movf	??___flge+2,w
  9415     085D  00F2               	movwf	___flge@ff1+2
  9416     085E  0879               	movf	??___flge+1,w
  9417     085F  00F1               	movwf	___flge@ff1+1
  9418     0860  0878               	movf	??___flge,w
  9419     0861  00F0               	movwf	___flge@ff1
  9420     0862                     l3228:
  9421     0862  1FF7               	btfss	___flge@ff2+3,7
  9422     0863  2865               	goto	u4831
  9423     0864  2866               	goto	u4830
  9424     0865                     u4831:
  9425     0865  288A               	goto	l633
  9426     0866                     u4830:
  9427     0866                     l3230:
  9428     0866  3000               	movlw	0
  9429     0867  00F8               	movwf	??___flge
  9430     0868  3000               	movlw	0
  9431     0869  00F9               	movwf	??___flge+1
  9432     086A  3000               	movlw	0
  9433     086B  00FA               	movwf	??___flge+2
  9434     086C  3080               	movlw	128
  9435     086D  00FB               	movwf	??___flge+3
  9436     086E  0874               	movf	___flge@ff2,w
  9437     086F  02F8               	subwf	??___flge,f
  9438     0870  0875               	movf	___flge@ff2+1,w
  9439     0871  1C03               	skipc
  9440     0872  0F75               	incfsz	___flge@ff2+1,w
  9441     0873  2875               	goto	u4841
  9442     0874  2876               	goto	u4842
  9443     0875                     u4841:
  9444     0875  02F9               	subwf	??___flge+1,f
  9445     0876                     u4842:
  9446     0876  0876               	movf	___flge@ff2+2,w
  9447     0877  1C03               	skipc
  9448     0878  0F76               	incfsz	___flge@ff2+2,w
  9449     0879  287B               	goto	u4843
  9450     087A  287C               	goto	u4844
  9451     087B                     u4843:
  9452     087B  02FA               	subwf	??___flge+2,f
  9453     087C                     u4844:
  9454     087C  0877               	movf	___flge@ff2+3,w
  9455     087D  1C03               	skipc
  9456     087E  0F77               	incfsz	___flge@ff2+3,w
  9457     087F  2881               	goto	u4845
  9458     0880  2882               	goto	u4846
  9459     0881                     u4845:
  9460     0881  02FB               	subwf	??___flge+3,f
  9461     0882                     u4846:
  9462     0882  087B               	movf	??___flge+3,w
  9463     0883  00F7               	movwf	___flge@ff2+3
  9464     0884  087A               	movf	??___flge+2,w
  9465     0885  00F6               	movwf	___flge@ff2+2
  9466     0886  0879               	movf	??___flge+1,w
  9467     0887  00F5               	movwf	___flge@ff2+1
  9468     0888  0878               	movf	??___flge,w
  9469     0889  00F4               	movwf	___flge@ff2
  9470     088A                     l633:
  9471     088A  3080               	movlw	128
  9472     088B  06F3               	xorwf	___flge@ff1+3,f
  9473     088C  3080               	movlw	128
  9474     088D  06F7               	xorwf	___flge@ff2+3,f
  9475     088E  0877               	movf	___flge@ff2+3,w
  9476     088F  0273               	subwf	___flge@ff1+3,w
  9477     0890  1D03               	skipz
  9478     0891  289C               	goto	u4855
  9479     0892  0876               	movf	___flge@ff2+2,w
  9480     0893  0272               	subwf	___flge@ff1+2,w
  9481     0894  1D03               	skipz
  9482     0895  289C               	goto	u4855
  9483     0896  0875               	movf	___flge@ff2+1,w
  9484     0897  0271               	subwf	___flge@ff1+1,w
  9485     0898  1D03               	skipz
  9486     0899  289C               	goto	u4855
  9487     089A  0874               	movf	___flge@ff2,w
  9488     089B  0270               	subwf	___flge@ff1,w
  9489     089C                     u4855:
  9490     089C  1803               	skipnc
  9491     089D  289F               	goto	u4851
  9492     089E  28A0               	goto	u4850
  9493     089F                     u4851:
  9494     089F  28A2               	goto	l3234
  9495     08A0                     u4850:
  9496     08A0                     l3232:
  9497     08A0  1003               	clrc
  9498     08A1  28A3               	goto	l634
  9499     08A2                     l3234:
  9500     08A2  1403               	setc
  9501     08A3                     l634:
  9502     08A3  0008               	return
  9503     08A4                     __end_of___flge:
  9504                           
  9505                           	psect	text21
  9506     1DD9                     __ptext21:	
  9507 ;; *************** function ___fleq *****************
  9508 ;; Defined at:
  9509 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  ff1             4    0[COMMON] unsigned char 
  9512 ;;  ff2             4    4[COMMON] unsigned char 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;		None               void
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9524 ;;      Params:         8       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0
  9526 ;;      Temps:          4       0       0       0       0
  9527 ;;      Totals:        12       0       0       0       0
  9528 ;;Total ram usage:       12 bytes
  9529 ;; Hardware stack levels used: 1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_sprintf
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537     1DD9                     ___fleq:	
  9538                           ;psect for function ___fleq
  9539                           
  9540     1DD9                     l3206:	
  9541                           ;incstack = 0
  9542                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9543                           
  9544     1DD9  3000               	movlw	0
  9545     1DDA  0570               	andwf	___fleq@ff1,w
  9546     1DDB  00F8               	movwf	??___fleq
  9547     1DDC  3000               	movlw	0
  9548     1DDD  0571               	andwf	___fleq@ff1+1,w
  9549     1DDE  00F9               	movwf	??___fleq+1
  9550     1DDF  3080               	movlw	128
  9551     1DE0  0572               	andwf	___fleq@ff1+2,w
  9552     1DE1  00FA               	movwf	??___fleq+2
  9553     1DE2  307F               	movlw	127
  9554     1DE3  0573               	andwf	___fleq@ff1+3,w
  9555     1DE4  00FB               	movwf	??___fleq+3
  9556     1DE5  087B               	movf	??___fleq+3,w
  9557     1DE6  047A               	iorwf	??___fleq+2,w
  9558     1DE7  0479               	iorwf	??___fleq+1,w
  9559     1DE8  0478               	iorwf	??___fleq,w
  9560     1DE9  1D03               	skipz
  9561     1DEA  2DEC               	goto	u4761
  9562     1DEB  2DED               	goto	u4760
  9563     1DEC                     u4761:
  9564     1DEC  2DF5               	goto	l625
  9565     1DED                     u4760:
  9566     1DED                     l3208:
  9567     1DED  3000               	movlw	0
  9568     1DEE  00F3               	movwf	___fleq@ff1+3
  9569     1DEF  3000               	movlw	0
  9570     1DF0  00F2               	movwf	___fleq@ff1+2
  9571     1DF1  3000               	movlw	0
  9572     1DF2  00F1               	movwf	___fleq@ff1+1
  9573     1DF3  3000               	movlw	0
  9574     1DF4  00F0               	movwf	___fleq@ff1
  9575     1DF5                     l625:
  9576     1DF5  3000               	movlw	0
  9577     1DF6  0574               	andwf	___fleq@ff2,w
  9578     1DF7  00F8               	movwf	??___fleq
  9579     1DF8  3000               	movlw	0
  9580     1DF9  0575               	andwf	___fleq@ff2+1,w
  9581     1DFA  00F9               	movwf	??___fleq+1
  9582     1DFB  3080               	movlw	128
  9583     1DFC  0576               	andwf	___fleq@ff2+2,w
  9584     1DFD  00FA               	movwf	??___fleq+2
  9585     1DFE  307F               	movlw	127
  9586     1DFF  0577               	andwf	___fleq@ff2+3,w
  9587     1E00  00FB               	movwf	??___fleq+3
  9588     1E01  087B               	movf	??___fleq+3,w
  9589     1E02  047A               	iorwf	??___fleq+2,w
  9590     1E03  0479               	iorwf	??___fleq+1,w
  9591     1E04  0478               	iorwf	??___fleq,w
  9592     1E05  1D03               	skipz
  9593     1E06  2E08               	goto	u4771
  9594     1E07  2E09               	goto	u4770
  9595     1E08                     u4771:
  9596     1E08  2E11               	goto	l626
  9597     1E09                     u4770:
  9598     1E09                     l3210:
  9599     1E09  3000               	movlw	0
  9600     1E0A  00F7               	movwf	___fleq@ff2+3
  9601     1E0B  3000               	movlw	0
  9602     1E0C  00F6               	movwf	___fleq@ff2+2
  9603     1E0D  3000               	movlw	0
  9604     1E0E  00F5               	movwf	___fleq@ff2+1
  9605     1E0F  3000               	movlw	0
  9606     1E10  00F4               	movwf	___fleq@ff2
  9607     1E11                     l626:
  9608     1E11  0877               	movf	___fleq@ff2+3,w
  9609     1E12  0673               	xorwf	___fleq@ff1+3,w
  9610     1E13  1D03               	skipz
  9611     1E14  2E1F               	goto	u4785
  9612     1E15  0876               	movf	___fleq@ff2+2,w
  9613     1E16  0672               	xorwf	___fleq@ff1+2,w
  9614     1E17  1D03               	skipz
  9615     1E18  2E1F               	goto	u4785
  9616     1E19  0875               	movf	___fleq@ff2+1,w
  9617     1E1A  0671               	xorwf	___fleq@ff1+1,w
  9618     1E1B  1D03               	skipz
  9619     1E1C  2E1F               	goto	u4785
  9620     1E1D  0874               	movf	___fleq@ff2,w
  9621     1E1E  0670               	xorwf	___fleq@ff1,w
  9622     1E1F                     u4785:
  9623     1E1F  1903               	skipnz
  9624     1E20  2E22               	goto	u4781
  9625     1E21  2E23               	goto	u4780
  9626     1E22                     u4781:
  9627     1E22  2E25               	goto	l3214
  9628     1E23                     u4780:
  9629     1E23                     l3212:
  9630     1E23  1003               	clrc
  9631     1E24  2E26               	goto	l627
  9632     1E25                     l3214:
  9633     1E25  1403               	setc
  9634     1E26                     l627:
  9635     1E26  0008               	return
  9636     1E27                     __end_of___fleq:
  9637                           
  9638                           	psect	text22
  9639     1BCE                     __ptext22:	
  9640 ;; *************** function _setupPWM *****************
  9641 ;; Defined at:
  9642 ;;		line 42 in file "motorDC.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2, status,0
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9656 ;;      Params:         0       0       0       0       0
  9657 ;;      Locals:         0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0
  9659 ;;      Totals:         0       0       0       0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used: 1
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_main
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669     1BCE                     _setupPWM:	
  9670                           ;psect for function _setupPWM
  9671                           
  9672     1BCE                     l3448:	
  9673                           ;incstack = 0
  9674                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
  9675                           
  9676                           
  9677                           ;motorDC.c: 46:     TRISCbits.TRISC2 = 1;
  9678     1BCE  1683               	bsf	3,5	;RP0=1, select bank1
  9679     1BCF  1303               	bcf	3,6	;RP1=0, select bank1
  9680     1BD0  1507               	bsf	7,2	;volatile
  9681                           
  9682                           ;motorDC.c: 47:     TRISCbits.TRISC1 = 1;
  9683     1BD1  1487               	bsf	7,1	;volatile
  9684     1BD2                     l3450:
  9685                           
  9686                           ;motorDC.c: 51:     PR2 = 255;
  9687     1BD2  30FF               	movlw	255
  9688     1BD3  0092               	movwf	18	;volatile
  9689     1BD4                     l3452:
  9690                           
  9691                           ;motorDC.c: 55:     CCP1CONbits.P1M = 0b00;
  9692     1BD4  303F               	movlw	-193
  9693     1BD5  1283               	bcf	3,5	;RP0=0, select bank0
  9694     1BD6  1303               	bcf	3,6	;RP1=0, select bank0
  9695     1BD7  0597               	andwf	23,f	;volatile
  9696     1BD8                     l3454:
  9697                           
  9698                           ;motorDC.c: 57:     CCP1CONbits.CCP1M = 0b1100;
  9699     1BD8  0817               	movf	23,w	;volatile
  9700     1BD9  39F0               	andlw	-16
  9701     1BDA  380C               	iorlw	12
  9702     1BDB  0097               	movwf	23	;volatile
  9703     1BDC                     l3456:
  9704                           
  9705                           ;motorDC.c: 58:     CCP2CONbits.CCP2M = 0b1100;
  9706     1BDC  081D               	movf	29,w	;volatile
  9707     1BDD  39F0               	andlw	-16
  9708     1BDE  380C               	iorlw	12
  9709     1BDF  009D               	movwf	29	;volatile
  9710     1BE0                     l3458:
  9711                           
  9712                           ;motorDC.c: 62:     CCP1CONbits.DC1B = 0b11;
  9713     1BE0  3030               	movlw	48
  9714     1BE1  0497               	iorwf	23,f	;volatile
  9715     1BE2                     l3460:
  9716                           
  9717                           ;motorDC.c: 63:     CCP2CONbits.DC2B1 = 0b1;
  9718     1BE2  169D               	bsf	29,5	;volatile
  9719     1BE3                     l3462:
  9720                           
  9721                           ;motorDC.c: 64:     CCP2CONbits.DC2B0 = 0b1;
  9722     1BE3  161D               	bsf	29,4	;volatile
  9723     1BE4                     l3464:
  9724                           
  9725                           ;motorDC.c: 66:     CCPR1L = 0;
  9726     1BE4  0195               	clrf	21	;volatile
  9727     1BE5                     l3466:
  9728                           
  9729                           ;motorDC.c: 67:     CCPR2L = 0;
  9730     1BE5  019B               	clrf	27	;volatile
  9731     1BE6                     l3468:
  9732                           
  9733                           ;motorDC.c: 73:     PIR1bits.TMR2IF = 0;
  9734     1BE6  108C               	bcf	12,1	;volatile
  9735     1BE7                     l3470:
  9736                           
  9737                           ;motorDC.c: 74:     T2CONbits.T2CKPS = 0b11;
  9738     1BE7  3003               	movlw	3
  9739     1BE8  0492               	iorwf	18,f	;volatile
  9740     1BE9                     l3472:
  9741                           
  9742                           ;motorDC.c: 75:     T2CONbits.TMR2ON = 1;
  9743     1BE9  1512               	bsf	18,2	;volatile
  9744     1BEA                     l257:	
  9745                           ;motorDC.c: 79:     while(!PIR1bits.TMR2IF){};
  9746                           
  9747     1BEA  1C8C               	btfss	12,1	;volatile
  9748     1BEB  2BED               	goto	u5251
  9749     1BEC  2BEE               	goto	u5250
  9750     1BED                     u5251:
  9751     1BED  2BEA               	goto	l257
  9752     1BEE                     u5250:
  9753     1BEE                     l259:
  9754                           
  9755                           ;motorDC.c: 81:     TRISCbits.TRISC2 = 0;
  9756     1BEE  1683               	bsf	3,5	;RP0=1, select bank1
  9757     1BEF  1303               	bcf	3,6	;RP1=0, select bank1
  9758     1BF0  1107               	bcf	7,2	;volatile
  9759                           
  9760                           ;motorDC.c: 82:     TRISCbits.TRISC1 = 0;
  9761     1BF1  1087               	bcf	7,1	;volatile
  9762     1BF2                     l260:
  9763     1BF2  0008               	return
  9764     1BF3                     __end_of_setupPWM:
  9765                           
  9766                           	psect	text23
  9767     00DB                     __ptext23:	
  9768 ;; *************** function _setupMotores *****************
  9769 ;; Defined at:
  9770 ;;		line 15 in file "motorDC.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9784 ;;      Params:         0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0
  9787 ;;      Totals:         0       0       0       0       0
  9788 ;;Total ram usage:        0 bytes
  9789 ;; Hardware stack levels used: 1
  9790 ;; This function calls:
  9791 ;;		Nothing
  9792 ;; This function is called by:
  9793 ;;		_main
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797     00DB                     _setupMotores:	
  9798                           ;psect for function _setupMotores
  9799                           
  9800     00DB                     l3418:	
  9801                           ;incstack = 0
  9802                           ; Regs used in _setupMotores: [wreg+status,2]
  9803                           
  9804                           
  9805                           ;motorDC.c: 17:     ANSEL = 0;
  9806     00DB  1683               	bsf	3,5	;RP0=1, select bank3
  9807     00DC  1703               	bsf	3,6	;RP1=1, select bank3
  9808     00DD  0188               	clrf	8	;volatile
  9809                           
  9810                           ;motorDC.c: 18:     ANSELH = 0;
  9811     00DE  0189               	clrf	9	;volatile
  9812                           
  9813                           ;motorDC.c: 20:     TRISA = 0;
  9814     00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9815     00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9816     00E1  0185               	clrf	5	;volatile
  9817     00E2                     l3420:
  9818                           
  9819                           ;motorDC.c: 21:     TRISB = 0b00011111;
  9820     00E2  301F               	movlw	31
  9821     00E3  0086               	movwf	6	;volatile
  9822     00E4                     l3422:
  9823                           
  9824                           ;motorDC.c: 22:     TRISD = 0;
  9825     00E4  0188               	clrf	8	;volatile
  9826     00E5                     l3424:
  9827                           
  9828                           ;motorDC.c: 24:     OPTION_REGbits.nRBPU = 0;
  9829     00E5  1381               	bcf	1,7	;volatile
  9830     00E6                     l3426:
  9831                           
  9832                           ;motorDC.c: 25:     WPUBbits.WPUB0 = 1;
  9833     00E6  1415               	bsf	21,0	;volatile
  9834     00E7                     l3428:
  9835                           
  9836                           ;motorDC.c: 26:     WPUBbits.WPUB1 = 1;
  9837     00E7  1495               	bsf	21,1	;volatile
  9838     00E8                     l3430:
  9839                           
  9840                           ;motorDC.c: 27:     WPUBbits.WPUB2 = 1;
  9841     00E8  1515               	bsf	21,2	;volatile
  9842     00E9                     l3432:
  9843                           
  9844                           ;motorDC.c: 28:     WPUBbits.WPUB3 = 1;
  9845     00E9  1595               	bsf	21,3	;volatile
  9846     00EA                     l3434:
  9847                           
  9848                           ;motorDC.c: 29:     WPUBbits.WPUB4 = 1;
  9849     00EA  1615               	bsf	21,4	;volatile
  9850                           
  9851                           ;motorDC.c: 30:     IOCB = 0b00011111;
  9852     00EB  301F               	movlw	31
  9853     00EC  0096               	movwf	22	;volatile
  9854     00ED                     l3436:
  9855                           
  9856                           ;motorDC.c: 32:     PORTB = 0;
  9857     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  9858     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  9859     00EF  0186               	clrf	6	;volatile
  9860     00F0                     l3438:
  9861                           
  9862                           ;motorDC.c: 33:     PORTD = 0;
  9863     00F0  0188               	clrf	8	;volatile
  9864     00F1                     l3440:
  9865                           
  9866                           ;motorDC.c: 35:     PORTDbits.RD0 = 1;
  9867     00F1  1408               	bsf	8,0	;volatile
  9868     00F2                     l3442:
  9869                           
  9870                           ;motorDC.c: 36:     PORTDbits.RD1 = 0;
  9871     00F2  1088               	bcf	8,1	;volatile
  9872     00F3                     l3444:
  9873                           
  9874                           ;motorDC.c: 37:     PORTDbits.RD2 = 1;
  9875     00F3  1508               	bsf	8,2	;volatile
  9876     00F4                     l3446:
  9877                           
  9878                           ;motorDC.c: 38:     PORTDbits.RD3 = 0;
  9879     00F4  1188               	bcf	8,3	;volatile
  9880     00F5                     l254:
  9881     00F5  0008               	return
  9882     00F6                     __end_of_setupMotores:
  9883                           
  9884                           	psect	text24
  9885     1C18                     __ptext24:	
  9886 ;; *************** function _setup *****************
  9887 ;; Defined at:
  9888 ;;		line 201 in file "main_M.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;		None
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;		None
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      void 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0, pclath, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9902 ;;      Params:         0       0       0       0       0
  9903 ;;      Locals:         0       0       0       0       0
  9904 ;;      Temps:          0       0       0       0       0
  9905 ;;      Totals:         0       0       0       0       0
  9906 ;;Total ram usage:        0 bytes
  9907 ;; Hardware stack levels used: 1
  9908 ;; Hardware stack levels required when called: 3
  9909 ;; This function calls:
  9910 ;;		_I2C_Master_Init
  9911 ;;		_Lcd_Init_4bits
  9912 ;;		_setupINTOSC
  9913 ;; This function is called by:
  9914 ;;		_main
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918     1C18                     _setup:	
  9919                           ;psect for function _setup
  9920                           
  9921     1C18                     l3410:	
  9922                           ;incstack = 0
  9923                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9924                           
  9925                           
  9926                           ;main_M.c: 203:     ANSEL = 0;
  9927     1C18  1683               	bsf	3,5	;RP0=1, select bank3
  9928     1C19  1703               	bsf	3,6	;RP1=1, select bank3
  9929     1C1A  0188               	clrf	8	;volatile
  9930                           
  9931                           ;main_M.c: 204:     ANSELH = 0;
  9932     1C1B  0189               	clrf	9	;volatile
  9933                           
  9934                           ;main_M.c: 206:     TRISA = 0;
  9935     1C1C  1683               	bsf	3,5	;RP0=1, select bank1
  9936     1C1D  1303               	bcf	3,6	;RP1=0, select bank1
  9937     1C1E  0185               	clrf	5	;volatile
  9938                           
  9939                           ;main_M.c: 207:     TRISB = 0b00000000;
  9940     1C1F  0186               	clrf	6	;volatile
  9941                           
  9942                           ;main_M.c: 208:     TRISD = 0;
  9943     1C20  0188               	clrf	8	;volatile
  9944                           
  9945                           ;main_M.c: 216:     PORTA = 0;
  9946     1C21  1283               	bcf	3,5	;RP0=0, select bank0
  9947     1C22  1303               	bcf	3,6	;RP1=0, select bank0
  9948     1C23  0185               	clrf	5	;volatile
  9949                           
  9950                           ;main_M.c: 217:     PORTB = 0;
  9951     1C24  0186               	clrf	6	;volatile
  9952                           
  9953                           ;main_M.c: 218:     PORTD = 0;
  9954     1C25  0188               	clrf	8	;volatile
  9955     1C26                     l3412:
  9956                           
  9957                           ;main_M.c: 220:     I2C_Master_Init(100000);
  9958     1C26  3000               	movlw	0
  9959     1C27  00A3               	movwf	I2C_Master_Init@c+3
  9960     1C28  3001               	movlw	1
  9961     1C29  00A2               	movwf	I2C_Master_Init@c+2
  9962     1C2A  3086               	movlw	134
  9963     1C2B  00A1               	movwf	I2C_Master_Init@c+1
  9964     1C2C  30A0               	movlw	160
  9965     1C2D  00A0               	movwf	I2C_Master_Init@c
  9966     1C2E  160A  158A  249B  160A  158A  	fcall	_I2C_Master_Init
  9967     1C33                     l3414:
  9968                           
  9969                           ;main_M.c: 221:     setupINTOSC(FOSC_8MHZ);
  9970     1C33  3007               	movlw	7
  9971     1C34  160A  158A  234F  160A  158A  	fcall	_setupINTOSC
  9972     1C39                     l3416:
  9973                           
  9974                           ;main_M.c: 222:     Lcd_Init_4bits();
  9975     1C39  160A  158A  26D4  160A  158A  	fcall	_Lcd_Init_4bits
  9976     1C3E                     l189:
  9977     1C3E  0008               	return
  9978     1C3F                     __end_of_setup:
  9979                           
  9980                           	psect	text25
  9981     1B4F                     __ptext25:	
  9982 ;; *************** function _setupINTOSC *****************
  9983 ;; Defined at:
  9984 ;;		line 11 in file "configINTOSC.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  F               1    wreg     enum E1292
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  F               1    1[COMMON] enum E1292
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2, status,0
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9998 ;;      Params:         0       0       0       0       0
  9999 ;;      Locals:         1       0       0       0       0
 10000 ;;      Temps:          1       0       0       0       0
 10001 ;;      Totals:         2       0       0       0       0
 10002 ;;Total ram usage:        2 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_setup
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011     1B4F                     _setupINTOSC:	
 10012                           ;psect for function _setupINTOSC
 10013                           
 10014                           
 10015                           ;incstack = 0
 10016                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
 10017                           ;setupINTOSC@F stored from wreg
 10018     1B4F  00F1               	movwf	setupINTOSC@F
 10019     1B50                     l2984:
 10020                           
 10021                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
 10022     1B50  0871               	movf	setupINTOSC@F,w
 10023     1B51  00F0               	movwf	??_setupINTOSC
 10024     1B52  0EF0               	swapf	??_setupINTOSC,f
 10025     1B53  1683               	bsf	3,5	;RP0=1, select bank1
 10026     1B54  1303               	bcf	3,6	;RP1=0, select bank1
 10027     1B55  080F               	movf	15,w	;volatile
 10028     1B56  0670               	xorwf	??_setupINTOSC,w
 10029     1B57  398F               	andlw	-113
 10030     1B58  0670               	xorwf	??_setupINTOSC,w
 10031     1B59  008F               	movwf	15	;volatile
 10032     1B5A                     l2986:
 10033                           
 10034                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
 10035     1B5A  140F               	bsf	15,0	;volatile
 10036     1B5B                     l60:
 10037     1B5B  0008               	return
 10038     1B5C                     __end_of_setupINTOSC:
 10039                           
 10040                           	psect	text26
 10041     1ED4                     __ptext26:	
 10042 ;; *************** function _Lcd_Init_4bits *****************
 10043 ;; Defined at:
 10044 ;;		line 66 in file "configLCD_4bits.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, status,2, status,0, pclath, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10058 ;;      Params:         0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0
 10060 ;;      Temps:          2       0       0       0       0
 10061 ;;      Totals:         2       0       0       0       0
 10062 ;;Total ram usage:        2 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 2
 10065 ;; This function calls:
 10066 ;;		_Lcd_Cmd_4bits
 10067 ;;		_Lcd_Port_4bits
 10068 ;; This function is called by:
 10069 ;;		_setup
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073     1ED4                     _Lcd_Init_4bits:	
 10074                           ;psect for function _Lcd_Init_4bits
 10075                           
 10076     1ED4                     l2988:	
 10077                           ;incstack = 0
 10078                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
 10079                           
 10080                           
 10081                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
 10082     1ED4  3000               	movlw	0
 10083     1ED5  160A  158A  2388  160A  158A  	fcall	_Lcd_Port_4bits
 10084     1EDA                     l2990:
 10085                           
 10086                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10087     1EDA  3034               	movlw	52
 10088     1EDB  00F5               	movwf	??_Lcd_Init_4bits+1
 10089     1EDC  30F1               	movlw	241
 10090     1EDD  00F4               	movwf	??_Lcd_Init_4bits
 10091     1EDE                     u5767:
 10092     1EDE  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10093     1EDF  2EDE               	goto	u5767
 10094     1EE0  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10095     1EE1  2EDE               	goto	u5767
 10096     1EE2  2EE3               	nop2
 10097     1EE3                     l2992:
 10098                           
 10099                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
 10100     1EE3  3003               	movlw	3
 10101     1EE4  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10102                           
 10103                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10104     1EE9  300D               	movlw	13
 10105     1EEA  00F5               	movwf	??_Lcd_Init_4bits+1
 10106     1EEB  30FB               	movlw	251
 10107     1EEC  00F4               	movwf	??_Lcd_Init_4bits
 10108     1EED                     u5777:
 10109     1EED  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10110     1EEE  2EED               	goto	u5777
 10111     1EEF  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10112     1EF0  2EED               	goto	u5777
 10113     1EF1  2EF2               	nop2
 10114     1EF2                     l2994:
 10115                           
 10116                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
 10117     1EF2  3003               	movlw	3
 10118     1EF3  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10119     1EF8                     l2996:
 10120                           
 10121                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10122     1EF8  301D               	movlw	29
 10123     1EF9  00F5               	movwf	??_Lcd_Init_4bits+1
 10124     1EFA  3091               	movlw	145
 10125     1EFB  00F4               	movwf	??_Lcd_Init_4bits
 10126     1EFC                     u5787:
 10127     1EFC  0BF4               	decfsz	??_Lcd_Init_4bits,f
 10128     1EFD  2EFC               	goto	u5787
 10129     1EFE  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
 10130     1EFF  2EFC               	goto	u5787
 10131                           
 10132                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
 10133     1F00  3003               	movlw	3
 10134     1F01  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10135                           
 10136                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
 10137     1F06  3002               	movlw	2
 10138     1F07  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10139                           
 10140                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
 10141     1F0C  3002               	movlw	2
 10142     1F0D  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10143                           
 10144                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
 10145     1F12  3008               	movlw	8
 10146     1F13  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10147                           
 10148                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
 10149     1F18  3000               	movlw	0
 10150     1F19  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10151                           
 10152                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
 10153     1F1E  300C               	movlw	12
 10154     1F1F  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10155                           
 10156                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
 10157     1F24  3000               	movlw	0
 10158     1F25  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10159                           
 10160                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
 10161     1F2A  3006               	movlw	6
 10162     1F2B  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10163     1F30                     l90:
 10164     1F30  0008               	return
 10165     1F31                     __end_of_Lcd_Init_4bits:
 10166                           
 10167                           	psect	text27
 10168     1C9B                     __ptext27:	
 10169 ;; *************** function _I2C_Master_Init *****************
 10170 ;; Defined at:
 10171 ;;		line 13 in file "configI2C.c"
 10172 ;; Parameters:    Size  Location     Type
 10173 ;;  c               4    0[BANK0 ] const unsigned long 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;		None
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  1    wreg      void 
 10178 ;; Registers used:
 10179 ;;		wreg, status,2, status,0, pclath, cstack
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10185 ;;      Params:         0       4       0       0       0
 10186 ;;      Locals:         0       0       0       0       0
 10187 ;;      Temps:          0       4       0       0       0
 10188 ;;      Totals:         0       8       0       0       0
 10189 ;;Total ram usage:        8 bytes
 10190 ;; Hardware stack levels used: 1
 10191 ;; Hardware stack levels required when called: 1
 10192 ;; This function calls:
 10193 ;;		___lldiv
 10194 ;; This function is called by:
 10195 ;;		_setup
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199     1C9B                     _I2C_Master_Init:	
 10200                           ;psect for function _I2C_Master_Init
 10201                           
 10202     1C9B                     l2968:	
 10203                           ;incstack = 0
 10204                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10205                           
 10206                           
 10207                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
 10208     1C9B  3028               	movlw	40
 10209     1C9C  1283               	bcf	3,5	;RP0=0, select bank0
 10210     1C9D  1303               	bcf	3,6	;RP1=0, select bank0
 10211     1C9E  0094               	movwf	20	;volatile
 10212     1C9F                     l2970:
 10213                           
 10214                           ;configI2C.c: 16:     SSPCON2 = 0;
 10215     1C9F  1683               	bsf	3,5	;RP0=1, select bank1
 10216     1CA0  1303               	bcf	3,6	;RP1=0, select bank1
 10217     1CA1  0191               	clrf	17	;volatile
 10218     1CA2                     l2972:
 10219                           
 10220                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
 10221     1CA2  1283               	bcf	3,5	;RP0=0, select bank0
 10222     1CA3  1303               	bcf	3,6	;RP1=0, select bank0
 10223     1CA4  0820               	movf	I2C_Master_Init@c,w
 10224     1CA5  00A4               	movwf	??_I2C_Master_Init
 10225     1CA6  0821               	movf	I2C_Master_Init@c+1,w
 10226     1CA7  00A5               	movwf	??_I2C_Master_Init+1
 10227     1CA8  0822               	movf	I2C_Master_Init@c+2,w
 10228     1CA9  00A6               	movwf	??_I2C_Master_Init+2
 10229     1CAA  0823               	movf	I2C_Master_Init@c+3,w
 10230     1CAB  00A7               	movwf	??_I2C_Master_Init+3
 10231     1CAC  3002               	movlw	2
 10232     1CAD                     u4155:
 10233     1CAD  1003               	clrc
 10234     1CAE  0DA4               	rlf	??_I2C_Master_Init,f
 10235     1CAF  0DA5               	rlf	??_I2C_Master_Init+1,f
 10236     1CB0  0DA6               	rlf	??_I2C_Master_Init+2,f
 10237     1CB1  0DA7               	rlf	??_I2C_Master_Init+3,f
 10238     1CB2                     u4150:
 10239     1CB2  3EFF               	addlw	-1
 10240     1CB3  1D03               	skipz
 10241     1CB4  2CAD               	goto	u4155
 10242     1CB5  0827               	movf	??_I2C_Master_Init+3,w
 10243     1CB6  00F3               	movwf	___lldiv@divisor+3
 10244     1CB7  0826               	movf	??_I2C_Master_Init+2,w
 10245     1CB8  00F2               	movwf	___lldiv@divisor+2
 10246     1CB9  0825               	movf	??_I2C_Master_Init+1,w
 10247     1CBA  00F1               	movwf	___lldiv@divisor+1
 10248     1CBB  0824               	movf	??_I2C_Master_Init,w
 10249     1CBC  00F0               	movwf	___lldiv@divisor
 10250     1CBD  3000               	movlw	0
 10251     1CBE  00F7               	movwf	___lldiv@dividend+3
 10252     1CBF  307A               	movlw	122
 10253     1CC0  00F6               	movwf	___lldiv@dividend+2
 10254     1CC1  3012               	movlw	18
 10255     1CC2  00F5               	movwf	___lldiv@dividend+1
 10256     1CC3  3000               	movlw	0
 10257     1CC4  00F4               	movwf	___lldiv@dividend
 10258     1CC5  160A  158A  2731  160A  158A  	fcall	___lldiv
 10259     1CCA  0870               	movf	?___lldiv,w
 10260     1CCB  3EFF               	addlw	255
 10261     1CCC  1683               	bsf	3,5	;RP0=1, select bank1
 10262     1CCD  1303               	bcf	3,6	;RP1=0, select bank1
 10263     1CCE  0093               	movwf	19	;volatile
 10264     1CCF                     l2974:
 10265                           
 10266                           ;configI2C.c: 18:     SSPSTAT = 0;
 10267     1CCF  0194               	clrf	20	;volatile
 10268     1CD0                     l2976:
 10269                           
 10270                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
 10271     1CD0  1587               	bsf	7,3	;volatile
 10272     1CD1                     l2978:
 10273                           
 10274                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
 10275     1CD1  1607               	bsf	7,4	;volatile
 10276     1CD2                     l29:
 10277     1CD2  0008               	return
 10278     1CD3                     __end_of_I2C_Master_Init:
 10279                           
 10280                           	psect	text28
 10281     1F31                     __ptext28:	
 10282 ;; *************** function ___lldiv *****************
 10283 ;; Defined at:
 10284 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  divisor         4    0[COMMON] unsigned long 
 10287 ;;  dividend        4    4[COMMON] unsigned long 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;  quotient        4    9[COMMON] unsigned long 
 10290 ;;  counter         1   13[COMMON] unsigned char 
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  4    0[COMMON] unsigned long 
 10293 ;; Registers used:
 10294 ;;		wreg, status,2, status,0
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10300 ;;      Params:         8       0       0       0       0
 10301 ;;      Locals:         5       0       0       0       0
 10302 ;;      Temps:          1       0       0       0       0
 10303 ;;      Totals:        14       0       0       0       0
 10304 ;;Total ram usage:       14 bytes
 10305 ;; Hardware stack levels used: 1
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_I2C_Master_Init
 10310 ;;		_sprintf
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314     1F31                     ___lldiv:	
 10315                           ;psect for function ___lldiv
 10316                           
 10317     1F31                     l2480:	
 10318                           ;incstack = 0
 10319                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10320                           
 10321     1F31  3000               	movlw	0
 10322     1F32  00FC               	movwf	___lldiv@quotient+3
 10323     1F33  3000               	movlw	0
 10324     1F34  00FB               	movwf	___lldiv@quotient+2
 10325     1F35  3000               	movlw	0
 10326     1F36  00FA               	movwf	___lldiv@quotient+1
 10327     1F37  3000               	movlw	0
 10328     1F38  00F9               	movwf	___lldiv@quotient
 10329     1F39  0873               	movf	___lldiv@divisor+3,w
 10330     1F3A  0472               	iorwf	___lldiv@divisor+2,w
 10331     1F3B  0471               	iorwf	___lldiv@divisor+1,w
 10332     1F3C  0470               	iorwf	___lldiv@divisor,w
 10333     1F3D  1903               	skipnz
 10334     1F3E  2F40               	goto	u2931
 10335     1F3F  2F41               	goto	u2930
 10336     1F40                     u2931:
 10337     1F40  2F8E               	goto	l2500
 10338     1F41                     u2930:
 10339     1F41                     l2482:
 10340     1F41  01FD               	clrf	___lldiv@counter
 10341     1F42  0AFD               	incf	___lldiv@counter,f
 10342     1F43  2F51               	goto	l2486
 10343     1F44                     l2484:
 10344     1F44  3001               	movlw	1
 10345     1F45  00F8               	movwf	??___lldiv
 10346     1F46                     u2945:
 10347     1F46  1003               	clrc
 10348     1F47  0DF0               	rlf	___lldiv@divisor,f
 10349     1F48  0DF1               	rlf	___lldiv@divisor+1,f
 10350     1F49  0DF2               	rlf	___lldiv@divisor+2,f
 10351     1F4A  0DF3               	rlf	___lldiv@divisor+3,f
 10352     1F4B  0BF8               	decfsz	??___lldiv,f
 10353     1F4C  2F46               	goto	u2945
 10354     1F4D  3001               	movlw	1
 10355     1F4E  00F8               	movwf	??___lldiv
 10356     1F4F  0878               	movf	??___lldiv,w
 10357     1F50  07FD               	addwf	___lldiv@counter,f
 10358     1F51                     l2486:
 10359     1F51  1FF3               	btfss	___lldiv@divisor+3,7
 10360     1F52  2F54               	goto	u2951
 10361     1F53  2F55               	goto	u2950
 10362     1F54                     u2951:
 10363     1F54  2F44               	goto	l2484
 10364     1F55                     u2950:
 10365     1F55                     l2488:
 10366     1F55  3001               	movlw	1
 10367     1F56  00F8               	movwf	??___lldiv
 10368     1F57                     u2965:
 10369     1F57  1003               	clrc
 10370     1F58  0DF9               	rlf	___lldiv@quotient,f
 10371     1F59  0DFA               	rlf	___lldiv@quotient+1,f
 10372     1F5A  0DFB               	rlf	___lldiv@quotient+2,f
 10373     1F5B  0DFC               	rlf	___lldiv@quotient+3,f
 10374     1F5C  0BF8               	decfsz	??___lldiv,f
 10375     1F5D  2F57               	goto	u2965
 10376     1F5E                     l2490:
 10377     1F5E  0873               	movf	___lldiv@divisor+3,w
 10378     1F5F  0277               	subwf	___lldiv@dividend+3,w
 10379     1F60  1D03               	skipz
 10380     1F61  2F6C               	goto	u2975
 10381     1F62  0872               	movf	___lldiv@divisor+2,w
 10382     1F63  0276               	subwf	___lldiv@dividend+2,w
 10383     1F64  1D03               	skipz
 10384     1F65  2F6C               	goto	u2975
 10385     1F66  0871               	movf	___lldiv@divisor+1,w
 10386     1F67  0275               	subwf	___lldiv@dividend+1,w
 10387     1F68  1D03               	skipz
 10388     1F69  2F6C               	goto	u2975
 10389     1F6A  0870               	movf	___lldiv@divisor,w
 10390     1F6B  0274               	subwf	___lldiv@dividend,w
 10391     1F6C                     u2975:
 10392     1F6C  1C03               	skipc
 10393     1F6D  2F6F               	goto	u2971
 10394     1F6E  2F70               	goto	u2970
 10395     1F6F                     u2971:
 10396     1F6F  2F7F               	goto	l2496
 10397     1F70                     u2970:
 10398     1F70                     l2492:
 10399     1F70  0870               	movf	___lldiv@divisor,w
 10400     1F71  02F4               	subwf	___lldiv@dividend,f
 10401     1F72  0871               	movf	___lldiv@divisor+1,w
 10402     1F73  1C03               	skipc
 10403     1F74  0F71               	incfsz	___lldiv@divisor+1,w
 10404     1F75  02F5               	subwf	___lldiv@dividend+1,f
 10405     1F76  0872               	movf	___lldiv@divisor+2,w
 10406     1F77  1C03               	skipc
 10407     1F78  0F72               	incfsz	___lldiv@divisor+2,w
 10408     1F79  02F6               	subwf	___lldiv@dividend+2,f
 10409     1F7A  0873               	movf	___lldiv@divisor+3,w
 10410     1F7B  1C03               	skipc
 10411     1F7C  0F73               	incfsz	___lldiv@divisor+3,w
 10412     1F7D  02F7               	subwf	___lldiv@dividend+3,f
 10413     1F7E                     l2494:
 10414     1F7E  1479               	bsf	___lldiv@quotient,0
 10415     1F7F                     l2496:
 10416     1F7F  3001               	movlw	1
 10417     1F80                     u2985:
 10418     1F80  1003               	clrc
 10419     1F81  0CF3               	rrf	___lldiv@divisor+3,f
 10420     1F82  0CF2               	rrf	___lldiv@divisor+2,f
 10421     1F83  0CF1               	rrf	___lldiv@divisor+1,f
 10422     1F84  0CF0               	rrf	___lldiv@divisor,f
 10423     1F85  3EFF               	addlw	-1
 10424     1F86  1D03               	skipz
 10425     1F87  2F80               	goto	u2985
 10426     1F88                     l2498:
 10427     1F88  3001               	movlw	1
 10428     1F89  02FD               	subwf	___lldiv@counter,f
 10429     1F8A  1D03               	btfss	3,2
 10430     1F8B  2F8D               	goto	u2991
 10431     1F8C  2F8E               	goto	u2990
 10432     1F8D                     u2991:
 10433     1F8D  2F55               	goto	l2488
 10434     1F8E                     u2990:
 10435     1F8E                     l2500:
 10436     1F8E  087C               	movf	___lldiv@quotient+3,w
 10437     1F8F  00F3               	movwf	?___lldiv+3
 10438     1F90  087B               	movf	___lldiv@quotient+2,w
 10439     1F91  00F2               	movwf	?___lldiv+2
 10440     1F92  087A               	movf	___lldiv@quotient+1,w
 10441     1F93  00F1               	movwf	?___lldiv+1
 10442     1F94  0879               	movf	___lldiv@quotient,w
 10443     1F95  00F0               	movwf	?___lldiv
 10444     1F96                     l475:
 10445     1F96  0008               	return
 10446     1F97                     __end_of___lldiv:
 10447                           
 10448                           	psect	text29
 10449     1D0D                     __ptext29:	
 10450 ;; *************** function _Lcd_Write_String_4bits *****************
 10451 ;; Defined at:
 10452 ;;		line 99 in file "configLCD_4bits.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  a               2    5[COMMON] PTR unsigned char 
 10455 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(6), 
 10456 ;;		 -> STR_7(2), STR_6(7), STR_5(5), STR_4(5), 
 10457 ;;		 -> STR_3(6), STR_2(5), distanciaLCD(16), 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;  i               2   10[COMMON] int 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10469 ;;      Params:         2       0       0       0       0
 10470 ;;      Locals:         2       0       0       0       0
 10471 ;;      Temps:          3       0       0       0       0
 10472 ;;      Totals:         7       0       0       0       0
 10473 ;;Total ram usage:        7 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; Hardware stack levels required when called: 2
 10476 ;; This function calls:
 10477 ;;		_Lcd_Write_Char_4bits
 10478 ;; This function is called by:
 10479 ;;		_main
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483     1D0D                     _Lcd_Write_String_4bits:	
 10484                           ;psect for function _Lcd_Write_String_4bits
 10485                           
 10486     1D0D                     l3402:	
 10487                           ;incstack = 0
 10488                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
 10489                           
 10490                           
 10491                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
 10492     1D0D  01FA               	clrf	Lcd_Write_String_4bits@i
 10493     1D0E  01FB               	clrf	Lcd_Write_String_4bits@i+1
 10494     1D0F  2D32               	goto	l3408
 10495     1D10                     l3404:
 10496                           
 10497                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
 10498     1D10  087A               	movf	Lcd_Write_String_4bits@i,w
 10499     1D11  0775               	addwf	Lcd_Write_String_4bits@a,w
 10500     1D12  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10501     1D13  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10502     1D14  00F7               	movwf	??_Lcd_Write_String_4bits
 10503     1D15  1803               	skipnc
 10504     1D16  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10505     1D17  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10506     1D18  2D1A               	goto	u5220
 10507     1D19  03F7               	decf	??_Lcd_Write_String_4bits,f
 10508     1D1A                     u5220:
 10509     1D1A  0877               	movf	??_Lcd_Write_String_4bits,w
 10510     1D1B  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10511     1D1C  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10512     1D1D  1283               	bcf	3,5	;RP0=0, select bank0
 10513     1D1E  1303               	bcf	3,6	;RP1=0, select bank0
 10514     1D1F  00FF               	movwf	btemp+1
 10515     1D20  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10516     1D21  0084               	movwf	4
 10517     1D22  120A  118A  2003  160A  158A  	fcall	stringtab
 10518     1D27  160A  158A  2466  160A  158A  	fcall	_Lcd_Write_Char_4bits
 10519     1D2C                     l3406:
 10520     1D2C  3001               	movlw	1
 10521     1D2D  07FA               	addwf	Lcd_Write_String_4bits@i,f
 10522     1D2E  1803               	skipnc
 10523     1D2F  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
 10524     1D30  3000               	movlw	0
 10525     1D31  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
 10526     1D32                     l3408:
 10527     1D32  087A               	movf	Lcd_Write_String_4bits@i,w
 10528     1D33  0775               	addwf	Lcd_Write_String_4bits@a,w
 10529     1D34  00F8               	movwf	??_Lcd_Write_String_4bits+1
 10530     1D35  0876               	movf	Lcd_Write_String_4bits@a+1,w
 10531     1D36  00F7               	movwf	??_Lcd_Write_String_4bits
 10532     1D37  1803               	skipnc
 10533     1D38  0AF7               	incf	??_Lcd_Write_String_4bits,f
 10534     1D39  1FFA               	btfss	Lcd_Write_String_4bits@i,7
 10535     1D3A  2D3C               	goto	u5230
 10536     1D3B  03F7               	decf	??_Lcd_Write_String_4bits,f
 10537     1D3C                     u5230:
 10538     1D3C  0877               	movf	??_Lcd_Write_String_4bits,w
 10539     1D3D  00F9               	movwf	??_Lcd_Write_String_4bits+2
 10540     1D3E  0879               	movf	??_Lcd_Write_String_4bits+2,w
 10541     1D3F  1283               	bcf	3,5	;RP0=0, select bank0
 10542     1D40  1303               	bcf	3,6	;RP1=0, select bank0
 10543     1D41  00FF               	movwf	btemp+1
 10544     1D42  0878               	movf	??_Lcd_Write_String_4bits+1,w
 10545     1D43  0084               	movwf	4
 10546     1D44  120A  118A  2003  160A  158A  	fcall	stringtab
 10547     1D49  3A00               	xorlw	0
 10548     1D4A  1D03               	skipz
 10549     1D4B  2D4D               	goto	u5241
 10550     1D4C  2D4E               	goto	u5240
 10551     1D4D                     u5241:
 10552     1D4D  2D10               	goto	l3404
 10553     1D4E                     u5240:
 10554     1D4E                     l99:
 10555     1D4E  0008               	return
 10556     1D4F                     __end_of_Lcd_Write_String_4bits:
 10557                           
 10558                           	psect	text30
 10559     1C66                     __ptext30:	
 10560 ;; *************** function _Lcd_Write_Char_4bits *****************
 10561 ;; Defined at:
 10562 ;;		line 84 in file "configLCD_4bits.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  a               1    wreg     unsigned char 
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;  a               1    4[COMMON] unsigned char 
 10567 ;;  y               1    3[COMMON] unsigned char 
 10568 ;;  temp            1    2[COMMON] unsigned char 
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  1    wreg      void 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0, pclath, cstack
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10578 ;;      Params:         0       0       0       0       0
 10579 ;;      Locals:         3       0       0       0       0
 10580 ;;      Temps:          1       0       0       0       0
 10581 ;;      Totals:         4       0       0       0       0
 10582 ;;Total ram usage:        4 bytes
 10583 ;; Hardware stack levels used: 1
 10584 ;; Hardware stack levels required when called: 1
 10585 ;; This function calls:
 10586 ;;		_Lcd_Port_4bits
 10587 ;; This function is called by:
 10588 ;;		_Lcd_Write_String_4bits
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592     1C66                     _Lcd_Write_Char_4bits:	
 10593                           ;psect for function _Lcd_Write_Char_4bits
 10594                           
 10595                           
 10596                           ;incstack = 0
 10597                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
 10598                           ;Lcd_Write_Char_4bits@a stored from wreg
 10599     1C66  00F4               	movwf	Lcd_Write_Char_4bits@a
 10600     1C67                     l2998:
 10601                           
 10602                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
 10603     1C67  0874               	movf	Lcd_Write_Char_4bits@a,w
 10604     1C68  390F               	andlw	15
 10605     1C69  00F2               	movwf	Lcd_Write_Char_4bits@temp
 10606                           
 10607                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
 10608     1C6A  0874               	movf	Lcd_Write_Char_4bits@a,w
 10609     1C6B  39F0               	andlw	240
 10610     1C6C  00F3               	movwf	Lcd_Write_Char_4bits@y
 10611     1C6D                     l3000:
 10612                           
 10613                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
 10614     1C6D  1283               	bcf	3,5	;RP0=0, select bank0
 10615     1C6E  1303               	bcf	3,6	;RP1=0, select bank0
 10616     1C6F  1508               	bsf	8,2	;volatile
 10617     1C70                     l3002:
 10618                           
 10619                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
 10620     1C70  0873               	movf	Lcd_Write_Char_4bits@y,w
 10621     1C71  00F1               	movwf	??_Lcd_Write_Char_4bits
 10622     1C72  3004               	movlw	4
 10623     1C73                     u4185:
 10624     1C73  1003               	clrc
 10625     1C74  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
 10626     1C75  3EFF               	addlw	-1
 10627     1C76  1D03               	skipz
 10628     1C77  2C73               	goto	u4185
 10629     1C78  0871               	movf	??_Lcd_Write_Char_4bits,w
 10630     1C79  160A  158A  2388  160A  158A  	fcall	_Lcd_Port_4bits
 10631     1C7E                     l3004:
 10632                           
 10633                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
 10634     1C7E  1283               	bcf	3,5	;RP0=0, select bank0
 10635     1C7F  1303               	bcf	3,6	;RP1=0, select bank0
 10636     1C80  1588               	bsf	8,3	;volatile
 10637     1C81                     l3006:
 10638                           
 10639                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10640     1C81  301A               	movlw	26
 10641     1C82  00F1               	movwf	??_Lcd_Write_Char_4bits
 10642     1C83                     u5797:
 10643     1C83  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10644     1C84  2C83               	goto	u5797
 10645     1C85  0000               	nop
 10646     1C86                     l3008:
 10647                           
 10648                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
 10649     1C86  1283               	bcf	3,5	;RP0=0, select bank0
 10650     1C87  1303               	bcf	3,6	;RP1=0, select bank0
 10651     1C88  1188               	bcf	8,3	;volatile
 10652     1C89                     l3010:
 10653                           
 10654                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
 10655     1C89  0872               	movf	Lcd_Write_Char_4bits@temp,w
 10656     1C8A  160A  158A  2388  160A  158A  	fcall	_Lcd_Port_4bits
 10657     1C8F                     l3012:
 10658                           
 10659                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
 10660     1C8F  1283               	bcf	3,5	;RP0=0, select bank0
 10661     1C90  1303               	bcf	3,6	;RP1=0, select bank0
 10662     1C91  1588               	bsf	8,3	;volatile
 10663     1C92                     l3014:
 10664                           
 10665                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10666     1C92  301A               	movlw	26
 10667     1C93  00F1               	movwf	??_Lcd_Write_Char_4bits
 10668     1C94                     u5807:
 10669     1C94  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
 10670     1C95  2C94               	goto	u5807
 10671     1C96  0000               	nop
 10672     1C97                     l3016:
 10673                           
 10674                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
 10675     1C97  1283               	bcf	3,5	;RP0=0, select bank0
 10676     1C98  1303               	bcf	3,6	;RP1=0, select bank0
 10677     1C99  1188               	bcf	8,3	;volatile
 10678     1C9A                     l93:
 10679     1C9A  0008               	return
 10680     1C9B                     __end_of_Lcd_Write_Char_4bits:
 10681                           
 10682                           	psect	text31
 10683     1D93                     __ptext31:	
 10684 ;; *************** function _Lcd_Set_Cursor_4bits *****************
 10685 ;; Defined at:
 10686 ;;		line 49 in file "configLCD_4bits.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  a               1    wreg     unsigned char 
 10689 ;;  b               1    4[COMMON] unsigned char 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  a               1    6[COMMON] unsigned char 
 10692 ;;  temp            1    9[COMMON] unsigned char 
 10693 ;;  y               1    8[COMMON] unsigned char 
 10694 ;;  z               1    7[COMMON] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0, pclath, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10704 ;;      Params:         1       0       0       0       0
 10705 ;;      Locals:         4       0       0       0       0
 10706 ;;      Temps:          1       0       0       0       0
 10707 ;;      Totals:         6       0       0       0       0
 10708 ;;Total ram usage:        6 bytes
 10709 ;; Hardware stack levels used: 1
 10710 ;; Hardware stack levels required when called: 2
 10711 ;; This function calls:
 10712 ;;		_Lcd_Cmd_4bits
 10713 ;; This function is called by:
 10714 ;;		_main
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718     1D93                     _Lcd_Set_Cursor_4bits:	
 10719                           ;psect for function _Lcd_Set_Cursor_4bits
 10720                           
 10721                           
 10722                           ;incstack = 0
 10723                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
 10724                           ;Lcd_Set_Cursor_4bits@a stored from wreg
 10725     1D93  00F6               	movwf	Lcd_Set_Cursor_4bits@a
 10726     1D94                     l3382:
 10727                           
 10728                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
 10729     1D94  0376               	decf	Lcd_Set_Cursor_4bits@a,w
 10730     1D95  1D03               	btfss	3,2
 10731     1D96  2D98               	goto	u5181
 10732     1D97  2D99               	goto	u5180
 10733     1D98                     u5181:
 10734     1D98  2DB6               	goto	l3392
 10735     1D99                     u5180:
 10736     1D99                     l3384:
 10737                           
 10738                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
 10739     1D99  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10740     1D9A  3E7F               	addlw	127
 10741     1D9B  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10742                           
 10743                           ;configLCD_4bits.c: 53:         z = temp >> 4;
 10744     1D9C  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10745     1D9D  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10746     1D9E  3004               	movlw	4
 10747     1D9F                     u5195:
 10748     1D9F  1003               	clrc
 10749     1DA0  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10750     1DA1  3EFF               	addlw	-1
 10751     1DA2  1D03               	skipz
 10752     1DA3  2D9F               	goto	u5195
 10753     1DA4  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10754     1DA5  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10755     1DA6                     l3386:
 10756                           
 10757                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
 10758     1DA6  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10759     1DA7  390F               	andlw	15
 10760     1DA8  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10761     1DA9                     l3388:
 10762                           
 10763                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
 10764     1DA9  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10765     1DAA  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10766     1DAF                     l3390:
 10767                           
 10768                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
 10769     1DAF  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10770     1DB0  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10771                           
 10772                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
 10773     1DB5  2DD8               	goto	l87
 10774     1DB6                     l3392:
 10775     1DB6  3002               	movlw	2
 10776     1DB7  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
 10777     1DB8  1D03               	btfss	3,2
 10778     1DB9  2DBB               	goto	u5201
 10779     1DBA  2DBC               	goto	u5200
 10780     1DBB                     u5201:
 10781     1DBB  2DD8               	goto	l87
 10782     1DBC                     u5200:
 10783     1DBC                     l3394:
 10784                           
 10785                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
 10786     1DBC  0874               	movf	Lcd_Set_Cursor_4bits@b,w
 10787     1DBD  3EBF               	addlw	191
 10788     1DBE  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
 10789                           
 10790                           ;configLCD_4bits.c: 59:         z = temp >> 4;
 10791     1DBF  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10792     1DC0  00F5               	movwf	??_Lcd_Set_Cursor_4bits
 10793     1DC1  3004               	movlw	4
 10794     1DC2                     u5215:
 10795     1DC2  1003               	clrc
 10796     1DC3  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
 10797     1DC4  3EFF               	addlw	-1
 10798     1DC5  1D03               	skipz
 10799     1DC6  2DC2               	goto	u5215
 10800     1DC7  0875               	movf	??_Lcd_Set_Cursor_4bits,w
 10801     1DC8  00F7               	movwf	Lcd_Set_Cursor_4bits@z
 10802     1DC9                     l3396:
 10803                           
 10804                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
 10805     1DC9  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
 10806     1DCA  390F               	andlw	15
 10807     1DCB  00F8               	movwf	Lcd_Set_Cursor_4bits@y
 10808     1DCC                     l3398:
 10809                           
 10810                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
 10811     1DCC  0877               	movf	Lcd_Set_Cursor_4bits@z,w
 10812     1DCD  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10813     1DD2                     l3400:
 10814                           
 10815                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
 10816     1DD2  0878               	movf	Lcd_Set_Cursor_4bits@y,w
 10817     1DD3  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10818     1DD8                     l87:
 10819     1DD8  0008               	return
 10820     1DD9                     __end_of_Lcd_Set_Cursor_4bits:
 10821                           
 10822                           	psect	text32
 10823     1B42                     __ptext32:	
 10824 ;; *************** function _Lcd_Clear_4bits *****************
 10825 ;; Defined at:
 10826 ;;		line 44 in file "configLCD_4bits.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0, pclath, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10840 ;;      Params:         0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used: 1
 10846 ;; Hardware stack levels required when called: 2
 10847 ;; This function calls:
 10848 ;;		_Lcd_Cmd_4bits
 10849 ;; This function is called by:
 10850 ;;		_main
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854     1B42                     _Lcd_Clear_4bits:	
 10855                           ;psect for function _Lcd_Clear_4bits
 10856                           
 10857     1B42                     l3380:	
 10858                           ;incstack = 0
 10859                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
 10860                           
 10861                           
 10862                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
 10863     1B42  3000               	movlw	0
 10864     1B43  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10865                           
 10866                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
 10867     1B48  3001               	movlw	1
 10868     1B49  160A  158A  236E  160A  158A  	fcall	_Lcd_Cmd_4bits
 10869     1B4E                     l81:
 10870     1B4E  0008               	return
 10871     1B4F                     __end_of_Lcd_Clear_4bits:
 10872                           
 10873                           	psect	text33
 10874     1B6E                     __ptext33:	
 10875 ;; *************** function _Lcd_Cmd_4bits *****************
 10876 ;; Defined at:
 10877 ;;		line 36 in file "configLCD_4bits.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;  a               1    wreg     unsigned char 
 10880 ;; Auto vars:     Size  Location     Type
 10881 ;;  a               1    3[COMMON] unsigned char 
 10882 ;; Return value:  Size  Location     Type
 10883 ;;                  1    wreg      void 
 10884 ;; Registers used:
 10885 ;;		wreg, status,2, status,0, pclath, cstack
 10886 ;; Tracked objects:
 10887 ;;		On entry : 0/0
 10888 ;;		On exit  : 0/0
 10889 ;;		Unchanged: 0/0
 10890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10891 ;;      Params:         0       0       0       0       0
 10892 ;;      Locals:         1       0       0       0       0
 10893 ;;      Temps:          2       0       0       0       0
 10894 ;;      Totals:         3       0       0       0       0
 10895 ;;Total ram usage:        3 bytes
 10896 ;; Hardware stack levels used: 1
 10897 ;; Hardware stack levels required when called: 1
 10898 ;; This function calls:
 10899 ;;		_Lcd_Port_4bits
 10900 ;; This function is called by:
 10901 ;;		_Lcd_Clear_4bits
 10902 ;;		_Lcd_Set_Cursor_4bits
 10903 ;;		_Lcd_Init_4bits
 10904 ;;		_Lcd_Shift_Right_4bits
 10905 ;;		_Lcd_Shift_Left_4bits
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909     1B6E                     _Lcd_Cmd_4bits:	
 10910                           ;psect for function _Lcd_Cmd_4bits
 10911                           
 10912                           
 10913                           ;incstack = 0
 10914                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
 10915                           ;Lcd_Cmd_4bits@a stored from wreg
 10916     1B6E  00F3               	movwf	Lcd_Cmd_4bits@a
 10917     1B6F                     l2470:
 10918                           
 10919                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
 10920     1B6F  1283               	bcf	3,5	;RP0=0, select bank0
 10921     1B70  1303               	bcf	3,6	;RP1=0, select bank0
 10922     1B71  1108               	bcf	8,2	;volatile
 10923     1B72                     l2472:
 10924                           
 10925                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
 10926     1B72  0873               	movf	Lcd_Cmd_4bits@a,w
 10927     1B73  160A  158A  2388  160A  158A  	fcall	_Lcd_Port_4bits
 10928     1B78                     l2474:
 10929                           
 10930                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
 10931     1B78  1283               	bcf	3,5	;RP0=0, select bank0
 10932     1B79  1303               	bcf	3,6	;RP1=0, select bank0
 10933     1B7A  1588               	bsf	8,3	;volatile
 10934     1B7B                     l2476:
 10935                           
 10936                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10937     1B7B  300B               	movlw	11
 10938     1B7C  00F2               	movwf	??_Lcd_Cmd_4bits+1
 10939     1B7D  3062               	movlw	98
 10940     1B7E  00F1               	movwf	??_Lcd_Cmd_4bits
 10941     1B7F                     u5817:
 10942     1B7F  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
 10943     1B80  2B7F               	goto	u5817
 10944     1B81  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
 10945     1B82  2B7F               	goto	u5817
 10946     1B83  0000               	nop
 10947     1B84                     l2478:
 10948                           
 10949                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
 10950     1B84  1283               	bcf	3,5	;RP0=0, select bank0
 10951     1B85  1303               	bcf	3,6	;RP1=0, select bank0
 10952     1B86  1188               	bcf	8,3	;volatile
 10953     1B87                     l78:
 10954     1B87  0008               	return
 10955     1B88                     __end_of_Lcd_Cmd_4bits:
 10956                           
 10957                           	psect	text34
 10958     1B88                     __ptext34:	
 10959 ;; *************** function _Lcd_Port_4bits *****************
 10960 ;; Defined at:
 10961 ;;		line 14 in file "configLCD_4bits.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  a               1    wreg     unsigned char 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  a               1    0[COMMON] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      void 
 10968 ;; Registers used:
 10969 ;;		wreg
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10975 ;;      Params:         0       0       0       0       0
 10976 ;;      Locals:         1       0       0       0       0
 10977 ;;      Temps:          0       0       0       0       0
 10978 ;;      Totals:         1       0       0       0       0
 10979 ;;Total ram usage:        1 bytes
 10980 ;; Hardware stack levels used: 1
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_Lcd_Cmd_4bits
 10985 ;;		_Lcd_Init_4bits
 10986 ;;		_Lcd_Write_Char_4bits
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990     1B88                     _Lcd_Port_4bits:	
 10991                           ;psect for function _Lcd_Port_4bits
 10992                           
 10993                           
 10994                           ;incstack = 0
 10995                           ; Regs used in _Lcd_Port_4bits: [wreg]
 10996                           ;Lcd_Port_4bits@a stored from wreg
 10997     1B88  00F0               	movwf	Lcd_Port_4bits@a
 10998     1B89                     l2446:
 10999                           
 11000                           ;configLCD_4bits.c: 15:     if (a & 1)
 11001     1B89  1C70               	btfss	Lcd_Port_4bits@a,0
 11002     1B8A  2B8C               	goto	u2861
 11003     1B8B  2B8D               	goto	u2860
 11004     1B8C                     u2861:
 11005     1B8C  2B91               	goto	l67
 11006     1B8D                     u2860:
 11007     1B8D                     l2448:
 11008                           
 11009                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
 11010     1B8D  1283               	bcf	3,5	;RP0=0, select bank0
 11011     1B8E  1303               	bcf	3,6	;RP1=0, select bank0
 11012     1B8F  1608               	bsf	8,4	;volatile
 11013     1B90  2B94               	goto	l68
 11014     1B91                     l67:	
 11015                           ;configLCD_4bits.c: 17:     else
 11016                           
 11017                           
 11018                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
 11019     1B91  1283               	bcf	3,5	;RP0=0, select bank0
 11020     1B92  1303               	bcf	3,6	;RP1=0, select bank0
 11021     1B93  1208               	bcf	8,4	;volatile
 11022     1B94                     l68:
 11023                           
 11024                           ;configLCD_4bits.c: 20:     if (a & 2)
 11025     1B94  1CF0               	btfss	Lcd_Port_4bits@a,1
 11026     1B95  2B97               	goto	u2871
 11027     1B96  2B98               	goto	u2870
 11028     1B97                     u2871:
 11029     1B97  2B9A               	goto	l69
 11030     1B98                     u2870:
 11031     1B98                     l2450:
 11032                           
 11033                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
 11034     1B98  1688               	bsf	8,5	;volatile
 11035     1B99  2B9B               	goto	l70
 11036     1B9A                     l69:	
 11037                           ;configLCD_4bits.c: 22:     else
 11038                           
 11039                           
 11040                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
 11041     1B9A  1288               	bcf	8,5	;volatile
 11042     1B9B                     l70:
 11043                           
 11044                           ;configLCD_4bits.c: 25:     if (a & 4)
 11045     1B9B  1D70               	btfss	Lcd_Port_4bits@a,2
 11046     1B9C  2B9E               	goto	u2881
 11047     1B9D  2B9F               	goto	u2880
 11048     1B9E                     u2881:
 11049     1B9E  2BA1               	goto	l71
 11050     1B9F                     u2880:
 11051     1B9F                     l2452:
 11052                           
 11053                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
 11054     1B9F  1708               	bsf	8,6	;volatile
 11055     1BA0  2BA2               	goto	l72
 11056     1BA1                     l71:	
 11057                           ;configLCD_4bits.c: 27:     else
 11058                           
 11059                           
 11060                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
 11061     1BA1  1308               	bcf	8,6	;volatile
 11062     1BA2                     l72:
 11063                           
 11064                           ;configLCD_4bits.c: 30:     if (a & 8)
 11065     1BA2  1DF0               	btfss	Lcd_Port_4bits@a,3
 11066     1BA3  2BA5               	goto	u2891
 11067     1BA4  2BA6               	goto	u2890
 11068     1BA5                     u2891:
 11069     1BA5  2BA8               	goto	l73
 11070     1BA6                     u2890:
 11071     1BA6                     l2454:
 11072                           
 11073                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
 11074     1BA6  1788               	bsf	8,7	;volatile
 11075     1BA7  2BA9               	goto	l75
 11076     1BA8                     l73:	
 11077                           ;configLCD_4bits.c: 32:     else
 11078                           
 11079                           
 11080                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
 11081     1BA8  1388               	bcf	8,7	;volatile
 11082     1BA9                     l75:
 11083     1BA9  0008               	return
 11084     1BAA                     __end_of_Lcd_Port_4bits:
 11085                           
 11086                           	psect	text35
 11087     1B20                     __ptext35:	
 11088 ;; *************** function _I2C_Master_Write *****************
 11089 ;; Defined at:
 11090 ;;		line 62 in file "configI2C.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  d               2    0[COMMON] unsigned int 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0, pclath, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11104 ;;      Params:         2       0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0
 11107 ;;      Totals:         2       0       0       0       0
 11108 ;;Total ram usage:        2 bytes
 11109 ;; Hardware stack levels used: 1
 11110 ;; Hardware stack levels required when called: 1
 11111 ;; This function calls:
 11112 ;;		_I2C_Master_Wait
 11113 ;; This function is called by:
 11114 ;;		_main
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118     1B20                     _I2C_Master_Write:	
 11119                           ;psect for function _I2C_Master_Write
 11120                           
 11121     1B20                     l3360:	
 11122                           ;incstack = 0
 11123                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11124                           
 11125                           
 11126                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
 11127     1B20  160A  158A  2335  160A  158A  	fcall	_I2C_Master_Wait
 11128     1B25                     l3362:
 11129                           
 11130                           ;configI2C.c: 65:     SSPBUF = d;
 11131     1B25  0870               	movf	I2C_Master_Write@d,w
 11132     1B26  1283               	bcf	3,5	;RP0=0, select bank0
 11133     1B27  1303               	bcf	3,6	;RP1=0, select bank0
 11134     1B28  0093               	movwf	19	;volatile
 11135     1B29                     l47:
 11136     1B29  0008               	return
 11137     1B2A                     __end_of_I2C_Master_Write:
 11138                           
 11139                           	psect	text36
 11140     1B17                     __ptext36:	
 11141 ;; *************** function _I2C_Master_Stop *****************
 11142 ;; Defined at:
 11143 ;;		line 52 in file "configI2C.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      void 
 11150 ;; Registers used:
 11151 ;;		wreg, status,2, status,0, pclath, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11157 ;;      Params:         0       0       0       0       0
 11158 ;;      Locals:         0       0       0       0       0
 11159 ;;      Temps:          0       0       0       0       0
 11160 ;;      Totals:         0       0       0       0       0
 11161 ;;Total ram usage:        0 bytes
 11162 ;; Hardware stack levels used: 1
 11163 ;; Hardware stack levels required when called: 1
 11164 ;; This function calls:
 11165 ;;		_I2C_Master_Wait
 11166 ;; This function is called by:
 11167 ;;		_main
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171     1B17                     _I2C_Master_Stop:	
 11172                           ;psect for function _I2C_Master_Stop
 11173                           
 11174     1B17                     l3356:	
 11175                           ;incstack = 0
 11176                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11177                           
 11178                           
 11179                           ;configI2C.c: 54:     I2C_Master_Wait();
 11180     1B17  160A  158A  2335  160A  158A  	fcall	_I2C_Master_Wait
 11181     1B1C                     l3358:
 11182                           
 11183                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
 11184     1B1C  1683               	bsf	3,5	;RP0=1, select bank1
 11185     1B1D  1303               	bcf	3,6	;RP1=0, select bank1
 11186     1B1E  1511               	bsf	17,2	;volatile
 11187     1B1F                     l44:
 11188     1B1F  0008               	return
 11189     1B20                     __end_of_I2C_Master_Stop:
 11190                           
 11191                           	psect	text37
 11192     1B0E                     __ptext37:	
 11193 ;; *************** function _I2C_Master_Start *****************
 11194 ;; Defined at:
 11195 ;;		line 36 in file "configI2C.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;		None
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;		None
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      void 
 11202 ;; Registers used:
 11203 ;;		wreg, status,2, status,0, pclath, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11209 ;;      Params:         0       0       0       0       0
 11210 ;;      Locals:         0       0       0       0       0
 11211 ;;      Temps:          0       0       0       0       0
 11212 ;;      Totals:         0       0       0       0       0
 11213 ;;Total ram usage:        0 bytes
 11214 ;; Hardware stack levels used: 1
 11215 ;; Hardware stack levels required when called: 1
 11216 ;; This function calls:
 11217 ;;		_I2C_Master_Wait
 11218 ;; This function is called by:
 11219 ;;		_main
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223     1B0E                     _I2C_Master_Start:	
 11224                           ;psect for function _I2C_Master_Start
 11225                           
 11226     1B0E                     l3352:	
 11227                           ;incstack = 0
 11228                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11229                           
 11230                           
 11231                           ;configI2C.c: 38:     I2C_Master_Wait();
 11232     1B0E  160A  158A  2335  160A  158A  	fcall	_I2C_Master_Wait
 11233     1B13                     l3354:
 11234                           
 11235                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
 11236     1B13  1683               	bsf	3,5	;RP0=1, select bank1
 11237     1B14  1303               	bcf	3,6	;RP1=0, select bank1
 11238     1B15  1411               	bsf	17,0	;volatile
 11239     1B16                     l38:
 11240     1B16  0008               	return
 11241     1B17                     __end_of_I2C_Master_Start:
 11242                           
 11243                           	psect	text38
 11244     1001                     __ptext38:	
 11245 ;; *************** function _I2C_Master_Read *****************
 11246 ;; Defined at:
 11247 ;;		line 71 in file "configI2C.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;  a               2    0[COMMON] unsigned short 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  temp            2    4[COMMON] unsigned short 
 11252 ;; Return value:  Size  Location     Type
 11253 ;;                  2    0[COMMON] unsigned short 
 11254 ;; Registers used:
 11255 ;;		wreg, status,2, status,0, pclath, cstack
 11256 ;; Tracked objects:
 11257 ;;		On entry : 0/0
 11258 ;;		On exit  : 0/0
 11259 ;;		Unchanged: 0/0
 11260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11261 ;;      Params:         2       0       0       0       0
 11262 ;;      Locals:         2       0       0       0       0
 11263 ;;      Temps:          2       0       0       0       0
 11264 ;;      Totals:         6       0       0       0       0
 11265 ;;Total ram usage:        6 bytes
 11266 ;; Hardware stack levels used: 1
 11267 ;; Hardware stack levels required when called: 1
 11268 ;; This function calls:
 11269 ;;		_I2C_Master_Wait
 11270 ;; This function is called by:
 11271 ;;		_main
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275     1001                     _I2C_Master_Read:	
 11276                           ;psect for function _I2C_Master_Read
 11277                           
 11278     1001                     l3364:	
 11279                           ;incstack = 0
 11280                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11281                           
 11282                           
 11283                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
 11284     1001  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Wait
 11285     1006                     l3366:
 11286                           
 11287                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
 11288     1006  1683               	bsf	3,5	;RP0=1, select bank1
 11289     1007  1303               	bcf	3,6	;RP1=0, select bank1
 11290     1008  1591               	bsf	17,3	;volatile
 11291                           
 11292                           ;configI2C.c: 76:     I2C_Master_Wait();
 11293     1009  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Wait
 11294     100E                     l3368:
 11295                           
 11296                           ;configI2C.c: 77:     temp = SSPBUF;
 11297     100E  1283               	bcf	3,5	;RP0=0, select bank0
 11298     100F  1303               	bcf	3,6	;RP1=0, select bank0
 11299     1010  0813               	movf	19,w	;volatile
 11300     1011  00F2               	movwf	??_I2C_Master_Read
 11301     1012  01F3               	clrf	??_I2C_Master_Read+1
 11302     1013  0872               	movf	??_I2C_Master_Read,w
 11303     1014  00F4               	movwf	I2C_Master_Read@temp
 11304     1015  0873               	movf	??_I2C_Master_Read+1,w
 11305     1016  00F5               	movwf	I2C_Master_Read@temp+1
 11306     1017                     l3370:
 11307                           
 11308                           ;configI2C.c: 78:     I2C_Master_Wait();
 11309     1017  160A  158A  2335  160A  118A  	fcall	_I2C_Master_Wait
 11310     101C                     l3372:
 11311                           
 11312                           ;configI2C.c: 79:     if(a == 1){
 11313     101C  0370               	decf	I2C_Master_Read@a,w
 11314     101D  0471               	iorwf	I2C_Master_Read@a+1,w
 11315     101E  1D03               	btfss	3,2
 11316     101F  2821               	goto	u5171
 11317     1020  2822               	goto	u5170
 11318     1021                     u5171:
 11319     1021  2826               	goto	l50
 11320     1022                     u5170:
 11321     1022                     l3374:
 11322                           
 11323                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
 11324     1022  1683               	bsf	3,5	;RP0=1, select bank1
 11325     1023  1303               	bcf	3,6	;RP1=0, select bank1
 11326     1024  1291               	bcf	17,5	;volatile
 11327                           
 11328                           ;configI2C.c: 81:     }else{
 11329     1025  2829               	goto	l51
 11330     1026                     l50:
 11331                           
 11332                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
 11333     1026  1683               	bsf	3,5	;RP0=1, select bank1
 11334     1027  1303               	bcf	3,6	;RP1=0, select bank1
 11335     1028  1691               	bsf	17,5	;volatile
 11336     1029                     l51:	
 11337                           ;configI2C.c: 83:     }
 11338                           
 11339                           
 11340                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
 11341     1029  1611               	bsf	17,4	;volatile
 11342     102A                     l3376:
 11343                           
 11344                           ;configI2C.c: 85:     return temp;
 11345     102A  0875               	movf	I2C_Master_Read@temp+1,w
 11346     102B  00F1               	movwf	?_I2C_Master_Read+1
 11347     102C  0874               	movf	I2C_Master_Read@temp,w
 11348     102D  00F0               	movwf	?_I2C_Master_Read
 11349     102E                     l52:
 11350     102E  0008               	return
 11351     102F                     __end_of_I2C_Master_Read:
 11352                           
 11353                           	psect	text39
 11354     1B35                     __ptext39:	
 11355 ;; *************** function _I2C_Master_Wait *****************
 11356 ;; Defined at:
 11357 ;;		line 29 in file "configI2C.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11371 ;;      Params:         0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_I2C_Master_Start
 11381 ;;		_I2C_Master_Stop
 11382 ;;		_I2C_Master_Write
 11383 ;;		_I2C_Master_Read
 11384 ;;		_I2C_Master_RepeatedStart
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388     1B35                     _I2C_Master_Wait:	
 11389                           ;psect for function _I2C_Master_Wait
 11390                           
 11391     1B35                     l2980:	
 11392                           ;incstack = 0
 11393                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11394                           
 11395     1B35                     l32:	
 11396                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11397                           
 11398     1B35  1683               	bsf	3,5	;RP0=1, select bank1
 11399     1B36  1303               	bcf	3,6	;RP1=0, select bank1
 11400     1B37  1914               	btfsc	20,2	;volatile
 11401     1B38  2B3A               	goto	u4161
 11402     1B39  2B3B               	goto	u4160
 11403     1B3A                     u4161:
 11404     1B3A  2B35               	goto	l32
 11405     1B3B                     u4160:
 11406     1B3B                     l2982:
 11407     1B3B  0811               	movf	17,w	;volatile
 11408     1B3C  391F               	andlw	31
 11409     1B3D  1D03               	btfss	3,2
 11410     1B3E  2B40               	goto	u4171
 11411     1B3F  2B41               	goto	u4170
 11412     1B40                     u4171:
 11413     1B40  2B35               	goto	l32
 11414     1B41                     u4170:
 11415     1B41                     l35:
 11416     1B41  0008               	return
 11417     1B42                     __end_of_I2C_Master_Wait:
 11418     007E                     btemp	set	126	;btemp
 11419     007E                     wtemp0	set	126
 11420                           
 11421                           	psect	idloc
 11422                           
 11423                           ;Config register IDLOC0 @ 0x2000
 11424                           ;	unspecified, using default values
 11425     2000                     	org	8192
 11426     2000  3FFF               	dw	16383
 11427                           
 11428                           ;Config register IDLOC1 @ 0x2001
 11429                           ;	unspecified, using default values
 11430     2001                     	org	8193
 11431     2001  3FFF               	dw	16383
 11432                           
 11433                           ;Config register IDLOC2 @ 0x2002
 11434                           ;	unspecified, using default values
 11435     2002                     	org	8194
 11436     2002  3FFF               	dw	16383
 11437                           
 11438                           ;Config register IDLOC3 @ 0x2003
 11439                           ;	unspecified, using default values
 11440     2003                     	org	8195
 11441     2003  3FFF               	dw	16383
 11442                           
 11443                           	psect	config
 11444                           
 11445                           ;Config register CONFIG1 @ 0x2007
 11446                           ;	Oscillator Selection bits
 11447                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11448                           ;	Watchdog Timer Enable bit
 11449                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11450                           ;	Power-up Timer Enable bit
 11451                           ;	PWRTE = OFF, PWRT disabled
 11452                           ;	RE3/MCLR pin function select bit
 11453                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11454                           ;	Code Protection bit
 11455                           ;	CP = OFF, Program memory code protection is disabled
 11456                           ;	Data Code Protection bit
 11457                           ;	CPD = OFF, Data memory code protection is disabled
 11458                           ;	Brown Out Reset Selection bits
 11459                           ;	BOREN = OFF, BOR disabled
 11460                           ;	Internal External Switchover bit
 11461                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11462                           ;	Fail-Safe Clock Monitor Enabled bit
 11463                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11464                           ;	Low Voltage Programming Enable bit
 11465                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11466                           ;	In-Circuit Debugger Mode bit
 11467                           ;	DEBUG = 0x1, unprogramme 11468     2007                     	org	8199
 11469     2007  20D4               	dw	8404
 11470                           
 11471                           ;Config register CONFIG2 @ 0x2008
 11472                           ;	Brown-out Reset Selection bit
 11473                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11474                           ;	Flash Program Memory Self Write Enable bits
 11475                           ;	WRT = OFF, Write protection off
 11476     2008                     	org	8200
 11477     2008  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     39      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> distanciaLCD(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[6]), 
		 -> STR_7(CODE[2]), STR_6(CODE[7]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[6]), STR_2(CODE[5]), distanciaLCD(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_I2C_Master_Read
    ___flsub->___xxtofl
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36563
                                             35 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                             ___flge
                           ___xxtofl
                              _setup
                       _setupMotores
                           _setupPWM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31030
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1094
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupMotores                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     936
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1104
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    1216
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___flge
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _setupMotores
   _setupPWM
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3F       7       78.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 08:02:12 2023

                             pc 0002                              l32 1B35                              l50 1026  
                            l35 1B41                              l51 1029                              l52 102E  
                            l44 1B1F                              l60 1B5B                              l29 1CD2  
                            l38 1B16                              l70 1B9B                              l47 1B29  
                            l71 1BA1                              l72 1BA2                              l73 1BA8  
                            l81 1B4E                              l90 1F30                              l75 1BA9  
                            l67 1B91                              l68 1B94                              l69 1B9A  
                            l93 1C9A                              l78 1B87                              l87 1DD8  
                            l99 1D4E                    ___awdiv@sign 0021                              fsr 0004  
           ___wmul@multiplicand 0072             __Umul8_16@word_mpld 0076                             l260 1BF2  
                           l421 064B                             l254 00F5                             l414 060D  
                           l176 14D6                             l257 1BEA                             l441 1C17  
                           l610 08C2                             l362 1368                             l259 1BEE  
                           l435 07EF                             l620 094E                             l189 1C3E  
                           l613 091E                             l605 1ED3                             l429 07AC  
                           l630 081E                             l439 1BFF                             l800 17D3  
                           l625 1DF5                             l633 088A                             l609 095B  
                           l369 0FFF                             l626 1E11                             l634 08A3  
                           l642 10A6                             l475 1F96                             l627 1E26  
                           l812 1BCD                             l652 10A6                             l660 1120  
                           l388 021D                             l638 1B34                             l808 17F5  
                           l920 0185                             l912 015D                             l656 115D  
                           l592 1FFF                             l809 17FF                             l649 1091  
                           l657 10D1                             l745 1D92                             l770 1686  
                           l906 011A                             l667 1150                             l755 1D0C  
                           l772 165F                             l908 01AF                             l766 1603  
                           l862 0CA0                             l926 1B6D                             l791 1773  
                           l695 1E7A                             l919 0179                             l881 1C53  
                           l874 0C94                             l787 174F                             l779 17FF  
                           l883 1C65                             l868 0C10                             l797 1795  
                           _GIE 005F                             _PR2 0092                             _dis 006E  
                           fsr0 0004                             indf 0000                    ___awmod@sign 0076  
                  ___flmul@aexp 0036                    ___flmul@bexp 0037                    ___flmul@sign 0031  
                  ___flmul@temp 003C                    ___flmul@prod 0038                    ___fltol@exp1 005A  
                          l3000 1C6D                            l3010 1C89                            l3002 1C70  
                          l3012 1C8F                            l3004 1C7E                            l3100 10D2  
                          l3020 1167                            l3014 1C92                            l3006 1C81  
                          l3110 10F9                            l3102 10D8                            l3016 1C97  
                          l3008 1C86                            l3200 1C0D                            l3120 1124  
                          l3112 1107                            l3104 10E7                            l3032 1325  
                          l3040 0CAA                            l3210 1E09                            l3202 1C13  
                          l3114 1111                            l3106 10E9                            l3026 1274  
                          l3018 1161                            l3050 0DA0                            l3042 0CB1  
                          l2500 1F8E                            l3212 1E23                            l3220 0816  
                          l3140 08A4                            l3116 1112                            l3108 10F0  
                          l3028 127A                            l3060 0E5C                            l3036 0CA4  
                          l3214 1E25                            l3206 1DD9                            l3230 0866  
                          l3222 0832                            l3302 1BAA                            l3310 00FE  
                          l3142 08AF                            l3134 1145                            l3126 112C  
                          l3118 111A                            l2510 1FA3                            l3054 0E28  
                          l3038 0CA8                            l3400 1DD2                            l3208 1DED  
                          l3232 08A0                            l3224 083A                            l3240 1B32  
                          l3304 1BAE                            l3320 012B                            l3312 0102  
                          l3160 08E5                            l3152 08C3                            l3136 1155  
                          l3128 113E                            l2600 1D7A                            l3080 1B64  
                          l2520 1FB4                            l2512 1FA5                            l2504 1F97  
                          l3072 0FD3                            l3048 0D99                            l2450 1B98  
                          l3402 1D0D                            l3410 1C18                            l3234 08A2  
                          l3226 083E                            l3218 0802                            l3242 1B34  
                          l3330 0154                            l3322 012E                            l3314 0112  
                          l3170 0918                            l3162 08EE                            l3154 08CB  
                          l3146 08B8                            l3090 10B8                            l2602 1D80  
                          l3082 1B6A                            l2530 1FCC                            l2522 1FBA  
                          l2514 1FA9                            l2506 1F9A                            l3066 0F44  
                          l3058 0E55                            l2452 1B9F                            l3404 1D10  
                          l3412 1C26                            l3420 00E2                            l3228 0862  
                          l2700 1623                            l3260 1061                            l3252 1043  
                          l3340 0187                            l3332 0164                            l3324 013B  
                          l3316 0122                            l3308 00F9                            l3172 0922  
                          l3180 093C                            l3164 0900                            l3156 08DC  
                          l2460 1C49                            l2604 1D81                            l2620 1CE7  
                          l2612 1CD3                            l3084 1B6C                            l3076 1B5D  
                          l2532 1FDD                            l2524 1FBD                            l2540 1FF1  
                          l2516 1FAE                            l2508 1F9E                            l3068 0F4B  
                          l3500 0219                            l2454 1BA6                            l2446 1B89  
                          l2470 1B6F                            l3406 1D2C                            l3414 1C33  
                          l3430 00E8                            l3422 00E4                            l3238 1B2A  
                          l2710 162D                            l2702 1625                            l3262 1065  
                          l3270 107F                            l3254 1056                            l3246 102F  
                          l3342 019D                            l3334 016F                            l3326 0142  
                          l3166 090E                            l3158 08DE                            l3094 10C1  
                          l2462 1C4D                            l2606 1D88                            l2622 1CEB  
                          l2614 1CD9                            l2630 1D08                            l3078 1B5E  
                          l2542 1FF6                            l2534 1FE3                            l2526 1FC4  
                          l2518 1FB2                            l2550 1E7C                            l3510 0247  
                          l3502 021B                            l3352 1B0E                            l3360 1B20  
                          l2448 1B8D                            l2472 1B72                            l3408 1D32  
                          l2480 1F31                            l3416 1C39                            l3440 00F1  
                          l3432 00E9                            l3424 00E5                            l2800 179A  
                          l2720 166A                            l2704 1627                            l2712 162F  
                          l2640 15B5                            l3280 109B                            l3256 1057  
                          l3248 103A                            l3192 1BF3                            l3344 01A2  
                          l3336 0173                            l3328 0146                            l3168 090F  
                          l3088 10A7                            l2464 1C5C                            l2456 1C40  
                          l2608 1D8E                            l2624 1CF5                            l2616 1CDC  
                          l2544 1FFB                            l2536 1FE4                            l2528 1FC8  
                          l2560 1E90                            l2552 1E80                            l3600 05A4  
                          l3520 027A                            l3512 024B                            l3370 1017  
                          l3354 1B13                            l3362 1B25                            l2474 1B78  
                          l2490 1F5E                            l2482 1F41                            l3442 00F2  
                          l3434 00EA                            l3426 00E6                            l3418 00DB  
                          l3450 1BD2                            l2810 17D8                            l2802 179F  
                          l2722 166C                            l2730 167E                            l2714 1630  
                          l2706 1629                            l2650 15C9                            l2642 15B6  
                          l2634 15A8                            l3258 105F                            l3290 1E43  
                          l3282 1E27                            l3194 1BF5                            l3346 01A6  
                          l3338 017D                            l3186 0943                            l3178 092A  
                          l2466 1C61                            l2458 1C42                            l2626 1CFB  
                          l2618 1CE3                            l2538 1FEB                            l2570 1EA8  
                          l2562 1E96                            l2554 1E85                            l3610 061C  
                          l3602 05A9                            l3530 02BF                            l3522 0293  
                          l3514 024F                            l3506 021F                            l3372 101C  
                          l3364 1001                            l3356 1B17                            l2476 1B7B  
                          l3380 1B42                            l2492 1F70                            l2484 1F44  
                          l3444 00F3                            l3436 00ED                            l3428 00E7  
                          l3460 1BE2                            l3452 1BD4                            l2820 17EF  
                          l2812 17DD                            l2804 17AD                            l2740 16AF  
                          l2732 168A                            l2724 1670                            l2716 1647  
                          l2708 162B                            l2660 15DD                            l2644 15BB  
                          l2652 15CB                            l2636 15AD                            l3276 1086  
                          l3268 106D                            l3292 1E55                            l3284 1E2F  
                          l3196 1BF9                            l3348 01A7                            l3188 0953  
                          l2900 0B0A                            l2628 1D02                            l2580 1ECA  
                          l2572 1EB2                            l2564 1E99                            l2556 1E87  
                          l2548 1E7B                            l3620 0647                            l3612 0620  
                          l3604 05E4                            l3540 02F5                            l3532 02C5  
                          l3524 0297                            l3516 025D                            l3508 023B  
                          l3700 1396                            l3374 1022                            l3366 1006  
                          l3358 1B1C                            l2478 1B84                            l3390 1DAF  
                          l3382 1D94                            l2494 1F7E                            l2486 1F51  
                          l3446 00F4                            l3438 00F0                            l3470 1BE7  
                          l3462 1BE3                            l3454 1BD8                            l2822 17F1  
                          l2814 17E5                            l2806 17B1                            l2750 16C4  
                          l2742 16B3                            l2734 168F                            l2726 1671  
                          l2718 1663                            l2670 15F0                            l2662 15E1  
                          l2654 15D3                            l2646 15C0                            l2638 15B1  
                          l3278 1096                            l3294 1E63                            l3286 1E32  
                          l3198 1C06                            l2910 0BBC                            l2902 0B35  
                          l2830 0961                            l2590 1D57                            l2582 1ECF  
                          l2574 1EB8                            l2566 1EA0                            l2558 1E8B  
                          l3630 0680                            l3622 0654                            l3614 0626  
                          l3606 0603                            l3550 039C                            l3542 0314  
                          l3534 02D8                            l3526 029B                            l3518 0261  
                          l3710 13E9                            l3702 139F                            l3376 102A  
                          l3368 100E                            l3384 1D99                            l3392 1DB6  
                          l2496 1F7F                            l2488 1F55                            l3472 1BE9  
                          l3464 1BE4                            l3456 1BDC                            l3448 1BCE  
                          l2824 17FA                            l2816 17EA                            l2808 17CF  
                          l2760 1727                            l2752 16C5                            l2744 16B7  
                          l2728 167A                            l2680 160D                            l2672 15F8  
                          l2664 15E5                            l2656 15D6                            l2648 15C8  
                          l3296 1E6C                            l3288 1E3F                            l2920 0BE1  
                          l2912 0BC5                            l2904 0B43                            l2840 0974  
                          l2832 0965                            l2592 1D5A                            l2576 1EBF  
                          l2568 1EA4                            l3632 06DB                            l3640 077A  
                          l3624 0659                            l3616 0633                            l3608 0615  
                          l3560 0424                            l3544 035F                            l3536 02EB  
                          l3528 02B4                            l3552 03A4                            l3480 01C1  
                          l3720 1423                            l3712 13F5                            l3704 13C7  
                          l3394 1DBC                            l3386 1DA6                            l2498 1F88  
                          l3466 1BE5                            l3458 1BE0                            l2826 17FE  
                          l2818 17EB                            l2770 175C                            l2762 172D  
                          l2754 16CE                            l2746 16BE                            l2738 1698  
                          l2690 1619                            l2682 1611                            l2674 15F9  
                          l2666 15E6                            l2658 15DC                            l3298 1E72  
                          l2930 0BF9                            l2922 0BEA                            l2914 0BD3  
                          l2906 0B6E                            l2850 098F                            l2842 097C  
                          l2834 0969                            l2594 1D61                            l2586 1D4F  
                          l2578 1EC5                            l3642 0782                            l3634 0716  
                          l3626 065E                            l3618 0642                            l3570 0486  
                          l3562 044B                            l3554 03B3                            l3546 0378  
                          l3538 02EF                            l3650 0798                            l3490 01D9  
                          l3482 01C6                            l3474 01B3                            l3730 1461  
                          l3722 1437                            l3714 1409                            l3706 13DB  
                          l3396 1DC9                            l3388 1DA9                            l3468 1BE6  
                          l2780 1777                            l2764 1732                            l2748 16C0  
                          l2756 16D3                            l2692 161B                            l2684 1613  
                          l2668 15EB                            l2676 15FB                            l2940 0C28  
                          l2932 0C0D                            l2916 0BDC                            l2924 0BF0  
                          l2908 0B94                            l2860 09A6                            l2852 0993  
                          l2844 097E                            l2836 096A                            l2828 095C  
                          l2596 1D65                            l2588 1D51                            l3660 07C7  
                          l3652 079E                            l3644 0787                            l3636 0735  
                          l3628 0662                            l3580 0501                            l3572 04A4  
                          l3564 045A                            l3556 03FA                            l3548 0381  
                          l3492 01DC                            l3484 01C8                            l3476 01B6  
                          l3740 1486                            l3732 1469                            l3724 1449  
                          l3716 140E                            l3708 13E0                            l3398 1DCC  
                          l2782 177A                            l2774 1765                            l2758 16E9  
                          l2766 1741                            l2790 1787                            l2694 161D  
                          l2686 1615                            l2678 1609                            l2950 0C63  
                          l2942 0C2C                            l2926 0BF4                            l2918 0BE0  
                          l2862 09A8                            l2854 0994                            l2846 0986  
                          l2838 096F                            l2598 1D69                            l3662 07C7  
                          l3654 07A6                            l3646 078B                            l3638 073F  
                          l3590 0552                            l3582 054E                            l3566 0475  
                          l3558 0409                            l3670 07EB                            l3494 01F1  
                          l3486 01D4                            l3478 01BC                            l3750 14A9  
                          l3742 1490                            l3734 1473                            l3726 1451  
                          l3718 1417                            l2792 1788                            l2784 177C  
                          l2776 176E                            l2768 1757                            l2696 161F  
                          l2688 1617                            l2960 0C8E                            l2952 0C72  
                          l2944 0C45                            l2936 0C15                            l2928 0BF5  
                          l2880 0A15                            l2872 09C3                            l2864 09B0  
                          l2856 0999                            l2848 098B                            l3664 07D5  
                          l3656 07B7                            l3648 0791                            l3584 0550  
                          l3576 04C3                            l3568 047E                            l3496 0204  
                          l3488 01D5                            l3760 14CC                            l3744 1496  
                          l3752 14B3                            l3736 1478                            l3728 145A  
                          l2970 1C9F                            l2794 178C                            l2786 1781  
                          l2778 1772                            l2698 1621                            l2962 0C8F  
                          l2954 0C7C                            l2938 0C1A                            l2946 0C4B  
                          l2890 0A8E                            l2882 0A3F                            l2874 09D1  
                          l2866 09B5                            l2858 099E                            l3658 07B8  
                          l3594 0589                            l3578 04CC                            l3850 0233  
                          l3498 0208                            l3770 1508                            l3754 14B9  
                          l3746 149C                            l3738 147E                            l3762 14D6  
                          l3690 1377                            l2980 1B35                            l2972 1CA2  
                          l2796 1792                            l2788 1783                            l2964 0C98  
                          l2956 0C7E                            l2948 0C58                            l2892 0AAB  
                          l2884 0A5B                            l2876 09DE                            l2868 09BA  
                          l3596 0593                            l3668 07DB                            l3780 154B  
                          l3764 14F1                            l3772 1519                            l3756 14BF  
                          l3748 14A1                            l3692 137C                            l2982 1B3B  
                          l2974 1CCF                            l2990 1EDA                            l2958 0C8A  
                          l2894 0AB9                            l2886 0A77                            l2878 09F9  
                          l3598 059F                            l3790 157A                            l3774 1534  
                          l3782 155C                            l3766 14F7                            l3758 14C4  
                          l3694 1381                            l2976 1CD0                            l2968 1C9B  
                          l2992 1EE3                            l2984 1B50                            l2896 0AD6  
                          l2888 0A80                            l3792 1582                            l3784 1563  
                          l3776 153A                            l3768 14FF                            l3696 1386  
                          l3688 1369                            l2978 1CD1                            l2994 1EF2  
                          l2986 1B5A                            l2898 0AED                            l3794 1588  
                          l3786 1569                            l3778 1542                            l3698 1391  
                          l2996 1EF8                            l2988 1ED4                            l3796 1590  
                          l3788 1571                            l2998 1C67                            l3798 1599  
                          STR_1 00A3                            STR_2 00C6                            STR_3 00BA  
                          STR_4 00CB                            STR_5 00D0                            STR_6 00B3  
                          STR_7 00D7                            STR_8 00C0                            STR_9 00D7  
                          u3000 1F9E                            u3001 1F9D                            u3010 1FA9  
                          u3011 1FA8                            u3020 1FBA                            u3100 1E80  
                          _IOCB 0096                            u3021 1FB9                            u3101 1E7F  
                          u3110 1E8B                            u3111 1E8A                            u3040 1FCC  
                          u3120 1E96                            u4001 0BAE                            u3041 1FCB  
                          u3121 1E95                            u4002 0BB5                            u3210 1D69  
                          u4003 0BBC                            u3211 1D68                            u3035 1FBE  
                          u4100 0C2C                            u3060 1FDD                            u3140 1EA8  
                          u4101 0C2B                            u3205 1D5B                            u3061 1FDC  
                          u3141 1EA7                            u4110 0C3B                            u4030 0BE0  
                          u3230 1D7A                            u3310 1D08                            u3150 1EB2  
                          u4031 0BDF                            u4015 0BBE                            u3231 1D79  
                          u3311 1D07                            u3055 1FCD                            u3151 1EB1  
                          u3135 1E9A                            u3400 160D                            u3320 15B5  
                          u5000 1E55                            u4120 0C58                            u3080 1FF1  
                          u3401 160C                            u3321 15B4                            u5001 1E54  
                          u4121 0C57                            u4025 0BD5                            u3225 1D6A  
                          u3305 1CFC                            u3081 1FF0                            u3065 1FD9  
                          u3410 1647                            u3330 15BB                            u4130 0C72  
                          u4050 0BF4                            u3250 1D8E                            u3090 1FF6  
                          u3170 1EC5                            u3411 1646                            u3331 15BA  
                          u4131 0C71                            u4115 0C36                            u4051 0BF3  
                          u3251 1D8D                            u3235 1D76                            u3091 1FF5  
                          u3075 1FE5                            u3171 1EC4                            u3155 1EAE  
                          u3420 1652                            u3340 15C0                            u5020 1E72  
                          u4140 0C8E                            u4060 0BF9                            u3260 1CD9  
                          u3180 1ECA                            u3501 16A1                            u3421 1650  
                          u3341 15BF                            u5021 1E71                            u5005 1E51  
                          u4141 0C8D                            u4125 0C54                            u4061 0BF8  
                          u4045 0BE3                            u3245 1D82                            u3261 1CD8  
                          u4205 1184                            u3181 1EC9                            u3165 1EB9  
                          u4150 1CB2                            u3510 16B3                            u3502 16A8  
                          u3430 1653                            u3350 15DC                            u5110 0173  
                          u5030 00FE                            u4070 0C0D                            u3190 1D57  
                          u4230 127A                            u3511 16B2                            u3503 16AF  
                          u3415 1643                            u3351 15DB                            u5015 1E64  
                          u5111 0172                            u5031 00FD                            u4135 0C6E  
                          u4071 0C0C                            u3191 1D56                            u4231 1279  
                          u4215 11DE                            u4160 1B3B                            u5200 1DBC  
                          u3600 175C                            u3520 16B7                            u3440 1663  
                          u3360 15E5                            u5120 0179                            u5040 0102  
                          u4080 0C14                            u3280 1CEB                            u4400 0F4B  
                          u4320 0DA0                            u4161 1B3A                            u5201 1DBB  
                          u3601 175B                            u3521 16B6                            u3441 1662  
                          u3361 15E4                            u5121 0178                            u5105 0168  
                          u5041 0101                            u4081 0C13                            u3281 1CEA  
                          u4225 1233                            u4401 0F4A                            u4321 0D9F  
                          u4305 0D0D                            u4170 1B41                            u3530 16C4  
                          u3450 1670                            u3370 15EB                            u5130 017D  
                          u5050 0122                            u4090 0C1A                            u3290 1CF5  
                          u4171 1B40                            u4155 1CAD                            u3531 16C3  
                          u3451 166F                            u3371 15EA                            u5131 017C  
                          u5051 0121                            u4091 0C19                            u3291 1CF4  
                          u3275 1CDD                            u4315 0D58                            u5220 1D1A  
                          u3700 17B1                            u3620 1772                            u3380 15F0  
                          u5140 0192                            u2900 1C4D                            u5300 024B  
                          u3701 17B0                            u3621 1771                            u3381 15EF  
                          u2901 1C4C                            u4245 1297                            u5301 024A  
                          u5230 1D3C                            u3710 17C0                            u3630 1777  
                          u3550 16E9                            u3470 1686                            u3390 1609  
                          u5150 01A2                            u5070 0141                            u4510 1120  
                          u4190 1167                            u4270 0CA8                            u5310 027A  
                          u5215 1DC2                            u3631 1776                            u3615 1767  
                          u3551 16E8                            u3471 1685                            u3391 1608  
                          u5151 01A1                            u5071 0140                            u4511 111F  
                          u3295 1CF1                            u4255 12E4                            u4191 1166  
                          u4415 0F5E                            u4335 0DB3                            u4271 0CA7  
                          u5311 0279                            u5240 1D4E                            u3720 17CF  
                          u3640 1781                            u3480 168A                            u5160 01A6  
                          u4600 08C1                            u4520 1124                            u2920 1C61  
                          u3800 0974                            u4440 1B64                            u4360 0E5C  
                          u4280 0CB1                            u5400 045A                            u5320 02B4  
                          u4185 1C73                            u5241 1D4D                            u3721 17CE  
                          u3641 1780                            u3561 1700                            u3553 16E5  
                          u3545 16C7                            u3481 1689                            u3465 1673  
                          u5161 01A5                            u5145 018D                            u5065 0133  
                          u4601 08C0                            u4521 1123                            u4505 1113  
                          u2921 1C60                            u3801 0973                            u4265 1330  
                          u4441 1B63                            u4425 0F9A                            u4361 0E5B  
                          u4345 0DEF                            u4281 0CB0                            u5401 0459  
                          u5321 02B3                            u5170 1022                            u2930 1F41  
                          u5250 1BEE                            u3730 17D8                            u3650 1787  
                          u3570 1714                            u3562 1701                            u3490 168F  
                          u5090 0163                            u4530 112B                            u3810 0993  
                          u4450 1B6A                            u5410 0475                            u5330 02EF  
                          u5171 1021                            u2931 1F40                            u5251 1BED  
                          u3731 17D7                            u3715 17BB                            u3651 1786  
                          u3571 1715                            u3563 1706                            u3491 168E  
                          u5091 0162                            u4531 112A                            u2915 1C54  
                          u3811 0992                            u4451 1B69                            u4435 0FD6  
                          u4355 0E2B                            u5411 0474                            u5331 02EE  
                          _PEIE 005E                            u2860 1B8D                            u5180 1D99  
                          u3740 17DD                            u3660 178C                            u3580 1732  
                          u3572 171A                            u3564 1707                            u4620 0900  
                          u4460 10B8                            u3820 0999                            u5500 0659  
                          u5340 0378                            u5260 01BC                            u2861 1B8C  
                          u5181 1D98                            u3741 17DC                            u3661 178B  
                          u3581 1731                            u3573 171B                            u3565 170C  
                          u5085 0155                            u4621 08FF                            u4461 10B7  
                          u3821 0998                            u5501 0658                            u5405 0456  
                          u5341 0377                            u5261 01BB                            u2870 1B98  
                          u2950 1F55                            u3750 17EA                            u3670 1792  
                          u3590 1757                            u3566 170D                            u4710 0953  
                          u4550 113D                            u4470 10D0                            u3830 099E  
                          u5430 0588                            u5350 039C                            u5270 01D4  
                          u2871 1B97                            u2951 1F54                            u3751 17E9  
                          u3671 1791                            u3591 1756                            u4711 0952  
                          u4615 08E7                            u4551 113C                            u4471 10CF  
                          u3911 0A9D                            u3831 099D                            u4375 0E7C  
                          u4295 0CD1                            u5431 0587                            u5351 039B  
                          u5271 01D3                            u2880 1B9F                            u4800 0832  
                          u3760 17EF                            u3680 1799                            u4720 1BF9  
                          u4640 091E                            u4560 1144                            u3912 0AA4  
                          u3840 09B5                            u5600 07EB                            u5440 0593  
                          u5360 03B3                            u5280 0218                            u2881 1B9E  
                          u2945 1F46                            u4801 0831                            u3761 17EE  
                          u3681 1798                            u4721 1BF8                            u4705 0945  
                          u4641 091D                            u4625 08FC                            u4561 1143  
                          u4545 112D                            u3921 0AC8                            u3913 0AAB  
                          u3905 0A79                            u3841 09B4                            u4385 0EB8  
                          u5601 07EA                            u5441 0592                            u5425 0555  
                          u5361 03B2                            u5281 0217                            u2890 1BA6  
                          u2970 1F70                            u4810 083E                            u3770 17FE  
                          u3690 179F                            u4650 0922                            u4490 1107  
                          u3922 0ACF                            u3850 09BA                            u5530 0781  
                          u5450 059F                            u5370 0409                            u5290 0247  
                          u5610 1461                            u2891 1BA5                            u5195 1D9F  
                          u2971 1F6F                            u4811 083D                            u3771 17FD  
                          u3691 179E                            u4651 0921                            u4635 0911  
                          u4491 1106                            u3923 0AD6                            u3851 09B9  
                          u4395 0F03                            u5531 0780                            u5515 06DE  
                          u5451 059E                            u5435 0584                            u5371 0408  
                          u5291 0246                            u5611 1460                            u4900 106C  
                          u4660 0929                            u4580 1155                            u3780 0969  
                          u5540 0797                            u5380 0424                            u5620 1478  
                          u2965 1F57                            u4821 084D                            u4901 106B  
                          u4661 0928                            u4581 1154                            u4485 10F2  
                          u3941 0AFC                            u3861 0A07                            u3781 0968  
                          u5541 0796                            u5525 0742                            u5381 0423  
                          u5365 03AF                            u5621 1477                            u2990 1F8E  
                          u4830 0866                            u4822 084E                            u4750 1C13  
                          u4590 08AF                            u3942 0B03                            u3862 0A0E  
                          u3790 096F                            u5550 079E                            u5470 0614  
                          u5390 044B                            u5630 1496                            u2991 1F8D  
                          u2975 1F6C                            u4831 0865                            u4823 0853  
                          u4751 1C12                            u4735 1C00                            u4591 08AE  
                          u4575 1147                            u4495 1103                            u3951 0B27  
                          u3943 0B0A                            u3935 0AD8                            u3871 0A23  
                          u3863 0A15                            u3791 096E                            u5551 079D  
                          u5471 0613                            u5391 044A                            u5375 0405  
                          u5631 1495                            u4760 1DED                            u4824 0854  
                          u4920 107E                            u4680 093B                            u3952 0B2E  
                          u3872 0A2A                            u5560 07A6                            u5480 0633  
                          u5640 14B9                            u2985 1F80                            u4761 1DEC  
                          u4841 0875                            u4825 0859                            u4921 107D  
                          u4745 1C07                            u4681 093A                            u3961 0B52  
                          u3953 0B35                            u3881 0A4D                            u3873 0A31  
                          u5561 07A5                            u5481 0632                            u5465 05AC  
                          u5641 14B8                            u4770 1E09                            u4850 08A0  
                          u4842 0876                            u4826 085A                            u4930 1085  
                          u4690 0942                            u3970 0B7A                            u3962 0B59  
                          u3882 0A54                            u5570 07B7                            u5490 0642  
                          u5650 14F1                            u4771 1E08                            u4851 089F  
                          u4843 087B                            u4931 1084                            u4915 106E  
                          u4691 0941                            u4675 092B                            u3963 0B60  
                          u3891 0A69                            u3883 0A5B                            u5571 07B6  
                          u5491 0641                            u5651 14F0                            u4780 1E23  
                          u4844 087C                            u4860 1B32                            u3892 0A70  
                          u5580 07C7                            u5660 1534                            u4781 1E22  
                          u4845 0881                            u4861 1B31                            u3981 0B86  
                          u3893 0A77                            u5581 07C6                            u5485 062F  
                          u5661 1533                            u5717 1371                            u4846 0882  
                          u4790 0816                            u4950 1096                            u4870 103A  
                          u3990 0BA2                            u3982 0B8D                            u5590 07D5  
                          u5670 1563                            u5807 1C94                            u4855 089C  
                          u4791 0815                            u4951 1095                            u4871 1039  
                          u3983 0B94                            u3975 0B75                            u5591 07D4  
                          u5575 07B3                            u5495 063E                            u5671 1562  
                          u5727 13D4                            u4960 109B                            u4880 1051  
                          u5680 1582                            u5817 1B7F                            u4785 1E1F  
                          u4961 109A                            u4945 1088                            u5585 07C3  
                          u5681 1581                            u5737 1402                            u4890 1065  
                          u4970 1E2F                            u4891 1064                            u4971 1E2E  
                          u3995 0B9D                            u5747 1430                            u4885 104C  
                          u5757 159F                            u4990 1E43                            u5767 1EDE  
                          u4991 1E42                            u5777 1EED                            u4985 1E34  
                          u5787 1EFC                            u5797 1C83                            _TMR1 000E  
                          _main 1369          _Lcd_Write_String_4bits 1D0D                            btemp 007E  
                          start 0000                    _sprintf$1369 00AA                ?_I2C_Master_Init 0020  
              ?_I2C_Master_Read 0070                ?_I2C_Master_Wait 0070                ?_I2C_Master_Stop 0070  
                 ___fltol@sign1 0059                 __end_of___fladd 1800                           ?_main 0070  
             ??_Lcd_Clear_4bits 0074                 __end_of___awdiv 2000                 __end_of___flneg 1B35  
                         STR_10 00D5                           STR_11 00D5                 __end_of___awmod 1ED4  
               __end_of___flmul 0CA1                 __end_of___flsub 1BCE                 __end_of___fltol 10A7  
                         _ANSEL 0188                 __end_of___lldiv 1F97                 ___awdiv@divisor 0077  
               __end_of___llmod 1E7B                 __end_of___lwdiv 1D93                 __end_of___lwmod 1D0D  
               ___awdiv@counter 0020                           _PORTA 0005                           _PORTB 0006  
                         _PORTD 0008                           _TRISA 0085                           _TRISB 0086  
                         _TRISD 0088                           _SSPIE 0463                           _SSPIF 0063  
         __end_of_Lcd_Cmd_4bits 1B88                 __end_of_dpowers 00A3                           _color 00CE  
                         _linea 00CD                           _scale 0CA1                 __end_of_isdigit 1B6E  
                         _setup 1C18                           pclath 000A                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 07F0                 __initialization 07F0  
                  __end_of_main 15A8                          ??_main 00C3               ?_I2C_Master_Start 0070  
             ?_I2C_Master_Write 0070              ??_I2C_Master_Start 0070              ??_I2C_Master_Write 0072  
              ___llmod@dividend 0074                          ?_scale 003E                          _CCPR1L 0015  
                        _CCPR2L 001B                ___awdiv@dividend 0079                          ?_setup 0070  
                        _ANSELH 0189                          _SSPADD 0093                          _TRISC3 043B  
                        _TRISC4 043C                          _SSPCON 0014                          _SSPBUF 0013  
              __end_of___xxtofl 01B0        Lcd_Write_Char_4bits@temp 0072                __end_of__powers_ 0047  
                        ___flge 0802                          ___fleq 1DD9                       ??___fladd 005A  
                        ___wmul 1BF3                       ??___awdiv 007B                       ??___flneg 0074  
                     ??___awmod 0074                       ??___flmul 002C                       ??___flsub 007E  
                     ??___fltol 0055                       ??___lldiv 0078                       ??___llmod 0078  
                     ??___lwdiv 007A                       ??___lwmod 0074                          _fround 115E  
              ___awdiv@quotient 0022                 ___awmod@divisor 0070                 ___awmod@counter 0075  
                  ?_setupINTOSC 0070                       ??_isdigit 0070                __end_of_setupPWM 1BF3  
                _Lcd_Init_4bits 1ED4                       ??_sprintf 00A5                      ___flge@ff1 0070  
                    ___flge@ff2 0074                    ___xxtofl@arg 0022                    ___xxtofl@exp 0021  
                  ___xxtofl@val 0076                      ___fleq@ff1 0070                      ___fleq@ff2 0074  
       __end_of__initialization 07FC                      ___flneg@f1 0070                      ___fltol@f1 0051  
                __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074           Lcd_Write_Char_4bits@y 0073  
                 __end_of_scale 1000                   __end_of_setup 1C3F                      __div_to_l_ 08A4  
                _OPTION_REGbits 0081          __end_of_Lcd_Init_4bits 1F31                 __div_to_l_@exp1 0025  
               __div_to_l_@cntr 0024                         ??_scale 0042                 __div_to_l_@quot 0020  
       ?_Lcd_Write_String_4bits 0075                         ??_setup 007E                      __pbssBANK0 006E  
                    __pbssBANK1 00C7                  _Lcd_Port_4bits 1B88                   __div_to_l_@f1 0070  
                 __div_to_l_@f2 0074               __end_of__Umul8_16 1C66                 _Lcd_Clear_4bits 1B42  
                    __pmaintext 1369                         ?___flge 0070                         ?___fleq 0070  
                       ?___wmul 0070                         ?_fround 003E                       ?___xxtofl 0076  
  __end_of_Lcd_Write_Char_4bits 1C9B                 Lcd_Port_4bits@a 0070                 ?_Lcd_Init_4bits 0070  
__end_of_Lcd_Write_String_4bits 1D4F                         _SSPCON2 0091                         _SSPSTAT 0094  
                    __stringtab 0003          __end_of_Lcd_Port_4bits 1BAA               __end_of__npowers_ 007B  
                    _scale$1368 004C                       ?_setupPWM 0070                         ___fladd 15A8  
                       ___awdiv 1F97                         ___flneg 1B2A                         ___awmod 1E7B  
                       ___flmul 095C                         ___flsub 1BAA                         ___fltol 102F  
                       ___lldiv 1F31                         ___llmod 1E27                         ___lwdiv 1D4F  
                       ___lwmod 1CD3                         __ptext1 01B0                         __ptext2 0CA1  
                       __ptext3 1E7B                         __ptext4 1F97                         __ptext5 1B5C  
                       __ptext6 115E                         __ptext7 1CD3                         __ptext8 1D4F  
                       __ptext9 095C                       _T1CONbits 0010                     ?__div_to_l_ 0070  
                       _dpowers 007B                       _T2CONbits 0012                         _isdigit 1B5C  
                    ??___xxtofl 007A                ___awmod@dividend 0072    __end_of_Lcd_Set_Cursor_4bits 1DD9  
                       _sprintf 01B0                         clrloop0 1B07            end_of_initialization 07FC  
               ?_Lcd_Port_4bits 0070         __end_of_Lcd_Clear_4bits 1B4F                 ___lldiv@divisor 0070  
               ___lldiv@counter 007D                      ??_setupPWM 0070                I2C_Master_Init@c 0020  
              I2C_Master_Read@a 0070                  __tdiv_to_l_@f1 0070                  __tdiv_to_l_@f2 0074  
                 ?_setupMotores 0070                   ??__tdiv_to_l_ 0078                    _distanciaLCD 00CF  
                     _PORTAbits 0005                       _PORTDbits 0008                     ___fladd@grs 0065  
                 ___xxtofl@sign 0020                       _TRISAbits 0085                       _TRISCbits 0087  
                   ___flmul@grs 0032                     _CCP1CONbits 0017                     _CCP2CONbits 001D  
          _Lcd_Write_Char_4bits 1C66                  __end_of___flge 08A4                  __end_of___fleq 1E27  
                ??_setupMotores 0070                  __end_of___wmul 1C18                  __end_of_fround 1369  
           start_initialization 07F0             __end_of__tdiv_to_l_ 115E                   _Lcd_Cmd_4bits 1B6E  
         Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074           Lcd_Set_Cursor_4bits@y 0078  
         Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070               ??_I2C_Master_Init 0024  
             ??_I2C_Master_Read 0072               ??_I2C_Master_Wait 0070               ??_I2C_Master_Stop 0070  
               ___llmod@divisor 0070                 ___llmod@counter 0079           ?_Lcd_Write_Char_4bits 0070  
                      ??___flge 0078                        ??___fleq 0078                        ??___wmul 0074  
      Lcd_Set_Cursor_4bits@temp 0079            _Lcd_Set_Cursor_4bits 1D93                       __Umul8_16 1C3F  
                      ??_fround 0042                ??_Lcd_Init_4bits 0074                   sprintf@tmpval 00B7  
                     ___fladd@a 0056                       ___fladd@b 0052                      fround@prec 0051  
                     ___flmul@a 0028                       ___flmul@b 0024                       ___flsub@a 0066  
                     ___flsub@b 006A                       ___latbits 0002                   __pcstackBANK0 0020  
                 __pcstackBANK1 00A0                  ?_Lcd_Cmd_4bits 0070                    _isdigit$1155 0070  
                   sprintf@flag 00AF                     sprintf@eexp 00B5                     sprintf@fval 00BE  
                   sprintf@prec 00BC                _I2C_Master_Start 1B0E                _I2C_Master_Write 1B20  
              ___lwdiv@dividend 0078                        ?___fladd 0052           ?_Lcd_Set_Cursor_4bits 0074  
                      ?___awdiv 0077                        ?___flneg 0070                        ?___awmod 0070  
                      ?___flmul 0024                        ?___flsub 0066                        ?___fltol 0051  
                      ?___lldiv 0070                        ?___llmod 0070                       __npowers_ 0047  
                    ?__Umul8_16 0070                        ?___lwdiv 0076                        ?___lwmod 0070  
                     __pstrings 0003                     __tdiv_to_l_ 10A7                       _distancia 00C7  
                  ??__div_to_l_ 0078                        ?_isdigit 0070                ??_Lcd_Port_4bits 0070  
              ___lwdiv@quotient 007B                        ?_sprintf 00A0            __end_of_setupMotores 00F6  
                ___wmul@product 0074                       clear_ram0 1B06          ??_Lcd_Write_Char_4bits 0071  
                      _PIR1bits 000C              __end_of__div_to_l_ 095C                       _velocidad 00CB  
                   __stringbase 0012                   ??_setupINTOSC 0070               ___wmul@multiplier 0070  
               ??_Lcd_Cmd_4bits 0071                        _WPUBbits 0095             I2C_Master_Read@temp 0074  
       Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A          ??_Lcd_Set_Cursor_4bits 0075  
                   ??__Umul8_16 0072                     _fround$1366 004D                     _fround$1367 0049  
            __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077                  Lcd_Cmd_4bits@a 0073  
                    sprintf@val 00B1                 _I2C_Master_Init 1C9B                 _I2C_Master_Read 1001  
                      ___xxtofl 00F6                 _I2C_Master_Wait 1B35                 _I2C_Master_Stop 1B17  
               ___lwdiv@divisor 0076                 ___lwdiv@counter 007D                        __ptext10 1C3F  
                      __ptext11 10A7                        __ptext20 0802                        __ptext12 08A4  
                      __ptext21 1DD9                        __ptext13 00F6                        __ptext30 1C66  
                      __ptext22 1BCE                        __ptext14 1BF3                        __ptext31 1D93  
                      __ptext23 00DB                        __ptext15 1E27                        __ptext32 1B42  
                      __ptext24 1C18                        __ptext16 102F                        __ptext33 1B6E  
                      __ptext25 1B4F                        __ptext17 1BAA                        __ptext34 1B88  
                      __ptext26 1ED4                        __ptext18 15A8                        __ptext35 1B20  
                      __ptext27 1C9B                        __ptext19 1B2A                        __ptext36 1B17  
                      __ptext28 1F31                        __ptext37 1B0E                        __ptext29 1D0D  
                      __ptext38 1001                        __ptext39 1B35             __end_of_setupINTOSC 1B5C  
                      __powers_ 0013                        _setupPWM 1BCE        __end_of_I2C_Master_Start 1B17  
      __end_of_I2C_Master_Write 1B2A                        isdigit@c 0071                        scale@scl 0050  
                     sprintf@ap 00AE                __tdiv_to_l_@exp1 0025                __tdiv_to_l_@cntr 0024  
                     sprintf@sp 00BB                __tdiv_to_l_@quot 0020                ___lwmod@dividend 0072  
              ___lldiv@dividend 0074                       stringcode 000D                      _OSCCONbits 008F  
       __end_of_I2C_Master_Init 1CD3         __end_of_I2C_Master_Read 102F         __end_of_I2C_Master_Wait 1B42  
       __end_of_I2C_Master_Stop 1B20                    _setupMotores 00DB                    ?__tdiv_to_l_ 0070  
        __Umul8_16@multiplicand 0070                     _setupINTOSC 1B4F                        sprintf@c 00C2  
                      sprintf@f 00A0                    setupINTOSC@F 0071                ___lldiv@quotient 0079  
             I2C_Master_Write@d 0070                 ___lwmod@divisor 0070                 ___lwmod@counter 0075  
                      stringdir 000D                        stringtab 0003                     _SSPCON2bits 0091  
                 ___fladd@signs 0062                    ___fladd@aexp 0063                    ___fladd@bexp 0064  
          __Umul8_16@multiplier 0078               __Umul8_16@product 0074  

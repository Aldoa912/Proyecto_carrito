

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 22:53:27 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381                           
   382                           	psect	strings
   383     0800                     __pstrings:
   384     0800                     stringtab:
   385     0800                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388     0800  1BFF               	btfsc	btemp+1,7
   389     0801  280A               	ljmp	stringcode
   390     0802  1383               	bcf	3,7
   391     0803  187F               	btfsc	btemp+1,0
   392     0804  1783               	bsf	3,7
   393     0805  0800               	movf	0,w
   394     0806  0A84               	incf	4,f
   395     0807  1903               	skipnz
   396     0808  0AFF               	incf	btemp+1,f
   397     0809  0008               	return
   398     080A                     stringcode:
   399     080A                     stringdir:
   400     080A  3008               	movlw	high stringdir
   401     080B  008A               	movwf	10
   402     080C  0804               	movf	4,w
   403     080D  0A84               	incf	4,f
   404     080E  0782               	addwf	2,f
   405     080F                     __stringbase:
   406     080F  3400               	retlw	0
   407     0810                     __end_of__stringtab:
   408     0810                     _dpowers:
   409     0810  3401               	retlw	1
   410     0811  3400               	retlw	0
   411     0812  3400               	retlw	0
   412     0813  3400               	retlw	0
   413     0814  340A               	retlw	10
   414     0815  3400               	retlw	0
   415     0816  3400               	retlw	0
   416     0817  3400               	retlw	0
   417     0818  3464               	retlw	100
   418     0819  3400               	retlw	0
   419     081A  3400               	retlw	0
   420     081B  3400               	retlw	0
   421     081C  34E8               	retlw	232
   422     081D  3403               	retlw	3
   423     081E  3400               	retlw	0
   424     081F  3400               	retlw	0
   425     0820  3410               	retlw	16
   426     0821  3427               	retlw	39
   427     0822  3400               	retlw	0
   428     0823  3400               	retlw	0
   429     0824  34A0               	retlw	160
   430     0825  3486               	retlw	134
   431     0826  3401               	retlw	1
   432     0827  3400               	retlw	0
   433     0828  3440               	retlw	64
   434     0829  3442               	retlw	66
   435     082A  340F               	retlw	15
   436     082B  3400               	retlw	0
   437     082C  3480               	retlw	128
   438     082D  3496               	retlw	150
   439     082E  3498               	retlw	152
   440     082F  3400               	retlw	0
   441     0830  3400               	retlw	0
   442     0831  34E1               	retlw	225
   443     0832  34F5               	retlw	245
   444     0833  3405               	retlw	5
   445     0834  3400               	retlw	0
   446     0835  34CA               	retlw	202
   447     0836  349A               	retlw	154
   448     0837  343B               	retlw	59
   449     0838                     __end_of_dpowers:
   450     000E                     _TMR1	set	14
   451     0005                     _PORTAbits	set	5
   452     0010                     _T1CONbits	set	16
   453     0008                     _PORTDbits	set	8
   454     0008                     _PORTD	set	8
   455     0041                     _RD1	set	65
   456     0040                     _RD0	set	64
   457     0043                     _RD3	set	67
   458     0047                     _RD7	set	71
   459     0046                     _RD6	set	70
   460     0045                     _RD5	set	69
   461     0044                     _RD4	set	68
   462     008F                     _OSCCONbits	set	143
   463     0085                     _TRISA	set	133
   464     0088                     _TRISD	set	136
   465     0189                     _ANSELH	set	393
   466     0188                     _ANSEL	set	392
   467     0838                     STR_1:
   468     0838  3443               	retlw	67	;'C'
   469     0839  344F               	retlw	79	;'O'
   470     083A  344C               	retlw	76	;'L'
   471     083B  344F               	retlw	79	;'O'
   472     083C  3452               	retlw	82	;'R'
   473     083D  343A               	retlw	58	;':'
   474     083E  3400               	retlw	0
   475     083F                     STR_2:
   476     083F  3456               	retlw	86	;'V'
   477     0840  3445               	retlw	69	;'E'
   478     0841  3452               	retlw	82	;'R'
   479     0842  3444               	retlw	68	;'D'
   480     0843  3445               	retlw	69	;'E'
   481     0844  3400               	retlw	0
   482     0845                     STR_5:
   483     0845  344E               	retlw	78	;'N'
   484     0846  3441               	retlw	65	;'A'
   485     0847  3444               	retlw	68	;'D'
   486     0848  3441               	retlw	65	;'A'
   487     0849  3400               	retlw	0
   488     084A                     STR_3:
   489     084A  3441               	retlw	65	;'A'
   490     084B  345A               	retlw	90	;'Z'
   491     084C  3455               	retlw	85	;'U'
   492     084D  344C               	retlw	76	;'L'
   493     084E  3400               	retlw	0
   494     084F                     STR_4:
   495     084F  3452               	retlw	82	;'R'
   496     0850  344F               	retlw	79	;'O'
   497     0851  344A               	retlw	74	;'J'
   498     0852  344F               	retlw	79	;'O'
   499     0853  3400               	retlw	0
   500     0854                     STR_6:
   501     0854  3425               	retlw	37	;'%'
   502     0855  346C               	retlw	108	;'l'
   503     0856  3475               	retlw	117	;'u'
   504     0857  3400               	retlw	0
   505     0854                     
   506                           	psect	cinit
   507     07F3                     start_initialization:	
   508                           ; #config settings
   509                           
   510     07F3                     __initialization:
   511                           
   512                           ; Clear objects allocated to BANK0
   513     07F3  1383               	bcf	3,7	;select IRP bank0
   514     07F4  3050               	movlw	low __pbssBANK0
   515     07F5  0084               	movwf	4
   516     07F6  306D               	movlw	low (__pbssBANK0+29)
   517     07F7  120A  158A  243B  120A  118A  	fcall	clear_ram0
   518     07FC                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521     07FC                     __end_of__initialization:
   522     07FC  0183               	clrf	3
   523     07FD  120A  118A  2A2E   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	bssBANK0
   526     0050                     __pbssBANK0:
   527     0050                     _green_freq:
   528     0050                     	ds	4
   529     0054                     _blue_freq:
   530     0054                     	ds	4
   531     0058                     _red_freq:
   532     0058                     	ds	4
   533     005C                     _cont:
   534     005C                     	ds	3
   535     005F                     _estado:
   536     005F                     	ds	2
   537     0061                     _verde:
   538     0061                     	ds	4
   539     0065                     _azul:
   540     0065                     	ds	4
   541     0069                     _rojo:
   542     0069                     	ds	4
   543                           
   544                           	psect	clrtext
   545     0C3B                     clear_ram0:	
   546                           ;	Called with FSR containing the base address, and
   547                           ;	W with the last address+1
   548                           
   549     0C3B  0064               	clrwdt	;clear the watchdog before getting into this loop
   550     0C3C                     clrloop0:
   551     0C3C  0180               	clrf	0	;clear RAM location pointed to by FSR
   552     0C3D  0A84               	incf	4,f	;increment pointer
   553     0C3E  0604               	xorwf	4,w	;XOR with final address
   554     0C3F  1903               	btfsc	3,2	;have we reached the end yet?
   555     0C40  3400               	retlw	0	;all done for this memory range, return
   556     0C41  0604               	xorwf	4,w	;XOR again to restore value
   557     0C42  2C3C               	goto	clrloop0	;do the next byte
   558                           
   559                           	psect	cstackCOMMON
   560     0070                     __pcstackCOMMON:
   561     0070                     ?_setup:
   562     0070                     ??_setup:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_Lcd_Init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_config_TCS230:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_config_TCS230:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_Lcd_Clear:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_main:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_Lcd_Port:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ??_Lcd_Port:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_Lcd_Cmd:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_Lcd_Write_Char:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?__Umul8_16:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?___lldiv:	
   596                           ; 2 bytes @ 0x0
   597                           
   598     0070                     ?___xxtofl:	
   599                           ; 4 bytes @ 0x0
   600                           
   601     0070                     Lcd_Port@a:	
   602                           ; 4 bytes @ 0x0
   603                           
   604     0070                     __Umul8_16@multiplicand:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ___lldiv@divisor:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ___xxtofl@val:	
   611                           ; 4 bytes @ 0x0
   612                           
   613                           
   614                           ; 4 bytes @ 0x0
   615     0070                     	ds	1
   616     0071                     ??_Lcd_Cmd:
   617     0071                     ??_Lcd_Write_Char:	
   618                           ; 1 bytes @ 0x1
   619                           
   620                           
   621                           ; 1 bytes @ 0x1
   622     0071                     	ds	1
   623     0072                     ??__Umul8_16:
   624     0072                     Lcd_Write_Char@temp:	
   625                           ; 1 bytes @ 0x2
   626                           
   627                           
   628                           ; 1 bytes @ 0x2
   629     0072                     	ds	1
   630     0073                     Lcd_Cmd@a:
   631     0073                     Lcd_Write_Char@y:	
   632                           ; 1 bytes @ 0x3
   633                           
   634                           
   635                           ; 1 bytes @ 0x3
   636     0073                     	ds	1
   637     0074                     ??_Lcd_Init:
   638     0074                     ??_Lcd_Clear:	
   639                           ; 1 bytes @ 0x4
   640                           
   641     0074                     ?_Lcd_Set_Cursor:	
   642                           ; 1 bytes @ 0x4
   643                           
   644     0074                     ??___xxtofl:	
   645                           ; 1 bytes @ 0x4
   646                           
   647     0074                     Lcd_Set_Cursor@b:	
   648                           ; 1 bytes @ 0x4
   649                           
   650     0074                     Lcd_Write_Char@a:	
   651                           ; 1 bytes @ 0x4
   652                           
   653     0074                     __Umul8_16@product:	
   654                           ; 1 bytes @ 0x4
   655                           
   656     0074                     ___lldiv@dividend:	
   657                           ; 2 bytes @ 0x4
   658                           
   659                           
   660                           ; 4 bytes @ 0x4
   661     0074                     	ds	1
   662     0075                     ??_Lcd_Set_Cursor:
   663     0075                     ?_Lcd_Write_String:	
   664                           ; 1 bytes @ 0x5
   665                           
   666     0075                     Lcd_Write_String@a:	
   667                           ; 1 bytes @ 0x5
   668                           
   669                           
   670                           ; 2 bytes @ 0x5
   671     0075                     	ds	1
   672     0076                     Lcd_Set_Cursor@a:
   673     0076                     __Umul8_16@word_mpld:	
   674                           ; 1 bytes @ 0x6
   675                           
   676                           
   677                           ; 2 bytes @ 0x6
   678     0076                     	ds	1
   679     0077                     ??_Lcd_Write_String:
   680     0077                     Lcd_Set_Cursor@z:	
   681                           ; 1 bytes @ 0x7
   682                           
   683                           
   684                           ; 1 bytes @ 0x7
   685     0077                     	ds	1
   686     0078                     ??___lldiv:
   687     0078                     Lcd_Set_Cursor@y:	
   688                           ; 1 bytes @ 0x8
   689                           
   690     0078                     __Umul8_16@multiplier:	
   691                           ; 1 bytes @ 0x8
   692                           
   693     0078                     ___xxtofl@sign:	
   694                           ; 1 bytes @ 0x8
   695                           
   696                           
   697                           ; 1 bytes @ 0x8
   698     0078                     	ds	1
   699     0079                     Lcd_Set_Cursor@temp:
   700     0079                     ___xxtofl@exp:	
   701                           ; 1 bytes @ 0x9
   702                           
   703     0079                     ___lldiv@quotient:	
   704                           ; 1 bytes @ 0x9
   705                           
   706                           
   707                           ; 4 bytes @ 0x9
   708     0079                     	ds	1
   709     007A                     Lcd_Write_String@i:
   710     007A                     ___xxtofl@arg:	
   711                           ; 2 bytes @ 0xA
   712                           
   713                           
   714                           ; 4 bytes @ 0xA
   715     007A                     	ds	3
   716     007D                     ___lldiv@counter:
   717                           
   718                           ; 1 bytes @ 0xD
   719     007D                     	ds	1
   720                           
   721                           	psect	cstackBANK0
   722     0020                     __pcstackBANK0:
   723     0020                     ?___llmod:
   724     0020                     ?___flmul:	
   725                           ; 4 bytes @ 0x0
   726                           
   727     0020                     ___llmod@divisor:	
   728                           ; 4 bytes @ 0x0
   729                           
   730     0020                     ___flmul@b:	
   731                           ; 4 bytes @ 0x0
   732                           
   733                           
   734                           ; 4 bytes @ 0x0
   735     0020                     	ds	4
   736     0024                     ___llmod@dividend:
   737     0024                     ___flmul@a:	
   738                           ; 4 bytes @ 0x4
   739                           
   740                           
   741                           ; 4 bytes @ 0x4
   742     0024                     	ds	4
   743     0028                     ??___llmod:
   744     0028                     ??___flmul:	
   745                           ; 1 bytes @ 0x8
   746                           
   747                           
   748                           ; 1 bytes @ 0x8
   749     0028                     	ds	1
   750     0029                     ___llmod@counter:
   751                           
   752                           ; 1 bytes @ 0x9
   753     0029                     	ds	1
   754     002A                     ?_sprintf:
   755     002A                     sprintf@f:	
   756                           ; 2 bytes @ 0xA
   757                           
   758                           
   759                           ; 1 bytes @ 0xA
   760     002A                     	ds	3
   761     002D                     ___flmul@sign:
   762                           
   763                           ; 1 bytes @ 0xD
   764     002D                     	ds	1
   765     002E                     ___flmul@grs:
   766                           
   767                           ; 4 bytes @ 0xE
   768     002E                     	ds	1
   769     002F                     ??_sprintf:
   770                           
   771                           ; 1 bytes @ 0xF
   772     002F                     	ds	3
   773     0032                     ___flmul@aexp:
   774                           
   775                           ; 1 bytes @ 0x12
   776     0032                     	ds	1
   777     0033                     ___flmul@bexp:
   778                           
   779                           ; 1 bytes @ 0x13
   780     0033                     	ds	1
   781     0034                     sprintf@flag:
   782     0034                     ___flmul@prod:	
   783                           ; 1 bytes @ 0x14
   784                           
   785                           
   786                           ; 4 bytes @ 0x14
   787     0034                     	ds	1
   788     0035                     sprintf@prec:
   789                           
   790                           ; 2 bytes @ 0x15
   791     0035                     	ds	2
   792     0037                     sprintf@val:
   793                           
   794                           ; 4 bytes @ 0x17
   795     0037                     	ds	1
   796     0038                     ___flmul@temp:
   797                           
   798                           ; 2 bytes @ 0x18
   799     0038                     	ds	2
   800     003A                     ?___fltol:
   801     003A                     ___fltol@f1:	
   802                           ; 4 bytes @ 0x1A
   803                           
   804                           
   805                           ; 4 bytes @ 0x1A
   806     003A                     	ds	1
   807     003B                     sprintf@ap:
   808                           
   809                           ; 1 bytes @ 0x1B
   810     003B                     	ds	1
   811     003C                     sprintf@sp:
   812                           
   813                           ; 1 bytes @ 0x1C
   814     003C                     	ds	1
   815     003D                     sprintf@c:
   816                           
   817                           ; 1 bytes @ 0x1D
   818     003D                     	ds	1
   819     003E                     ??___fltol:
   820                           
   821                           ; 1 bytes @ 0x1E
   822     003E                     	ds	4
   823     0042                     ___fltol@sign1:
   824                           
   825                           ; 1 bytes @ 0x22
   826     0042                     	ds	1
   827     0043                     ___fltol@exp1:
   828                           
   829                           ; 1 bytes @ 0x23
   830     0043                     	ds	1
   831     0044                     ?_read_red:
   832     0044                     ?_read_green:	
   833                           ; 4 bytes @ 0x24
   834                           
   835     0044                     ?_read_blue:	
   836                           ; 4 bytes @ 0x24
   837                           
   838                           
   839                           ; 4 bytes @ 0x24
   840     0044                     	ds	4
   841     0048                     ??_read_red:
   842     0048                     ??_read_green:	
   843                           ; 1 bytes @ 0x28
   844                           
   845     0048                     ??_read_blue:	
   846                           ; 1 bytes @ 0x28
   847                           
   848                           
   849                           ; 1 bytes @ 0x28
   850     0048                     	ds	1
   851     0049                     read_red@temp_freq:
   852     0049                     read_green@temp_freq:	
   853                           ; 4 bytes @ 0x29
   854                           
   855     0049                     read_blue@temp_freq:	
   856                           ; 4 bytes @ 0x29
   857                           
   858                           
   859                           ; 4 bytes @ 0x29
   860     0049                     	ds	4
   861     004D                     ??_main:
   862                           
   863                           ; 1 bytes @ 0x2D
   864     004D                     	ds	3
   865                           
   866                           	psect	maintext
   867     022E                     __pmaintext:	
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 51 in file "main.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : B00/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       3       0       0       0
   890 ;;      Totals:         0       3       0       0       0
   891 ;;Total ram usage:        3 bytes
   892 ;; Hardware stack levels required when called: 3
   893 ;; This function calls:
   894 ;;		_Lcd_Clear
   895 ;;		_Lcd_Init
   896 ;;		_Lcd_Set_Cursor
   897 ;;		_Lcd_Write_String
   898 ;;		_config_TCS230
   899 ;;		_read_blue
   900 ;;		_read_green
   901 ;;		_read_red
   902 ;;		_setup
   903 ;;		_sprintf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909     022E                     _main:	
   910                           ;psect for function _main
   911                           
   912     022E                     l1884:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   915                           
   916                           
   917                           ;main.c: 52:     setup();
   918     022E  120A  158A  245A  120A  118A  	fcall	_setup
   919     0233                     l1886:
   920                           
   921                           ;main.c: 53:     TRISD = 0x00;
   922     0233  1683               	bsf	3,5	;RP0=1, select bank1
   923     0234  1303               	bcf	3,6	;RP1=0, select bank1
   924     0235  0188               	clrf	8	;volatile
   925     0236                     l1888:
   926                           
   927                           ;main.c: 54:     Lcd_Init();
   928     0236  120A  158A  259C  120A  118A  	fcall	_Lcd_Init
   929     023B                     l1890:
   930                           
   931                           ;main.c: 55:     config_TCS230();
   932     023B  120A  158A  2443  120A  118A  	fcall	_config_TCS230
   933     0240                     l1892:
   934                           
   935                           ;main.c: 58:   {;main.c: 60:     Lcd_Clear();
   936     0240  120A  158A  244D  120A  118A  	fcall	_Lcd_Clear
   937     0245                     l1894:
   938                           
   939                           ;main.c: 61:     Lcd_Set_Cursor(1,1);
   940     0245  01F4               	clrf	Lcd_Set_Cursor@b
   941     0246  0AF4               	incf	Lcd_Set_Cursor@b,f
   942     0247  3001               	movlw	1
   943     0248  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
   944     024D                     l1896:
   945                           
   946                           ;main.c: 62:     Lcd_Write_String("COLOR:");
   947     024D  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   948     024E  00F5               	movwf	Lcd_Write_String@a
   949     024F  3080               	movlw	128
   950     0250  00F6               	movwf	Lcd_Write_String@a+1
   951     0251  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
   952     0256                     l1898:
   953                           
   954                           ;main.c: 64:     red_freq = read_red();
   955     0256  120A  158A  26BF  120A  118A  	fcall	_read_red
   956     025B  1283               	bcf	3,5	;RP0=0, select bank0
   957     025C  1303               	bcf	3,6	;RP1=0, select bank0
   958     025D  0847               	movf	?_read_red+3,w
   959     025E  00DB               	movwf	_red_freq+3
   960     025F  0846               	movf	?_read_red+2,w
   961     0260  00DA               	movwf	_red_freq+2
   962     0261  0845               	movf	?_read_red+1,w
   963     0262  00D9               	movwf	_red_freq+1
   964     0263  0844               	movf	?_read_red,w
   965     0264  00D8               	movwf	_red_freq
   966     0265                     l1900:
   967                           
   968                           ;main.c: 65:     green_freq = read_green();
   969     0265  120A  158A  265C  120A  118A  	fcall	_read_green
   970     026A  1283               	bcf	3,5	;RP0=0, select bank0
   971     026B  1303               	bcf	3,6	;RP1=0, select bank0
   972     026C  0847               	movf	?_read_green+3,w
   973     026D  00D3               	movwf	_green_freq+3
   974     026E  0846               	movf	?_read_green+2,w
   975     026F  00D2               	movwf	_green_freq+2
   976     0270  0845               	movf	?_read_green+1,w
   977     0271  00D1               	movwf	_green_freq+1
   978     0272  0844               	movf	?_read_green,w
   979     0273  00D0               	movwf	_green_freq
   980     0274                     l1902:
   981                           
   982                           ;main.c: 66:     blue_freq = read_blue();
   983     0274  120A  158A  25F9  120A  118A  	fcall	_read_blue
   984     0279  1283               	bcf	3,5	;RP0=0, select bank0
   985     027A  1303               	bcf	3,6	;RP1=0, select bank0
   986     027B  0847               	movf	?_read_blue+3,w
   987     027C  00D7               	movwf	_blue_freq+3
   988     027D  0846               	movf	?_read_blue+2,w
   989     027E  00D6               	movwf	_blue_freq+2
   990     027F  0845               	movf	?_read_blue+1,w
   991     0280  00D5               	movwf	_blue_freq+1
   992     0281  0844               	movf	?_read_blue,w
   993     0282  00D4               	movwf	_blue_freq
   994     0283                     l1904:
   995                           
   996                           ;main.c: 68:     if (red_freq < 130 && red_freq > 122 && green_freq < 150 && green_freq 
      +                          > 140 && blue_freq < 80 && blue_freq > 65){
   997     0283  085B               	movf	_red_freq+3,w
   998     0284  1D03               	btfss	3,2
   999     0285  2A93               	goto	u2311
  1000     0286  085A               	movf	_red_freq+2,w
  1001     0287  1D03               	btfss	3,2
  1002     0288  2A93               	goto	u2311
  1003     0289  0859               	movf	_red_freq+1,w
  1004     028A  1D03               	btfss	3,2
  1005     028B  2A93               	goto	u2311
  1006     028C  3082               	movlw	130
  1007     028D  0258               	subwf	_red_freq,w
  1008     028E  1D03               	skipz
  1009     028F  2A90               	goto	u2313
  1010     0290                     u2313:
  1011     0290  1803               	btfsc	3,0
  1012     0291  2A93               	goto	u2311
  1013     0292  2A94               	goto	u2310
  1014     0293                     u2311:
  1015     0293  2B0A               	goto	l1922
  1016     0294                     u2310:
  1017     0294                     l1906:
  1018     0294  1283               	bcf	3,5	;RP0=0, select bank0
  1019     0295  1303               	bcf	3,6	;RP1=0, select bank0
  1020     0296  085B               	movf	_red_freq+3,w
  1021     0297  1D03               	btfss	3,2
  1022     0298  2AA7               	goto	u2320
  1023     0299  085A               	movf	_red_freq+2,w
  1024     029A  1D03               	btfss	3,2
  1025     029B  2AA7               	goto	u2320
  1026     029C  0859               	movf	_red_freq+1,w
  1027     029D  1D03               	btfss	3,2
  1028     029E  2AA7               	goto	u2320
  1029     029F  307B               	movlw	123
  1030     02A0  0258               	subwf	_red_freq,w
  1031     02A1  1D03               	skipz
  1032     02A2  2AA3               	goto	u2323
  1033     02A3                     u2323:
  1034     02A3  1C03               	btfss	3,0
  1035     02A4  2AA6               	goto	u2321
  1036     02A5  2AA7               	goto	u2320
  1037     02A6                     u2321:
  1038     02A6  2B0A               	goto	l1922
  1039     02A7                     u2320:
  1040     02A7                     l1908:
  1041     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1042     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1043     02A9  0853               	movf	_green_freq+3,w
  1044     02AA  1D03               	btfss	3,2
  1045     02AB  2AB9               	goto	u2331
  1046     02AC  0852               	movf	_green_freq+2,w
  1047     02AD  1D03               	btfss	3,2
  1048     02AE  2AB9               	goto	u2331
  1049     02AF  0851               	movf	_green_freq+1,w
  1050     02B0  1D03               	btfss	3,2
  1051     02B1  2AB9               	goto	u2331
  1052     02B2  3096               	movlw	150
  1053     02B3  0250               	subwf	_green_freq,w
  1054     02B4  1D03               	skipz
  1055     02B5  2AB6               	goto	u2333
  1056     02B6                     u2333:
  1057     02B6  1803               	btfsc	3,0
  1058     02B7  2AB9               	goto	u2331
  1059     02B8  2ABA               	goto	u2330
  1060     02B9                     u2331:
  1061     02B9  2B0A               	goto	l1922
  1062     02BA                     u2330:
  1063     02BA                     l1910:
  1064     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1065     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1066     02BC  0853               	movf	_green_freq+3,w
  1067     02BD  1D03               	btfss	3,2
  1068     02BE  2ACD               	goto	u2340
  1069     02BF  0852               	movf	_green_freq+2,w
  1070     02C0  1D03               	btfss	3,2
  1071     02C1  2ACD               	goto	u2340
  1072     02C2  0851               	movf	_green_freq+1,w
  1073     02C3  1D03               	btfss	3,2
  1074     02C4  2ACD               	goto	u2340
  1075     02C5  308D               	movlw	141
  1076     02C6  0250               	subwf	_green_freq,w
  1077     02C7  1D03               	skipz
  1078     02C8  2AC9               	goto	u2343
  1079     02C9                     u2343:
  1080     02C9  1C03               	btfss	3,0
  1081     02CA  2ACC               	goto	u2341
  1082     02CB  2ACD               	goto	u2340
  1083     02CC                     u2341:
  1084     02CC  2B0A               	goto	l1922
  1085     02CD                     u2340:
  1086     02CD                     l1912:
  1087     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1088     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1089     02CF  0857               	movf	_blue_freq+3,w
  1090     02D0  1D03               	btfss	3,2
  1091     02D1  2ADF               	goto	u2351
  1092     02D2  0856               	movf	_blue_freq+2,w
  1093     02D3  1D03               	btfss	3,2
  1094     02D4  2ADF               	goto	u2351
  1095     02D5  0855               	movf	_blue_freq+1,w
  1096     02D6  1D03               	btfss	3,2
  1097     02D7  2ADF               	goto	u2351
  1098     02D8  3050               	movlw	80
  1099     02D9  0254               	subwf	_blue_freq,w
  1100     02DA  1D03               	skipz
  1101     02DB  2ADC               	goto	u2353
  1102     02DC                     u2353:
  1103     02DC  1803               	btfsc	3,0
  1104     02DD  2ADF               	goto	u2351
  1105     02DE  2AE0               	goto	u2350
  1106     02DF                     u2351:
  1107     02DF  2B0A               	goto	l1922
  1108     02E0                     u2350:
  1109     02E0                     l1914:
  1110     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1111     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1112     02E2  0857               	movf	_blue_freq+3,w
  1113     02E3  1D03               	btfss	3,2
  1114     02E4  2AF3               	goto	u2360
  1115     02E5  0856               	movf	_blue_freq+2,w
  1116     02E6  1D03               	btfss	3,2
  1117     02E7  2AF3               	goto	u2360
  1118     02E8  0855               	movf	_blue_freq+1,w
  1119     02E9  1D03               	btfss	3,2
  1120     02EA  2AF3               	goto	u2360
  1121     02EB  3042               	movlw	66
  1122     02EC  0254               	subwf	_blue_freq,w
  1123     02ED  1D03               	skipz
  1124     02EE  2AEF               	goto	u2363
  1125     02EF                     u2363:
  1126     02EF  1C03               	btfss	3,0
  1127     02F0  2AF2               	goto	u2361
  1128     02F1  2AF3               	goto	u2360
  1129     02F2                     u2361:
  1130     02F2  2B0A               	goto	l1922
  1131     02F3                     u2360:
  1132     02F3                     l1916:
  1133                           
  1134                           ;main.c: 69:         estado = 1;
  1135     02F3  3001               	movlw	1
  1136     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1137     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1138     02F6  00DF               	movwf	_estado
  1139     02F7  3000               	movlw	0
  1140     02F8  00E0               	movwf	_estado+1
  1141     02F9                     l1918:
  1142                           
  1143                           ;main.c: 70:         Lcd_Set_Cursor(2,1);
  1144     02F9  01F4               	clrf	Lcd_Set_Cursor@b
  1145     02FA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1146     02FB  3002               	movlw	2
  1147     02FC  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1148     0301                     l1920:
  1149                           
  1150                           ;main.c: 71:         Lcd_Write_String("VERDE");
  1151     0301  3030               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1152     0302  00F5               	movwf	Lcd_Write_String@a
  1153     0303  3080               	movlw	128
  1154     0304  00F6               	movwf	Lcd_Write_String@a+1
  1155     0305  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1156     030A                     l1922:
  1157                           
  1158                           ;main.c: 74:     if (red_freq < 180 && red_freq > 170 && green_freq < 185 && green_freq 
      +                          > 170 && blue_freq < 75 && blue_freq > 65){
  1159     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1160     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1161     030C  085B               	movf	_red_freq+3,w
  1162     030D  1D03               	btfss	3,2
  1163     030E  2B1C               	goto	u2371
  1164     030F  085A               	movf	_red_freq+2,w
  1165     0310  1D03               	btfss	3,2
  1166     0311  2B1C               	goto	u2371
  1167     0312  0859               	movf	_red_freq+1,w
  1168     0313  1D03               	btfss	3,2
  1169     0314  2B1C               	goto	u2371
  1170     0315  30B4               	movlw	180
  1171     0316  0258               	subwf	_red_freq,w
  1172     0317  1D03               	skipz
  1173     0318  2B19               	goto	u2373
  1174     0319                     u2373:
  1175     0319  1803               	btfsc	3,0
  1176     031A  2B1C               	goto	u2371
  1177     031B  2B1D               	goto	u2370
  1178     031C                     u2371:
  1179     031C  2B93               	goto	l1940
  1180     031D                     u2370:
  1181     031D                     l1924:
  1182     031D  1283               	bcf	3,5	;RP0=0, select bank0
  1183     031E  1303               	bcf	3,6	;RP1=0, select bank0
  1184     031F  085B               	movf	_red_freq+3,w
  1185     0320  1D03               	btfss	3,2
  1186     0321  2B30               	goto	u2380
  1187     0322  085A               	movf	_red_freq+2,w
  1188     0323  1D03               	btfss	3,2
  1189     0324  2B30               	goto	u2380
  1190     0325  0859               	movf	_red_freq+1,w
  1191     0326  1D03               	btfss	3,2
  1192     0327  2B30               	goto	u2380
  1193     0328  30AB               	movlw	171
  1194     0329  0258               	subwf	_red_freq,w
  1195     032A  1D03               	skipz
  1196     032B  2B2C               	goto	u2383
  1197     032C                     u2383:
  1198     032C  1C03               	btfss	3,0
  1199     032D  2B2F               	goto	u2381
  1200     032E  2B30               	goto	u2380
  1201     032F                     u2381:
  1202     032F  2B93               	goto	l1940
  1203     0330                     u2380:
  1204     0330                     l1926:
  1205     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1206     0331  1303               	bcf	3,6	;RP1=0, select bank0
  1207     0332  0853               	movf	_green_freq+3,w
  1208     0333  1D03               	btfss	3,2
  1209     0334  2B42               	goto	u2391
  1210     0335  0852               	movf	_green_freq+2,w
  1211     0336  1D03               	btfss	3,2
  1212     0337  2B42               	goto	u2391
  1213     0338  0851               	movf	_green_freq+1,w
  1214     0339  1D03               	btfss	3,2
  1215     033A  2B42               	goto	u2391
  1216     033B  30B9               	movlw	185
  1217     033C  0250               	subwf	_green_freq,w
  1218     033D  1D03               	skipz
  1219     033E  2B3F               	goto	u2393
  1220     033F                     u2393:
  1221     033F  1803               	btfsc	3,0
  1222     0340  2B42               	goto	u2391
  1223     0341  2B43               	goto	u2390
  1224     0342                     u2391:
  1225     0342  2B93               	goto	l1940
  1226     0343                     u2390:
  1227     0343                     l1928:
  1228     0343  1283               	bcf	3,5	;RP0=0, select bank0
  1229     0344  1303               	bcf	3,6	;RP1=0, select bank0
  1230     0345  0853               	movf	_green_freq+3,w
  1231     0346  1D03               	btfss	3,2
  1232     0347  2B56               	goto	u2400
  1233     0348  0852               	movf	_green_freq+2,w
  1234     0349  1D03               	btfss	3,2
  1235     034A  2B56               	goto	u2400
  1236     034B  0851               	movf	_green_freq+1,w
  1237     034C  1D03               	btfss	3,2
  1238     034D  2B56               	goto	u2400
  1239     034E  30AB               	movlw	171
  1240     034F  0250               	subwf	_green_freq,w
  1241     0350  1D03               	skipz
  1242     0351  2B52               	goto	u2403
  1243     0352                     u2403:
  1244     0352  1C03               	btfss	3,0
  1245     0353  2B55               	goto	u2401
  1246     0354  2B56               	goto	u2400
  1247     0355                     u2401:
  1248     0355  2B93               	goto	l1940
  1249     0356                     u2400:
  1250     0356                     l1930:
  1251     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1252     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1253     0358  0857               	movf	_blue_freq+3,w
  1254     0359  1D03               	btfss	3,2
  1255     035A  2B68               	goto	u2411
  1256     035B  0856               	movf	_blue_freq+2,w
  1257     035C  1D03               	btfss	3,2
  1258     035D  2B68               	goto	u2411
  1259     035E  0855               	movf	_blue_freq+1,w
  1260     035F  1D03               	btfss	3,2
  1261     0360  2B68               	goto	u2411
  1262     0361  304B               	movlw	75
  1263     0362  0254               	subwf	_blue_freq,w
  1264     0363  1D03               	skipz
  1265     0364  2B65               	goto	u2413
  1266     0365                     u2413:
  1267     0365  1803               	btfsc	3,0
  1268     0366  2B68               	goto	u2411
  1269     0367  2B69               	goto	u2410
  1270     0368                     u2411:
  1271     0368  2B93               	goto	l1940
  1272     0369                     u2410:
  1273     0369                     l1932:
  1274     0369  1283               	bcf	3,5	;RP0=0, select bank0
  1275     036A  1303               	bcf	3,6	;RP1=0, select bank0
  1276     036B  0857               	movf	_blue_freq+3,w
  1277     036C  1D03               	btfss	3,2
  1278     036D  2B7C               	goto	u2420
  1279     036E  0856               	movf	_blue_freq+2,w
  1280     036F  1D03               	btfss	3,2
  1281     0370  2B7C               	goto	u2420
  1282     0371  0855               	movf	_blue_freq+1,w
  1283     0372  1D03               	btfss	3,2
  1284     0373  2B7C               	goto	u2420
  1285     0374  3042               	movlw	66
  1286     0375  0254               	subwf	_blue_freq,w
  1287     0376  1D03               	skipz
  1288     0377  2B78               	goto	u2423
  1289     0378                     u2423:
  1290     0378  1C03               	btfss	3,0
  1291     0379  2B7B               	goto	u2421
  1292     037A  2B7C               	goto	u2420
  1293     037B                     u2421:
  1294     037B  2B93               	goto	l1940
  1295     037C                     u2420:
  1296     037C                     l1934:
  1297                           
  1298                           ;main.c: 75:         estado = 2;
  1299     037C  3002               	movlw	2
  1300     037D  1283               	bcf	3,5	;RP0=0, select bank0
  1301     037E  1303               	bcf	3,6	;RP1=0, select bank0
  1302     037F  00DF               	movwf	_estado
  1303     0380  3000               	movlw	0
  1304     0381  00E0               	movwf	_estado+1
  1305     0382                     l1936:
  1306                           
  1307                           ;main.c: 76:         Lcd_Set_Cursor(2,1);
  1308     0382  01F4               	clrf	Lcd_Set_Cursor@b
  1309     0383  0AF4               	incf	Lcd_Set_Cursor@b,f
  1310     0384  3002               	movlw	2
  1311     0385  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1312     038A                     l1938:
  1313                           
  1314                           ;main.c: 77:         Lcd_Write_String("AZUL");
  1315     038A  303B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1316     038B  00F5               	movwf	Lcd_Write_String@a
  1317     038C  3080               	movlw	128
  1318     038D  00F6               	movwf	Lcd_Write_String@a+1
  1319     038E  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1320     0393                     l1940:
  1321                           
  1322                           ;main.c: 80:     if (red_freq < 100 && red_freq > 70 && green_freq < 210 && green_freq >
      +                           160 && blue_freq < 70 && blue_freq > 50){
  1323     0393  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0394  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0395  085B               	movf	_red_freq+3,w
  1326     0396  1D03               	btfss	3,2
  1327     0397  2BA5               	goto	u2431
  1328     0398  085A               	movf	_red_freq+2,w
  1329     0399  1D03               	btfss	3,2
  1330     039A  2BA5               	goto	u2431
  1331     039B  0859               	movf	_red_freq+1,w
  1332     039C  1D03               	btfss	3,2
  1333     039D  2BA5               	goto	u2431
  1334     039E  3064               	movlw	100
  1335     039F  0258               	subwf	_red_freq,w
  1336     03A0  1D03               	skipz
  1337     03A1  2BA2               	goto	u2433
  1338     03A2                     u2433:
  1339     03A2  1803               	btfsc	3,0
  1340     03A3  2BA5               	goto	u2431
  1341     03A4  2BA6               	goto	u2430
  1342     03A5                     u2431:
  1343     03A5  2C1D               	goto	l1958
  1344     03A6                     u2430:
  1345     03A6                     l1942:
  1346     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1347     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1348     03A8  085B               	movf	_red_freq+3,w
  1349     03A9  1D03               	btfss	3,2
  1350     03AA  2BB9               	goto	u2440
  1351     03AB  085A               	movf	_red_freq+2,w
  1352     03AC  1D03               	btfss	3,2
  1353     03AD  2BB9               	goto	u2440
  1354     03AE  0859               	movf	_red_freq+1,w
  1355     03AF  1D03               	btfss	3,2
  1356     03B0  2BB9               	goto	u2440
  1357     03B1  3047               	movlw	71
  1358     03B2  0258               	subwf	_red_freq,w
  1359     03B3  1D03               	skipz
  1360     03B4  2BB5               	goto	u2443
  1361     03B5                     u2443:
  1362     03B5  1C03               	btfss	3,0
  1363     03B6  2BB8               	goto	u2441
  1364     03B7  2BB9               	goto	u2440
  1365     03B8                     u2441:
  1366     03B8  2C1D               	goto	l1958
  1367     03B9                     u2440:
  1368     03B9                     l1944:
  1369     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1370     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1371     03BB  0853               	movf	_green_freq+3,w
  1372     03BC  1D03               	btfss	3,2
  1373     03BD  2BCB               	goto	u2451
  1374     03BE  0852               	movf	_green_freq+2,w
  1375     03BF  1D03               	btfss	3,2
  1376     03C0  2BCB               	goto	u2451
  1377     03C1  0851               	movf	_green_freq+1,w
  1378     03C2  1D03               	btfss	3,2
  1379     03C3  2BCB               	goto	u2451
  1380     03C4  30D2               	movlw	210
  1381     03C5  0250               	subwf	_green_freq,w
  1382     03C6  1D03               	skipz
  1383     03C7  2BC8               	goto	u2453
  1384     03C8                     u2453:
  1385     03C8  1803               	btfsc	3,0
  1386     03C9  2BCB               	goto	u2451
  1387     03CA  2BCC               	goto	u2450
  1388     03CB                     u2451:
  1389     03CB  2C1D               	goto	l1958
  1390     03CC                     u2450:
  1391     03CC                     l1946:
  1392     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1393     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1394     03CE  0853               	movf	_green_freq+3,w
  1395     03CF  1D03               	btfss	3,2
  1396     03D0  2BDF               	goto	u2460
  1397     03D1  0852               	movf	_green_freq+2,w
  1398     03D2  1D03               	btfss	3,2
  1399     03D3  2BDF               	goto	u2460
  1400     03D4  0851               	movf	_green_freq+1,w
  1401     03D5  1D03               	btfss	3,2
  1402     03D6  2BDF               	goto	u2460
  1403     03D7  30A1               	movlw	161
  1404     03D8  0250               	subwf	_green_freq,w
  1405     03D9  1D03               	skipz
  1406     03DA  2BDB               	goto	u2463
  1407     03DB                     u2463:
  1408     03DB  1C03               	btfss	3,0
  1409     03DC  2BDE               	goto	u2461
  1410     03DD  2BDF               	goto	u2460
  1411     03DE                     u2461:
  1412     03DE  2C1D               	goto	l1958
  1413     03DF                     u2460:
  1414     03DF                     l1948:
  1415     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1416     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1417     03E1  0857               	movf	_blue_freq+3,w
  1418     03E2  1D03               	btfss	3,2
  1419     03E3  2BF1               	goto	u2471
  1420     03E4  0856               	movf	_blue_freq+2,w
  1421     03E5  1D03               	btfss	3,2
  1422     03E6  2BF1               	goto	u2471
  1423     03E7  0855               	movf	_blue_freq+1,w
  1424     03E8  1D03               	btfss	3,2
  1425     03E9  2BF1               	goto	u2471
  1426     03EA  3046               	movlw	70
  1427     03EB  0254               	subwf	_blue_freq,w
  1428     03EC  1D03               	skipz
  1429     03ED  2BEE               	goto	u2473
  1430     03EE                     u2473:
  1431     03EE  1803               	btfsc	3,0
  1432     03EF  2BF1               	goto	u2471
  1433     03F0  2BF2               	goto	u2470
  1434     03F1                     u2471:
  1435     03F1  2C1D               	goto	l1958
  1436     03F2                     u2470:
  1437     03F2                     l1950:
  1438     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1439     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1440     03F4  0857               	movf	_blue_freq+3,w
  1441     03F5  1D03               	btfss	3,2
  1442     03F6  2C05               	goto	u2480
  1443     03F7  0856               	movf	_blue_freq+2,w
  1444     03F8  1D03               	btfss	3,2
  1445     03F9  2C05               	goto	u2480
  1446     03FA  0855               	movf	_blue_freq+1,w
  1447     03FB  1D03               	btfss	3,2
  1448     03FC  2C05               	goto	u2480
  1449     03FD  3033               	movlw	51
  1450     03FE  0254               	subwf	_blue_freq,w
  1451     03FF  1D03               	skipz
  1452     0400  2C01               	goto	u2483
  1453     0401                     u2483:
  1454     0401  1C03               	btfss	3,0
  1455     0402  2C04               	goto	u2481
  1456     0403  2C05               	goto	u2480
  1457     0404                     u2481:
  1458     0404  2C1D               	goto	l1958
  1459     0405                     u2480:
  1460     0405                     l1952:
  1461                           
  1462                           ;main.c: 81:         estado = 3;
  1463     0405  3003               	movlw	3
  1464     0406  1283               	bcf	3,5	;RP0=0, select bank0
  1465     0407  1303               	bcf	3,6	;RP1=0, select bank0
  1466     0408  00DF               	movwf	_estado
  1467     0409  3000               	movlw	0
  1468     040A  00E0               	movwf	_estado+1
  1469     040B                     l1954:
  1470                           
  1471                           ;main.c: 82:         Lcd_Set_Cursor(2,1);
  1472     040B  01F4               	clrf	Lcd_Set_Cursor@b
  1473     040C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1474     040D  3002               	movlw	2
  1475     040E  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1476     0413                     l1956:
  1477                           
  1478                           ;main.c: 83:         Lcd_Write_String("ROJO");
  1479     0413  3040               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1480     0414  00F5               	movwf	Lcd_Write_String@a
  1481     0415  3080               	movlw	128
  1482     0416  00F6               	movwf	Lcd_Write_String@a+1
  1483     0417  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1484                           
  1485                           ;main.c: 84:     }
  1486     041C  2C32               	goto	l1964
  1487     041D                     l1958:
  1488                           
  1489                           ;main.c: 87:         estado = 0;
  1490     041D  1283               	bcf	3,5	;RP0=0, select bank0
  1491     041E  1303               	bcf	3,6	;RP1=0, select bank0
  1492     041F  01DF               	clrf	_estado
  1493     0420  01E0               	clrf	_estado+1
  1494     0421                     l1960:
  1495                           
  1496                           ;main.c: 88:         Lcd_Set_Cursor(2,1);
  1497     0421  01F4               	clrf	Lcd_Set_Cursor@b
  1498     0422  0AF4               	incf	Lcd_Set_Cursor@b,f
  1499     0423  3002               	movlw	2
  1500     0424  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1501     0429                     l1962:
  1502                           
  1503                           ;main.c: 89:         Lcd_Write_String("NADA");
  1504     0429  3036               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1505     042A  00F5               	movwf	Lcd_Write_String@a
  1506     042B  3080               	movlw	128
  1507     042C  00F6               	movwf	Lcd_Write_String@a+1
  1508     042D  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1509     0432                     l1964:
  1510                           
  1511                           ;main.c: 93:     sprintf(rojo, "%lu", red_freq);
  1512     0432  3045               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1513     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0435  00AA               	movwf	sprintf@f
  1516     0436  085B               	movf	_red_freq+3,w
  1517     0437  00AE               	movwf	?_sprintf+4
  1518     0438  085A               	movf	_red_freq+2,w
  1519     0439  00AD               	movwf	?_sprintf+3
  1520     043A  0859               	movf	_red_freq+1,w
  1521     043B  00AC               	movwf	?_sprintf+2
  1522     043C  0858               	movf	_red_freq,w
  1523     043D  00AB               	movwf	?_sprintf+1
  1524     043E  3069               	movlw	(low (_rojo| 0))& (0+255)
  1525     043F  120A  118A  2105  120A  118A  	fcall	_sprintf
  1526     0444                     l1966:
  1527                           
  1528                           ;main.c: 94:     sprintf(azul, "%lu", blue_freq);
  1529     0444  3045               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1530     0445  1283               	bcf	3,5	;RP0=0, select bank0
  1531     0446  1303               	bcf	3,6	;RP1=0, select bank0
  1532     0447  00AA               	movwf	sprintf@f
  1533     0448  0857               	movf	_blue_freq+3,w
  1534     0449  00AE               	movwf	?_sprintf+4
  1535     044A  0856               	movf	_blue_freq+2,w
  1536     044B  00AD               	movwf	?_sprintf+3
  1537     044C  0855               	movf	_blue_freq+1,w
  1538     044D  00AC               	movwf	?_sprintf+2
  1539     044E  0854               	movf	_blue_freq,w
  1540     044F  00AB               	movwf	?_sprintf+1
  1541     0450  3065               	movlw	(low (_azul| 0))& (0+255)
  1542     0451  120A  118A  2105  120A  118A  	fcall	_sprintf
  1543     0456                     l1968:
  1544                           
  1545                           ;main.c: 95:     sprintf(verde, "%lu", green_freq);
  1546     0456  3045               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1547     0457  1283               	bcf	3,5	;RP0=0, select bank0
  1548     0458  1303               	bcf	3,6	;RP1=0, select bank0
  1549     0459  00AA               	movwf	sprintf@f
  1550     045A  0853               	movf	_green_freq+3,w
  1551     045B  00AE               	movwf	?_sprintf+4
  1552     045C  0852               	movf	_green_freq+2,w
  1553     045D  00AD               	movwf	?_sprintf+3
  1554     045E  0851               	movf	_green_freq+1,w
  1555     045F  00AC               	movwf	?_sprintf+2
  1556     0460  0850               	movf	_green_freq,w
  1557     0461  00AB               	movwf	?_sprintf+1
  1558     0462  3061               	movlw	(low (_verde| 0))& (0+255)
  1559     0463  120A  118A  2105  120A  118A  	fcall	_sprintf
  1560     0468                     l1970:
  1561                           
  1562                           ;main.c: 99:     Lcd_Set_Cursor(2,6);
  1563     0468  3006               	movlw	6
  1564     0469  00F4               	movwf	Lcd_Set_Cursor@b
  1565     046A  3002               	movlw	2
  1566     046B  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1567     0470                     l1972:
  1568                           
  1569                           ;main.c: 100:     Lcd_Write_String(rojo);
  1570     0470  3069               	movlw	(low (_rojo| 0))& (0+255)
  1571     0471  00F5               	movwf	Lcd_Write_String@a
  1572     0472  3000               	movlw	0
  1573     0473  00F6               	movwf	Lcd_Write_String@a+1
  1574     0474  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1575     0479                     l1974:
  1576                           
  1577                           ;main.c: 101:     Lcd_Set_Cursor(2,10);
  1578     0479  300A               	movlw	10
  1579     047A  00F4               	movwf	Lcd_Set_Cursor@b
  1580     047B  3002               	movlw	2
  1581     047C  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1582     0481                     l1976:
  1583                           
  1584                           ;main.c: 102:     Lcd_Write_String(verde);
  1585     0481  3061               	movlw	(low (_verde| 0))& (0+255)
  1586     0482  00F5               	movwf	Lcd_Write_String@a
  1587     0483  3000               	movlw	0
  1588     0484  00F6               	movwf	Lcd_Write_String@a+1
  1589     0485  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1590     048A                     l1978:
  1591                           
  1592                           ;main.c: 103:     Lcd_Set_Cursor(2,14);
  1593     048A  300E               	movlw	14
  1594     048B  00F4               	movwf	Lcd_Set_Cursor@b
  1595     048C  3002               	movlw	2
  1596     048D  120A  118A  2007  120A  118A  	fcall	_Lcd_Set_Cursor
  1597     0492                     l1980:
  1598                           
  1599                           ;main.c: 104:     Lcd_Write_String(azul);
  1600     0492  3065               	movlw	(low (_azul| 0))& (0+255)
  1601     0493  00F5               	movwf	Lcd_Write_String@a
  1602     0494  3000               	movlw	0
  1603     0495  00F6               	movwf	Lcd_Write_String@a+1
  1604     0496  120A  158A  2504  120A  118A  	fcall	_Lcd_Write_String
  1605     049B                     l1982:
  1606                           
  1607                           ;main.c: 106:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1608     049B  3003               	movlw	3
  1609     049C  1283               	bcf	3,5	;RP0=0, select bank0
  1610     049D  1303               	bcf	3,6	;RP1=0, select bank0
  1611     049E  00CF               	movwf	??_main+2
  1612     049F  3008               	movlw	8
  1613     04A0  00CE               	movwf	??_main+1
  1614     04A1  3076               	movlw	118
  1615     04A2  00CD               	movwf	??_main
  1616     04A3                     u2497:
  1617     04A3  0BCD               	decfsz	??_main,f
  1618     04A4  2CA3               	goto	u2497
  1619     04A5  0BCE               	decfsz	??_main+1,f
  1620     04A6  2CA3               	goto	u2497
  1621     04A7  0BCF               	decfsz	??_main+2,f
  1622     04A8  2CA3               	goto	u2497
  1623     04A9  0000               	nop
  1624     04AA  2A40               	goto	l1892
  1625     04AB  120A  118A  2800   	ljmp	start
  1626     04AE                     __end_of_main:
  1627                           
  1628                           	psect	text1
  1629     0105                     __ptext1:	
  1630 ;; *************** function _sprintf *****************
  1631 ;; Defined at:
  1632 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  sp              1    wreg     PTR unsigned char 
  1635 ;;		 -> verde(4), azul(4), rojo(4), 
  1636 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1637 ;;		 -> STR_8(4), STR_7(4), STR_6(4), 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1640 ;;		 -> verde(4), azul(4), rojo(4), 
  1641 ;;  val             4   23[BANK0 ] unsigned long 
  1642 ;;  tmpval          4    0        struct .
  1643 ;;  prec            2   21[BANK0 ] int 
  1644 ;;  cp              2    0        PTR const unsigned char 
  1645 ;;  len             2    0        unsigned int 
  1646 ;;  c               1   29[BANK0 ] unsigned char 
  1647 ;;  ap              1   27[BANK0 ] PTR void [1]
  1648 ;;		 -> ?_sprintf(2), 
  1649 ;;  flag            1   20[BANK0 ] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  2   10[BANK0 ] int 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       5       0       0       0
  1660 ;;      Locals:         0      10       0       0       0
  1661 ;;      Temps:          0       5       0       0       0
  1662 ;;      Totals:         0      20       0       0       0
  1663 ;;Total ram usage:       20 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 1
  1666 ;; This function calls:
  1667 ;;		___lldiv
  1668 ;;		___llmod
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     0105                     _sprintf:	
  1675                           ;psect for function _sprintf
  1676                           
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1680                           ;sprintf@sp stored from wreg
  1681     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1682     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1683     0107  00BC               	movwf	sprintf@sp
  1684     0108                     l1828:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517: 
      +                           int prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  u
      +                          nsigned char flag;
  1687     0108  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1688     0109  00BB               	movwf	sprintf@ap
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1691     010A  2A19               	goto	l1874
  1692     010B                     l1830:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1695     010B  3025               	movlw	37
  1696     010C  063D               	xorwf	sprintf@c,w
  1697     010D  1903               	btfsc	3,2
  1698     010E  2910               	goto	u2231
  1699     010F  2911               	goto	u2230
  1700     0110                     u2231:
  1701     0110  291B               	goto	l1836
  1702     0111                     u2230:
  1703     0111                     l1832:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1706     0111  083C               	movf	sprintf@sp,w
  1707     0112  0084               	movwf	4
  1708     0113  083D               	movf	sprintf@c,w
  1709     0114  1383               	bcf	3,7	;select IRP bank0
  1710     0115  0080               	movwf	0
  1711     0116                     l1834:
  1712     0116  3001               	movlw	1
  1713     0117  00AF               	movwf	??_sprintf
  1714     0118  082F               	movf	??_sprintf,w
  1715     0119  07BC               	addwf	sprintf@sp,f
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1718     011A  2A19               	goto	l1874
  1719     011B                     l1836:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1722     011B  01B4               	clrf	sprintf@flag
  1723     011C  2924               	goto	l1842
  1724     011D                     l269:	
  1725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  1726                           
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  1729     011D  1634               	bsf	sprintf@flag,4
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  1732     011E  2924               	goto	l1842
  1733     011F                     l1838:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1736     011F  30C0               	movlw	192
  1737     0120  00AF               	movwf	??_sprintf
  1738     0121  082F               	movf	??_sprintf,w
  1739     0122  04B4               	iorwf	sprintf@flag,f
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1742     0123  2941               	goto	l272
  1743     0124                     l1842:
  1744     0124  3001               	movlw	1
  1745     0125  07AA               	addwf	sprintf@f,f
  1746     0126  30FF               	movlw	-1
  1747     0127  072A               	addwf	sprintf@f,w
  1748     0128  0084               	movwf	4
  1749     0129  120A  158A  200A  120A  118A  	fcall	stringdir
  1750     012E  00BD               	movwf	sprintf@c
  1751     012F  00AF               	movwf	??_sprintf
  1752     0130  01B0               	clrf	??_sprintf+1
  1753                           
  1754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1755                           ; Switch size 1, requested type "simple"
  1756                           ; Number of cases is 1, Range of values is 0 to 0
  1757                           ; switch strategies available:
  1758                           ; Name         Instructions Cycles
  1759                           ; simple_byte            4     3 (average)
  1760                           ; direct_byte           11     8 (fixed)
  1761                           ; jumptable            260     6 (fixed)
  1762                           ;	Chosen strategy is simple_byte
  1763     0131  0830               	movf	??_sprintf+1,w
  1764     0132  3A00               	xorlw	0	; case 0
  1765     0133  1903               	skipnz
  1766     0134  2936               	goto	l2008
  1767     0135  2A19               	goto	l1874
  1768     0136                     l2008:
  1769                           
  1770                           ; Switch size 1, requested type "simple"
  1771                           ; Number of cases is 3, Range of values is 0 to 117
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte           10     6 (average)
  1775                           ; jumptable            260     6 (fixed)
  1776                           ;	Chosen strategy is simple_byte
  1777     0136  082F               	movf	??_sprintf,w
  1778     0137  3A00               	xorlw	0	; case 0
  1779     0138  1903               	skipnz
  1780     0139  2A29               	goto	l1876
  1781     013A  3A6C               	xorlw	108	; case 108
  1782     013B  1903               	skipnz
  1783     013C  291D               	goto	l269
  1784     013D  3A19               	xorlw	25	; case 117
  1785     013E  1903               	skipnz
  1786     013F  291F               	goto	l1838
  1787     0140  2A19               	goto	l1874
  1788     0141                     l272:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  1791     0141  1E34               	btfss	sprintf@flag,4
  1792     0142  2944               	goto	u2241
  1793     0143  2945               	goto	u2240
  1794     0144                     u2241:
  1795     0144  2958               	goto	l1848
  1796     0145                     u2240:
  1797     0145                     l1844:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  1800     0145  083B               	movf	sprintf@ap,w
  1801     0146  0084               	movwf	4
  1802     0147  1383               	bcf	3,7	;select IRP bank0
  1803     0148  0800               	movf	0,w
  1804     0149  00B7               	movwf	sprintf@val
  1805     014A  0A84               	incf	4,f
  1806     014B  0800               	movf	0,w
  1807     014C  00B8               	movwf	sprintf@val+1
  1808     014D  0A84               	incf	4,f
  1809     014E  0800               	movf	0,w
  1810     014F  00B9               	movwf	sprintf@val+2
  1811     0150  0A84               	incf	4,f
  1812     0151  0800               	movf	0,w
  1813     0152  00BA               	movwf	sprintf@val+3
  1814     0153                     l1846:
  1815     0153  3004               	movlw	4
  1816     0154  00AF               	movwf	??_sprintf
  1817     0155  082F               	movf	??_sprintf,w
  1818     0156  07BB               	addwf	sprintf@ap,f
  1819     0157  296A               	goto	l1852
  1820     0158                     l1848:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1823     0158  083B               	movf	sprintf@ap,w
  1824     0159  0084               	movwf	4
  1825     015A  1383               	bcf	3,7	;select IRP bank0
  1826     015B  0800               	movf	0,w
  1827     015C  00AF               	movwf	??_sprintf
  1828     015D  0A84               	incf	4,f
  1829     015E  0800               	movf	0,w
  1830     015F  00B0               	movwf	??_sprintf+1
  1831     0160  082F               	movf	??_sprintf,w
  1832     0161  00B7               	movwf	sprintf@val
  1833     0162  0830               	movf	??_sprintf+1,w
  1834     0163  00B8               	movwf	sprintf@val+1
  1835     0164  01B9               	clrf	sprintf@val+2
  1836     0165  01BA               	clrf	sprintf@val+3
  1837     0166                     l1850:
  1838     0166  3002               	movlw	2
  1839     0167  00AF               	movwf	??_sprintf
  1840     0168  082F               	movf	??_sprintf,w
  1841     0169  07BB               	addwf	sprintf@ap,f
  1842     016A                     l1852:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1845     016A  01BD               	clrf	sprintf@c
  1846     016B  0ABD               	incf	sprintf@c,f
  1847     016C                     l1858:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1850     016C  083D               	movf	sprintf@c,w
  1851     016D  00AF               	movwf	??_sprintf
  1852     016E  3001               	movlw	1
  1853     016F                     u2255:
  1854     016F  1003               	clrc
  1855     0170  0DAF               	rlf	??_sprintf,f
  1856     0171  3EFF               	addlw	-1
  1857     0172  1D03               	skipz
  1858     0173  296F               	goto	u2255
  1859     0174  1003               	clrc
  1860     0175  0D2F               	rlf	??_sprintf,w
  1861     0176  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1862     0177  0084               	movwf	4
  1863     0178  120A  158A  200A  120A  118A  	fcall	stringdir
  1864     017D  00B0               	movwf	??_sprintf+1
  1865     017E  120A  158A  200A  120A  118A  	fcall	stringdir
  1866     0183  00B1               	movwf	??_sprintf+2
  1867     0184  120A  158A  200A  120A  118A  	fcall	stringdir
  1868     0189  00B2               	movwf	??_sprintf+3
  1869     018A  120A  158A  200A  120A  118A  	fcall	stringdir
  1870     018F  00B3               	movwf	??_sprintf+4
  1871     0190  0833               	movf	??_sprintf+4,w
  1872     0191  023A               	subwf	sprintf@val+3,w
  1873     0192  1D03               	skipz
  1874     0193  299E               	goto	u2265
  1875     0194  0832               	movf	??_sprintf+3,w
  1876     0195  0239               	subwf	sprintf@val+2,w
  1877     0196  1D03               	skipz
  1878     0197  299E               	goto	u2265
  1879     0198  0831               	movf	??_sprintf+2,w
  1880     0199  0238               	subwf	sprintf@val+1,w
  1881     019A  1D03               	skipz
  1882     019B  299E               	goto	u2265
  1883     019C  0830               	movf	??_sprintf+1,w
  1884     019D  0237               	subwf	sprintf@val,w
  1885     019E                     u2265:
  1886     019E  1803               	skipnc
  1887     019F  29A1               	goto	u2261
  1888     01A0  29A2               	goto	u2260
  1889     01A1                     u2261:
  1890     01A1  29A3               	goto	l1862
  1891     01A2                     u2260:
  1892     01A2  29AD               	goto	l1864
  1893     01A3                     l1862:
  1894     01A3  3001               	movlw	1
  1895     01A4  00AF               	movwf	??_sprintf
  1896     01A5  082F               	movf	??_sprintf,w
  1897     01A6  07BD               	addwf	sprintf@c,f
  1898     01A7  300A               	movlw	10
  1899     01A8  063D               	xorwf	sprintf@c,w
  1900     01A9  1D03               	btfss	3,2
  1901     01AA  29AC               	goto	u2271
  1902     01AB  29AD               	goto	u2270
  1903     01AC                     u2271:
  1904     01AC  296C               	goto	l1858
  1905     01AD                     u2270:
  1906     01AD                     l1864:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1909     01AD  083D               	movf	sprintf@c,w
  1910     01AE  00AF               	movwf	??_sprintf
  1911     01AF  01B0               	clrf	??_sprintf+1
  1912     01B0  082F               	movf	??_sprintf,w
  1913     01B1  00B5               	movwf	sprintf@prec
  1914     01B2  0830               	movf	??_sprintf+1,w
  1915     01B3  00B6               	movwf	sprintf@prec+1
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1918     01B4  2A0B               	goto	l1872
  1919     01B5                     l1866:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  1922     01B5  3000               	movlw	0
  1923     01B6  00A3               	movwf	___llmod@divisor+3
  1924     01B7  3000               	movlw	0
  1925     01B8  00A2               	movwf	___llmod@divisor+2
  1926     01B9  3000               	movlw	0
  1927     01BA  00A1               	movwf	___llmod@divisor+1
  1928     01BB  300A               	movlw	10
  1929     01BC  00A0               	movwf	___llmod@divisor
  1930     01BD  0835               	movf	sprintf@prec,w
  1931     01BE  00AF               	movwf	??_sprintf
  1932     01BF  3001               	movlw	1
  1933     01C0                     u2285:
  1934     01C0  1003               	clrc
  1935     01C1  0DAF               	rlf	??_sprintf,f
  1936     01C2  3EFF               	addlw	-1
  1937     01C3  1D03               	skipz
  1938     01C4  29C0               	goto	u2285
  1939     01C5  1003               	clrc
  1940     01C6  0D2F               	rlf	??_sprintf,w
  1941     01C7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1942     01C8  0084               	movwf	4
  1943     01C9  120A  158A  200A  120A  118A  	fcall	stringdir
  1944     01CE  00F0               	movwf	___lldiv@divisor
  1945     01CF  120A  158A  200A  120A  118A  	fcall	stringdir
  1946     01D4  00F1               	movwf	___lldiv@divisor+1
  1947     01D5  120A  158A  200A  120A  118A  	fcall	stringdir
  1948     01DA  00F2               	movwf	___lldiv@divisor+2
  1949     01DB  120A  158A  200A  120A  118A  	fcall	stringdir
  1950     01E0  00F3               	movwf	___lldiv@divisor+3
  1951     01E1  083A               	movf	sprintf@val+3,w
  1952     01E2  00F7               	movwf	___lldiv@dividend+3
  1953     01E3  0839               	movf	sprintf@val+2,w
  1954     01E4  00F6               	movwf	___lldiv@dividend+2
  1955     01E5  0838               	movf	sprintf@val+1,w
  1956     01E6  00F5               	movwf	___lldiv@dividend+1
  1957     01E7  0837               	movf	sprintf@val,w
  1958     01E8  00F4               	movwf	___lldiv@dividend
  1959     01E9  120A  158A  2722  120A  118A  	fcall	___lldiv
  1960     01EE  0873               	movf	?___lldiv+3,w
  1961     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1962     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1963     01F1  00A7               	movwf	___llmod@dividend+3
  1964     01F2  0872               	movf	?___lldiv+2,w
  1965     01F3  00A6               	movwf	___llmod@dividend+2
  1966     01F4  0871               	movf	?___lldiv+1,w
  1967     01F5  00A5               	movwf	___llmod@dividend+1
  1968     01F6  0870               	movf	?___lldiv,w
  1969     01F7  00A4               	movwf	___llmod@dividend
  1970     01F8  120A  158A  2546  120A  118A  	fcall	___llmod
  1971     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1972     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1973     01FF  0820               	movf	?___llmod,w
  1974     0200  3E30               	addlw	48
  1975     0201  00BD               	movwf	sprintf@c
  1976     0202                     l1868:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1979     0202  083C               	movf	sprintf@sp,w
  1980     0203  0084               	movwf	4
  1981     0204  083D               	movf	sprintf@c,w
  1982     0205  1383               	bcf	3,7	;select IRP bank0
  1983     0206  0080               	movwf	0
  1984     0207                     l1870:
  1985     0207  3001               	movlw	1
  1986     0208  00AF               	movwf	??_sprintf
  1987     0209  082F               	movf	??_sprintf,w
  1988     020A  07BC               	addwf	sprintf@sp,f
  1989     020B                     l1872:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1992     020B  30FF               	movlw	255
  1993     020C  07B5               	addwf	sprintf@prec,f
  1994     020D  1803               	skipnc
  1995     020E  0AB6               	incf	sprintf@prec+1,f
  1996     020F  30FF               	movlw	255
  1997     0210  07B6               	addwf	sprintf@prec+1,f
  1998     0211  0A35               	incf	sprintf@prec,w
  1999     0212  1D03               	skipz
  2000     0213  2A18               	goto	u2291
  2001     0214  0A36               	incf	sprintf@prec+1,w
  2002     0215  1D03               	btfss	3,2
  2003     0216  2A18               	goto	u2291
  2004     0217  2A19               	goto	u2290
  2005     0218                     u2291:
  2006     0218  29B5               	goto	l1866
  2007     0219                     u2290:
  2008     0219                     l1874:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2011     0219  3001               	movlw	1
  2012     021A  07AA               	addwf	sprintf@f,f
  2013     021B  30FF               	movlw	-1
  2014     021C  072A               	addwf	sprintf@f,w
  2015     021D  0084               	movwf	4
  2016     021E  120A  158A  200A  120A  118A  	fcall	stringdir
  2017     0223  00BD               	movwf	sprintf@c
  2018     0224  083D               	movf	sprintf@c,w
  2019     0225  1D03               	btfss	3,2
  2020     0226  2A28               	goto	u2301
  2021     0227  2A29               	goto	u2300
  2022     0228                     u2301:
  2023     0228  290B               	goto	l1830
  2024     0229                     u2300:
  2025     0229                     l1876:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2028     0229  083C               	movf	sprintf@sp,w
  2029     022A  0084               	movwf	4
  2030     022B  1383               	bcf	3,7	;select IRP bank0
  2031     022C  0180               	clrf	0
  2032     022D                     l282:
  2033     022D  0008               	return
  2034     022E                     __end_of_sprintf:
  2035                           
  2036                           	psect	text2
  2037     0D46                     __ptext2:	
  2038 ;; *************** function ___llmod *****************
  2039 ;; Defined at:
  2040 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  divisor         4    0[BANK0 ] unsigned long 
  2043 ;;  dividend        4    4[BANK0 ] unsigned long 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  counter         1    9[BANK0 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  4    0[BANK0 ] unsigned long 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       8       0       0       0
  2056 ;;      Locals:         0       1       0       0       0
  2057 ;;      Temps:          0       1       0       0       0
  2058 ;;      Totals:         0      10       0       0       0
  2059 ;;Total ram usage:       10 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_sprintf
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068     0D46                     ___llmod:	
  2069                           ;psect for function ___llmod
  2070                           
  2071     0D46                     l1514:	
  2072                           ;incstack = 0
  2073                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2074                           
  2075     0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2076     0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2077     0D48  0823               	movf	___llmod@divisor+3,w
  2078     0D49  0422               	iorwf	___llmod@divisor+2,w
  2079     0D4A  0421               	iorwf	___llmod@divisor+1,w
  2080     0D4B  0420               	iorwf	___llmod@divisor,w
  2081     0D4C  1903               	skipnz
  2082     0D4D  2D4F               	goto	u1501
  2083     0D4E  2D50               	goto	u1500
  2084     0D4F                     u1501:
  2085     0D4F  2D93               	goto	l1530
  2086     0D50                     u1500:
  2087     0D50                     l1516:
  2088     0D50  01A9               	clrf	___llmod@counter
  2089     0D51  0AA9               	incf	___llmod@counter,f
  2090     0D52  2D60               	goto	l1520
  2091     0D53                     l1518:
  2092     0D53  3001               	movlw	1
  2093     0D54  00A8               	movwf	??___llmod
  2094     0D55                     u1515:
  2095     0D55  1003               	clrc
  2096     0D56  0DA0               	rlf	___llmod@divisor,f
  2097     0D57  0DA1               	rlf	___llmod@divisor+1,f
  2098     0D58  0DA2               	rlf	___llmod@divisor+2,f
  2099     0D59  0DA3               	rlf	___llmod@divisor+3,f
  2100     0D5A  0BA8               	decfsz	??___llmod,f
  2101     0D5B  2D55               	goto	u1515
  2102     0D5C  3001               	movlw	1
  2103     0D5D  00A8               	movwf	??___llmod
  2104     0D5E  0828               	movf	??___llmod,w
  2105     0D5F  07A9               	addwf	___llmod@counter,f
  2106     0D60                     l1520:
  2107     0D60  1FA3               	btfss	___llmod@divisor+3,7
  2108     0D61  2D63               	goto	u1521
  2109     0D62  2D64               	goto	u1520
  2110     0D63                     u1521:
  2111     0D63  2D53               	goto	l1518
  2112     0D64                     u1520:
  2113     0D64                     l1522:
  2114     0D64  0823               	movf	___llmod@divisor+3,w
  2115     0D65  0227               	subwf	___llmod@dividend+3,w
  2116     0D66  1D03               	skipz
  2117     0D67  2D72               	goto	u1535
  2118     0D68  0822               	movf	___llmod@divisor+2,w
  2119     0D69  0226               	subwf	___llmod@dividend+2,w
  2120     0D6A  1D03               	skipz
  2121     0D6B  2D72               	goto	u1535
  2122     0D6C  0821               	movf	___llmod@divisor+1,w
  2123     0D6D  0225               	subwf	___llmod@dividend+1,w
  2124     0D6E  1D03               	skipz
  2125     0D6F  2D72               	goto	u1535
  2126     0D70  0820               	movf	___llmod@divisor,w
  2127     0D71  0224               	subwf	___llmod@dividend,w
  2128     0D72                     u1535:
  2129     0D72  1C03               	skipc
  2130     0D73  2D75               	goto	u1531
  2131     0D74  2D76               	goto	u1530
  2132     0D75                     u1531:
  2133     0D75  2D84               	goto	l1526
  2134     0D76                     u1530:
  2135     0D76                     l1524:
  2136     0D76  0820               	movf	___llmod@divisor,w
  2137     0D77  02A4               	subwf	___llmod@dividend,f
  2138     0D78  0821               	movf	___llmod@divisor+1,w
  2139     0D79  1C03               	skipc
  2140     0D7A  0F21               	incfsz	___llmod@divisor+1,w
  2141     0D7B  02A5               	subwf	___llmod@dividend+1,f
  2142     0D7C  0822               	movf	___llmod@divisor+2,w
  2143     0D7D  1C03               	skipc
  2144     0D7E  0F22               	incfsz	___llmod@divisor+2,w
  2145     0D7F  02A6               	subwf	___llmod@dividend+2,f
  2146     0D80  0823               	movf	___llmod@divisor+3,w
  2147     0D81  1C03               	skipc
  2148     0D82  0F23               	incfsz	___llmod@divisor+3,w
  2149     0D83  02A7               	subwf	___llmod@dividend+3,f
  2150     0D84                     l1526:
  2151     0D84  3001               	movlw	1
  2152     0D85                     u1545:
  2153     0D85  1003               	clrc
  2154     0D86  0CA3               	rrf	___llmod@divisor+3,f
  2155     0D87  0CA2               	rrf	___llmod@divisor+2,f
  2156     0D88  0CA1               	rrf	___llmod@divisor+1,f
  2157     0D89  0CA0               	rrf	___llmod@divisor,f
  2158     0D8A  3EFF               	addlw	-1
  2159     0D8B  1D03               	skipz
  2160     0D8C  2D85               	goto	u1545
  2161     0D8D                     l1528:
  2162     0D8D  3001               	movlw	1
  2163     0D8E  02A9               	subwf	___llmod@counter,f
  2164     0D8F  1D03               	btfss	3,2
  2165     0D90  2D92               	goto	u1551
  2166     0D91  2D93               	goto	u1550
  2167     0D92                     u1551:
  2168     0D92  2D64               	goto	l1522
  2169     0D93                     u1550:
  2170     0D93                     l1530:
  2171     0D93  0827               	movf	___llmod@dividend+3,w
  2172     0D94  00A3               	movwf	?___llmod+3
  2173     0D95  0826               	movf	___llmod@dividend+2,w
  2174     0D96  00A2               	movwf	?___llmod+2
  2175     0D97  0825               	movf	___llmod@dividend+1,w
  2176     0D98  00A1               	movwf	?___llmod+1
  2177     0D99  0824               	movf	___llmod@dividend,w
  2178     0D9A  00A0               	movwf	?___llmod
  2179     0D9B                     l508:
  2180     0D9B  0008               	return
  2181     0D9C                     __end_of___llmod:
  2182                           
  2183                           	psect	text3
  2184     0F22                     __ptext3:	
  2185 ;; *************** function ___lldiv *****************
  2186 ;; Defined at:
  2187 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  divisor         4    0[COMMON] unsigned long 
  2190 ;;  dividend        4    4[COMMON] unsigned long 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  quotient        4    9[COMMON] unsigned long 
  2193 ;;  counter         1   13[COMMON] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  4    0[COMMON] unsigned long 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         8       0       0       0       0
  2204 ;;      Locals:         5       0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0
  2206 ;;      Totals:        14       0       0       0       0
  2207 ;;Total ram usage:       14 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_sprintf
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216     0F22                     ___lldiv:	
  2217                           ;psect for function ___lldiv
  2218                           
  2219     0F22                     l1454:	
  2220                           ;incstack = 0
  2221                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2222                           
  2223     0F22  3000               	movlw	0
  2224     0F23  00FC               	movwf	___lldiv@quotient+3
  2225     0F24  3000               	movlw	0
  2226     0F25  00FB               	movwf	___lldiv@quotient+2
  2227     0F26  3000               	movlw	0
  2228     0F27  00FA               	movwf	___lldiv@quotient+1
  2229     0F28  3000               	movlw	0
  2230     0F29  00F9               	movwf	___lldiv@quotient
  2231     0F2A  0873               	movf	___lldiv@divisor+3,w
  2232     0F2B  0472               	iorwf	___lldiv@divisor+2,w
  2233     0F2C  0471               	iorwf	___lldiv@divisor+1,w
  2234     0F2D  0470               	iorwf	___lldiv@divisor,w
  2235     0F2E  1903               	skipnz
  2236     0F2F  2F31               	goto	u1331
  2237     0F30  2F32               	goto	u1330
  2238     0F31                     u1331:
  2239     0F31  2F7F               	goto	l1474
  2240     0F32                     u1330:
  2241     0F32                     l1456:
  2242     0F32  01FD               	clrf	___lldiv@counter
  2243     0F33  0AFD               	incf	___lldiv@counter,f
  2244     0F34  2F42               	goto	l1460
  2245     0F35                     l1458:
  2246     0F35  3001               	movlw	1
  2247     0F36  00F8               	movwf	??___lldiv
  2248     0F37                     u1345:
  2249     0F37  1003               	clrc
  2250     0F38  0DF0               	rlf	___lldiv@divisor,f
  2251     0F39  0DF1               	rlf	___lldiv@divisor+1,f
  2252     0F3A  0DF2               	rlf	___lldiv@divisor+2,f
  2253     0F3B  0DF3               	rlf	___lldiv@divisor+3,f
  2254     0F3C  0BF8               	decfsz	??___lldiv,f
  2255     0F3D  2F37               	goto	u1345
  2256     0F3E  3001               	movlw	1
  2257     0F3F  00F8               	movwf	??___lldiv
  2258     0F40  0878               	movf	??___lldiv,w
  2259     0F41  07FD               	addwf	___lldiv@counter,f
  2260     0F42                     l1460:
  2261     0F42  1FF3               	btfss	___lldiv@divisor+3,7
  2262     0F43  2F45               	goto	u1351
  2263     0F44  2F46               	goto	u1350
  2264     0F45                     u1351:
  2265     0F45  2F35               	goto	l1458
  2266     0F46                     u1350:
  2267     0F46                     l1462:
  2268     0F46  3001               	movlw	1
  2269     0F47  00F8               	movwf	??___lldiv
  2270     0F48                     u1365:
  2271     0F48  1003               	clrc
  2272     0F49  0DF9               	rlf	___lldiv@quotient,f
  2273     0F4A  0DFA               	rlf	___lldiv@quotient+1,f
  2274     0F4B  0DFB               	rlf	___lldiv@quotient+2,f
  2275     0F4C  0DFC               	rlf	___lldiv@quotient+3,f
  2276     0F4D  0BF8               	decfsz	??___lldiv,f
  2277     0F4E  2F48               	goto	u1365
  2278     0F4F                     l1464:
  2279     0F4F  0873               	movf	___lldiv@divisor+3,w
  2280     0F50  0277               	subwf	___lldiv@dividend+3,w
  2281     0F51  1D03               	skipz
  2282     0F52  2F5D               	goto	u1375
  2283     0F53  0872               	movf	___lldiv@divisor+2,w
  2284     0F54  0276               	subwf	___lldiv@dividend+2,w
  2285     0F55  1D03               	skipz
  2286     0F56  2F5D               	goto	u1375
  2287     0F57  0871               	movf	___lldiv@divisor+1,w
  2288     0F58  0275               	subwf	___lldiv@dividend+1,w
  2289     0F59  1D03               	skipz
  2290     0F5A  2F5D               	goto	u1375
  2291     0F5B  0870               	movf	___lldiv@divisor,w
  2292     0F5C  0274               	subwf	___lldiv@dividend,w
  2293     0F5D                     u1375:
  2294     0F5D  1C03               	skipc
  2295     0F5E  2F60               	goto	u1371
  2296     0F5F  2F61               	goto	u1370
  2297     0F60                     u1371:
  2298     0F60  2F70               	goto	l1470
  2299     0F61                     u1370:
  2300     0F61                     l1466:
  2301     0F61  0870               	movf	___lldiv@divisor,w
  2302     0F62  02F4               	subwf	___lldiv@dividend,f
  2303     0F63  0871               	movf	___lldiv@divisor+1,w
  2304     0F64  1C03               	skipc
  2305     0F65  0F71               	incfsz	___lldiv@divisor+1,w
  2306     0F66  02F5               	subwf	___lldiv@dividend+1,f
  2307     0F67  0872               	movf	___lldiv@divisor+2,w
  2308     0F68  1C03               	skipc
  2309     0F69  0F72               	incfsz	___lldiv@divisor+2,w
  2310     0F6A  02F6               	subwf	___lldiv@dividend+2,f
  2311     0F6B  0873               	movf	___lldiv@divisor+3,w
  2312     0F6C  1C03               	skipc
  2313     0F6D  0F73               	incfsz	___lldiv@divisor+3,w
  2314     0F6E  02F7               	subwf	___lldiv@dividend+3,f
  2315     0F6F                     l1468:
  2316     0F6F  1479               	bsf	___lldiv@quotient,0
  2317     0F70                     l1470:
  2318     0F70  3001               	movlw	1
  2319     0F71                     u1385:
  2320     0F71  1003               	clrc
  2321     0F72  0CF3               	rrf	___lldiv@divisor+3,f
  2322     0F73  0CF2               	rrf	___lldiv@divisor+2,f
  2323     0F74  0CF1               	rrf	___lldiv@divisor+1,f
  2324     0F75  0CF0               	rrf	___lldiv@divisor,f
  2325     0F76  3EFF               	addlw	-1
  2326     0F77  1D03               	skipz
  2327     0F78  2F71               	goto	u1385
  2328     0F79                     l1472:
  2329     0F79  3001               	movlw	1
  2330     0F7A  02FD               	subwf	___lldiv@counter,f
  2331     0F7B  1D03               	btfss	3,2
  2332     0F7C  2F7E               	goto	u1391
  2333     0F7D  2F7F               	goto	u1390
  2334     0F7E                     u1391:
  2335     0F7E  2F46               	goto	l1462
  2336     0F7F                     u1390:
  2337     0F7F                     l1474:
  2338     0F7F  087C               	movf	___lldiv@quotient+3,w
  2339     0F80  00F3               	movwf	?___lldiv+3
  2340     0F81  087B               	movf	___lldiv@quotient+2,w
  2341     0F82  00F2               	movwf	?___lldiv+2
  2342     0F83  087A               	movf	___lldiv@quotient+1,w
  2343     0F84  00F1               	movwf	?___lldiv+1
  2344     0F85  0879               	movf	___lldiv@quotient,w
  2345     0F86  00F0               	movwf	?___lldiv
  2346     0F87                     l322:
  2347     0F87  0008               	return
  2348     0F88                     __end_of___lldiv:
  2349                           
  2350                           	psect	text4
  2351     0C5A                     __ptext4:	
  2352 ;; *************** function _setup *****************
  2353 ;; Defined at:
  2354 ;;		line 112 in file "main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2368 ;;      Params:         0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0
  2371 ;;      Totals:         0       0       0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381     0C5A                     _setup:	
  2382                           ;psect for function _setup
  2383                           
  2384     0C5A                     l1718:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _setup: [wreg+status,2+status,0]
  2387                           
  2388                           
  2389                           ;main.c: 113:     ANSEL = 0;
  2390     0C5A  1683               	bsf	3,5	;RP0=1, select bank3
  2391     0C5B  1703               	bsf	3,6	;RP1=1, select bank3
  2392     0C5C  0188               	clrf	8	;volatile
  2393                           
  2394                           ;main.c: 114:     ANSELH = 0;
  2395     0C5D  0189               	clrf	9	;volatile
  2396     0C5E                     l1720:
  2397                           
  2398                           ;main.c: 115:     TRISA = 0b00000010;
  2399     0C5E  3002               	movlw	2
  2400     0C5F  1683               	bsf	3,5	;RP0=1, select bank1
  2401     0C60  1303               	bcf	3,6	;RP1=0, select bank1
  2402     0C61  0085               	movwf	5	;volatile
  2403     0C62                     l1722:
  2404                           
  2405                           ;main.c: 116:     TRISD = 0;
  2406     0C62  0188               	clrf	8	;volatile
  2407     0C63                     l1724:
  2408                           
  2409                           ;main.c: 117:     PORTD = 0;
  2410     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  2411     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  2412     0C65  0188               	clrf	8	;volatile
  2413     0C66                     l1726:
  2414                           
  2415                           ;main.c: 118:     OSCCONbits.IRCF = 0b111;
  2416     0C66  3070               	movlw	112
  2417     0C67  1683               	bsf	3,5	;RP0=1, select bank1
  2418     0C68  1303               	bcf	3,6	;RP1=0, select bank1
  2419     0C69  048F               	iorwf	15,f	;volatile
  2420     0C6A                     l1728:
  2421                           
  2422                           ;main.c: 119:     OSCCONbits.SCS = 1;
  2423     0C6A  140F               	bsf	15,0	;volatile
  2424     0C6B                     l65:
  2425     0C6B  0008               	return
  2426     0C6C                     __end_of_setup:
  2427                           
  2428                           	psect	text5
  2429     0EBF                     __ptext5:	
  2430 ;; *************** function _read_red *****************
  2431 ;; Defined at:
  2432 ;;		line 17 in file "TCS230.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  4   36[BANK0 ] unsigned long 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       4       0       0       0
  2447 ;;      Locals:         0       4       0       0       0
  2448 ;;      Temps:          0       1       0       0       0
  2449 ;;      Totals:         0       9       0       0       0
  2450 ;;Total ram usage:        9 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 2
  2453 ;; This function calls:
  2454 ;;		___flmul
  2455 ;;		___fltol
  2456 ;;		___xxtofl
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462     0EBF                     _read_red:	
  2463                           ;psect for function _read_red
  2464                           
  2465     0EBF                     l1778:	
  2466                           ;incstack = 0
  2467                           ; Regs used in _read_red: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2468                           
  2469                           
  2470                           ;TCS230.c: 18:   unsigned long temp_freq;;TCS230.c: 19:   RD0 = 0;
  2471     0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  2472     0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  2473     0EC1  1008               	bcf	8,0	;volatile
  2474                           
  2475                           ;TCS230.c: 20:   RD1 = 0;
  2476     0EC2  1088               	bcf	8,1	;volatile
  2477     0EC3                     l1780:
  2478                           
  2479                           ;TCS230.c: 21:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2480     0EC3  3013               	movlw	19
  2481     0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2482     0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2483     0EC6  00C8               	movwf	??_read_red
  2484     0EC7                     u2507:
  2485     0EC7  0BC8               	decfsz	??_read_red,f
  2486     0EC8  2EC7               	goto	u2507
  2487     0EC9                     l138:	
  2488                           ;TCS230.c: 23:   }
  2489                           
  2490                           
  2491                           ;TCS230.c: 22:   while(PORTAbits.RA1 == 1){
  2492     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  2493     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  2494     0ECB  1885               	btfsc	5,1	;volatile
  2495     0ECC  2ECE               	goto	u2141
  2496     0ECD  2ECF               	goto	u2140
  2497     0ECE                     u2141:
  2498     0ECE  2EC9               	goto	l138
  2499     0ECF                     u2140:
  2500     0ECF                     l141:	
  2501                           ;TCS230.c: 25:   }
  2502                           
  2503                           
  2504                           ;TCS230.c: 24:   while(PORTAbits.RA1 == 0){
  2505     0ECF  1C85               	btfss	5,1	;volatile
  2506     0ED0  2ED2               	goto	u2151
  2507     0ED1  2ED3               	goto	u2150
  2508     0ED2                     u2151:
  2509     0ED2  2ECF               	goto	l141
  2510     0ED3                     u2150:
  2511     0ED3                     l1782:
  2512                           
  2513                           ;TCS230.c: 26:   TMR1 = 0;
  2514     0ED3  018E               	clrf	14	;volatile
  2515     0ED4  018F               	clrf	15	;volatile
  2516     0ED5                     l1784:
  2517                           
  2518                           ;TCS230.c: 27:   T1CONbits.TMR1ON = 1;
  2519     0ED5  1410               	bsf	16,0	;volatile
  2520     0ED6                     l144:	
  2521                           ;TCS230.c: 30:   }
  2522                           
  2523                           
  2524                           ;TCS230.c: 28:   while(PORTAbits.RA1 == 1){
  2525     0ED6  1885               	btfsc	5,1	;volatile
  2526     0ED7  2ED9               	goto	u2161
  2527     0ED8  2EDA               	goto	u2160
  2528     0ED9                     u2161:
  2529     0ED9  2ED6               	goto	l144
  2530     0EDA                     u2160:
  2531     0EDA                     l146:
  2532                           
  2533                           ;TCS230.c: 31:   T1CONbits.TMR1ON = 0;
  2534     0EDA  1010               	bcf	16,0	;volatile
  2535     0EDB                     l1786:
  2536                           
  2537                           ;TCS230.c: 32:   temp_freq = TMR1;
  2538     0EDB  080E               	movf	14,w	;volatile
  2539     0EDC  00C9               	movwf	read_red@temp_freq
  2540     0EDD  080F               	movf	15,w	;volatile
  2541     0EDE  00CA               	movwf	read_red@temp_freq+1
  2542     0EDF  01CB               	clrf	read_red@temp_freq+2
  2543     0EE0  01CC               	clrf	read_red@temp_freq+3
  2544     0EE1                     l1788:
  2545                           
  2546                           ;TCS230.c: 33:   TMR1 = 0;
  2547     0EE1  018E               	clrf	14	;volatile
  2548     0EE2  018F               	clrf	15	;volatile
  2549     0EE3                     l1790:
  2550                           
  2551                           ;TCS230.c: 34:   return (unsigned long)((float)temp_freq * 1.0);
  2552     0EE3  084C               	movf	read_red@temp_freq+3,w
  2553     0EE4  00F3               	movwf	___xxtofl@val+3
  2554     0EE5  084B               	movf	read_red@temp_freq+2,w
  2555     0EE6  00F2               	movwf	___xxtofl@val+2
  2556     0EE7  084A               	movf	read_red@temp_freq+1,w
  2557     0EE8  00F1               	movwf	___xxtofl@val+1
  2558     0EE9  0849               	movf	read_red@temp_freq,w
  2559     0EEA  00F0               	movwf	___xxtofl@val
  2560     0EEB  3000               	movlw	0
  2561     0EEC  120A  118A  204D  120A  158A  	fcall	___xxtofl
  2562     0EF1  0873               	movf	?___xxtofl+3,w
  2563     0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  2564     0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  2565     0EF4  00A7               	movwf	___flmul@a+3
  2566     0EF5  0872               	movf	?___xxtofl+2,w
  2567     0EF6  00A6               	movwf	___flmul@a+2
  2568     0EF7  0871               	movf	?___xxtofl+1,w
  2569     0EF8  00A5               	movwf	___flmul@a+1
  2570     0EF9  0870               	movf	?___xxtofl,w
  2571     0EFA  00A4               	movwf	___flmul@a
  2572     0EFB  303F               	movlw	63
  2573     0EFC  00A3               	movwf	___flmul@b+3
  2574     0EFD  3080               	movlw	128
  2575     0EFE  00A2               	movwf	___flmul@b+2
  2576     0EFF  3000               	movlw	0
  2577     0F00  00A1               	movwf	___flmul@b+1
  2578     0F01  3000               	movlw	0
  2579     0F02  00A0               	movwf	___flmul@b
  2580     0F03  120A  118A  24AE  120A  158A  	fcall	___flmul
  2581     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  2582     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  2583     0F0A  0823               	movf	?___flmul+3,w
  2584     0F0B  00BD               	movwf	___fltol@f1+3
  2585     0F0C  0822               	movf	?___flmul+2,w
  2586     0F0D  00BC               	movwf	___fltol@f1+2
  2587     0F0E  0821               	movf	?___flmul+1,w
  2588     0F0F  00BB               	movwf	___fltol@f1+1
  2589     0F10  0820               	movf	?___flmul,w
  2590     0F11  00BA               	movwf	___fltol@f1
  2591     0F12  120A  158A  2788  120A  158A  	fcall	___fltol
  2592     0F17  1283               	bcf	3,5	;RP0=0, select bank0
  2593     0F18  1303               	bcf	3,6	;RP1=0, select bank0
  2594     0F19  083D               	movf	?___fltol+3,w
  2595     0F1A  00C7               	movwf	?_read_red+3
  2596     0F1B  083C               	movf	?___fltol+2,w
  2597     0F1C  00C6               	movwf	?_read_red+2
  2598     0F1D  083B               	movf	?___fltol+1,w
  2599     0F1E  00C5               	movwf	?_read_red+1
  2600     0F1F  083A               	movf	?___fltol,w
  2601     0F20  00C4               	movwf	?_read_red
  2602     0F21                     l147:
  2603     0F21  0008               	return
  2604     0F22                     __end_of_read_red:
  2605                           
  2606                           	psect	text6
  2607     0E5C                     __ptext6:	
  2608 ;; *************** function _read_green *****************
  2609 ;; Defined at:
  2610 ;;		line 38 in file "TCS230.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  4   36[BANK0 ] unsigned long 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       4       0       0       0
  2625 ;;      Locals:         0       4       0       0       0
  2626 ;;      Temps:          0       1       0       0       0
  2627 ;;      Totals:         0       9       0       0       0
  2628 ;;Total ram usage:        9 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 2
  2631 ;; This function calls:
  2632 ;;		___flmul
  2633 ;;		___fltol
  2634 ;;		___xxtofl
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640     0E5C                     _read_green:	
  2641                           ;psect for function _read_green
  2642                           
  2643     0E5C                     l1794:	
  2644                           ;incstack = 0
  2645                           ; Regs used in _read_green: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2646                           
  2647                           
  2648                           ;TCS230.c: 39:   unsigned long temp_freq;;TCS230.c: 40:   RD0 = 1;
  2649     0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  2650     0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  2651     0E5E  1408               	bsf	8,0	;volatile
  2652                           
  2653                           ;TCS230.c: 41:   RD1 = 1;
  2654     0E5F  1488               	bsf	8,1	;volatile
  2655     0E60                     l1796:
  2656                           
  2657                           ;TCS230.c: 42:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2658     0E60  3013               	movlw	19
  2659     0E61  1283               	bcf	3,5	;RP0=0, select bank0
  2660     0E62  1303               	bcf	3,6	;RP1=0, select bank0
  2661     0E63  00C8               	movwf	??_read_green
  2662     0E64                     u2517:
  2663     0E64  0BC8               	decfsz	??_read_green,f
  2664     0E65  2E64               	goto	u2517
  2665     0E66                     l150:	
  2666                           ;TCS230.c: 44:   }
  2667                           
  2668                           
  2669                           ;TCS230.c: 43:   while(PORTAbits.RA1 == 1){
  2670     0E66  1283               	bcf	3,5	;RP0=0, select bank0
  2671     0E67  1303               	bcf	3,6	;RP1=0, select bank0
  2672     0E68  1885               	btfsc	5,1	;volatile
  2673     0E69  2E6B               	goto	u2171
  2674     0E6A  2E6C               	goto	u2170
  2675     0E6B                     u2171:
  2676     0E6B  2E66               	goto	l150
  2677     0E6C                     u2170:
  2678     0E6C                     l153:	
  2679                           ;TCS230.c: 46:   }
  2680                           
  2681                           
  2682                           ;TCS230.c: 45:   while(PORTAbits.RA1 == 0){
  2683     0E6C  1C85               	btfss	5,1	;volatile
  2684     0E6D  2E6F               	goto	u2181
  2685     0E6E  2E70               	goto	u2180
  2686     0E6F                     u2181:
  2687     0E6F  2E6C               	goto	l153
  2688     0E70                     u2180:
  2689     0E70                     l1798:
  2690                           
  2691                           ;TCS230.c: 47:   TMR1 = 0;
  2692     0E70  018E               	clrf	14	;volatile
  2693     0E71  018F               	clrf	15	;volatile
  2694     0E72                     l1800:
  2695                           
  2696                           ;TCS230.c: 48:   T1CONbits.TMR1ON = 1;
  2697     0E72  1410               	bsf	16,0	;volatile
  2698     0E73                     l156:	
  2699                           ;TCS230.c: 50:   }
  2700                           
  2701                           
  2702                           ;TCS230.c: 49:   while(PORTAbits.RA1 == 1){
  2703     0E73  1885               	btfsc	5,1	;volatile
  2704     0E74  2E76               	goto	u2191
  2705     0E75  2E77               	goto	u2190
  2706     0E76                     u2191:
  2707     0E76  2E73               	goto	l156
  2708     0E77                     u2190:
  2709     0E77                     l158:
  2710                           
  2711                           ;TCS230.c: 51:   T1CONbits.TMR1ON = 0;
  2712     0E77  1010               	bcf	16,0	;volatile
  2713     0E78                     l1802:
  2714                           
  2715                           ;TCS230.c: 52:   temp_freq = TMR1;
  2716     0E78  080E               	movf	14,w	;volatile
  2717     0E79  00C9               	movwf	read_green@temp_freq
  2718     0E7A  080F               	movf	15,w	;volatile
  2719     0E7B  00CA               	movwf	read_green@temp_freq+1
  2720     0E7C  01CB               	clrf	read_green@temp_freq+2
  2721     0E7D  01CC               	clrf	read_green@temp_freq+3
  2722     0E7E                     l1804:
  2723                           
  2724                           ;TCS230.c: 53:   TMR1 = 0;
  2725     0E7E  018E               	clrf	14	;volatile
  2726     0E7F  018F               	clrf	15	;volatile
  2727     0E80                     l1806:
  2728                           
  2729                           ;TCS230.c: 54:   return (unsigned long)((float)temp_freq * 1.0);
  2730     0E80  084C               	movf	read_green@temp_freq+3,w
  2731     0E81  00F3               	movwf	___xxtofl@val+3
  2732     0E82  084B               	movf	read_green@temp_freq+2,w
  2733     0E83  00F2               	movwf	___xxtofl@val+2
  2734     0E84  084A               	movf	read_green@temp_freq+1,w
  2735     0E85  00F1               	movwf	___xxtofl@val+1
  2736     0E86  0849               	movf	read_green@temp_freq,w
  2737     0E87  00F0               	movwf	___xxtofl@val
  2738     0E88  3000               	movlw	0
  2739     0E89  120A  118A  204D  120A  158A  	fcall	___xxtofl
  2740     0E8E  0873               	movf	?___xxtofl+3,w
  2741     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2742     0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2743     0E91  00A7               	movwf	___flmul@a+3
  2744     0E92  0872               	movf	?___xxtofl+2,w
  2745     0E93  00A6               	movwf	___flmul@a+2
  2746     0E94  0871               	movf	?___xxtofl+1,w
  2747     0E95  00A5               	movwf	___flmul@a+1
  2748     0E96  0870               	movf	?___xxtofl,w
  2749     0E97  00A4               	movwf	___flmul@a
  2750     0E98  303F               	movlw	63
  2751     0E99  00A3               	movwf	___flmul@b+3
  2752     0E9A  3080               	movlw	128
  2753     0E9B  00A2               	movwf	___flmul@b+2
  2754     0E9C  3000               	movlw	0
  2755     0E9D  00A1               	movwf	___flmul@b+1
  2756     0E9E  3000               	movlw	0
  2757     0E9F  00A0               	movwf	___flmul@b
  2758     0EA0  120A  118A  24AE  120A  158A  	fcall	___flmul
  2759     0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  2760     0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  2761     0EA7  0823               	movf	?___flmul+3,w
  2762     0EA8  00BD               	movwf	___fltol@f1+3
  2763     0EA9  0822               	movf	?___flmul+2,w
  2764     0EAA  00BC               	movwf	___fltol@f1+2
  2765     0EAB  0821               	movf	?___flmul+1,w
  2766     0EAC  00BB               	movwf	___fltol@f1+1
  2767     0EAD  0820               	movf	?___flmul,w
  2768     0EAE  00BA               	movwf	___fltol@f1
  2769     0EAF  120A  158A  2788  120A  158A  	fcall	___fltol
  2770     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2771     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2772     0EB6  083D               	movf	?___fltol+3,w
  2773     0EB7  00C7               	movwf	?_read_green+3
  2774     0EB8  083C               	movf	?___fltol+2,w
  2775     0EB9  00C6               	movwf	?_read_green+2
  2776     0EBA  083B               	movf	?___fltol+1,w
  2777     0EBB  00C5               	movwf	?_read_green+1
  2778     0EBC  083A               	movf	?___fltol,w
  2779     0EBD  00C4               	movwf	?_read_green
  2780     0EBE                     l159:
  2781     0EBE  0008               	return
  2782     0EBF                     __end_of_read_green:
  2783                           
  2784                           	psect	text7
  2785     0DF9                     __ptext7:	
  2786 ;; *************** function _read_blue *****************
  2787 ;; Defined at:
  2788 ;;		line 58 in file "TCS230.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  4   36[BANK0 ] unsigned long 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       4       0       0       0
  2803 ;;      Locals:         0       4       0       0       0
  2804 ;;      Temps:          0       1       0       0       0
  2805 ;;      Totals:         0       9       0       0       0
  2806 ;;Total ram usage:        9 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		___flmul
  2811 ;;		___fltol
  2812 ;;		___xxtofl
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818     0DF9                     _read_blue:	
  2819                           ;psect for function _read_blue
  2820                           
  2821     0DF9                     l1810:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _read_blue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2824                           
  2825                           
  2826                           ;TCS230.c: 59:   unsigned long temp_freq;;TCS230.c: 60:   RD0 = 0;
  2827     0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2828     0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2829     0DFB  1008               	bcf	8,0	;volatile
  2830                           
  2831                           ;TCS230.c: 61:   RD1 = 1;
  2832     0DFC  1488               	bsf	8,1	;volatile
  2833     0DFD                     l1812:
  2834                           
  2835                           ;TCS230.c: 62:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2836     0DFD  3013               	movlw	19
  2837     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2838     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2839     0E00  00C8               	movwf	??_read_blue
  2840     0E01                     u2527:
  2841     0E01  0BC8               	decfsz	??_read_blue,f
  2842     0E02  2E01               	goto	u2527
  2843     0E03                     l162:	
  2844                           ;TCS230.c: 64:   }
  2845                           
  2846                           
  2847                           ;TCS230.c: 63:   while(PORTAbits.RA1 == 1){
  2848     0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2849     0E04  1303               	bcf	3,6	;RP1=0, select bank0
  2850     0E05  1885               	btfsc	5,1	;volatile
  2851     0E06  2E08               	goto	u2201
  2852     0E07  2E09               	goto	u2200
  2853     0E08                     u2201:
  2854     0E08  2E03               	goto	l162
  2855     0E09                     u2200:
  2856     0E09                     l165:	
  2857                           ;TCS230.c: 66:   }
  2858                           
  2859                           
  2860                           ;TCS230.c: 65:   while(PORTAbits.RA1 == 0){
  2861     0E09  1C85               	btfss	5,1	;volatile
  2862     0E0A  2E0C               	goto	u2211
  2863     0E0B  2E0D               	goto	u2210
  2864     0E0C                     u2211:
  2865     0E0C  2E09               	goto	l165
  2866     0E0D                     u2210:
  2867     0E0D                     l1814:
  2868                           
  2869                           ;TCS230.c: 67:   TMR1 = 0;
  2870     0E0D  018E               	clrf	14	;volatile
  2871     0E0E  018F               	clrf	15	;volatile
  2872     0E0F                     l1816:
  2873                           
  2874                           ;TCS230.c: 68:   T1CONbits.TMR1ON = 1;
  2875     0E0F  1410               	bsf	16,0	;volatile
  2876     0E10                     l168:	
  2877                           ;TCS230.c: 70:   }
  2878                           
  2879                           
  2880                           ;TCS230.c: 69:   while(PORTAbits.RA1 == 1){
  2881     0E10  1885               	btfsc	5,1	;volatile
  2882     0E11  2E13               	goto	u2221
  2883     0E12  2E14               	goto	u2220
  2884     0E13                     u2221:
  2885     0E13  2E10               	goto	l168
  2886     0E14                     u2220:
  2887     0E14                     l1818:
  2888                           
  2889                           ;TCS230.c: 71:   temp_freq = TMR1;
  2890     0E14  080E               	movf	14,w	;volatile
  2891     0E15  00C9               	movwf	read_blue@temp_freq
  2892     0E16  080F               	movf	15,w	;volatile
  2893     0E17  00CA               	movwf	read_blue@temp_freq+1
  2894     0E18  01CB               	clrf	read_blue@temp_freq+2
  2895     0E19  01CC               	clrf	read_blue@temp_freq+3
  2896     0E1A                     l1820:
  2897                           
  2898                           ;TCS230.c: 72:   T1CONbits.TMR1ON = 0;
  2899     0E1A  1010               	bcf	16,0	;volatile
  2900     0E1B                     l1822:
  2901                           
  2902                           ;TCS230.c: 74:   TMR1 = 0;
  2903     0E1B  018E               	clrf	14	;volatile
  2904     0E1C  018F               	clrf	15	;volatile
  2905     0E1D                     l1824:
  2906                           
  2907                           ;TCS230.c: 75:   return (unsigned long)((float)temp_freq * 1.0);
  2908     0E1D  084C               	movf	read_blue@temp_freq+3,w
  2909     0E1E  00F3               	movwf	___xxtofl@val+3
  2910     0E1F  084B               	movf	read_blue@temp_freq+2,w
  2911     0E20  00F2               	movwf	___xxtofl@val+2
  2912     0E21  084A               	movf	read_blue@temp_freq+1,w
  2913     0E22  00F1               	movwf	___xxtofl@val+1
  2914     0E23  0849               	movf	read_blue@temp_freq,w
  2915     0E24  00F0               	movwf	___xxtofl@val
  2916     0E25  3000               	movlw	0
  2917     0E26  120A  118A  204D  120A  158A  	fcall	___xxtofl
  2918     0E2B  0873               	movf	?___xxtofl+3,w
  2919     0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  2920     0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  2921     0E2E  00A7               	movwf	___flmul@a+3
  2922     0E2F  0872               	movf	?___xxtofl+2,w
  2923     0E30  00A6               	movwf	___flmul@a+2
  2924     0E31  0871               	movf	?___xxtofl+1,w
  2925     0E32  00A5               	movwf	___flmul@a+1
  2926     0E33  0870               	movf	?___xxtofl,w
  2927     0E34  00A4               	movwf	___flmul@a
  2928     0E35  303F               	movlw	63
  2929     0E36  00A3               	movwf	___flmul@b+3
  2930     0E37  3080               	movlw	128
  2931     0E38  00A2               	movwf	___flmul@b+2
  2932     0E39  3000               	movlw	0
  2933     0E3A  00A1               	movwf	___flmul@b+1
  2934     0E3B  3000               	movlw	0
  2935     0E3C  00A0               	movwf	___flmul@b
  2936     0E3D  120A  118A  24AE  120A  158A  	fcall	___flmul
  2937     0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2938     0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2939     0E44  0823               	movf	?___flmul+3,w
  2940     0E45  00BD               	movwf	___fltol@f1+3
  2941     0E46  0822               	movf	?___flmul+2,w
  2942     0E47  00BC               	movwf	___fltol@f1+2
  2943     0E48  0821               	movf	?___flmul+1,w
  2944     0E49  00BB               	movwf	___fltol@f1+1
  2945     0E4A  0820               	movf	?___flmul,w
  2946     0E4B  00BA               	movwf	___fltol@f1
  2947     0E4C  120A  158A  2788  120A  158A  	fcall	___fltol
  2948     0E51  1283               	bcf	3,5	;RP0=0, select bank0
  2949     0E52  1303               	bcf	3,6	;RP1=0, select bank0
  2950     0E53  083D               	movf	?___fltol+3,w
  2951     0E54  00C7               	movwf	?_read_blue+3
  2952     0E55  083C               	movf	?___fltol+2,w
  2953     0E56  00C6               	movwf	?_read_blue+2
  2954     0E57  083B               	movf	?___fltol+1,w
  2955     0E58  00C5               	movwf	?_read_blue+1
  2956     0E59  083A               	movf	?___fltol,w
  2957     0E5A  00C4               	movwf	?_read_blue
  2958     0E5B                     l171:
  2959     0E5B  0008               	return
  2960     0E5C                     __end_of_read_blue:
  2961                           
  2962                           	psect	text8
  2963     004D                     __ptext8:	
  2964 ;; *************** function ___xxtofl *****************
  2965 ;; Defined at:
  2966 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  sign            1    wreg     unsigned char 
  2969 ;;  val             4    0[COMMON] long 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  sign            1    8[COMMON] unsigned char 
  2972 ;;  arg             4   10[COMMON] unsigned long 
  2973 ;;  exp             1    9[COMMON] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  4    0[COMMON] unsigned char 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         4       0       0       0       0
  2984 ;;      Locals:         6       0       0       0       0
  2985 ;;      Temps:          4       0       0       0       0
  2986 ;;      Totals:        14       0       0       0       0
  2987 ;;Total ram usage:       14 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_read_red
  2993 ;;		_read_green
  2994 ;;		_read_blue
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998     004D                     ___xxtofl:	
  2999                           ;psect for function ___xxtofl
  3000                           
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3004                           ;___xxtofl@sign stored from wreg
  3005     004D  00F8               	movwf	___xxtofl@sign
  3006     004E                     l1674:
  3007     004E  0878               	movf	___xxtofl@sign,w
  3008     004F  1903               	btfsc	3,2
  3009     0050  2852               	goto	u1931
  3010     0051  2853               	goto	u1930
  3011     0052                     u1931:
  3012     0052  2867               	goto	l1680
  3013     0053                     u1930:
  3014     0053                     l1676:
  3015     0053  1FF3               	btfss	___xxtofl@val+3,7
  3016     0054  2856               	goto	u1941
  3017     0055  2857               	goto	u1940
  3018     0056                     u1941:
  3019     0056  2867               	goto	l1680
  3020     0057                     u1940:
  3021     0057                     l1678:
  3022     0057  0970               	comf	___xxtofl@val,w
  3023     0058  00FA               	movwf	___xxtofl@arg
  3024     0059  0971               	comf	___xxtofl@val+1,w
  3025     005A  00FB               	movwf	___xxtofl@arg+1
  3026     005B  0972               	comf	___xxtofl@val+2,w
  3027     005C  00FC               	movwf	___xxtofl@arg+2
  3028     005D  0973               	comf	___xxtofl@val+3,w
  3029     005E  00FD               	movwf	___xxtofl@arg+3
  3030     005F  0AFA               	incf	___xxtofl@arg,f
  3031     0060  1903               	skipnz
  3032     0061  0AFB               	incf	___xxtofl@arg+1,f
  3033     0062  1903               	skipnz
  3034     0063  0AFC               	incf	___xxtofl@arg+2,f
  3035     0064  1903               	skipnz
  3036     0065  0AFD               	incf	___xxtofl@arg+3,f
  3037     0066  286F               	goto	l719
  3038     0067                     l1680:
  3039     0067  0873               	movf	___xxtofl@val+3,w
  3040     0068  00FD               	movwf	___xxtofl@arg+3
  3041     0069  0872               	movf	___xxtofl@val+2,w
  3042     006A  00FC               	movwf	___xxtofl@arg+2
  3043     006B  0871               	movf	___xxtofl@val+1,w
  3044     006C  00FB               	movwf	___xxtofl@arg+1
  3045     006D  0870               	movf	___xxtofl@val,w
  3046     006E  00FA               	movwf	___xxtofl@arg
  3047     006F                     l719:
  3048     006F  0873               	movf	___xxtofl@val+3,w
  3049     0070  0472               	iorwf	___xxtofl@val+2,w
  3050     0071  0471               	iorwf	___xxtofl@val+1,w
  3051     0072  0470               	iorwf	___xxtofl@val,w
  3052     0073  1D03               	skipz
  3053     0074  2876               	goto	u1951
  3054     0075  2877               	goto	u1950
  3055     0076                     u1951:
  3056     0076  2880               	goto	l1686
  3057     0077                     u1950:
  3058     0077                     l1682:
  3059     0077  3000               	movlw	0
  3060     0078  00F3               	movwf	?___xxtofl+3
  3061     0079  3000               	movlw	0
  3062     007A  00F2               	movwf	?___xxtofl+2
  3063     007B  3000               	movlw	0
  3064     007C  00F1               	movwf	?___xxtofl+1
  3065     007D  3000               	movlw	0
  3066     007E  00F0               	movwf	?___xxtofl
  3067     007F  2904               	goto	l721
  3068     0080                     l1686:
  3069     0080  3096               	movlw	150
  3070     0081  00F9               	movwf	___xxtofl@exp
  3071     0082  2890               	goto	l1690
  3072     0083                     l1688:
  3073     0083  3001               	movlw	1
  3074     0084  00F4               	movwf	??___xxtofl
  3075     0085  0874               	movf	??___xxtofl,w
  3076     0086  07F9               	addwf	___xxtofl@exp,f
  3077     0087  3001               	movlw	1
  3078     0088                     u1965:
  3079     0088  1003               	clrc
  3080     0089  0CFD               	rrf	___xxtofl@arg+3,f
  3081     008A  0CFC               	rrf	___xxtofl@arg+2,f
  3082     008B  0CFB               	rrf	___xxtofl@arg+1,f
  3083     008C  0CFA               	rrf	___xxtofl@arg,f
  3084     008D  3EFF               	addlw	-1
  3085     008E  1D03               	skipz
  3086     008F  2888               	goto	u1965
  3087     0090                     l1690:
  3088     0090  30FE               	movlw	254
  3089     0091  057D               	andwf	___xxtofl@arg+3,w
  3090     0092  1D03               	btfss	3,2
  3091     0093  2895               	goto	u1971
  3092     0094  2896               	goto	u1970
  3093     0095                     u1971:
  3094     0095  2883               	goto	l1688
  3095     0096                     u1970:
  3096     0096  28B2               	goto	l725
  3097     0097                     l1692:
  3098     0097  3001               	movlw	1
  3099     0098  00F4               	movwf	??___xxtofl
  3100     0099  0874               	movf	??___xxtofl,w
  3101     009A  07F9               	addwf	___xxtofl@exp,f
  3102     009B                     l1694:
  3103     009B  3001               	movlw	1
  3104     009C  07FA               	addwf	___xxtofl@arg,f
  3105     009D  3000               	movlw	0
  3106     009E  1803               	skipnc
  3107     009F  3001               	movlw	1
  3108     00A0  07FB               	addwf	___xxtofl@arg+1,f
  3109     00A1  3000               	movlw	0
  3110     00A2  1803               	skipnc
  3111     00A3  3001               	movlw	1
  3112     00A4  07FC               	addwf	___xxtofl@arg+2,f
  3113     00A5  3000               	movlw	0
  3114     00A6  1803               	skipnc
  3115     00A7  3001               	movlw	1
  3116     00A8  07FD               	addwf	___xxtofl@arg+3,f
  3117     00A9                     l1696:
  3118     00A9  3001               	movlw	1
  3119     00AA                     u1985:
  3120     00AA  1003               	clrc
  3121     00AB  0CFD               	rrf	___xxtofl@arg+3,f
  3122     00AC  0CFC               	rrf	___xxtofl@arg+2,f
  3123     00AD  0CFB               	rrf	___xxtofl@arg+1,f
  3124     00AE  0CFA               	rrf	___xxtofl@arg,f
  3125     00AF  3EFF               	addlw	-1
  3126     00B0  1D03               	skipz
  3127     00B1  28AA               	goto	u1985
  3128     00B2                     l725:
  3129     00B2  30FF               	movlw	255
  3130     00B3  057D               	andwf	___xxtofl@arg+3,w
  3131     00B4  1D03               	btfss	3,2
  3132     00B5  28B7               	goto	u1991
  3133     00B6  28B8               	goto	u1990
  3134     00B7                     u1991:
  3135     00B7  2897               	goto	l1692
  3136     00B8                     u1990:
  3137     00B8  28C4               	goto	l1700
  3138     00B9                     l1698:
  3139     00B9  3001               	movlw	1
  3140     00BA  02F9               	subwf	___xxtofl@exp,f
  3141     00BB  3001               	movlw	1
  3142     00BC  00F4               	movwf	??___xxtofl
  3143     00BD                     u2005:
  3144     00BD  1003               	clrc
  3145     00BE  0DFA               	rlf	___xxtofl@arg,f
  3146     00BF  0DFB               	rlf	___xxtofl@arg+1,f
  3147     00C0  0DFC               	rlf	___xxtofl@arg+2,f
  3148     00C1  0DFD               	rlf	___xxtofl@arg+3,f
  3149     00C2  0BF4               	decfsz	??___xxtofl,f
  3150     00C3  28BD               	goto	u2005
  3151     00C4                     l1700:
  3152     00C4  1BFC               	btfsc	___xxtofl@arg+2,7
  3153     00C5  28C7               	goto	u2011
  3154     00C6  28C8               	goto	u2010
  3155     00C7                     u2011:
  3156     00C7  28CE               	goto	l732
  3157     00C8                     u2010:
  3158     00C8                     l1702:
  3159     00C8  3002               	movlw	2
  3160     00C9  0279               	subwf	___xxtofl@exp,w
  3161     00CA  1803               	skipnc
  3162     00CB  28CD               	goto	u2021
  3163     00CC  28CE               	goto	u2020
  3164     00CD                     u2021:
  3165     00CD  28B9               	goto	l1698
  3166     00CE                     u2020:
  3167     00CE                     l732:
  3168     00CE  1879               	btfsc	___xxtofl@exp,0
  3169     00CF  28D1               	goto	u2031
  3170     00D0  28D2               	goto	u2030
  3171     00D1                     u2031:
  3172     00D1  28DA               	goto	l733
  3173     00D2                     u2030:
  3174     00D2                     l1704:
  3175     00D2  30FF               	movlw	255
  3176     00D3  05FA               	andwf	___xxtofl@arg,f
  3177     00D4  30FF               	movlw	255
  3178     00D5  05FB               	andwf	___xxtofl@arg+1,f
  3179     00D6  307F               	movlw	127
  3180     00D7  05FC               	andwf	___xxtofl@arg+2,f
  3181     00D8  30FF               	movlw	255
  3182     00D9  05FD               	andwf	___xxtofl@arg+3,f
  3183     00DA                     l733:
  3184     00DA  1003               	clrc
  3185     00DB  0CF9               	rrf	___xxtofl@exp,f
  3186     00DC                     l1706:
  3187     00DC  0879               	movf	___xxtofl@exp,w
  3188     00DD  00F4               	movwf	??___xxtofl
  3189     00DE  01F5               	clrf	??___xxtofl+1
  3190     00DF  01F6               	clrf	??___xxtofl+2
  3191     00E0  01F7               	clrf	??___xxtofl+3
  3192     00E1  3018               	movlw	24
  3193     00E2                     u2045:
  3194     00E2  1003               	clrc
  3195     00E3  0DF4               	rlf	??___xxtofl,f
  3196     00E4  0DF5               	rlf	??___xxtofl+1,f
  3197     00E5  0DF6               	rlf	??___xxtofl+2,f
  3198     00E6  0DF7               	rlf	??___xxtofl+3,f
  3199     00E7                     u2040:
  3200     00E7  3EFF               	addlw	-1
  3201     00E8  1D03               	skipz
  3202     00E9  28E2               	goto	u2045
  3203     00EA  0874               	movf	??___xxtofl,w
  3204     00EB  04FA               	iorwf	___xxtofl@arg,f
  3205     00EC  0875               	movf	??___xxtofl+1,w
  3206     00ED  04FB               	iorwf	___xxtofl@arg+1,f
  3207     00EE  0876               	movf	??___xxtofl+2,w
  3208     00EF  04FC               	iorwf	___xxtofl@arg+2,f
  3209     00F0  0877               	movf	??___xxtofl+3,w
  3210     00F1  04FD               	iorwf	___xxtofl@arg+3,f
  3211     00F2                     l1708:
  3212     00F2  0878               	movf	___xxtofl@sign,w
  3213     00F3  1903               	btfsc	3,2
  3214     00F4  28F6               	goto	u2051
  3215     00F5  28F7               	goto	u2050
  3216     00F6                     u2051:
  3217     00F6  28FC               	goto	l1714
  3218     00F7                     u2050:
  3219     00F7                     l1710:
  3220     00F7  1FF3               	btfss	___xxtofl@val+3,7
  3221     00F8  28FA               	goto	u2061
  3222     00F9  28FB               	goto	u2060
  3223     00FA                     u2061:
  3224     00FA  28FC               	goto	l1714
  3225     00FB                     u2060:
  3226     00FB                     l1712:
  3227     00FB  17FD               	bsf	___xxtofl@arg+3,7
  3228     00FC                     l1714:
  3229     00FC  087D               	movf	___xxtofl@arg+3,w
  3230     00FD  00F3               	movwf	?___xxtofl+3
  3231     00FE  087C               	movf	___xxtofl@arg+2,w
  3232     00FF  00F2               	movwf	?___xxtofl+2
  3233     0100  087B               	movf	___xxtofl@arg+1,w
  3234     0101  00F1               	movwf	?___xxtofl+1
  3235     0102  087A               	movf	___xxtofl@arg,w
  3236     0103  00F0               	movwf	?___xxtofl
  3237     0104                     l721:
  3238     0104  0008               	return
  3239     0105                     __end_of___xxtofl:
  3240                           
  3241                           	psect	text9
  3242     0F88                     __ptext9:	
  3243 ;; *************** function ___fltol *****************
  3244 ;; Defined at:
  3245 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  f1              4   26[BANK0 ] unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  exp1            1   35[BANK0 ] unsigned char 
  3250 ;;  sign1           1   34[BANK0 ] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  4   26[BANK0 ] long 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       4       0       0       0
  3261 ;;      Locals:         0       2       0       0       0
  3262 ;;      Temps:          0       4       0       0       0
  3263 ;;      Totals:         0      10       0       0       0
  3264 ;;Total ram usage:       10 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_read_red
  3270 ;;		_read_green
  3271 ;;		_read_blue
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275     0F88                     ___fltol:	
  3276                           ;psect for function ___fltol
  3277                           
  3278     0F88                     l1478:	
  3279                           ;incstack = 0
  3280                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3281                           
  3282     0F88  1003               	clrc
  3283     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3284     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3285     0F8B  0D3C               	rlf	___fltol@f1+2,w
  3286     0F8C  0D3D               	rlf	___fltol@f1+3,w
  3287     0F8D  00C3               	movwf	___fltol@exp1
  3288     0F8E  0843               	movf	___fltol@exp1,w
  3289     0F8F  1D03               	btfss	3,2
  3290     0F90  2F92               	goto	u1401
  3291     0F91  2F93               	goto	u1400
  3292     0F92                     u1401:
  3293     0F92  2F9C               	goto	l1484
  3294     0F93                     u1400:
  3295     0F93                     l1480:
  3296     0F93  3000               	movlw	0
  3297     0F94  00BD               	movwf	?___fltol+3
  3298     0F95  3000               	movlw	0
  3299     0F96  00BC               	movwf	?___fltol+2
  3300     0F97  3000               	movlw	0
  3301     0F98  00BB               	movwf	?___fltol+1
  3302     0F99  3000               	movlw	0
  3303     0F9A  00BA               	movwf	?___fltol
  3304     0F9B  2FFF               	goto	l472
  3305     0F9C                     l1484:
  3306     0F9C  083A               	movf	___fltol@f1,w
  3307     0F9D  00BE               	movwf	??___fltol
  3308     0F9E  083B               	movf	___fltol@f1+1,w
  3309     0F9F  00BF               	movwf	??___fltol+1
  3310     0FA0  083C               	movf	___fltol@f1+2,w
  3311     0FA1  00C0               	movwf	??___fltol+2
  3312     0FA2  083D               	movf	___fltol@f1+3,w
  3313     0FA3  00C1               	movwf	??___fltol+3
  3314     0FA4  301F               	movlw	31
  3315     0FA5                     u1415:
  3316     0FA5  1003               	clrc
  3317     0FA6  0CC1               	rrf	??___fltol+3,f
  3318     0FA7  0CC0               	rrf	??___fltol+2,f
  3319     0FA8  0CBF               	rrf	??___fltol+1,f
  3320     0FA9  0CBE               	rrf	??___fltol,f
  3321     0FAA                     u1410:
  3322     0FAA  3EFF               	addlw	-1
  3323     0FAB  1D03               	skipz
  3324     0FAC  2FA5               	goto	u1415
  3325     0FAD  083E               	movf	??___fltol,w
  3326     0FAE  00C2               	movwf	___fltol@sign1
  3327     0FAF                     l1486:
  3328     0FAF  17BC               	bsf	___fltol@f1+2,7
  3329     0FB0                     l1488:
  3330     0FB0  30FF               	movlw	255
  3331     0FB1  05BA               	andwf	___fltol@f1,f
  3332     0FB2  30FF               	movlw	255
  3333     0FB3  05BB               	andwf	___fltol@f1+1,f
  3334     0FB4  30FF               	movlw	255
  3335     0FB5  05BC               	andwf	___fltol@f1+2,f
  3336     0FB6  3000               	movlw	0
  3337     0FB7  05BD               	andwf	___fltol@f1+3,f
  3338     0FB8                     l1490:
  3339     0FB8  3096               	movlw	150
  3340     0FB9  02C3               	subwf	___fltol@exp1,f
  3341     0FBA                     l1492:
  3342     0FBA  1FC3               	btfss	___fltol@exp1,7
  3343     0FBB  2FBD               	goto	u1421
  3344     0FBC  2FBE               	goto	u1420
  3345     0FBD                     u1421:
  3346     0FBD  2FD8               	goto	l1502
  3347     0FBE                     u1420:
  3348     0FBE                     l1494:
  3349     0FBE  0843               	movf	___fltol@exp1,w
  3350     0FBF  3A80               	xorlw	128
  3351     0FC0  3E97               	addlw	151
  3352     0FC1  1803               	skipnc
  3353     0FC2  2FC4               	goto	u1431
  3354     0FC3  2FC5               	goto	u1430
  3355     0FC4                     u1431:
  3356     0FC4  2FC6               	goto	l1500
  3357     0FC5                     u1430:
  3358     0FC5  2F93               	goto	l1480
  3359     0FC6                     l1500:
  3360     0FC6  3001               	movlw	1
  3361     0FC7                     u1445:
  3362     0FC7  1003               	clrc
  3363     0FC8  0CBD               	rrf	___fltol@f1+3,f
  3364     0FC9  0CBC               	rrf	___fltol@f1+2,f
  3365     0FCA  0CBB               	rrf	___fltol@f1+1,f
  3366     0FCB  0CBA               	rrf	___fltol@f1,f
  3367     0FCC  3EFF               	addlw	-1
  3368     0FCD  1D03               	skipz
  3369     0FCE  2FC7               	goto	u1445
  3370     0FCF  3001               	movlw	1
  3371     0FD0  00BE               	movwf	??___fltol
  3372     0FD1  083E               	movf	??___fltol,w
  3373     0FD2  07C3               	addwf	___fltol@exp1,f
  3374     0FD3  1D03               	btfss	3,2
  3375     0FD4  2FD6               	goto	u1451
  3376     0FD5  2FD7               	goto	u1450
  3377     0FD6                     u1451:
  3378     0FD6  2FC6               	goto	l1500
  3379     0FD7                     u1450:
  3380     0FD7  2FEF               	goto	l1510
  3381     0FD8                     l1502:
  3382     0FD8  3020               	movlw	32
  3383     0FD9  0243               	subwf	___fltol@exp1,w
  3384     0FDA  1C03               	skipc
  3385     0FDB  2FDD               	goto	u1461
  3386     0FDC  2FDE               	goto	u1460
  3387     0FDD                     u1461:
  3388     0FDD  2FEA               	goto	l479
  3389     0FDE                     u1460:
  3390     0FDE  2F93               	goto	l1480
  3391     0FDF                     l1508:
  3392     0FDF  3001               	movlw	1
  3393     0FE0  00BE               	movwf	??___fltol
  3394     0FE1                     u1475:
  3395     0FE1  1003               	clrc
  3396     0FE2  0DBA               	rlf	___fltol@f1,f
  3397     0FE3  0DBB               	rlf	___fltol@f1+1,f
  3398     0FE4  0DBC               	rlf	___fltol@f1+2,f
  3399     0FE5  0DBD               	rlf	___fltol@f1+3,f
  3400     0FE6  0BBE               	decfsz	??___fltol,f
  3401     0FE7  2FE1               	goto	u1475
  3402     0FE8  3001               	movlw	1
  3403     0FE9  02C3               	subwf	___fltol@exp1,f
  3404     0FEA                     l479:
  3405     0FEA  0843               	movf	___fltol@exp1,w
  3406     0FEB  1D03               	btfss	3,2
  3407     0FEC  2FEE               	goto	u1481
  3408     0FED  2FEF               	goto	u1480
  3409     0FEE                     u1481:
  3410     0FEE  2FDF               	goto	l1508
  3411     0FEF                     u1480:
  3412     0FEF                     l1510:
  3413     0FEF  0842               	movf	___fltol@sign1,w
  3414     0FF0  1903               	btfsc	3,2
  3415     0FF1  2FF3               	goto	u1491
  3416     0FF2  2FF4               	goto	u1490
  3417     0FF3                     u1491:
  3418     0FF3  2FFF               	goto	l482
  3419     0FF4                     u1490:
  3420     0FF4                     l1512:
  3421     0FF4  09BA               	comf	___fltol@f1,f
  3422     0FF5  09BB               	comf	___fltol@f1+1,f
  3423     0FF6  09BC               	comf	___fltol@f1+2,f
  3424     0FF7  09BD               	comf	___fltol@f1+3,f
  3425     0FF8  0ABA               	incf	___fltol@f1,f
  3426     0FF9  1903               	skipnz
  3427     0FFA  0ABB               	incf	___fltol@f1+1,f
  3428     0FFB  1903               	skipnz
  3429     0FFC  0ABC               	incf	___fltol@f1+2,f
  3430     0FFD  1903               	skipnz
  3431     0FFE  0ABD               	incf	___fltol@f1+3,f
  3432     0FFF                     l482:
  3433     0FFF                     l472:
  3434     0FFF  0008               	return
  3435     1000                     __end_of___fltol:
  3436                           
  3437                           	psect	text10
  3438     04AE                     __ptext10:	
  3439 ;; *************** function ___flmul *****************
  3440 ;; Defined at:
  3441 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  b               4    0[BANK0 ] long 
  3444 ;;  a               4    4[BANK0 ] long 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  prod            4   20[BANK0 ] struct .
  3447 ;;  grs             4   14[BANK0 ] unsigned long 
  3448 ;;  temp            2   24[BANK0 ] struct .
  3449 ;;  bexp            1   19[BANK0 ] unsigned char 
  3450 ;;  aexp            1   18[BANK0 ] unsigned char 
  3451 ;;  sign            1   13[BANK0 ] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  4    0[BANK0 ] unsigned char 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       8       0       0       0
  3462 ;;      Locals:         0      13       0       0       0
  3463 ;;      Temps:          0       5       0       0       0
  3464 ;;      Totals:         0      26       0       0       0
  3465 ;;Total ram usage:       26 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 1
  3468 ;; This function calls:
  3469 ;;		__Umul8_16
  3470 ;; This function is called by:
  3471 ;;		_read_red
  3472 ;;		_read_green
  3473 ;;		_read_blue
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477     04AE                     ___flmul:	
  3478                           ;psect for function ___flmul
  3479                           
  3480     04AE                     l1534:	
  3481                           ;incstack = 0
  3482                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3483                           
  3484     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3485     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3486     04B0  0823               	movf	___flmul@b+3,w
  3487     04B1  3980               	andlw	128
  3488     04B2  00AD               	movwf	___flmul@sign
  3489     04B3                     l1536:
  3490     04B3  0823               	movf	___flmul@b+3,w
  3491     04B4  00A8               	movwf	??___flmul
  3492     04B5  0728               	addwf	??___flmul,w
  3493     04B6  00B3               	movwf	___flmul@bexp
  3494     04B7                     l1538:
  3495     04B7  1FA2               	btfss	___flmul@b+2,7
  3496     04B8  2CBA               	goto	u1561
  3497     04B9  2CBB               	goto	u1560
  3498     04BA                     u1561:
  3499     04BA  2CBC               	goto	l1542
  3500     04BB                     u1560:
  3501     04BB                     l1540:
  3502     04BB  1433               	bsf	___flmul@bexp,0
  3503     04BC                     l1542:
  3504     04BC  0833               	movf	___flmul@bexp,w
  3505     04BD  1903               	btfsc	3,2
  3506     04BE  2CC0               	goto	u1571
  3507     04BF  2CC1               	goto	u1570
  3508     04C0                     u1571:
  3509     04C0  2CD0               	goto	l1550
  3510     04C1                     u1570:
  3511     04C1                     l1544:
  3512     04C1  0A33               	incf	___flmul@bexp,w
  3513     04C2  1D03               	btfss	3,2
  3514     04C3  2CC5               	goto	u1581
  3515     04C4  2CC6               	goto	u1580
  3516     04C5                     u1581:
  3517     04C5  2CCE               	goto	l1548
  3518     04C6                     u1580:
  3519     04C6                     l1546:
  3520     04C6  3000               	movlw	0
  3521     04C7  00A3               	movwf	___flmul@b+3
  3522     04C8  3000               	movlw	0
  3523     04C9  00A2               	movwf	___flmul@b+2
  3524     04CA  3000               	movlw	0
  3525     04CB  00A1               	movwf	___flmul@b+1
  3526     04CC  3000               	movlw	0
  3527     04CD  00A0               	movwf	___flmul@b
  3528     04CE                     l1548:
  3529     04CE  17A2               	bsf	___flmul@b+2,7
  3530     04CF  2CD8               	goto	l1552
  3531     04D0                     l1550:
  3532     04D0  3000               	movlw	0
  3533     04D1  00A3               	movwf	___flmul@b+3
  3534     04D2  3000               	movlw	0
  3535     04D3  00A2               	movwf	___flmul@b+2
  3536     04D4  3000               	movlw	0
  3537     04D5  00A1               	movwf	___flmul@b+1
  3538     04D6  3000               	movlw	0
  3539     04D7  00A0               	movwf	___flmul@b
  3540     04D8                     l1552:
  3541     04D8  0827               	movf	___flmul@a+3,w
  3542     04D9  3980               	andlw	128
  3543     04DA  00A8               	movwf	??___flmul
  3544     04DB  0828               	movf	??___flmul,w
  3545     04DC  06AD               	xorwf	___flmul@sign,f
  3546     04DD                     l1554:
  3547     04DD  0827               	movf	___flmul@a+3,w
  3548     04DE  00A8               	movwf	??___flmul
  3549     04DF  0728               	addwf	??___flmul,w
  3550     04E0  00B2               	movwf	___flmul@aexp
  3551     04E1                     l1556:
  3552     04E1  1FA6               	btfss	___flmul@a+2,7
  3553     04E2  2CE4               	goto	u1591
  3554     04E3  2CE5               	goto	u1590
  3555     04E4                     u1591:
  3556     04E4  2CE6               	goto	l1560
  3557     04E5                     u1590:
  3558     04E5                     l1558:
  3559     04E5  1432               	bsf	___flmul@aexp,0
  3560     04E6                     l1560:
  3561     04E6  0832               	movf	___flmul@aexp,w
  3562     04E7  1903               	btfsc	3,2
  3563     04E8  2CEA               	goto	u1601
  3564     04E9  2CEB               	goto	u1600
  3565     04EA                     u1601:
  3566     04EA  2CFA               	goto	l1568
  3567     04EB                     u1600:
  3568     04EB                     l1562:
  3569     04EB  0A32               	incf	___flmul@aexp,w
  3570     04EC  1D03               	btfss	3,2
  3571     04ED  2CEF               	goto	u1611
  3572     04EE  2CF0               	goto	u1610
  3573     04EF                     u1611:
  3574     04EF  2CF8               	goto	l1566
  3575     04F0                     u1610:
  3576     04F0                     l1564:
  3577     04F0  3000               	movlw	0
  3578     04F1  00A7               	movwf	___flmul@a+3
  3579     04F2  3000               	movlw	0
  3580     04F3  00A6               	movwf	___flmul@a+2
  3581     04F4  3000               	movlw	0
  3582     04F5  00A5               	movwf	___flmul@a+1
  3583     04F6  3000               	movlw	0
  3584     04F7  00A4               	movwf	___flmul@a
  3585     04F8                     l1566:
  3586     04F8  17A6               	bsf	___flmul@a+2,7
  3587     04F9  2D02               	goto	l1570
  3588     04FA                     l1568:
  3589     04FA  3000               	movlw	0
  3590     04FB  00A7               	movwf	___flmul@a+3
  3591     04FC  3000               	movlw	0
  3592     04FD  00A6               	movwf	___flmul@a+2
  3593     04FE  3000               	movlw	0
  3594     04FF  00A5               	movwf	___flmul@a+1
  3595     0500  3000               	movlw	0
  3596     0501  00A4               	movwf	___flmul@a
  3597     0502                     l1570:
  3598     0502  0832               	movf	___flmul@aexp,w
  3599     0503  1903               	btfsc	3,2
  3600     0504  2D06               	goto	u1621
  3601     0505  2D07               	goto	u1620
  3602     0506                     u1621:
  3603     0506  2D0C               	goto	l1574
  3604     0507                     u1620:
  3605     0507                     l1572:
  3606     0507  0833               	movf	___flmul@bexp,w
  3607     0508  1D03               	btfss	3,2
  3608     0509  2D0B               	goto	u1631
  3609     050A  2D0C               	goto	u1630
  3610     050B                     u1631:
  3611     050B  2D15               	goto	l1578
  3612     050C                     u1630:
  3613     050C                     l1574:
  3614     050C  3000               	movlw	0
  3615     050D  00A3               	movwf	?___flmul+3
  3616     050E  3000               	movlw	0
  3617     050F  00A2               	movwf	?___flmul+2
  3618     0510  3000               	movlw	0
  3619     0511  00A1               	movwf	?___flmul+1
  3620     0512  3000               	movlw	0
  3621     0513  00A0               	movwf	?___flmul
  3622     0514  2FF2               	goto	l675
  3623     0515                     l1578:
  3624     0515  0820               	movf	___flmul@b,w
  3625     0516  00F0               	movwf	__Umul8_16@multiplicand
  3626     0517  0826               	movf	___flmul@a+2,w
  3627     0518  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3628     051D  0871               	movf	?__Umul8_16+1,w
  3629     051E  1283               	bcf	3,5	;RP0=0, select bank0
  3630     051F  1303               	bcf	3,6	;RP1=0, select bank0
  3631     0520  00B9               	movwf	___flmul@temp+1
  3632     0521  0870               	movf	?__Umul8_16,w
  3633     0522  00B8               	movwf	___flmul@temp
  3634     0523                     l1580:
  3635     0523  0838               	movf	___flmul@temp,w
  3636     0524  00A8               	movwf	??___flmul
  3637     0525  01A9               	clrf	??___flmul+1
  3638     0526  01AA               	clrf	??___flmul+2
  3639     0527  01AB               	clrf	??___flmul+3
  3640     0528  082B               	movf	??___flmul+3,w
  3641     0529  00B1               	movwf	___flmul@grs+3
  3642     052A  082A               	movf	??___flmul+2,w
  3643     052B  00B0               	movwf	___flmul@grs+2
  3644     052C  0829               	movf	??___flmul+1,w
  3645     052D  00AF               	movwf	___flmul@grs+1
  3646     052E  0828               	movf	??___flmul,w
  3647     052F  00AE               	movwf	___flmul@grs
  3648     0530                     l1582:
  3649     0530  0839               	movf	___flmul@temp+1,w
  3650     0531  00A8               	movwf	??___flmul
  3651     0532  01A9               	clrf	??___flmul+1
  3652     0533  01AA               	clrf	??___flmul+2
  3653     0534  01AB               	clrf	??___flmul+3
  3654     0535  082B               	movf	??___flmul+3,w
  3655     0536  00B7               	movwf	___flmul@prod+3
  3656     0537  082A               	movf	??___flmul+2,w
  3657     0538  00B6               	movwf	___flmul@prod+2
  3658     0539  0829               	movf	??___flmul+1,w
  3659     053A  00B5               	movwf	___flmul@prod+1
  3660     053B  0828               	movf	??___flmul,w
  3661     053C  00B4               	movwf	___flmul@prod
  3662     053D  0821               	movf	___flmul@b+1,w
  3663     053E  00F0               	movwf	__Umul8_16@multiplicand
  3664     053F  0825               	movf	___flmul@a+1,w
  3665     0540  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3666     0545  0871               	movf	?__Umul8_16+1,w
  3667     0546  1283               	bcf	3,5	;RP0=0, select bank0
  3668     0547  1303               	bcf	3,6	;RP1=0, select bank0
  3669     0548  00B9               	movwf	___flmul@temp+1
  3670     0549  0870               	movf	?__Umul8_16,w
  3671     054A  00B8               	movwf	___flmul@temp
  3672     054B                     l1584:
  3673     054B  0838               	movf	___flmul@temp,w
  3674     054C  00A8               	movwf	??___flmul
  3675     054D  01A9               	clrf	??___flmul+1
  3676     054E  01AA               	clrf	??___flmul+2
  3677     054F  01AB               	clrf	??___flmul+3
  3678     0550  0828               	movf	??___flmul,w
  3679     0551  07AE               	addwf	___flmul@grs,f
  3680     0552  0829               	movf	??___flmul+1,w
  3681     0553  1103               	clrz
  3682     0554  1803               	skipnc
  3683     0555  3E01               	addlw	1
  3684     0556  1903               	skipnz
  3685     0557  2D59               	goto	u1641
  3686     0558  07AF               	addwf	___flmul@grs+1,f
  3687     0559                     u1641:
  3688     0559  082A               	movf	??___flmul+2,w
  3689     055A  1103               	clrz
  3690     055B  1803               	skipnc
  3691     055C  3E01               	addlw	1
  3692     055D  1903               	skipnz
  3693     055E  2D60               	goto	u1642
  3694     055F  07B0               	addwf	___flmul@grs+2,f
  3695     0560                     u1642:
  3696     0560  082B               	movf	??___flmul+3,w
  3697     0561  1103               	clrz
  3698     0562  1803               	skipnc
  3699     0563  3E01               	addlw	1
  3700     0564  1903               	skipnz
  3701     0565  2D67               	goto	u1643
  3702     0566  07B1               	addwf	___flmul@grs+3,f
  3703     0567                     u1643:
  3704     0567                     l1586:
  3705     0567  0839               	movf	___flmul@temp+1,w
  3706     0568  00A8               	movwf	??___flmul
  3707     0569  01A9               	clrf	??___flmul+1
  3708     056A  01AA               	clrf	??___flmul+2
  3709     056B  01AB               	clrf	??___flmul+3
  3710     056C  0828               	movf	??___flmul,w
  3711     056D  07B4               	addwf	___flmul@prod,f
  3712     056E  0829               	movf	??___flmul+1,w
  3713     056F  1103               	clrz
  3714     0570  1803               	skipnc
  3715     0571  3E01               	addlw	1
  3716     0572  1903               	skipnz
  3717     0573  2D75               	goto	u1651
  3718     0574  07B5               	addwf	___flmul@prod+1,f
  3719     0575                     u1651:
  3720     0575  082A               	movf	??___flmul+2,w
  3721     0576  1103               	clrz
  3722     0577  1803               	skipnc
  3723     0578  3E01               	addlw	1
  3724     0579  1903               	skipnz
  3725     057A  2D7C               	goto	u1652
  3726     057B  07B6               	addwf	___flmul@prod+2,f
  3727     057C                     u1652:
  3728     057C  082B               	movf	??___flmul+3,w
  3729     057D  1103               	clrz
  3730     057E  1803               	skipnc
  3731     057F  3E01               	addlw	1
  3732     0580  1903               	skipnz
  3733     0581  2D83               	goto	u1653
  3734     0582  07B7               	addwf	___flmul@prod+3,f
  3735     0583                     u1653:
  3736     0583  0822               	movf	___flmul@b+2,w
  3737     0584  00F0               	movwf	__Umul8_16@multiplicand
  3738     0585  0824               	movf	___flmul@a,w
  3739     0586  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3740     058B  0871               	movf	?__Umul8_16+1,w
  3741     058C  1283               	bcf	3,5	;RP0=0, select bank0
  3742     058D  1303               	bcf	3,6	;RP1=0, select bank0
  3743     058E  00B9               	movwf	___flmul@temp+1
  3744     058F  0870               	movf	?__Umul8_16,w
  3745     0590  00B8               	movwf	___flmul@temp
  3746     0591                     l1588:
  3747     0591  0838               	movf	___flmul@temp,w
  3748     0592  00A8               	movwf	??___flmul
  3749     0593  01A9               	clrf	??___flmul+1
  3750     0594  01AA               	clrf	??___flmul+2
  3751     0595  01AB               	clrf	??___flmul+3
  3752     0596  0828               	movf	??___flmul,w
  3753     0597  07AE               	addwf	___flmul@grs,f
  3754     0598  0829               	movf	??___flmul+1,w
  3755     0599  1103               	clrz
  3756     059A  1803               	skipnc
  3757     059B  3E01               	addlw	1
  3758     059C  1903               	skipnz
  3759     059D  2D9F               	goto	u1661
  3760     059E  07AF               	addwf	___flmul@grs+1,f
  3761     059F                     u1661:
  3762     059F  082A               	movf	??___flmul+2,w
  3763     05A0  1103               	clrz
  3764     05A1  1803               	skipnc
  3765     05A2  3E01               	addlw	1
  3766     05A3  1903               	skipnz
  3767     05A4  2DA6               	goto	u1662
  3768     05A5  07B0               	addwf	___flmul@grs+2,f
  3769     05A6                     u1662:
  3770     05A6  082B               	movf	??___flmul+3,w
  3771     05A7  1103               	clrz
  3772     05A8  1803               	skipnc
  3773     05A9  3E01               	addlw	1
  3774     05AA  1903               	skipnz
  3775     05AB  2DAD               	goto	u1663
  3776     05AC  07B1               	addwf	___flmul@grs+3,f
  3777     05AD                     u1663:
  3778     05AD                     l1590:
  3779     05AD  0839               	movf	___flmul@temp+1,w
  3780     05AE  00A8               	movwf	??___flmul
  3781     05AF  01A9               	clrf	??___flmul+1
  3782     05B0  01AA               	clrf	??___flmul+2
  3783     05B1  01AB               	clrf	??___flmul+3
  3784     05B2  0828               	movf	??___flmul,w
  3785     05B3  07B4               	addwf	___flmul@prod,f
  3786     05B4  0829               	movf	??___flmul+1,w
  3787     05B5  1103               	clrz
  3788     05B6  1803               	skipnc
  3789     05B7  3E01               	addlw	1
  3790     05B8  1903               	skipnz
  3791     05B9  2DBB               	goto	u1671
  3792     05BA  07B5               	addwf	___flmul@prod+1,f
  3793     05BB                     u1671:
  3794     05BB  082A               	movf	??___flmul+2,w
  3795     05BC  1103               	clrz
  3796     05BD  1803               	skipnc
  3797     05BE  3E01               	addlw	1
  3798     05BF  1903               	skipnz
  3799     05C0  2DC2               	goto	u1672
  3800     05C1  07B6               	addwf	___flmul@prod+2,f
  3801     05C2                     u1672:
  3802     05C2  082B               	movf	??___flmul+3,w
  3803     05C3  1103               	clrz
  3804     05C4  1803               	skipnc
  3805     05C5  3E01               	addlw	1
  3806     05C6  1903               	skipnz
  3807     05C7  2DC9               	goto	u1673
  3808     05C8  07B7               	addwf	___flmul@prod+3,f
  3809     05C9                     u1673:
  3810     05C9                     l1592:
  3811     05C9  3008               	movlw	8
  3812     05CA  00A8               	movwf	??___flmul
  3813     05CB                     u1685:
  3814     05CB  1003               	clrc
  3815     05CC  0DAE               	rlf	___flmul@grs,f
  3816     05CD  0DAF               	rlf	___flmul@grs+1,f
  3817     05CE  0DB0               	rlf	___flmul@grs+2,f
  3818     05CF  0DB1               	rlf	___flmul@grs+3,f
  3819     05D0  0BA8               	decfsz	??___flmul,f
  3820     05D1  2DCB               	goto	u1685
  3821     05D2                     l1594:
  3822     05D2  0821               	movf	___flmul@b+1,w
  3823     05D3  00F0               	movwf	__Umul8_16@multiplicand
  3824     05D4  0824               	movf	___flmul@a,w
  3825     05D5  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3826     05DA  0871               	movf	?__Umul8_16+1,w
  3827     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3828     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3829     05DD  00B9               	movwf	___flmul@temp+1
  3830     05DE  0870               	movf	?__Umul8_16,w
  3831     05DF  00B8               	movwf	___flmul@temp
  3832     05E0                     l1596:
  3833     05E0  0838               	movf	___flmul@temp,w
  3834     05E1  00A8               	movwf	??___flmul
  3835     05E2  0839               	movf	___flmul@temp+1,w
  3836     05E3  00A9               	movwf	??___flmul+1
  3837     05E4  01AA               	clrf	??___flmul+2
  3838     05E5  01AB               	clrf	??___flmul+3
  3839     05E6  0828               	movf	??___flmul,w
  3840     05E7  07AE               	addwf	___flmul@grs,f
  3841     05E8  0829               	movf	??___flmul+1,w
  3842     05E9  1103               	clrz
  3843     05EA  1803               	skipnc
  3844     05EB  3E01               	addlw	1
  3845     05EC  1903               	skipnz
  3846     05ED  2DEF               	goto	u1691
  3847     05EE  07AF               	addwf	___flmul@grs+1,f
  3848     05EF                     u1691:
  3849     05EF  082A               	movf	??___flmul+2,w
  3850     05F0  1103               	clrz
  3851     05F1  1803               	skipnc
  3852     05F2  3E01               	addlw	1
  3853     05F3  1903               	skipnz
  3854     05F4  2DF6               	goto	u1692
  3855     05F5  07B0               	addwf	___flmul@grs+2,f
  3856     05F6                     u1692:
  3857     05F6  082B               	movf	??___flmul+3,w
  3858     05F7  1103               	clrz
  3859     05F8  1803               	skipnc
  3860     05F9  3E01               	addlw	1
  3861     05FA  1903               	skipnz
  3862     05FB  2DFD               	goto	u1693
  3863     05FC  07B1               	addwf	___flmul@grs+3,f
  3864     05FD                     u1693:
  3865     05FD                     l1598:
  3866     05FD  0820               	movf	___flmul@b,w
  3867     05FE  00F0               	movwf	__Umul8_16@multiplicand
  3868     05FF  0825               	movf	___flmul@a+1,w
  3869     0600  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3870     0605  0871               	movf	?__Umul8_16+1,w
  3871     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3872     0607  1303               	bcf	3,6	;RP1=0, select bank0
  3873     0608  00B9               	movwf	___flmul@temp+1
  3874     0609  0870               	movf	?__Umul8_16,w
  3875     060A  00B8               	movwf	___flmul@temp
  3876     060B                     l1600:
  3877     060B  0838               	movf	___flmul@temp,w
  3878     060C  00A8               	movwf	??___flmul
  3879     060D  0839               	movf	___flmul@temp+1,w
  3880     060E  00A9               	movwf	??___flmul+1
  3881     060F  01AA               	clrf	??___flmul+2
  3882     0610  01AB               	clrf	??___flmul+3
  3883     0611  0828               	movf	??___flmul,w
  3884     0612  07AE               	addwf	___flmul@grs,f
  3885     0613  0829               	movf	??___flmul+1,w
  3886     0614  1103               	clrz
  3887     0615  1803               	skipnc
  3888     0616  3E01               	addlw	1
  3889     0617  1903               	skipnz
  3890     0618  2E1A               	goto	u1701
  3891     0619  07AF               	addwf	___flmul@grs+1,f
  3892     061A                     u1701:
  3893     061A  082A               	movf	??___flmul+2,w
  3894     061B  1103               	clrz
  3895     061C  1803               	skipnc
  3896     061D  3E01               	addlw	1
  3897     061E  1903               	skipnz
  3898     061F  2E21               	goto	u1702
  3899     0620  07B0               	addwf	___flmul@grs+2,f
  3900     0621                     u1702:
  3901     0621  082B               	movf	??___flmul+3,w
  3902     0622  1103               	clrz
  3903     0623  1803               	skipnc
  3904     0624  3E01               	addlw	1
  3905     0625  1903               	skipnz
  3906     0626  2E28               	goto	u1703
  3907     0627  07B1               	addwf	___flmul@grs+3,f
  3908     0628                     u1703:
  3909     0628                     l1602:
  3910     0628  3008               	movlw	8
  3911     0629  00A8               	movwf	??___flmul
  3912     062A                     u1715:
  3913     062A  1003               	clrc
  3914     062B  0DAE               	rlf	___flmul@grs,f
  3915     062C  0DAF               	rlf	___flmul@grs+1,f
  3916     062D  0DB0               	rlf	___flmul@grs+2,f
  3917     062E  0DB1               	rlf	___flmul@grs+3,f
  3918     062F  0BA8               	decfsz	??___flmul,f
  3919     0630  2E2A               	goto	u1715
  3920     0631  0820               	movf	___flmul@b,w
  3921     0632  00F0               	movwf	__Umul8_16@multiplicand
  3922     0633  0824               	movf	___flmul@a,w
  3923     0634  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3924     0639  0871               	movf	?__Umul8_16+1,w
  3925     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3926     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3927     063C  00B9               	movwf	___flmul@temp+1
  3928     063D  0870               	movf	?__Umul8_16,w
  3929     063E  00B8               	movwf	___flmul@temp
  3930     063F                     l1604:
  3931     063F  0838               	movf	___flmul@temp,w
  3932     0640  00A8               	movwf	??___flmul
  3933     0641  0839               	movf	___flmul@temp+1,w
  3934     0642  00A9               	movwf	??___flmul+1
  3935     0643  01AA               	clrf	??___flmul+2
  3936     0644  01AB               	clrf	??___flmul+3
  3937     0645  0828               	movf	??___flmul,w
  3938     0646  07AE               	addwf	___flmul@grs,f
  3939     0647  0829               	movf	??___flmul+1,w
  3940     0648  1103               	clrz
  3941     0649  1803               	skipnc
  3942     064A  3E01               	addlw	1
  3943     064B  1903               	skipnz
  3944     064C  2E4E               	goto	u1721
  3945     064D  07AF               	addwf	___flmul@grs+1,f
  3946     064E                     u1721:
  3947     064E  082A               	movf	??___flmul+2,w
  3948     064F  1103               	clrz
  3949     0650  1803               	skipnc
  3950     0651  3E01               	addlw	1
  3951     0652  1903               	skipnz
  3952     0653  2E55               	goto	u1722
  3953     0654  07B0               	addwf	___flmul@grs+2,f
  3954     0655                     u1722:
  3955     0655  082B               	movf	??___flmul+3,w
  3956     0656  1103               	clrz
  3957     0657  1803               	skipnc
  3958     0658  3E01               	addlw	1
  3959     0659  1903               	skipnz
  3960     065A  2E5C               	goto	u1723
  3961     065B  07B1               	addwf	___flmul@grs+3,f
  3962     065C                     u1723:
  3963     065C                     l1606:
  3964     065C  0821               	movf	___flmul@b+1,w
  3965     065D  00F0               	movwf	__Umul8_16@multiplicand
  3966     065E  0826               	movf	___flmul@a+2,w
  3967     065F  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  3968     0664  0871               	movf	?__Umul8_16+1,w
  3969     0665  1283               	bcf	3,5	;RP0=0, select bank0
  3970     0666  1303               	bcf	3,6	;RP1=0, select bank0
  3971     0667  00B9               	movwf	___flmul@temp+1
  3972     0668  0870               	movf	?__Umul8_16,w
  3973     0669  00B8               	movwf	___flmul@temp
  3974     066A  0838               	movf	___flmul@temp,w
  3975     066B  00A8               	movwf	??___flmul
  3976     066C  0839               	movf	___flmul@temp+1,w
  3977     066D  00A9               	movwf	??___flmul+1
  3978     066E  01AA               	clrf	??___flmul+2
  3979     066F  01AB               	clrf	??___flmul+3
  3980     0670  0828               	movf	??___flmul,w
  3981     0671  07B4               	addwf	___flmul@prod,f
  3982     0672  0829               	movf	??___flmul+1,w
  3983     0673  1103               	clrz
  3984     0674  1803               	skipnc
  3985     0675  3E01               	addlw	1
  3986     0676  1903               	skipnz
  3987     0677  2E79               	goto	u1731
  3988     0678  07B5               	addwf	___flmul@prod+1,f
  3989     0679                     u1731:
  3990     0679  082A               	movf	??___flmul+2,w
  3991     067A  1103               	clrz
  3992     067B  1803               	skipnc
  3993     067C  3E01               	addlw	1
  3994     067D  1903               	skipnz
  3995     067E  2E80               	goto	u1732
  3996     067F  07B6               	addwf	___flmul@prod+2,f
  3997     0680                     u1732:
  3998     0680  082B               	movf	??___flmul+3,w
  3999     0681  1103               	clrz
  4000     0682  1803               	skipnc
  4001     0683  3E01               	addlw	1
  4002     0684  1903               	skipnz
  4003     0685  2E87               	goto	u1733
  4004     0686  07B7               	addwf	___flmul@prod+3,f
  4005     0687                     u1733:
  4006     0687                     l1608:
  4007     0687  0822               	movf	___flmul@b+2,w
  4008     0688  00F0               	movwf	__Umul8_16@multiplicand
  4009     0689  0825               	movf	___flmul@a+1,w
  4010     068A  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  4011     068F  0871               	movf	?__Umul8_16+1,w
  4012     0690  1283               	bcf	3,5	;RP0=0, select bank0
  4013     0691  1303               	bcf	3,6	;RP1=0, select bank0
  4014     0692  00B9               	movwf	___flmul@temp+1
  4015     0693  0870               	movf	?__Umul8_16,w
  4016     0694  00B8               	movwf	___flmul@temp
  4017     0695                     l1610:
  4018     0695  0838               	movf	___flmul@temp,w
  4019     0696  00A8               	movwf	??___flmul
  4020     0697  0839               	movf	___flmul@temp+1,w
  4021     0698  00A9               	movwf	??___flmul+1
  4022     0699  01AA               	clrf	??___flmul+2
  4023     069A  01AB               	clrf	??___flmul+3
  4024     069B  0828               	movf	??___flmul,w
  4025     069C  07B4               	addwf	___flmul@prod,f
  4026     069D  0829               	movf	??___flmul+1,w
  4027     069E  1103               	clrz
  4028     069F  1803               	skipnc
  4029     06A0  3E01               	addlw	1
  4030     06A1  1903               	skipnz
  4031     06A2  2EA4               	goto	u1741
  4032     06A3  07B5               	addwf	___flmul@prod+1,f
  4033     06A4                     u1741:
  4034     06A4  082A               	movf	??___flmul+2,w
  4035     06A5  1103               	clrz
  4036     06A6  1803               	skipnc
  4037     06A7  3E01               	addlw	1
  4038     06A8  1903               	skipnz
  4039     06A9  2EAB               	goto	u1742
  4040     06AA  07B6               	addwf	___flmul@prod+2,f
  4041     06AB                     u1742:
  4042     06AB  082B               	movf	??___flmul+3,w
  4043     06AC  1103               	clrz
  4044     06AD  1803               	skipnc
  4045     06AE  3E01               	addlw	1
  4046     06AF  1903               	skipnz
  4047     06B0  2EB2               	goto	u1743
  4048     06B1  07B7               	addwf	___flmul@prod+3,f
  4049     06B2                     u1743:
  4050     06B2  0822               	movf	___flmul@b+2,w
  4051     06B3  00F0               	movwf	__Umul8_16@multiplicand
  4052     06B4  0826               	movf	___flmul@a+2,w
  4053     06B5  120A  158A  24A8  120A  118A  	fcall	__Umul8_16
  4054     06BA  0871               	movf	?__Umul8_16+1,w
  4055     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  4056     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  4057     06BD  00B9               	movwf	___flmul@temp+1
  4058     06BE  0870               	movf	?__Umul8_16,w
  4059     06BF  00B8               	movwf	___flmul@temp
  4060     06C0                     l1612:
  4061     06C0  0838               	movf	___flmul@temp,w
  4062     06C1  00A8               	movwf	??___flmul
  4063     06C2  0839               	movf	___flmul@temp+1,w
  4064     06C3  00A9               	movwf	??___flmul+1
  4065     06C4  01AA               	clrf	??___flmul+2
  4066     06C5  01AB               	clrf	??___flmul+3
  4067     06C6  3008               	movlw	8
  4068     06C7                     u1755:
  4069     06C7  1003               	clrc
  4070     06C8  0DA8               	rlf	??___flmul,f
  4071     06C9  0DA9               	rlf	??___flmul+1,f
  4072     06CA  0DAA               	rlf	??___flmul+2,f
  4073     06CB  0DAB               	rlf	??___flmul+3,f
  4074     06CC                     u1750:
  4075     06CC  3EFF               	addlw	-1
  4076     06CD  1D03               	skipz
  4077     06CE  2EC7               	goto	u1755
  4078     06CF  0828               	movf	??___flmul,w
  4079     06D0  07B4               	addwf	___flmul@prod,f
  4080     06D1  0829               	movf	??___flmul+1,w
  4081     06D2  1103               	clrz
  4082     06D3  1803               	skipnc
  4083     06D4  3E01               	addlw	1
  4084     06D5  1903               	skipnz
  4085     06D6  2ED8               	goto	u1761
  4086     06D7  07B5               	addwf	___flmul@prod+1,f
  4087     06D8                     u1761:
  4088     06D8  082A               	movf	??___flmul+2,w
  4089     06D9  1103               	clrz
  4090     06DA  1803               	skipnc
  4091     06DB  3E01               	addlw	1
  4092     06DC  1903               	skipnz
  4093     06DD  2EDF               	goto	u1762
  4094     06DE  07B6               	addwf	___flmul@prod+2,f
  4095     06DF                     u1762:
  4096     06DF  082B               	movf	??___flmul+3,w
  4097     06E0  1103               	clrz
  4098     06E1  1803               	skipnc
  4099     06E2  3E01               	addlw	1
  4100     06E3  1903               	skipnz
  4101     06E4  2EE6               	goto	u1763
  4102     06E5  07B7               	addwf	___flmul@prod+3,f
  4103     06E6                     u1763:
  4104     06E6                     l1614:
  4105     06E6  082E               	movf	___flmul@grs,w
  4106     06E7  00A8               	movwf	??___flmul
  4107     06E8  082F               	movf	___flmul@grs+1,w
  4108     06E9  00A9               	movwf	??___flmul+1
  4109     06EA  0830               	movf	___flmul@grs+2,w
  4110     06EB  00AA               	movwf	??___flmul+2
  4111     06EC  0831               	movf	___flmul@grs+3,w
  4112     06ED  00AB               	movwf	??___flmul+3
  4113     06EE  3018               	movlw	24
  4114     06EF                     u1775:
  4115     06EF  1003               	clrc
  4116     06F0  0CAB               	rrf	??___flmul+3,f
  4117     06F1  0CAA               	rrf	??___flmul+2,f
  4118     06F2  0CA9               	rrf	??___flmul+1,f
  4119     06F3  0CA8               	rrf	??___flmul,f
  4120     06F4                     u1770:
  4121     06F4  3EFF               	addlw	-1
  4122     06F5  1D03               	skipz
  4123     06F6  2EEF               	goto	u1775
  4124     06F7  0828               	movf	??___flmul,w
  4125     06F8  07B4               	addwf	___flmul@prod,f
  4126     06F9  0829               	movf	??___flmul+1,w
  4127     06FA  1103               	clrz
  4128     06FB  1803               	skipnc
  4129     06FC  3E01               	addlw	1
  4130     06FD  1903               	skipnz
  4131     06FE  2F00               	goto	u1781
  4132     06FF  07B5               	addwf	___flmul@prod+1,f
  4133     0700                     u1781:
  4134     0700  082A               	movf	??___flmul+2,w
  4135     0701  1103               	clrz
  4136     0702  1803               	skipnc
  4137     0703  3E01               	addlw	1
  4138     0704  1903               	skipnz
  4139     0705  2F07               	goto	u1782
  4140     0706  07B6               	addwf	___flmul@prod+2,f
  4141     0707                     u1782:
  4142     0707  082B               	movf	??___flmul+3,w
  4143     0708  1103               	clrz
  4144     0709  1803               	skipnc
  4145     070A  3E01               	addlw	1
  4146     070B  1903               	skipnz
  4147     070C  2F0E               	goto	u1783
  4148     070D  07B7               	addwf	___flmul@prod+3,f
  4149     070E                     u1783:
  4150     070E                     l1616:
  4151     070E  3008               	movlw	8
  4152     070F  00A8               	movwf	??___flmul
  4153     0710                     u1795:
  4154     0710  1003               	clrc
  4155     0711  0DAE               	rlf	___flmul@grs,f
  4156     0712  0DAF               	rlf	___flmul@grs+1,f
  4157     0713  0DB0               	rlf	___flmul@grs+2,f
  4158     0714  0DB1               	rlf	___flmul@grs+3,f
  4159     0715  0BA8               	decfsz	??___flmul,f
  4160     0716  2F10               	goto	u1795
  4161     0717                     l1618:
  4162     0717  0833               	movf	___flmul@bexp,w
  4163     0718  0732               	addwf	___flmul@aexp,w
  4164     0719  00A8               	movwf	??___flmul
  4165     071A  01A9               	clrf	??___flmul+1
  4166     071B  0DA9               	rlf	??___flmul+1,f
  4167     071C  0828               	movf	??___flmul,w
  4168     071D  3E82               	addlw	130
  4169     071E  00B8               	movwf	___flmul@temp
  4170     071F  0829               	movf	??___flmul+1,w
  4171     0720  1803               	skipnc
  4172     0721  3E01               	addlw	1
  4173     0722  3EFF               	addlw	255
  4174     0723  00B9               	movwf	___flmul@temp+1
  4175     0724  2F42               	goto	l1630
  4176     0725                     l1620:
  4177     0725  3001               	movlw	1
  4178     0726  00A8               	movwf	??___flmul
  4179     0727                     u1805:
  4180     0727  1003               	clrc
  4181     0728  0DB4               	rlf	___flmul@prod,f
  4182     0729  0DB5               	rlf	___flmul@prod+1,f
  4183     072A  0DB6               	rlf	___flmul@prod+2,f
  4184     072B  0DB7               	rlf	___flmul@prod+3,f
  4185     072C  0BA8               	decfsz	??___flmul,f
  4186     072D  2F27               	goto	u1805
  4187     072E                     l1622:
  4188     072E  1FB1               	btfss	___flmul@grs+3,7
  4189     072F  2F31               	goto	u1811
  4190     0730  2F32               	goto	u1810
  4191     0731                     u1811:
  4192     0731  2F33               	goto	l1626
  4193     0732                     u1810:
  4194     0732                     l1624:
  4195     0732  1434               	bsf	___flmul@prod,0
  4196     0733                     l1626:
  4197     0733  3001               	movlw	1
  4198     0734  00A8               	movwf	??___flmul
  4199     0735                     u1825:
  4200     0735  1003               	clrc
  4201     0736  0DAE               	rlf	___flmul@grs,f
  4202     0737  0DAF               	rlf	___flmul@grs+1,f
  4203     0738  0DB0               	rlf	___flmul@grs+2,f
  4204     0739  0DB1               	rlf	___flmul@grs+3,f
  4205     073A  0BA8               	decfsz	??___flmul,f
  4206     073B  2F35               	goto	u1825
  4207     073C                     l1628:
  4208     073C  30FF               	movlw	255
  4209     073D  07B8               	addwf	___flmul@temp,f
  4210     073E  1803               	skipnc
  4211     073F  0AB9               	incf	___flmul@temp+1,f
  4212     0740  30FF               	movlw	255
  4213     0741  07B9               	addwf	___flmul@temp+1,f
  4214     0742                     l1630:
  4215     0742  1FB6               	btfss	___flmul@prod+2,7
  4216     0743  2F45               	goto	u1831
  4217     0744  2F46               	goto	u1830
  4218     0745                     u1831:
  4219     0745  2F25               	goto	l1620
  4220     0746                     u1830:
  4221     0746                     l1632:
  4222     0746  01B2               	clrf	___flmul@aexp
  4223     0747                     l1634:
  4224     0747  1FB1               	btfss	___flmul@grs+3,7
  4225     0748  2F4A               	goto	u1841
  4226     0749  2F4B               	goto	u1840
  4227     074A                     u1841:
  4228     074A  2F67               	goto	l1642
  4229     074B                     u1840:
  4230     074B                     l1636:
  4231     074B  30FF               	movlw	255
  4232     074C  052E               	andwf	___flmul@grs,w
  4233     074D  00A8               	movwf	??___flmul
  4234     074E  30FF               	movlw	255
  4235     074F  052F               	andwf	___flmul@grs+1,w
  4236     0750  00A9               	movwf	??___flmul+1
  4237     0751  30FF               	movlw	255
  4238     0752  0530               	andwf	___flmul@grs+2,w
  4239     0753  00AA               	movwf	??___flmul+2
  4240     0754  307F               	movlw	127
  4241     0755  0531               	andwf	___flmul@grs+3,w
  4242     0756  00AB               	movwf	??___flmul+3
  4243     0757  082B               	movf	??___flmul+3,w
  4244     0758  042A               	iorwf	??___flmul+2,w
  4245     0759  0429               	iorwf	??___flmul+1,w
  4246     075A  0428               	iorwf	??___flmul,w
  4247     075B  1903               	skipnz
  4248     075C  2F5E               	goto	u1851
  4249     075D  2F5F               	goto	u1850
  4250     075E                     u1851:
  4251     075E  2F62               	goto	l681
  4252     075F                     u1850:
  4253     075F                     l1638:
  4254     075F  01B2               	clrf	___flmul@aexp
  4255     0760  0AB2               	incf	___flmul@aexp,f
  4256     0761  2F67               	goto	l1642
  4257     0762                     l681:
  4258     0762  1C34               	btfss	___flmul@prod,0
  4259     0763  2F65               	goto	u1861
  4260     0764  2F66               	goto	u1860
  4261     0765                     u1861:
  4262     0765  2F67               	goto	l1642
  4263     0766                     u1860:
  4264     0766  2F5F               	goto	l1638
  4265     0767                     l1642:
  4266     0767  0832               	movf	___flmul@aexp,w
  4267     0768  1903               	btfsc	3,2
  4268     0769  2F6B               	goto	u1871
  4269     076A  2F6C               	goto	u1870
  4270     076B                     u1871:
  4271     076B  2F9D               	goto	l1652
  4272     076C                     u1870:
  4273     076C                     l1644:
  4274     076C  3001               	movlw	1
  4275     076D  07B4               	addwf	___flmul@prod,f
  4276     076E  3000               	movlw	0
  4277     076F  1803               	skipnc
  4278     0770  3001               	movlw	1
  4279     0771  07B5               	addwf	___flmul@prod+1,f
  4280     0772  3000               	movlw	0
  4281     0773  1803               	skipnc
  4282     0774  3001               	movlw	1
  4283     0775  07B6               	addwf	___flmul@prod+2,f
  4284     0776  3000               	movlw	0
  4285     0777  1803               	skipnc
  4286     0778  3001               	movlw	1
  4287     0779  07B7               	addwf	___flmul@prod+3,f
  4288     077A                     l1646:
  4289     077A  1C37               	btfss	___flmul@prod+3,0
  4290     077B  2F7D               	goto	u1881
  4291     077C  2F7E               	goto	u1880
  4292     077D                     u1881:
  4293     077D  2F9D               	goto	l1652
  4294     077E                     u1880:
  4295     077E                     l1648:
  4296     077E  0834               	movf	___flmul@prod,w
  4297     077F  00A8               	movwf	??___flmul
  4298     0780  0835               	movf	___flmul@prod+1,w
  4299     0781  00A9               	movwf	??___flmul+1
  4300     0782  0836               	movf	___flmul@prod+2,w
  4301     0783  00AA               	movwf	??___flmul+2
  4302     0784  0837               	movf	___flmul@prod+3,w
  4303     0785  00AB               	movwf	??___flmul+3
  4304     0786  3001               	movlw	1
  4305     0787  00AC               	movwf	??___flmul+4
  4306     0788                     u1895:
  4307     0788  0D2B               	rlf	??___flmul+3,w
  4308     0789  0CAB               	rrf	??___flmul+3,f
  4309     078A  0CAA               	rrf	??___flmul+2,f
  4310     078B  0CA9               	rrf	??___flmul+1,f
  4311     078C  0CA8               	rrf	??___flmul,f
  4312     078D                     u1890:
  4313     078D  0BAC               	decfsz	??___flmul+4,f
  4314     078E  2F88               	goto	u1895
  4315     078F  082B               	movf	??___flmul+3,w
  4316     0790  00B7               	movwf	___flmul@prod+3
  4317     0791  082A               	movf	??___flmul+2,w
  4318     0792  00B6               	movwf	___flmul@prod+2
  4319     0793  0829               	movf	??___flmul+1,w
  4320     0794  00B5               	movwf	___flmul@prod+1
  4321     0795  0828               	movf	??___flmul,w
  4322     0796  00B4               	movwf	___flmul@prod
  4323     0797                     l1650:
  4324     0797  3001               	movlw	1
  4325     0798  07B8               	addwf	___flmul@temp,f
  4326     0799  1803               	skipnc
  4327     079A  0AB9               	incf	___flmul@temp+1,f
  4328     079B  3000               	movlw	0
  4329     079C  07B9               	addwf	___flmul@temp+1,f
  4330     079D                     l1652:
  4331     079D  0839               	movf	___flmul@temp+1,w
  4332     079E  3A80               	xorlw	128
  4333     079F  00FF               	movwf	btemp+1
  4334     07A0  3080               	movlw	128
  4335     07A1  027F               	subwf	btemp+1,w
  4336     07A2  1D03               	skipz
  4337     07A3  2FA6               	goto	u1905
  4338     07A4  30FF               	movlw	255
  4339     07A5  0238               	subwf	___flmul@temp,w
  4340     07A6                     u1905:
  4341     07A6  1C03               	skipc
  4342     07A7  2FA9               	goto	u1901
  4343     07A8  2FAA               	goto	u1900
  4344     07A9                     u1901:
  4345     07A9  2FB5               	goto	l1656
  4346     07AA                     u1900:
  4347     07AA                     l1654:
  4348     07AA  307F               	movlw	127
  4349     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4350     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  4351     07AD  00B7               	movwf	___flmul@prod+3
  4352     07AE  3080               	movlw	128
  4353     07AF  00B6               	movwf	___flmul@prod+2
  4354     07B0  3000               	movlw	0
  4355     07B1  00B5               	movwf	___flmul@prod+1
  4356     07B2  3000               	movlw	0
  4357     07B3  00B4               	movwf	___flmul@prod
  4358     07B4  2FE6               	goto	l687
  4359     07B5                     l1656:
  4360     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4361     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4362     07B7  0839               	movf	___flmul@temp+1,w
  4363     07B8  3A80               	xorlw	128
  4364     07B9  00FF               	movwf	btemp+1
  4365     07BA  3080               	movlw	128
  4366     07BB  027F               	subwf	btemp+1,w
  4367     07BC  1D03               	skipz
  4368     07BD  2FC0               	goto	u1915
  4369     07BE  3001               	movlw	1
  4370     07BF  0238               	subwf	___flmul@temp,w
  4371     07C0                     u1915:
  4372     07C0  1803               	skipnc
  4373     07C1  2FC3               	goto	u1911
  4374     07C2  2FC4               	goto	u1910
  4375     07C3                     u1911:
  4376     07C3  2FD0               	goto	l1662
  4377     07C4                     u1910:
  4378     07C4                     l1658:
  4379     07C4  3000               	movlw	0
  4380     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4381     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4382     07C7  00B7               	movwf	___flmul@prod+3
  4383     07C8  3000               	movlw	0
  4384     07C9  00B6               	movwf	___flmul@prod+2
  4385     07CA  3000               	movlw	0
  4386     07CB  00B5               	movwf	___flmul@prod+1
  4387     07CC  3000               	movlw	0
  4388     07CD  00B4               	movwf	___flmul@prod
  4389     07CE                     l1660:
  4390     07CE  01AD               	clrf	___flmul@sign
  4391     07CF  2FE6               	goto	l687
  4392     07D0                     l1662:
  4393     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  4394     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  4395     07D2  0838               	movf	___flmul@temp,w
  4396     07D3  00B3               	movwf	___flmul@bexp
  4397     07D4  30FF               	movlw	255
  4398     07D5  05B4               	andwf	___flmul@prod,f
  4399     07D6  30FF               	movlw	255
  4400     07D7  05B5               	andwf	___flmul@prod+1,f
  4401     07D8  307F               	movlw	127
  4402     07D9  05B6               	andwf	___flmul@prod+2,f
  4403     07DA  3000               	movlw	0
  4404     07DB  05B7               	andwf	___flmul@prod+3,f
  4405     07DC                     l1664:
  4406     07DC  1C33               	btfss	___flmul@bexp,0
  4407     07DD  2FDF               	goto	u1921
  4408     07DE  2FE0               	goto	u1920
  4409     07DF                     u1921:
  4410     07DF  2FE1               	goto	l1668
  4411     07E0                     u1920:
  4412     07E0                     l1666:
  4413     07E0  17B6               	bsf	___flmul@prod+2,7
  4414     07E1                     l1668:
  4415     07E1  0833               	movf	___flmul@bexp,w
  4416     07E2  00A8               	movwf	??___flmul
  4417     07E3  1003               	clrc
  4418     07E4  0C28               	rrf	??___flmul,w
  4419     07E5  00B7               	movwf	___flmul@prod+3
  4420     07E6                     l687:
  4421     07E6  082D               	movf	___flmul@sign,w
  4422     07E7  00A8               	movwf	??___flmul
  4423     07E8  0828               	movf	??___flmul,w
  4424     07E9  04B7               	iorwf	___flmul@prod+3,f
  4425     07EA                     l1670:
  4426     07EA  0837               	movf	___flmul@prod+3,w
  4427     07EB  00A3               	movwf	?___flmul+3
  4428     07EC  0836               	movf	___flmul@prod+2,w
  4429     07ED  00A2               	movwf	?___flmul+2
  4430     07EE  0835               	movf	___flmul@prod+1,w
  4431     07EF  00A1               	movwf	?___flmul+1
  4432     07F0  0834               	movf	___flmul@prod,w
  4433     07F1  00A0               	movwf	?___flmul
  4434     07F2                     l675:
  4435     07F2  0008               	return
  4436     07F3                     __end_of___flmul:
  4437                           
  4438                           	psect	text11
  4439     0CA8                     __ptext11:	
  4440 ;; *************** function __Umul8_16 *****************
  4441 ;; Defined at:
  4442 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  multiplier      1    wreg     unsigned char 
  4445 ;;  multiplicand    1    0[COMMON] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  multiplier      1    8[COMMON] unsigned char 
  4448 ;;  word_mpld       2    6[COMMON] unsigned int 
  4449 ;;  product         2    4[COMMON] unsigned int 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    0[COMMON] unsigned int 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         2       0       0       0       0
  4460 ;;      Locals:         5       0       0       0       0
  4461 ;;      Temps:          2       0       0       0       0
  4462 ;;      Totals:         9       0       0       0       0
  4463 ;;Total ram usage:        9 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		___flmul
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472     0CA8                     __Umul8_16:	
  4473                           ;psect for function __Umul8_16
  4474                           
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4478                           ;__Umul8_16@multiplier stored from wreg
  4479     0CA8  00F8               	movwf	__Umul8_16@multiplier
  4480     0CA9                     l1410:
  4481     0CA9  01F4               	clrf	__Umul8_16@product
  4482     0CAA  01F5               	clrf	__Umul8_16@product+1
  4483     0CAB                     l1412:
  4484     0CAB  0870               	movf	__Umul8_16@multiplicand,w
  4485     0CAC  00F2               	movwf	??__Umul8_16
  4486     0CAD  01F3               	clrf	??__Umul8_16+1
  4487     0CAE  0872               	movf	??__Umul8_16,w
  4488     0CAF  00F6               	movwf	__Umul8_16@word_mpld
  4489     0CB0  0873               	movf	??__Umul8_16+1,w
  4490     0CB1  00F7               	movwf	__Umul8_16@word_mpld+1
  4491     0CB2                     l1414:
  4492     0CB2  1C78               	btfss	__Umul8_16@multiplier,0
  4493     0CB3  2CB5               	goto	u1291
  4494     0CB4  2CB6               	goto	u1290
  4495     0CB5                     u1291:
  4496     0CB5  2CBC               	goto	l694
  4497     0CB6                     u1290:
  4498     0CB6                     l1416:
  4499     0CB6  0876               	movf	__Umul8_16@word_mpld,w
  4500     0CB7  07F4               	addwf	__Umul8_16@product,f
  4501     0CB8  1803               	skipnc
  4502     0CB9  0AF5               	incf	__Umul8_16@product+1,f
  4503     0CBA  0877               	movf	__Umul8_16@word_mpld+1,w
  4504     0CBB  07F5               	addwf	__Umul8_16@product+1,f
  4505     0CBC                     l694:
  4506     0CBC  3001               	movlw	1
  4507     0CBD                     u1305:
  4508     0CBD  1003               	clrc
  4509     0CBE  0DF6               	rlf	__Umul8_16@word_mpld,f
  4510     0CBF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4511     0CC0  3EFF               	addlw	-1
  4512     0CC1  1D03               	skipz
  4513     0CC2  2CBD               	goto	u1305
  4514     0CC3  1003               	clrc
  4515     0CC4  0CF8               	rrf	__Umul8_16@multiplier,f
  4516     0CC5                     l1418:
  4517     0CC5  0878               	movf	__Umul8_16@multiplier,w
  4518     0CC6  1D03               	btfss	3,2
  4519     0CC7  2CC9               	goto	u1311
  4520     0CC8  2CCA               	goto	u1310
  4521     0CC9                     u1311:
  4522     0CC9  2CB2               	goto	l1414
  4523     0CCA                     u1310:
  4524     0CCA                     l1420:
  4525     0CCA  0875               	movf	__Umul8_16@product+1,w
  4526     0CCB  00F1               	movwf	?__Umul8_16+1
  4527     0CCC  0874               	movf	__Umul8_16@product,w
  4528     0CCD  00F0               	movwf	?__Umul8_16
  4529     0CCE                     l696:
  4530     0CCE  0008               	return
  4531     0CCF                     __end_of__Umul8_16:
  4532                           
  4533                           	psect	text12
  4534     0C43                     __ptext12:	
  4535 ;; *************** function _config_TCS230 *****************
  4536 ;; Defined at:
  4537 ;;		line 8 in file "TCS230.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4551 ;;      Params:         0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0
  4554 ;;      Totals:         0       0       0       0       0
  4555 ;;Total ram usage:        0 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_main
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564     0C43                     _config_TCS230:	
  4565                           ;psect for function _config_TCS230
  4566                           
  4567     0C43                     l1740:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _config_TCS230: [wreg+status,2+status,0]
  4570                           
  4571                           
  4572                           ;TCS230.c: 9:     T1CONbits.TMR1CS = 0;
  4573     0C43  1283               	bcf	3,5	;RP0=0, select bank0
  4574     0C44  1303               	bcf	3,6	;RP1=0, select bank0
  4575     0C45  1090               	bcf	16,1	;volatile
  4576     0C46                     l1742:
  4577                           
  4578                           ;TCS230.c: 10:     T1CONbits.T1CKPS = 0b01;
  4579     0C46  0810               	movf	16,w	;volatile
  4580     0C47  39CF               	andlw	-49
  4581     0C48  3810               	iorlw	16
  4582     0C49  0090               	movwf	16	;volatile
  4583     0C4A                     l1744:
  4584                           
  4585                           ;TCS230.c: 11:     T1CONbits.nT1SYNC = 1;
  4586     0C4A  1510               	bsf	16,2	;volatile
  4587     0C4B                     l1746:
  4588                           
  4589                           ;TCS230.c: 12:     T1CONbits.TMR1ON = 0;
  4590     0C4B  1010               	bcf	16,0	;volatile
  4591     0C4C                     l135:
  4592     0C4C  0008               	return
  4593     0C4D                     __end_of_config_TCS230:
  4594                           
  4595                           	psect	text13
  4596     0D04                     __ptext13:	
  4597 ;; *************** function _Lcd_Write_String *****************
  4598 ;; Defined at:
  4599 ;;		line 98 in file "LCD.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  a               2    5[COMMON] PTR unsigned char 
  4602 ;;		 -> verde(4), azul(4), rojo(4), STR_5(5), 
  4603 ;;		 -> STR_4(5), STR_3(5), STR_2(6), STR_1(7), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  i               2   10[COMMON] int 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4615 ;;      Params:         2       0       0       0       0
  4616 ;;      Locals:         2       0       0       0       0
  4617 ;;      Temps:          3       0       0       0       0
  4618 ;;      Totals:         7       0       0       0       0
  4619 ;;Total ram usage:        7 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 2
  4622 ;; This function calls:
  4623 ;;		_Lcd_Write_Char
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629     0D04                     _Lcd_Write_String:	
  4630                           ;psect for function _Lcd_Write_String
  4631                           
  4632     0D04                     l1770:	
  4633                           ;incstack = 0
  4634                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4635                           
  4636                           
  4637                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4638     0D04  01FA               	clrf	Lcd_Write_String@i
  4639     0D05  01FB               	clrf	Lcd_Write_String@i+1
  4640     0D06  2D29               	goto	l1776
  4641     0D07                     l1772:
  4642                           
  4643                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4644     0D07  087A               	movf	Lcd_Write_String@i,w
  4645     0D08  0775               	addwf	Lcd_Write_String@a,w
  4646     0D09  00F8               	movwf	??_Lcd_Write_String+1
  4647     0D0A  0876               	movf	Lcd_Write_String@a+1,w
  4648     0D0B  00F7               	movwf	??_Lcd_Write_String
  4649     0D0C  1803               	skipnc
  4650     0D0D  0AF7               	incf	??_Lcd_Write_String,f
  4651     0D0E  1FFA               	btfss	Lcd_Write_String@i,7
  4652     0D0F  2D11               	goto	u2110
  4653     0D10  03F7               	decf	??_Lcd_Write_String,f
  4654     0D11                     u2110:
  4655     0D11  0877               	movf	??_Lcd_Write_String,w
  4656     0D12  00F9               	movwf	??_Lcd_Write_String+2
  4657     0D13  0879               	movf	??_Lcd_Write_String+2,w
  4658     0D14  1283               	bcf	3,5	;RP0=0, select bank0
  4659     0D15  1303               	bcf	3,6	;RP1=0, select bank0
  4660     0D16  00FF               	movwf	btemp+1
  4661     0D17  0878               	movf	??_Lcd_Write_String+1,w
  4662     0D18  0084               	movwf	4
  4663     0D19  120A  158A  2000  120A  158A  	fcall	stringtab
  4664     0D1E  120A  158A  24CF  120A  158A  	fcall	_Lcd_Write_Char
  4665     0D23                     l1774:
  4666     0D23  3001               	movlw	1
  4667     0D24  07FA               	addwf	Lcd_Write_String@i,f
  4668     0D25  1803               	skipnc
  4669     0D26  0AFB               	incf	Lcd_Write_String@i+1,f
  4670     0D27  3000               	movlw	0
  4671     0D28  07FB               	addwf	Lcd_Write_String@i+1,f
  4672     0D29                     l1776:
  4673     0D29  087A               	movf	Lcd_Write_String@i,w
  4674     0D2A  0775               	addwf	Lcd_Write_String@a,w
  4675     0D2B  00F8               	movwf	??_Lcd_Write_String+1
  4676     0D2C  0876               	movf	Lcd_Write_String@a+1,w
  4677     0D2D  00F7               	movwf	??_Lcd_Write_String
  4678     0D2E  1803               	skipnc
  4679     0D2F  0AF7               	incf	??_Lcd_Write_String,f
  4680     0D30  1FFA               	btfss	Lcd_Write_String@i,7
  4681     0D31  2D33               	goto	u2120
  4682     0D32  03F7               	decf	??_Lcd_Write_String,f
  4683     0D33                     u2120:
  4684     0D33  0877               	movf	??_Lcd_Write_String,w
  4685     0D34  00F9               	movwf	??_Lcd_Write_String+2
  4686     0D35  0879               	movf	??_Lcd_Write_String+2,w
  4687     0D36  1283               	bcf	3,5	;RP0=0, select bank0
  4688     0D37  1303               	bcf	3,6	;RP1=0, select bank0
  4689     0D38  00FF               	movwf	btemp+1
  4690     0D39  0878               	movf	??_Lcd_Write_String+1,w
  4691     0D3A  0084               	movwf	4
  4692     0D3B  120A  158A  2000  120A  158A  	fcall	stringtab
  4693     0D40  3A00               	xorlw	0
  4694     0D41  1D03               	skipz
  4695     0D42  2D44               	goto	u2131
  4696     0D43  2D45               	goto	u2130
  4697     0D44                     u2131:
  4698     0D44  2D07               	goto	l1772
  4699     0D45                     u2130:
  4700     0D45                     l114:
  4701     0D45  0008               	return
  4702     0D46                     __end_of_Lcd_Write_String:
  4703                           
  4704                           	psect	text14
  4705     0CCF                     __ptext14:	
  4706 ;; *************** function _Lcd_Write_Char *****************
  4707 ;; Defined at:
  4708 ;;		line 83 in file "LCD.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  a               1    wreg     unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  a               1    4[COMMON] unsigned char 
  4713 ;;  y               1    3[COMMON] unsigned char 
  4714 ;;  temp            1    2[COMMON] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, pclath, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4724 ;;      Params:         0       0       0       0       0
  4725 ;;      Locals:         3       0       0       0       0
  4726 ;;      Temps:          1       0       0       0       0
  4727 ;;      Totals:         4       0       0       0       0
  4728 ;;Total ram usage:        4 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; Hardware stack levels required when called: 1
  4731 ;; This function calls:
  4732 ;;		_Lcd_Port
  4733 ;; This function is called by:
  4734 ;;		_Lcd_Write_String
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738     0CCF                     _Lcd_Write_Char:	
  4739                           ;psect for function _Lcd_Write_Char
  4740                           
  4741                           
  4742                           ;incstack = 0
  4743                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4744                           ;Lcd_Write_Char@a stored from wreg
  4745     0CCF  00F4               	movwf	Lcd_Write_Char@a
  4746     0CD0                     l1434:
  4747                           
  4748                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4749     0CD0  0874               	movf	Lcd_Write_Char@a,w
  4750     0CD1  390F               	andlw	15
  4751     0CD2  00F2               	movwf	Lcd_Write_Char@temp
  4752                           
  4753                           ;LCD.c: 86:     y = a & 0xF0;
  4754     0CD3  0874               	movf	Lcd_Write_Char@a,w
  4755     0CD4  39F0               	andlw	240
  4756     0CD5  00F3               	movwf	Lcd_Write_Char@y
  4757     0CD6                     l1436:
  4758                           
  4759                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4760     0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  4761     0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  4762     0CD8  1508               	bsf	8,2	;volatile
  4763     0CD9                     l1438:
  4764                           
  4765                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4766     0CD9  0873               	movf	Lcd_Write_Char@y,w
  4767     0CDA  00F1               	movwf	??_Lcd_Write_Char
  4768     0CDB  3004               	movlw	4
  4769     0CDC                     u1325:
  4770     0CDC  1003               	clrc
  4771     0CDD  0CF1               	rrf	??_Lcd_Write_Char,f
  4772     0CDE  3EFF               	addlw	-1
  4773     0CDF  1D03               	skipz
  4774     0CE0  2CDC               	goto	u1325
  4775     0CE1  0871               	movf	??_Lcd_Write_Char,w
  4776     0CE2  120A  158A  2486  120A  158A  	fcall	_Lcd_Port
  4777     0CE7                     l1440:
  4778                           
  4779                           ;LCD.c: 89:     RD3 = 1;
  4780     0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  4781     0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  4782     0CE9  1588               	bsf	8,3	;volatile
  4783     0CEA                     l1442:
  4784                           
  4785                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4786     0CEA  301A               	movlw	26
  4787     0CEB  00F1               	movwf	??_Lcd_Write_Char
  4788     0CEC                     u2537:
  4789     0CEC  0BF1               	decfsz	??_Lcd_Write_Char,f
  4790     0CED  2CEC               	goto	u2537
  4791     0CEE  0000               	nop
  4792     0CEF                     l1444:
  4793                           
  4794                           ;LCD.c: 91:     RD3 = 0;
  4795     0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  4796     0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  4797     0CF1  1188               	bcf	8,3	;volatile
  4798     0CF2                     l1446:
  4799                           
  4800                           ;LCD.c: 92:     Lcd_Port(temp);
  4801     0CF2  0872               	movf	Lcd_Write_Char@temp,w
  4802     0CF3  120A  158A  2486  120A  158A  	fcall	_Lcd_Port
  4803     0CF8                     l1448:
  4804                           
  4805                           ;LCD.c: 93:     RD3 = 1;
  4806     0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  4807     0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  4808     0CFA  1588               	bsf	8,3	;volatile
  4809     0CFB                     l1450:
  4810                           
  4811                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4812     0CFB  301A               	movlw	26
  4813     0CFC  00F1               	movwf	??_Lcd_Write_Char
  4814     0CFD                     u2547:
  4815     0CFD  0BF1               	decfsz	??_Lcd_Write_Char,f
  4816     0CFE  2CFD               	goto	u2547
  4817     0CFF  0000               	nop
  4818     0D00                     l1452:
  4819                           
  4820                           ;LCD.c: 95:     RD3 = 0;
  4821     0D00  1283               	bcf	3,5	;RP0=0, select bank0
  4822     0D01  1303               	bcf	3,6	;RP1=0, select bank0
  4823     0D02  1188               	bcf	8,3	;volatile
  4824     0D03                     l108:
  4825     0D03  0008               	return
  4826     0D04                     __end_of_Lcd_Write_Char:
  4827                           
  4828                           	psect	text15
  4829     0007                     __ptext15:	
  4830 ;; *************** function _Lcd_Set_Cursor *****************
  4831 ;; Defined at:
  4832 ;;		line 48 in file "LCD.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  a               1    wreg     unsigned char 
  4835 ;;  b               1    4[COMMON] unsigned char 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  a               1    6[COMMON] unsigned char 
  4838 ;;  temp            1    9[COMMON] unsigned char 
  4839 ;;  y               1    8[COMMON] unsigned char 
  4840 ;;  z               1    7[COMMON] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4850 ;;      Params:         1       0       0       0       0
  4851 ;;      Locals:         4       0       0       0       0
  4852 ;;      Temps:          1       0       0       0       0
  4853 ;;      Totals:         6       0       0       0       0
  4854 ;;Total ram usage:        6 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 2
  4857 ;; This function calls:
  4858 ;;		_Lcd_Cmd
  4859 ;; This function is called by:
  4860 ;;		_main
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864     0007                     _Lcd_Set_Cursor:	
  4865                           ;psect for function _Lcd_Set_Cursor
  4866                           
  4867                           
  4868                           ;incstack = 0
  4869                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4870                           ;Lcd_Set_Cursor@a stored from wreg
  4871     0007  00F6               	movwf	Lcd_Set_Cursor@a
  4872     0008                     l1750:
  4873                           
  4874                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4875     0008  0376               	decf	Lcd_Set_Cursor@a,w
  4876     0009  1D03               	btfss	3,2
  4877     000A  280C               	goto	u2071
  4878     000B  280D               	goto	u2070
  4879     000C                     u2071:
  4880     000C  282A               	goto	l1760
  4881     000D                     u2070:
  4882     000D                     l1752:
  4883                           
  4884                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4885     000D  0874               	movf	Lcd_Set_Cursor@b,w
  4886     000E  3E7F               	addlw	127
  4887     000F  00F9               	movwf	Lcd_Set_Cursor@temp
  4888                           
  4889                           ;LCD.c: 52:         z = temp >> 4;
  4890     0010  0879               	movf	Lcd_Set_Cursor@temp,w
  4891     0011  00F5               	movwf	??_Lcd_Set_Cursor
  4892     0012  3004               	movlw	4
  4893     0013                     u2085:
  4894     0013  1003               	clrc
  4895     0014  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4896     0015  3EFF               	addlw	-1
  4897     0016  1D03               	skipz
  4898     0017  2813               	goto	u2085
  4899     0018  0875               	movf	??_Lcd_Set_Cursor,w
  4900     0019  00F7               	movwf	Lcd_Set_Cursor@z
  4901     001A                     l1754:
  4902                           
  4903                           ;LCD.c: 53:         y = temp & 0x0F;
  4904     001A  0879               	movf	Lcd_Set_Cursor@temp,w
  4905     001B  390F               	andlw	15
  4906     001C  00F8               	movwf	Lcd_Set_Cursor@y
  4907     001D                     l1756:
  4908                           
  4909                           ;LCD.c: 54:         Lcd_Cmd(z);
  4910     001D  0877               	movf	Lcd_Set_Cursor@z,w
  4911     001E  120A  158A  246C  120A  118A  	fcall	_Lcd_Cmd
  4912     0023                     l1758:
  4913                           
  4914                           ;LCD.c: 55:         Lcd_Cmd(y);
  4915     0023  0878               	movf	Lcd_Set_Cursor@y,w
  4916     0024  120A  158A  246C  120A  118A  	fcall	_Lcd_Cmd
  4917                           
  4918                           ;LCD.c: 56:     } else if (a == 2) {
  4919     0029  284C               	goto	l102
  4920     002A                     l1760:
  4921     002A  3002               	movlw	2
  4922     002B  0676               	xorwf	Lcd_Set_Cursor@a,w
  4923     002C  1D03               	btfss	3,2
  4924     002D  282F               	goto	u2091
  4925     002E  2830               	goto	u2090
  4926     002F                     u2091:
  4927     002F  284C               	goto	l102
  4928     0030                     u2090:
  4929     0030                     l1762:
  4930                           
  4931                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4932     0030  0874               	movf	Lcd_Set_Cursor@b,w
  4933     0031  3EBF               	addlw	191
  4934     0032  00F9               	movwf	Lcd_Set_Cursor@temp
  4935                           
  4936                           ;LCD.c: 58:         z = temp >> 4;
  4937     0033  0879               	movf	Lcd_Set_Cursor@temp,w
  4938     0034  00F5               	movwf	??_Lcd_Set_Cursor
  4939     0035  3004               	movlw	4
  4940     0036                     u2105:
  4941     0036  1003               	clrc
  4942     0037  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4943     0038  3EFF               	addlw	-1
  4944     0039  1D03               	skipz
  4945     003A  2836               	goto	u2105
  4946     003B  0875               	movf	??_Lcd_Set_Cursor,w
  4947     003C  00F7               	movwf	Lcd_Set_Cursor@z
  4948     003D                     l1764:
  4949                           
  4950                           ;LCD.c: 59:         y = temp & 0x0F;
  4951     003D  0879               	movf	Lcd_Set_Cursor@temp,w
  4952     003E  390F               	andlw	15
  4953     003F  00F8               	movwf	Lcd_Set_Cursor@y
  4954     0040                     l1766:
  4955                           
  4956                           ;LCD.c: 60:         Lcd_Cmd(z);
  4957     0040  0877               	movf	Lcd_Set_Cursor@z,w
  4958     0041  120A  158A  246C  120A  118A  	fcall	_Lcd_Cmd
  4959     0046                     l1768:
  4960                           
  4961                           ;LCD.c: 61:         Lcd_Cmd(y);
  4962     0046  0878               	movf	Lcd_Set_Cursor@y,w
  4963     0047  120A  158A  246C  120A  118A  	fcall	_Lcd_Cmd
  4964     004C                     l102:
  4965     004C  0008               	return
  4966     004D                     __end_of_Lcd_Set_Cursor:
  4967                           
  4968                           	psect	text16
  4969     0D9C                     __ptext16:	
  4970 ;; *************** function _Lcd_Init *****************
  4971 ;; Defined at:
  4972 ;;		line 65 in file "LCD.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4986 ;;      Params:         0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0
  4989 ;;      Totals:         2       0       0       0       0
  4990 ;;Total ram usage:        2 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; Hardware stack levels required when called: 2
  4993 ;; This function calls:
  4994 ;;		_Lcd_Cmd
  4995 ;;		_Lcd_Port
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001     0D9C                     _Lcd_Init:	
  5002                           ;psect for function _Lcd_Init
  5003                           
  5004     0D9C                     l1730:	
  5005                           ;incstack = 0
  5006                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5007                           
  5008                           
  5009                           ;LCD.c: 66:     Lcd_Port(0x00);
  5010     0D9C  3000               	movlw	0
  5011     0D9D  120A  158A  2486  120A  158A  	fcall	_Lcd_Port
  5012     0DA2                     l1732:
  5013                           
  5014                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  5015     0DA2  3034               	movlw	52
  5016     0DA3  00F5               	movwf	??_Lcd_Init+1
  5017     0DA4  30F1               	movlw	241
  5018     0DA5  00F4               	movwf	??_Lcd_Init
  5019     0DA6                     u2557:
  5020     0DA6  0BF4               	decfsz	??_Lcd_Init,f
  5021     0DA7  2DA6               	goto	u2557
  5022     0DA8  0BF5               	decfsz	??_Lcd_Init+1,f
  5023     0DA9  2DA6               	goto	u2557
  5024     0DAA  2DAB               	nop2
  5025     0DAB                     l1734:
  5026                           
  5027                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  5028     0DAB  3003               	movlw	3
  5029     0DAC  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5030                           
  5031                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5032     0DB1  300D               	movlw	13
  5033     0DB2  00F5               	movwf	??_Lcd_Init+1
  5034     0DB3  30FB               	movlw	251
  5035     0DB4  00F4               	movwf	??_Lcd_Init
  5036     0DB5                     u2567:
  5037     0DB5  0BF4               	decfsz	??_Lcd_Init,f
  5038     0DB6  2DB5               	goto	u2567
  5039     0DB7  0BF5               	decfsz	??_Lcd_Init+1,f
  5040     0DB8  2DB5               	goto	u2567
  5041     0DB9  2DBA               	nop2
  5042     0DBA                     l1736:
  5043                           
  5044                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  5045     0DBA  3003               	movlw	3
  5046     0DBB  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5047     0DC0                     l1738:
  5048                           
  5049                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  5050     0DC0  301D               	movlw	29
  5051     0DC1  00F5               	movwf	??_Lcd_Init+1
  5052     0DC2  3091               	movlw	145
  5053     0DC3  00F4               	movwf	??_Lcd_Init
  5054     0DC4                     u2577:
  5055     0DC4  0BF4               	decfsz	??_Lcd_Init,f
  5056     0DC5  2DC4               	goto	u2577
  5057     0DC6  0BF5               	decfsz	??_Lcd_Init+1,f
  5058     0DC7  2DC4               	goto	u2577
  5059                           
  5060                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  5061     0DC8  3003               	movlw	3
  5062     0DC9  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5063                           
  5064                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  5065     0DCE  3002               	movlw	2
  5066     0DCF  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5067                           
  5068                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  5069     0DD4  3002               	movlw	2
  5070     0DD5  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5071                           
  5072                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  5073     0DDA  3008               	movlw	8
  5074     0DDB  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5075                           
  5076                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  5077     0DE0  3000               	movlw	0
  5078     0DE1  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5079                           
  5080                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  5081     0DE6  300C               	movlw	12
  5082     0DE7  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5083                           
  5084                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  5085     0DEC  3000               	movlw	0
  5086     0DED  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5087                           
  5088                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  5089     0DF2  3006               	movlw	6
  5090     0DF3  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5091     0DF8                     l105:
  5092     0DF8  0008               	return
  5093     0DF9                     __end_of_Lcd_Init:
  5094                           
  5095                           	psect	text17
  5096     0C4D                     __ptext17:	
  5097 ;; *************** function _Lcd_Clear *****************
  5098 ;; Defined at:
  5099 ;;		line 43 in file "LCD.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0, pclath, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5113 ;;      Params:         0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0
  5116 ;;      Totals:         0       0       0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used: 1
  5119 ;; Hardware stack levels required when called: 2
  5120 ;; This function calls:
  5121 ;;		_Lcd_Cmd
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127     0C4D                     _Lcd_Clear:	
  5128                           ;psect for function _Lcd_Clear
  5129                           
  5130     0C4D                     l1748:	
  5131                           ;incstack = 0
  5132                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5133                           
  5134                           
  5135                           ;LCD.c: 44:     Lcd_Cmd(0);
  5136     0C4D  3000               	movlw	0
  5137     0C4E  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5138                           
  5139                           ;LCD.c: 45:     Lcd_Cmd(1);
  5140     0C53  3001               	movlw	1
  5141     0C54  120A  158A  246C  120A  158A  	fcall	_Lcd_Cmd
  5142     0C59                     l96:
  5143     0C59  0008               	return
  5144     0C5A                     __end_of_Lcd_Clear:
  5145                           
  5146                           	psect	text18
  5147     0C6C                     __ptext18:	
  5148 ;; *************** function _Lcd_Cmd *****************
  5149 ;; Defined at:
  5150 ;;		line 35 in file "LCD.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  a               1    wreg     unsigned char 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  a               1    3[COMMON] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0, pclath, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5164 ;;      Params:         0       0       0       0       0
  5165 ;;      Locals:         1       0       0       0       0
  5166 ;;      Temps:          2       0       0       0       0
  5167 ;;      Totals:         3       0       0       0       0
  5168 ;;Total ram usage:        3 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 1
  5171 ;; This function calls:
  5172 ;;		_Lcd_Port
  5173 ;; This function is called by:
  5174 ;;		_Lcd_Clear
  5175 ;;		_Lcd_Set_Cursor
  5176 ;;		_Lcd_Init
  5177 ;;		_Lcd_Shift_Right
  5178 ;;		_Lcd_Shift_Left
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182     0C6C                     _Lcd_Cmd:	
  5183                           ;psect for function _Lcd_Cmd
  5184                           
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5188                           ;Lcd_Cmd@a stored from wreg
  5189     0C6C  00F3               	movwf	Lcd_Cmd@a
  5190     0C6D                     l1424:
  5191                           
  5192                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  5193     0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  5194     0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  5195     0C6F  1108               	bcf	8,2	;volatile
  5196     0C70                     l1426:
  5197                           
  5198                           ;LCD.c: 37:     Lcd_Port(a);
  5199     0C70  0873               	movf	Lcd_Cmd@a,w
  5200     0C71  120A  158A  2486  120A  158A  	fcall	_Lcd_Port
  5201     0C76                     l1428:
  5202                           
  5203                           ;LCD.c: 38:     RD3 = 1;
  5204     0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5205     0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5206     0C78  1588               	bsf	8,3	;volatile
  5207     0C79                     l1430:
  5208                           
  5209                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5210     0C79  300B               	movlw	11
  5211     0C7A  00F2               	movwf	??_Lcd_Cmd+1
  5212     0C7B  3062               	movlw	98
  5213     0C7C  00F1               	movwf	??_Lcd_Cmd
  5214     0C7D                     u2587:
  5215     0C7D  0BF1               	decfsz	??_Lcd_Cmd,f
  5216     0C7E  2C7D               	goto	u2587
  5217     0C7F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  5218     0C80  2C7D               	goto	u2587
  5219     0C81  0000               	nop
  5220     0C82                     l1432:
  5221                           
  5222                           ;LCD.c: 40:     RD3 = 0;
  5223     0C82  1283               	bcf	3,5	;RP0=0, select bank0
  5224     0C83  1303               	bcf	3,6	;RP1=0, select bank0
  5225     0C84  1188               	bcf	8,3	;volatile
  5226     0C85                     l93:
  5227     0C85  0008               	return
  5228     0C86                     __end_of_Lcd_Cmd:
  5229                           
  5230                           	psect	text19
  5231     0C86                     __ptext19:	
  5232 ;; *************** function _Lcd_Port *****************
  5233 ;; Defined at:
  5234 ;;		line 13 in file "LCD.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  a               1    wreg     unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  a               1    0[COMMON] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5248 ;;      Params:         0       0       0       0       0
  5249 ;;      Locals:         1       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0
  5251 ;;      Totals:         1       0       0       0       0
  5252 ;;Total ram usage:        1 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_Lcd_Cmd
  5258 ;;		_Lcd_Init
  5259 ;;		_Lcd_Write_Char
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263     0C86                     _Lcd_Port:	
  5264                           ;psect for function _Lcd_Port
  5265                           
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in _Lcd_Port: [wreg]
  5269                           ;Lcd_Port@a stored from wreg
  5270     0C86  00F0               	movwf	Lcd_Port@a
  5271     0C87                     l1400:
  5272                           
  5273                           ;LCD.c: 14:     if (a & 1)
  5274     0C87  1C70               	btfss	Lcd_Port@a,0
  5275     0C88  2C8A               	goto	u1251
  5276     0C89  2C8B               	goto	u1250
  5277     0C8A                     u1251:
  5278     0C8A  2C8F               	goto	l82
  5279     0C8B                     u1250:
  5280     0C8B                     l1402:
  5281                           
  5282                           ;LCD.c: 15:         RD4 = 1;
  5283     0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  5284     0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  5285     0C8D  1608               	bsf	8,4	;volatile
  5286     0C8E  2C92               	goto	l83
  5287     0C8F                     l82:	
  5288                           ;LCD.c: 16:     else
  5289                           
  5290                           
  5291                           ;LCD.c: 17:         RD4 = 0;
  5292     0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5293     0C90  1303               	bcf	3,6	;RP1=0, select bank0
  5294     0C91  1208               	bcf	8,4	;volatile
  5295     0C92                     l83:
  5296                           
  5297                           ;LCD.c: 19:     if (a & 2)
  5298     0C92  1CF0               	btfss	Lcd_Port@a,1
  5299     0C93  2C95               	goto	u1261
  5300     0C94  2C96               	goto	u1260
  5301     0C95                     u1261:
  5302     0C95  2C98               	goto	l84
  5303     0C96                     u1260:
  5304     0C96                     l1404:
  5305                           
  5306                           ;LCD.c: 20:         RD5 = 1;
  5307     0C96  1688               	bsf	8,5	;volatile
  5308     0C97  2C99               	goto	l85
  5309     0C98                     l84:	
  5310                           ;LCD.c: 21:     else
  5311                           
  5312                           
  5313                           ;LCD.c: 22:         RD5 = 0;
  5314     0C98  1288               	bcf	8,5	;volatile
  5315     0C99                     l85:
  5316                           
  5317                           ;LCD.c: 24:     if (a & 4)
  5318     0C99  1D70               	btfss	Lcd_Port@a,2
  5319     0C9A  2C9C               	goto	u1271
  5320     0C9B  2C9D               	goto	u1270
  5321     0C9C                     u1271:
  5322     0C9C  2C9F               	goto	l86
  5323     0C9D                     u1270:
  5324     0C9D                     l1406:
  5325                           
  5326                           ;LCD.c: 25:         RD6 = 1;
  5327     0C9D  1708               	bsf	8,6	;volatile
  5328     0C9E  2CA0               	goto	l87
  5329     0C9F                     l86:	
  5330                           ;LCD.c: 26:     else
  5331                           
  5332                           
  5333                           ;LCD.c: 27:         RD6 = 0;
  5334     0C9F  1308               	bcf	8,6	;volatile
  5335     0CA0                     l87:
  5336                           
  5337                           ;LCD.c: 29:     if (a & 8)
  5338     0CA0  1DF0               	btfss	Lcd_Port@a,3
  5339     0CA1  2CA3               	goto	u1281
  5340     0CA2  2CA4               	goto	u1280
  5341     0CA3                     u1281:
  5342     0CA3  2CA6               	goto	l88
  5343     0CA4                     u1280:
  5344     0CA4                     l1408:
  5345                           
  5346                           ;LCD.c: 30:         RD7 = 1;
  5347     0CA4  1788               	bsf	8,7	;volatile
  5348     0CA5  2CA7               	goto	l90
  5349     0CA6                     l88:	
  5350                           ;LCD.c: 31:     else
  5351                           
  5352                           
  5353                           ;LCD.c: 32:         RD7 = 0;
  5354     0CA6  1388               	bcf	8,7	;volatile
  5355     0CA7                     l90:
  5356     0CA7  0008               	return
  5357     0CA8                     __end_of_Lcd_Port:
  5358     007E                     btemp	set	126	;btemp
  5359     007E                     wtemp0	set	126
  5360                           
  5361                           	psect	idloc
  5362                           
  5363                           ;Config register IDLOC0 @ 0x2000
  5364                           ;	unspecified, using default values
  5365     2000                     	org	8192
  5366     2000  3FFF               	dw	16383
  5367                           
  5368                           ;Config register IDLOC1 @ 0x2001
  5369                           ;	unspecified, using default values
  5370     2001                     	org	8193
  5371     2001  3FFF               	dw	16383
  5372                           
  5373                           ;Config register IDLOC2 @ 0x2002
  5374                           ;	unspecified, using default values
  5375     2002                     	org	8194
  5376     2002  3FFF               	dw	16383
  5377                           
  5378                           ;Config register IDLOC3 @ 0x2003
  5379                           ;	unspecified, using default values
  5380     2003                     	org	8195
  5381     2003  3FFF               	dw	16383
  5382                           
  5383                           	psect	config
  5384                           
  5385                           ;Config register CONFIG1 @ 0x2007
  5386                           ;	Oscillator Selection bits
  5387                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5388                           ;	Watchdog Timer Enable bit
  5389                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5390                           ;	Power-up Timer Enable bit
  5391                           ;	PWRTE = OFF, PWRT disabled
  5392                           ;	RE3/MCLR pin function select bit
  5393                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5394                           ;	Code Protection bit
  5395                           ;	CP = OFF, Program memory code protection is disabled
  5396                           ;	Data Code Protection bit
  5397                           ;	CPD = OFF, Data memory code protection is disabled
  5398                           ;	Brown Out Reset Selection bits
  5399                           ;	BOREN = OFF, BOR disabled
  5400                           ;	Internal External Switchover bit
  5401                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5402                           ;	Fail-Safe Clock Monitor Enabled bit
  5403                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5404                           ;	Low Voltage Programming Enable bit
  5405                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5406                           ;	In-Circuit Debugger Mode bit
  5407                           ;	DEBUG = 0x1, unprogramme  5408     2007                     	org	8199
  5409     2007  20D4               	dw	8404
  5410                           
  5411                           ;Config register CONFIG2 @ 0x2008
  5412                           ;	Brown-out Reset Selection bit
  5413                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5414                           ;	Flash Program Memory Self Write Enable bits
  5415                           ;	WRT = OFF, Write protection off
  5416     2008                     	org	8200
  5417     2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    40
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> verde(BANK0[4]), azul(BANK0[4]), rojo(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 7
		 -> verde(BANK0[4]), azul(BANK0[4]), rojo(BANK0[4]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___llmod->___lldiv
    _read_red->___xxtofl
    _read_green->___xxtofl
    _read_blue->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_read_blue
    _main->_read_green
    _main->_read_red
    _sprintf->___llmod
    _read_red->___fltol
    _read_green->___fltol
    _read_blue->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14811
                                             45 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _config_TCS230
                          _read_blue
                         _read_green
                           _read_red
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    23      5    1386
                                             10 BANK0     20    15      5
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_red                                             9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_green                                           9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_blue                                            9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _config_TCS230                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     876
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     988
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _config_TCS230
   _read_blue
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _read_green
     ___flmul
     ___fltol
     ___xxtofl
   _read_red
     ___flmul
     ___fltol
     ___xxtofl
   _setup
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 22:53:27 2023

                       pc 0002                        l65 0C6B                        l90 0CA7  
                      l82 0C8F                        l83 0C92                        l84 0C98  
                      l85 0C99                        l93 0C85                        l86 0C9F  
                      l87 0CA0                        l88 0CA6                        l96 0C59  
                      fsr 0004       __Umul8_16@word_mpld 0076                       l102 004C  
                     l105 0DF8                       l114 0D45                       l108 0D03  
                     l141 0ECF                       l150 0E66                       l135 0C4C  
                     l144 0ED6                       l153 0E6C                       l162 0E03  
                     l146 0EDA                       l138 0EC9                       l322 0F87  
                     l171 0E5B                       l147 0F21                       l156 0E73  
                     l165 0E09                       l158 0E77                       l159 0EBE  
                     l168 0E10                       l272 0141                       l282 022D  
                     l508 0D9B                       l269 011D                       l472 0FFF  
                     l721 0104                       l482 0FFF                       l732 00CE  
                     l733 00DA                       l725 00B2                       l479 0FEA  
                     l719 006F                       l681 0762                       l675 07F2  
                     l694 0CBC                       l687 07E6                       l696 0CCE  
                     _RD0 0040                       _RD1 0041                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0032              ___flmul@bexp 0033              ___flmul@sign 002D  
            ___flmul@temp 0038              ___flmul@prod 0034              ___fltol@exp1 0043  
                    l1400 0C87                      l2008 0136                      l1402 0C8B  
                    l1410 0CA9                      l1404 0C96                      l1420 0CCA  
                    l1412 0CAB                      l1500 0FC6                      l1406 0C9D  
                    l1430 0C79                      l1414 0CB2                      l1510 0FEF  
                    l1502 0FD8                      l1408 0CA4                      l1432 0C82  
                    l1424 0C6D                      l1440 0CE7                      l1416 0CB6  
                    l1600 060B                      l1512 0FF4                      l1520 0D60  
                    l1426 0C70                      l1450 0CFB                      l1442 0CEA  
                    l1434 0CD0                      l1418 0CC5                      l1610 0695  
                    l1602 0628                      l1522 0D64                      l1530 0D93  
                    l1514 0D46                      l1428 0C76                      l1452 0D00  
                    l1444 0CEF                      l1436 0CD6                      l1620 0725  
                    l1612 06C0                      l1604 063F                      l1540 04BB  
                    l1508 0FDF                      l1700 00C4                      l1460 0F42  
                    l1524 0D76                      l1516 0D50                      l1446 0CF2  
                    l1438 0CD9                      l1622 072E                      l1630 0742  
                    l1614 06E6                      l1606 065C                      l1550 04D0  
                    l1542 04BC                      l1534 04AE                      l1710 00F7  
                    l1702 00C8                      l1470 0F70                      l1462 0F46  
                    l1454 0F22                      l1526 0D84                      l1518 0D53  
                    l1448 0CF8                      l1632 0746                      l1624 0732  
                    l1616 070E                      l1608 0687                      l1560 04E6  
                    l1552 04D8                      l1544 04C1                      l1536 04B3  
                    l1480 0F93                      l1712 00FB                      l1704 00D2  
                    l1800 0E72                      l1720 0C5E                      l1472 0F79  
                    l1464 0F4F                      l1456 0F32                      l1528 0D8D  
                    l1730 0D9C                      l1650 0797                      l1642 0767  
                    l1634 0747                      l1626 0733                      l1618 0717  
                    l1570 0502                      l1562 04EB                      l1554 04DD  
                    l1546 04C6                      l1538 04B7                      l1490 0FB8  
                    l1714 00FC                      l1706 00DC                      l1810 0DF9  
                    l1802 0E78                      l1722 0C62                      l1466 0F61  
                    l1458 0F35                      l1474 0F7F                      l1732 0DA2  
                    l1740 0C43                      l1660 07CE                      l1644 076C  
                    l1652 079D                      l1636 074B                      l1628 073C  
                    l1580 0523                      l1572 0507                      l1564 04F0  
                    l1556 04E1                      l1548 04CE                      l1492 0FBA  
                    l1484 0F9C                      l1708 00F2                      l1820 0E1A  
                    l1812 0DFD                      l1804 0E7E                      l1724 0C63  
                    l1468 0F6F                      l1900 0265                      l1734 0DAB  
                    l1750 0008                      l1742 0C46                      l1670 07EA  
                    l1662 07D0                      l1654 07AA                      l1646 077A  
                    l1638 075F                      l1590 05AD                      l1582 0530  
                    l1574 050C                      l1566 04F8                      l1558 04E5  
                    l1494 0FBE                      l1486 0FAF                      l1478 0F88  
                    l1822 0E1B                      l1814 0E0D                      l1806 0E80  
                    l1726 0C66                      l1718 0C5A                      l1830 010B  
                    l1910 02BA                      l1902 0274                      l1736 0DBA  
                    l1752 000D                      l1760 002A                      l1744 0C4A  
                    l1664 07DC                      l1656 07B5                      l1648 077E  
                    l1592 05C9                      l1584 054B                      l1568 04FA  
                    l1488 0FB0                      l1680 0067                      l1824 0E1D  
                    l1816 0E0F                      l1728 0C6A                      l1832 0111  
                    l1920 0301                      l1912 02CD                      l1904 0283  
                    l1738 0DC0                      l1762 0030                      l1754 001A  
                    l1770 0D04                      l1746 0C4B                      l1666 07E0  
                    l1658 07C4                      l1594 05D2                      l1586 0567  
                    l1578 0515                      l1690 0090                      l1682 0077  
                    l1674 004E                      l1818 0E14                      l1850 0166  
                    l1842 0124                      l1834 0116                      l1930 0356  
                    l1914 02E0                      l1906 0294                      l1922 030A  
                    l1748 0C4D                      l1764 003D                      l1756 001D  
                    l1772 0D07                      l1668 07E1                      l1596 05E0  
                    l1588 0591                      l1692 0097                      l1676 0053  
                    l1780 0EC3                      l1852 016A                      l1844 0145  
                    l1836 011B                      l1828 0108                      l1932 0369  
                    l1924 031D                      l1940 0393                      l1916 02F3  
                    l1908 02A7                      l1766 0040                      l1758 0023  
                    l1774 0D23                      l1598 05FD                      l1694 009B  
                    l1686 0080                      l1678 0057                      l1790 0EE3  
                    l1782 0ED3                      l1870 0207                      l1862 01A3  
                    l1846 0153                      l1838 011F                      l1950 03F2  
                    l1942 03A6                      l1934 037C                      l1926 0330  
                    l1918 02F9                      l1768 0046                      l1776 0D29  
                    l1696 00A9                      l1688 0083                      l1784 0ED5  
                    l1872 020B                      l1864 01AD                      l1848 0158  
                    l1960 0421                      l1952 0405                      l1944 03B9  
                    l1936 0382                      l1928 0343                      l1698 00B9  
                    l1794 0E5C                      l1786 0EDB                      l1778 0EBF  
                    l1866 01B5                      l1858 016C                      l1874 0219  
                    l1970 0468                      l1962 0429                      l1954 040B  
                    l1946 03CC                      l1938 038A                      l1890 023B  
                    l1796 0E60                      l1788 0EE1                      l1868 0202  
                    l1876 0229                      l1980 0492                      l1972 0470  
                    l1964 0432                      l1956 0413                      l1948 03DF  
                    l1892 0240                      l1884 022E                      l1798 0E70  
                    l1982 049B                      l1974 0479                      l1966 0444  
                    l1958 041D                      l1894 0245                      l1886 0233  
                    l1976 0481                      l1968 0456                      l1896 024D  
                    l1888 0236                      l1978 048A                      l1898 0256  
                    STR_1 0838                      STR_2 083F                      STR_3 084A  
                    STR_4 084F                      STR_5 0845                      STR_6 0854  
                    STR_7 0854                      STR_8 0854                      u2010 00C8  
                    u2011 00C7                      u2020 00CE                      u2021 00CD  
                    u2005 00BD                      u2110 0D11                      u1310 0CCA  
                    u2030 00D2                      u1311 0CC9                      u2031 00D1  
                    u2120 0D33                      u1400 0F93                      u2040 00E7  
                    u2200 0E09                      u2105 0036                      u1305 0CBD  
                    u1401 0F92                      u2201 0E08                      u1250 0C8B  
                    u2130 0D45                      u1410 0FAA                      u2050 00F7  
                    u2210 0E0D                      u1330 0F32                      u1251 0C8A  
                    u2131 0D44                      u2051 00F6                      u2211 0E0C  
                    u1331 0F31                      u1260 0C96                      u1420 0FBE  
                    u2060 00FB                      u2220 0E14                      u2140 0ECF  
                    u1500 0D50                      u2300 0229                      u1261 0C95  
                    u1325 0CDC                      u1421 0FBD                      u2061 00FA  
                    u2045 00E2                      u2221 0E13                      u2141 0ECE  
                    u1501 0D4F                      u2301 0228                      u1270 0C9D  
                    u2070 000D                      u1430 0FC5                      u2150 0ED3  
                    u1350 0F46                      u2230 0111                      u2310 0294  
                    u1271 0C9C                      u2071 000C                      u1431 0FC4  
                    u1415 0FA5                      u2151 0ED2                      u1351 0F45  
                    u2231 0110                      u2311 0293                      u1280 0CA4  
                    u1600 04EB                      u2160 0EDA                      u1520 0D64  
                    u2240 0145                      u2400 0356                      u2320 02A7  
                    u1281 0CA3                      u1601 04EA                      u2161 0ED9  
                    u1345 0F37                      u1521 0D63                      u2241 0144  
                    u2401 0355                      u2321 02A6                      u2313 0290  
                    u2090 0030                      u1290 0CB6                      u1610 04F0  
                    u1450 0FD7                      u2170 0E6C                      u1370 0F61  
                    u1530 0D76                      u2410 0369                      u2330 02BA  
                    u2091 002F                      u1291 0CB5                      u1611 04EF  
                    u1451 0FD6                      u2171 0E6B                      u1371 0F60  
                    u1531 0D75                      u1515 0D55                      u2411 0368  
                    u2403 0352                      u2331 02B9                      u2323 02A3  
                    u1620 0507                      u1460 0FDE                      u2180 0E70  
                    u2260 01A2                      u2420 037C                      u2340 02CD  
                    u2085 0013                      u1701 061A                      u1621 0506  
                    u1461 0FDD                      u1445 0FC7                      u2181 0E6F  
                    u1365 0F48                      u2261 01A1                      u2421 037B  
                    u2413 0365                      u2341 02CC                      u2333 02B6  
                    u1702 0621                      u1630 050C                      u2190 0E77  
                    u1390 0F7F                      u1550 0D93                      u2270 01AD  
                    u2430 03A6                      u2350 02E0                      u1703 0628  
                    u1631 050B                      u2191 0E76                      u1391 0F7E  
                    u1375 0F5D                      u1551 0D92                      u1535 0D72  
                    u2271 01AC                      u2255 016F                      u2431 03A5  
                    u2423 0378                      u2351 02DF                      u2343 02C9  
                    u1560 04BB                      u1480 0FEF                      u2440 03B9  
                    u2360 02F3                      u1721 064E                      u1641 0559  
                    u1561 04BA                      u1481 0FEE                      u1385 0F71  
                    u1545 0D85                      u2265 019E                      u2441 03B8  
                    u2433 03A2                      u2361 02F2                      u2353 02DC  
                    u1810 0732                      u1722 0655                      u1642 0560  
                    u1570 04C1                      u1490 0FF4                      u2290 0219  
                    u2450 03CC                      u2370 031D                      u1811 0731  
                    u1731 0679                      u1723 065C                      u1715 062A  
                    u1651 0575                      u1643 0567                      u1571 04C0  
                    u1491 0FF3                      u1475 0FE1                      u2507 0EC7  
                    u2291 0218                      u2451 03CB                      u2443 03B5  
                    u2371 031C                      u2363 02EF                      u1900 07AA  
                    u1732 0680                      u1652 057C                      u1580 04C6  
                    u2460 03DF                      u2380 0330                      u1901 07A9  
                    u1805 0727                      u1741 06A4                      u1733 0687  
                    u1661 059F                      u1653 0583                      u1581 04C5  
                    u2517 0E64                      u2285 01C0                      u2461 03DE  
                    u2453 03C8                      u2381 032F                      u2373 0319  
                    u1910 07C4                      u1830 0746                      u1750 06CC  
                    u1742 06AB                      u1662 05A6                      u1590 04E5  
                    u2470 03F2                      u2390 0343                      u1911 07C3  
                    u1831 0745                      u1743 06B2                      u1671 05BB  
                    u1663 05AD                      u1591 04E4                      u2527 0E01  
                    u2471 03F1                      u2463 03DB                      u2391 0342  
                    u2383 032C                      u1920 07E0                      u1840 074B  
                    u1672 05C2                      u2480 0405                      u2537 0CEC  
                    u1921 07DF                      u1905 07A6                      u1841 074A  
                    u1825 0735                      u1761 06D8                      u1673 05C9  
                    u2481 0404                      u2473 03EE                      u2393 033F  
                    u1850 075F                      u1770 06F4                      u1762 06DF  
                    u1930 0053                      u2547 0CFD                      u1915 07C0  
                    u1851 075E                      u1763 06E6                      u1755 06C7  
                    u1691 05EF                      u1931 0052                      u2483 0401  
                    u1860 0766                      u1692 05F6                      u1940 0057  
                    u2557 0DA6                      u1861 0765                      u1781 0700  
                    u1693 05FD                      u1685 05CB                      u1941 0056  
                    u1870 076C                      u1782 0707                      u1950 0077  
                    u2567 0DB5                      u1871 076B                      u1783 070E  
                    u1775 06EF                      u1951 0076                      u1880 077E  
                    u2577 0DC4                      u1881 077D                      u2497 04A3  
                    u1890 078D                      u1970 0096                      u2587 0C7D  
                    u1795 0710                      u1971 0095                      u1965 0088  
                    u1990 00B8                      u1895 0788                      u1991 00B7  
                    u1985 00AA                      _TMR1 000E         ?_Lcd_Write_String 0075  
                    _cont 005C                      _main 022E                      _azul 0065  
                    _rojo 0069                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 0C86           ??_config_TCS230 0070  
           ___fltol@sign1 0042                     ?_main 0070           __end_of___flmul 07F3  
         __end_of___fltol 1000                     _ANSEL 0188           __end_of___lldiv 0F88  
         __end_of___llmod 0D9C                     _PORTD 0008                     _TRISA 0085  
                   _TRISD 0088           __end_of_dpowers 0838                     _verde 0061  
                   _setup 0C5A                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 022E          __end_of_Lcd_Init 0DF9  
        __end_of_Lcd_Port 0CA8           __initialization 07F3              __end_of_main 04AE  
                  ??_main 004D          ___llmod@dividend 0024                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071          __end_of___xxtofl 0105  
               ??___flmul 0028                 ??___fltol 003E                 ??___lldiv 0078  
               ??___llmod 0028                    _estado 005F          __end_of_read_red 0F22  
       read_red@temp_freq 0049                 ??_sprintf 002F           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0C5A                ___fltol@f1 003A  
          __pcstackCOMMON 0070             __end_of_setup 0C6C            _Lcd_Set_Cursor 0007  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0070  
              __pbssBANK0 0050         __end_of__Umul8_16 0CCF                __pmaintext 022E  
  __end_of_Lcd_Set_Cursor 004D                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                __stringtab 0800            _Lcd_Write_Char 0CCF  
                 _Lcd_Cmd 0C6C                 ?_read_red 0044                _green_freq 0050  
                 ___flmul 04AE                   ___fltol 0F88                   ___lldiv 0F22  
                 ___llmod 0D46           ?_Lcd_Set_Cursor 0074                _read_green 0E5C  
                 __ptext1 0105                   __ptext2 0D46                   __ptext3 0F22  
                 __ptext4 0C5A                   __ptext5 0EBF                   __ptext6 0E5C  
                 __ptext7 0DF9                   __ptext8 004D                   __ptext9 0F88  
               _T1CONbits 0010     __end_of_config_TCS230 0C4D                   _dpowers 0810  
              ??___xxtofl 0074         __end_of_read_blue 0E5C                   _sprintf 0105  
                 clrloop0 0C3C    __end_of_Lcd_Write_Char 0D04      end_of_initialization 07FC  
              ??_read_red 0048           ___lldiv@divisor 0070           ___lldiv@counter 007D  
               Lcd_Port@a 0070                 _PORTAbits 0005                 _PORTDbits 0008  
           ___xxtofl@sign 0078           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A               ___flmul@grs 002E                 _Lcd_Clear 0C4D  
        _Lcd_Write_String 0D04               ?_read_green 0044       start_initialization 07F3  
      read_blue@temp_freq 0049           ___llmod@divisor 0020           ___llmod@counter 0029  
              ?_Lcd_Clear 0070       read_green@temp_freq 0049                 __Umul8_16 0CA8  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                 ___flmul@a 0024  
               ___flmul@b 0020                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070               sprintf@flag 0034               sprintf@prec 0035  
        ??_Lcd_Set_Cursor 0075                  ?___flmul 0020                  ?___fltol 003A  
                ?___lldiv 0070                  ?___llmod 0020                ?__Umul8_16 0070  
               _blue_freq 0054                 __pstrings 0800                  ?_sprintf 002A  
               _read_blue 0DF9                 clear_ram0 0C3B                  Lcd_Cmd@a 0073  
             ??_Lcd_Clear 0074               __stringbase 080F          ??_Lcd_Write_Char 0071  
                _Lcd_Init 0D9C                  _Lcd_Port 0C86                ?_read_blue 0044  
__end_of_Lcd_Write_String 0D46               ??__Umul8_16 0072              ??_read_green 0048  
      __end_of__stringtab 0810                sprintf@val 0037                  ___xxtofl 004D  
                __ptext10 04AE                  __ptext11 0CA8                  __ptext12 0C43  
                __ptext13 0D04                  __ptext14 0CCF                  __ptext15 0007  
                __ptext16 0D9C                  __ptext17 0C4D                  __ptext18 0C6C  
                __ptext19 0C86                  _read_red 0EBF                  _red_freq 0058  
      __end_of_read_green 0EBF             _config_TCS230 0C43               ??_read_blue 0048  
      Lcd_Write_Char@temp 0072                 sprintf@ap 003B                 sprintf@sp 003C  
        ___lldiv@dividend 0074                 stringcode 080A                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079    __Umul8_16@multiplicand 0070                  sprintf@c 003D  
                sprintf@f 002A            ?_config_TCS230 0070          ___lldiv@quotient 0079  
                stringdir 080A                  stringtab 0800      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  

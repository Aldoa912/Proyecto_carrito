

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 13:22:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381                           
   382                           	psect	strings
   383     0800                     __pstrings:
   384     0800                     stringtab:
   385     0800                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388     0800  1BFF               	btfsc	btemp+1,7
   389     0801  280A               	ljmp	stringcode
   390     0802  1383               	bcf	3,7
   391     0803  187F               	btfsc	btemp+1,0
   392     0804  1783               	bsf	3,7
   393     0805  0800               	movf	0,w
   394     0806  0A84               	incf	4,f
   395     0807  1903               	skipnz
   396     0808  0AFF               	incf	btemp+1,f
   397     0809  0008               	return
   398     080A                     stringcode:
   399     080A                     stringdir:
   400     080A  3008               	movlw	high stringdir
   401     080B  008A               	movwf	10
   402     080C  0804               	movf	4,w
   403     080D  0A84               	incf	4,f
   404     080E  0782               	addwf	2,f
   405     080F                     __stringbase:
   406     080F  3400               	retlw	0
   407     0810                     __end_of__stringtab:
   408     0810                     _dpowers:
   409     0810  3401               	retlw	1
   410     0811  3400               	retlw	0
   411     0812  3400               	retlw	0
   412     0813  3400               	retlw	0
   413     0814  340A               	retlw	10
   414     0815  3400               	retlw	0
   415     0816  3400               	retlw	0
   416     0817  3400               	retlw	0
   417     0818  3464               	retlw	100
   418     0819  3400               	retlw	0
   419     081A  3400               	retlw	0
   420     081B  3400               	retlw	0
   421     081C  34E8               	retlw	232
   422     081D  3403               	retlw	3
   423     081E  3400               	retlw	0
   424     081F  3400               	retlw	0
   425     0820  3410               	retlw	16
   426     0821  3427               	retlw	39
   427     0822  3400               	retlw	0
   428     0823  3400               	retlw	0
   429     0824  34A0               	retlw	160
   430     0825  3486               	retlw	134
   431     0826  3401               	retlw	1
   432     0827  3400               	retlw	0
   433     0828  3440               	retlw	64
   434     0829  3442               	retlw	66
   435     082A  340F               	retlw	15
   436     082B  3400               	retlw	0
   437     082C  3480               	retlw	128
   438     082D  3496               	retlw	150
   439     082E  3498               	retlw	152
   440     082F  3400               	retlw	0
   441     0830  3400               	retlw	0
   442     0831  34E1               	retlw	225
   443     0832  34F5               	retlw	245
   444     0833  3405               	retlw	5
   445     0834  3400               	retlw	0
   446     0835  34CA               	retlw	202
   447     0836  349A               	retlw	154
   448     0837  343B               	retlw	59
   449     0838                     __end_of_dpowers:
   450     000E                     _TMR1	set	14
   451     0005                     _PORTAbits	set	5
   452     0010                     _T1CONbits	set	16
   453     0008                     _PORTDbits	set	8
   454     0008                     _PORTD	set	8
   455     0041                     _RD1	set	65
   456     0040                     _RD0	set	64
   457     0043                     _RD3	set	67
   458     0047                     _RD7	set	71
   459     0046                     _RD6	set	70
   460     0045                     _RD5	set	69
   461     0044                     _RD4	set	68
   462     008F                     _OSCCONbits	set	143
   463     0085                     _TRISA	set	133
   464     0088                     _TRISD	set	136
   465     0189                     _ANSELH	set	393
   466     0188                     _ANSEL	set	392
   467     0838                     STR_1:
   468     0838  3443               	retlw	67	;'C'
   469     0839  344F               	retlw	79	;'O'
   470     083A  344C               	retlw	76	;'L'
   471     083B  344F               	retlw	79	;'O'
   472     083C  3452               	retlw	82	;'R'
   473     083D  343A               	retlw	58	;':'
   474     083E  3400               	retlw	0
   475     083F                     STR_3:
   476     083F  344E               	retlw	78	;'N'
   477     0840  3441               	retlw	65	;'A'
   478     0841  3444               	retlw	68	;'D'
   479     0842  3441               	retlw	65	;'A'
   480     0843  3400               	retlw	0
   481     0844                     STR_2:
   482     0844  3452               	retlw	82	;'R'
   483     0845  344F               	retlw	79	;'O'
   484     0846  344A               	retlw	74	;'J'
   485     0847  344F               	retlw	79	;'O'
   486     0848  3400               	retlw	0
   487     0849                     STR_4:
   488     0849  3425               	retlw	37	;'%'
   489     084A  346C               	retlw	108	;'l'
   490     084B  3475               	retlw	117	;'u'
   491     084C  3400               	retlw	0
   492     0849                     
   493                           	psect	cinit
   494     07F3                     start_initialization:	
   495                           ; #config settings
   496                           
   497     07F3                     __initialization:
   498                           
   499                           ; Clear objects allocated to BANK0
   500     07F3  1383               	bcf	3,7	;select IRP bank0
   501     07F4  3050               	movlw	low __pbssBANK0
   502     07F5  0084               	movwf	4
   503     07F6  306D               	movlw	low (__pbssBANK0+29)
   504     07F7  120A  158A  2550  120A  118A  	fcall	clear_ram0
   505     07FC                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508     07FC                     __end_of__initialization:
   509     07FC  0183               	clrf	3
   510     07FD  120A  118A  2B40   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK0
   513     0050                     __pbssBANK0:
   514     0050                     _green_freq:
   515     0050                     	ds	4
   516     0054                     _blue_freq:
   517     0054                     	ds	4
   518     0058                     _red_freq:
   519     0058                     	ds	4
   520     005C                     _cont:
   521     005C                     	ds	3
   522     005F                     _estado:
   523     005F                     	ds	2
   524     0061                     _verde:
   525     0061                     	ds	4
   526     0065                     _azul:
   527     0065                     	ds	4
   528     0069                     _rojo:
   529     0069                     	ds	4
   530                           
   531                           	psect	clrtext
   532     0D50                     clear_ram0:	
   533                           ;	Called with FSR containing the base address, and
   534                           ;	W with the last address+1
   535                           
   536     0D50  0064               	clrwdt	;clear the watchdog before getting into this loop
   537     0D51                     clrloop0:
   538     0D51  0180               	clrf	0	;clear RAM location pointed to by FSR
   539     0D52  0A84               	incf	4,f	;increment pointer
   540     0D53  0604               	xorwf	4,w	;XOR with final address
   541     0D54  1903               	btfsc	3,2	;have we reached the end yet?
   542     0D55  3400               	retlw	0	;all done for this memory range, return
   543     0D56  0604               	xorwf	4,w	;XOR again to restore value
   544     0D57  2D51               	goto	clrloop0	;do the next byte
   545                           
   546                           	psect	cstackCOMMON
   547     0070                     __pcstackCOMMON:
   548     0070                     ?_setup:
   549     0070                     ??_setup:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_Lcd_Init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_config_TCS230:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ??_config_TCS230:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_Lcd_Clear:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_main:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_Lcd_Port:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ??_Lcd_Port:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_Lcd_Cmd:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_Lcd_Write_Char:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?__Umul8_16:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?___lldiv:	
   583                           ; 2 bytes @ 0x0
   584                           
   585     0070                     ?___xxtofl:	
   586                           ; 4 bytes @ 0x0
   587                           
   588     0070                     Lcd_Port@a:	
   589                           ; 4 bytes @ 0x0
   590                           
   591     0070                     __Umul8_16@multiplicand:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ___lldiv@divisor:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ___xxtofl@val:	
   598                           ; 4 bytes @ 0x0
   599                           
   600                           
   601                           ; 4 bytes @ 0x0
   602     0070                     	ds	1
   603     0071                     ??_Lcd_Cmd:
   604     0071                     ??_Lcd_Write_Char:	
   605                           ; 1 bytes @ 0x1
   606                           
   607                           
   608                           ; 1 bytes @ 0x1
   609     0071                     	ds	1
   610     0072                     ??__Umul8_16:
   611     0072                     Lcd_Write_Char@temp:	
   612                           ; 1 bytes @ 0x2
   613                           
   614                           
   615                           ; 1 bytes @ 0x2
   616     0072                     	ds	1
   617     0073                     Lcd_Cmd@a:
   618     0073                     Lcd_Write_Char@y:	
   619                           ; 1 bytes @ 0x3
   620                           
   621                           
   622                           ; 1 bytes @ 0x3
   623     0073                     	ds	1
   624     0074                     ??_Lcd_Init:
   625     0074                     ??_Lcd_Clear:	
   626                           ; 1 bytes @ 0x4
   627                           
   628     0074                     ?_Lcd_Set_Cursor:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0074                     ??___xxtofl:	
   632                           ; 1 bytes @ 0x4
   633                           
   634     0074                     Lcd_Set_Cursor@b:	
   635                           ; 1 bytes @ 0x4
   636                           
   637     0074                     Lcd_Write_Char@a:	
   638                           ; 1 bytes @ 0x4
   639                           
   640     0074                     __Umul8_16@product:	
   641                           ; 1 bytes @ 0x4
   642                           
   643     0074                     ___lldiv@dividend:	
   644                           ; 2 bytes @ 0x4
   645                           
   646                           
   647                           ; 4 bytes @ 0x4
   648     0074                     	ds	1
   649     0075                     ??_Lcd_Set_Cursor:
   650     0075                     ?_Lcd_Write_String:	
   651                           ; 1 bytes @ 0x5
   652                           
   653     0075                     Lcd_Write_String@a:	
   654                           ; 1 bytes @ 0x5
   655                           
   656                           
   657                           ; 2 bytes @ 0x5
   658     0075                     	ds	1
   659     0076                     Lcd_Set_Cursor@a:
   660     0076                     __Umul8_16@word_mpld:	
   661                           ; 1 bytes @ 0x6
   662                           
   663                           
   664                           ; 2 bytes @ 0x6
   665     0076                     	ds	1
   666     0077                     ??_Lcd_Write_String:
   667     0077                     Lcd_Set_Cursor@z:	
   668                           ; 1 bytes @ 0x7
   669                           
   670                           
   671                           ; 1 bytes @ 0x7
   672     0077                     	ds	1
   673     0078                     ??___lldiv:
   674     0078                     Lcd_Set_Cursor@y:	
   675                           ; 1 bytes @ 0x8
   676                           
   677     0078                     __Umul8_16@multiplier:	
   678                           ; 1 bytes @ 0x8
   679                           
   680     0078                     ___xxtofl@sign:	
   681                           ; 1 bytes @ 0x8
   682                           
   683                           
   684                           ; 1 bytes @ 0x8
   685     0078                     	ds	1
   686     0079                     Lcd_Set_Cursor@temp:
   687     0079                     ___xxtofl@exp:	
   688                           ; 1 bytes @ 0x9
   689                           
   690     0079                     ___lldiv@quotient:	
   691                           ; 1 bytes @ 0x9
   692                           
   693                           
   694                           ; 4 bytes @ 0x9
   695     0079                     	ds	1
   696     007A                     Lcd_Write_String@i:
   697     007A                     ___xxtofl@arg:	
   698                           ; 2 bytes @ 0xA
   699                           
   700                           
   701                           ; 4 bytes @ 0xA
   702     007A                     	ds	3
   703     007D                     ___lldiv@counter:
   704                           
   705                           ; 1 bytes @ 0xD
   706     007D                     	ds	1
   707                           
   708                           	psect	cstackBANK0
   709     0020                     __pcstackBANK0:
   710     0020                     ?___llmod:
   711     0020                     ?___flmul:	
   712                           ; 4 bytes @ 0x0
   713                           
   714     0020                     ___llmod@divisor:	
   715                           ; 4 bytes @ 0x0
   716                           
   717     0020                     ___flmul@b:	
   718                           ; 4 bytes @ 0x0
   719                           
   720                           
   721                           ; 4 bytes @ 0x0
   722     0020                     	ds	4
   723     0024                     ___llmod@dividend:
   724     0024                     ___flmul@a:	
   725                           ; 4 bytes @ 0x4
   726                           
   727                           
   728                           ; 4 bytes @ 0x4
   729     0024                     	ds	4
   730     0028                     ??___llmod:
   731     0028                     ??___flmul:	
   732                           ; 1 bytes @ 0x8
   733                           
   734                           
   735                           ; 1 bytes @ 0x8
   736     0028                     	ds	1
   737     0029                     ___llmod@counter:
   738                           
   739                           ; 1 bytes @ 0x9
   740     0029                     	ds	1
   741     002A                     ?_sprintf:
   742     002A                     sprintf@f:	
   743                           ; 2 bytes @ 0xA
   744                           
   745                           
   746                           ; 1 bytes @ 0xA
   747     002A                     	ds	3
   748     002D                     ___flmul@sign:
   749                           
   750                           ; 1 bytes @ 0xD
   751     002D                     	ds	1
   752     002E                     ___flmul@grs:
   753                           
   754                           ; 4 bytes @ 0xE
   755     002E                     	ds	1
   756     002F                     ??_sprintf:
   757                           
   758                           ; 1 bytes @ 0xF
   759     002F                     	ds	3
   760     0032                     ___flmul@aexp:
   761                           
   762                           ; 1 bytes @ 0x12
   763     0032                     	ds	1
   764     0033                     ___flmul@bexp:
   765                           
   766                           ; 1 bytes @ 0x13
   767     0033                     	ds	1
   768     0034                     sprintf@flag:
   769     0034                     ___flmul@prod:	
   770                           ; 1 bytes @ 0x14
   771                           
   772                           
   773                           ; 4 bytes @ 0x14
   774     0034                     	ds	1
   775     0035                     sprintf@prec:
   776                           
   777                           ; 2 bytes @ 0x15
   778     0035                     	ds	2
   779     0037                     sprintf@val:
   780                           
   781                           ; 4 bytes @ 0x17
   782     0037                     	ds	1
   783     0038                     ___flmul@temp:
   784                           
   785                           ; 2 bytes @ 0x18
   786     0038                     	ds	2
   787     003A                     ?___fltol:
   788     003A                     ___fltol@f1:	
   789                           ; 4 bytes @ 0x1A
   790                           
   791                           
   792                           ; 4 bytes @ 0x1A
   793     003A                     	ds	1
   794     003B                     sprintf@ap:
   795                           
   796                           ; 1 bytes @ 0x1B
   797     003B                     	ds	1
   798     003C                     sprintf@sp:
   799                           
   800                           ; 1 bytes @ 0x1C
   801     003C                     	ds	1
   802     003D                     sprintf@c:
   803                           
   804                           ; 1 bytes @ 0x1D
   805     003D                     	ds	1
   806     003E                     ??___fltol:
   807                           
   808                           ; 1 bytes @ 0x1E
   809     003E                     	ds	4
   810     0042                     ___fltol@sign1:
   811                           
   812                           ; 1 bytes @ 0x22
   813     0042                     	ds	1
   814     0043                     ___fltol@exp1:
   815                           
   816                           ; 1 bytes @ 0x23
   817     0043                     	ds	1
   818     0044                     ?_read_red:
   819     0044                     ?_read_green:	
   820                           ; 4 bytes @ 0x24
   821                           
   822     0044                     ?_read_blue:	
   823                           ; 4 bytes @ 0x24
   824                           
   825                           
   826                           ; 4 bytes @ 0x24
   827     0044                     	ds	4
   828     0048                     ??_read_red:
   829     0048                     ??_read_green:	
   830                           ; 1 bytes @ 0x28
   831                           
   832     0048                     ??_read_blue:	
   833                           ; 1 bytes @ 0x28
   834                           
   835                           
   836                           ; 1 bytes @ 0x28
   837     0048                     	ds	1
   838     0049                     read_red@temp_freq:
   839     0049                     read_green@temp_freq:	
   840                           ; 4 bytes @ 0x29
   841                           
   842     0049                     read_blue@temp_freq:	
   843                           ; 4 bytes @ 0x29
   844                           
   845                           
   846                           ; 4 bytes @ 0x29
   847     0049                     	ds	4
   848     004D                     ??_main:
   849                           
   850                           ; 1 bytes @ 0x2D
   851     004D                     	ds	3
   852                           
   853                           	psect	maintext
   854     0340                     __pmaintext:	
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 51 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : B00/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       3       0       0       0
   877 ;;      Totals:         0       3       0       0       0
   878 ;;Total ram usage:        3 bytes
   879 ;; Hardware stack levels required when called: 3
   880 ;; This function calls:
   881 ;;		_Lcd_Clear
   882 ;;		_Lcd_Init
   883 ;;		_Lcd_Set_Cursor
   884 ;;		_Lcd_Write_String
   885 ;;		_config_TCS230
   886 ;;		_read_blue
   887 ;;		_read_green
   888 ;;		_read_red
   889 ;;		_setup
   890 ;;		_sprintf
   891 ;; This function is called by:
   892 ;;		Startup code after reset
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896     0340                     _main:	
   897                           ;psect for function _main
   898                           
   899     0340                     l1846:	
   900                           ;incstack = 0
   901                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   902                           
   903                           
   904                           ;main.c: 52:     setup();
   905     0340  120A  158A  256F  120A  118A  	fcall	_setup
   906     0345                     l1848:
   907                           
   908                           ;main.c: 53:     TRISD = 0x00;
   909     0345  1683               	bsf	3,5	;RP0=1, select bank1
   910     0346  1303               	bcf	3,6	;RP1=0, select bank1
   911     0347  0188               	clrf	8	;volatile
   912     0348                     l1850:
   913                           
   914                           ;main.c: 54:     Lcd_Init();
   915     0348  120A  158A  26DD  120A  118A  	fcall	_Lcd_Init
   916     034D                     l1852:
   917                           
   918                           ;main.c: 55:     config_TCS230();
   919     034D  120A  158A  2558  120A  118A  	fcall	_config_TCS230
   920     0352                     l1854:
   921                           
   922                           ;main.c: 58:   {;main.c: 60:     Lcd_Clear();
   923     0352  120A  158A  2562  120A  118A  	fcall	_Lcd_Clear
   924     0357                     l1856:
   925                           
   926                           ;main.c: 61:     Lcd_Set_Cursor(1,1);
   927     0357  01F4               	clrf	Lcd_Set_Cursor@b
   928     0358  0AF4               	incf	Lcd_Set_Cursor@b,f
   929     0359  3001               	movlw	1
   930     035A  120A  158A  2641  120A  118A  	fcall	_Lcd_Set_Cursor
   931     035F                     l1858:
   932                           
   933                           ;main.c: 62:     Lcd_Write_String("COLOR:");
   934     035F  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   935     0360  00F5               	movwf	Lcd_Write_String@a
   936     0361  3080               	movlw	128
   937     0362  00F6               	movwf	Lcd_Write_String@a+1
   938     0363  120A  158A  25FF  120A  118A  	fcall	_Lcd_Write_String
   939     0368                     l1860:
   940                           
   941                           ;main.c: 64:     red_freq = read_red();
   942     0368  120A  118A  201E  120A  118A  	fcall	_read_red
   943     036D  1283               	bcf	3,5	;RP0=0, select bank0
   944     036E  1303               	bcf	3,6	;RP1=0, select bank0
   945     036F  0847               	movf	?_read_red+3,w
   946     0370  00DB               	movwf	_red_freq+3
   947     0371  0846               	movf	?_read_red+2,w
   948     0372  00DA               	movwf	_red_freq+2
   949     0373  0845               	movf	?_read_red+1,w
   950     0374  00D9               	movwf	_red_freq+1
   951     0375  0844               	movf	?_read_red,w
   952     0376  00D8               	movwf	_red_freq
   953     0377                     l1862:
   954                           
   955                           ;main.c: 65:     green_freq = read_green();
   956     0377  120A  158A  279D  120A  118A  	fcall	_read_green
   957     037C  1283               	bcf	3,5	;RP0=0, select bank0
   958     037D  1303               	bcf	3,6	;RP1=0, select bank0
   959     037E  0847               	movf	?_read_green+3,w
   960     037F  00D3               	movwf	_green_freq+3
   961     0380  0846               	movf	?_read_green+2,w
   962     0381  00D2               	movwf	_green_freq+2
   963     0382  0845               	movf	?_read_green+1,w
   964     0383  00D1               	movwf	_green_freq+1
   965     0384  0844               	movf	?_read_green,w
   966     0385  00D0               	movwf	_green_freq
   967     0386                     l1864:
   968                           
   969                           ;main.c: 66:     blue_freq = read_blue();
   970     0386  120A  158A  273A  120A  118A  	fcall	_read_blue
   971     038B  1283               	bcf	3,5	;RP0=0, select bank0
   972     038C  1303               	bcf	3,6	;RP1=0, select bank0
   973     038D  0847               	movf	?_read_blue+3,w
   974     038E  00D7               	movwf	_blue_freq+3
   975     038F  0846               	movf	?_read_blue+2,w
   976     0390  00D6               	movwf	_blue_freq+2
   977     0391  0845               	movf	?_read_blue+1,w
   978     0392  00D5               	movwf	_blue_freq+1
   979     0393  0844               	movf	?_read_blue,w
   980     0394  00D4               	movwf	_blue_freq
   981     0395                     l1866:
   982                           
   983                           ;main.c: 80:     if (red_freq < 100 && red_freq > 70 && green_freq < 210 && green_freq >
      +                           160 && blue_freq < 70 && blue_freq > 50){
   984     0395  085B               	movf	_red_freq+3,w
   985     0396  1D03               	btfss	3,2
   986     0397  2BA5               	goto	u2191
   987     0398  085A               	movf	_red_freq+2,w
   988     0399  1D03               	btfss	3,2
   989     039A  2BA5               	goto	u2191
   990     039B  0859               	movf	_red_freq+1,w
   991     039C  1D03               	btfss	3,2
   992     039D  2BA5               	goto	u2191
   993     039E  3064               	movlw	100
   994     039F  0258               	subwf	_red_freq,w
   995     03A0  1D03               	skipz
   996     03A1  2BA2               	goto	u2193
   997     03A2                     u2193:
   998     03A2  1803               	btfsc	3,0
   999     03A3  2BA5               	goto	u2191
  1000     03A4  2BA6               	goto	u2190
  1001     03A5                     u2191:
  1002     03A5  2C1D               	goto	l1884
  1003     03A6                     u2190:
  1004     03A6                     l1868:
  1005     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1006     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1007     03A8  085B               	movf	_red_freq+3,w
  1008     03A9  1D03               	btfss	3,2
  1009     03AA  2BB9               	goto	u2200
  1010     03AB  085A               	movf	_red_freq+2,w
  1011     03AC  1D03               	btfss	3,2
  1012     03AD  2BB9               	goto	u2200
  1013     03AE  0859               	movf	_red_freq+1,w
  1014     03AF  1D03               	btfss	3,2
  1015     03B0  2BB9               	goto	u2200
  1016     03B1  3047               	movlw	71
  1017     03B2  0258               	subwf	_red_freq,w
  1018     03B3  1D03               	skipz
  1019     03B4  2BB5               	goto	u2203
  1020     03B5                     u2203:
  1021     03B5  1C03               	btfss	3,0
  1022     03B6  2BB8               	goto	u2201
  1023     03B7  2BB9               	goto	u2200
  1024     03B8                     u2201:
  1025     03B8  2C1D               	goto	l1884
  1026     03B9                     u2200:
  1027     03B9                     l1870:
  1028     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1029     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1030     03BB  0853               	movf	_green_freq+3,w
  1031     03BC  1D03               	btfss	3,2
  1032     03BD  2BCB               	goto	u2211
  1033     03BE  0852               	movf	_green_freq+2,w
  1034     03BF  1D03               	btfss	3,2
  1035     03C0  2BCB               	goto	u2211
  1036     03C1  0851               	movf	_green_freq+1,w
  1037     03C2  1D03               	btfss	3,2
  1038     03C3  2BCB               	goto	u2211
  1039     03C4  30D2               	movlw	210
  1040     03C5  0250               	subwf	_green_freq,w
  1041     03C6  1D03               	skipz
  1042     03C7  2BC8               	goto	u2213
  1043     03C8                     u2213:
  1044     03C8  1803               	btfsc	3,0
  1045     03C9  2BCB               	goto	u2211
  1046     03CA  2BCC               	goto	u2210
  1047     03CB                     u2211:
  1048     03CB  2C1D               	goto	l1884
  1049     03CC                     u2210:
  1050     03CC                     l1872:
  1051     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1052     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1053     03CE  0853               	movf	_green_freq+3,w
  1054     03CF  1D03               	btfss	3,2
  1055     03D0  2BDF               	goto	u2220
  1056     03D1  0852               	movf	_green_freq+2,w
  1057     03D2  1D03               	btfss	3,2
  1058     03D3  2BDF               	goto	u2220
  1059     03D4  0851               	movf	_green_freq+1,w
  1060     03D5  1D03               	btfss	3,2
  1061     03D6  2BDF               	goto	u2220
  1062     03D7  30A1               	movlw	161
  1063     03D8  0250               	subwf	_green_freq,w
  1064     03D9  1D03               	skipz
  1065     03DA  2BDB               	goto	u2223
  1066     03DB                     u2223:
  1067     03DB  1C03               	btfss	3,0
  1068     03DC  2BDE               	goto	u2221
  1069     03DD  2BDF               	goto	u2220
  1070     03DE                     u2221:
  1071     03DE  2C1D               	goto	l1884
  1072     03DF                     u2220:
  1073     03DF                     l1874:
  1074     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1075     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1076     03E1  0857               	movf	_blue_freq+3,w
  1077     03E2  1D03               	btfss	3,2
  1078     03E3  2BF1               	goto	u2231
  1079     03E4  0856               	movf	_blue_freq+2,w
  1080     03E5  1D03               	btfss	3,2
  1081     03E6  2BF1               	goto	u2231
  1082     03E7  0855               	movf	_blue_freq+1,w
  1083     03E8  1D03               	btfss	3,2
  1084     03E9  2BF1               	goto	u2231
  1085     03EA  3046               	movlw	70
  1086     03EB  0254               	subwf	_blue_freq,w
  1087     03EC  1D03               	skipz
  1088     03ED  2BEE               	goto	u2233
  1089     03EE                     u2233:
  1090     03EE  1803               	btfsc	3,0
  1091     03EF  2BF1               	goto	u2231
  1092     03F0  2BF2               	goto	u2230
  1093     03F1                     u2231:
  1094     03F1  2C1D               	goto	l1884
  1095     03F2                     u2230:
  1096     03F2                     l1876:
  1097     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1098     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1099     03F4  0857               	movf	_blue_freq+3,w
  1100     03F5  1D03               	btfss	3,2
  1101     03F6  2C05               	goto	u2240
  1102     03F7  0856               	movf	_blue_freq+2,w
  1103     03F8  1D03               	btfss	3,2
  1104     03F9  2C05               	goto	u2240
  1105     03FA  0855               	movf	_blue_freq+1,w
  1106     03FB  1D03               	btfss	3,2
  1107     03FC  2C05               	goto	u2240
  1108     03FD  3033               	movlw	51
  1109     03FE  0254               	subwf	_blue_freq,w
  1110     03FF  1D03               	skipz
  1111     0400  2C01               	goto	u2243
  1112     0401                     u2243:
  1113     0401  1C03               	btfss	3,0
  1114     0402  2C04               	goto	u2241
  1115     0403  2C05               	goto	u2240
  1116     0404                     u2241:
  1117     0404  2C1D               	goto	l1884
  1118     0405                     u2240:
  1119     0405                     l1878:
  1120                           
  1121                           ;main.c: 81:         estado = 3;
  1122     0405  3003               	movlw	3
  1123     0406  1283               	bcf	3,5	;RP0=0, select bank0
  1124     0407  1303               	bcf	3,6	;RP1=0, select bank0
  1125     0408  00DF               	movwf	_estado
  1126     0409  3000               	movlw	0
  1127     040A  00E0               	movwf	_estado+1
  1128     040B                     l1880:
  1129                           
  1130                           ;main.c: 82:         Lcd_Set_Cursor(2,1);
  1131     040B  01F4               	clrf	Lcd_Set_Cursor@b
  1132     040C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1133     040D  3002               	movlw	2
  1134     040E  120A  158A  2641  120A  118A  	fcall	_Lcd_Set_Cursor
  1135     0413                     l1882:
  1136                           
  1137                           ;main.c: 83:         Lcd_Write_String("ROJO");
  1138     0413  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1139     0414  00F5               	movwf	Lcd_Write_String@a
  1140     0415  3080               	movlw	128
  1141     0416  00F6               	movwf	Lcd_Write_String@a+1
  1142     0417  120A  158A  25FF  120A  118A  	fcall	_Lcd_Write_String
  1143                           
  1144                           ;main.c: 84:     }
  1145     041C  2C32               	goto	l1890
  1146     041D                     l1884:
  1147                           
  1148                           ;main.c: 87:         estado = 0;
  1149     041D  1283               	bcf	3,5	;RP0=0, select bank0
  1150     041E  1303               	bcf	3,6	;RP1=0, select bank0
  1151     041F  01DF               	clrf	_estado
  1152     0420  01E0               	clrf	_estado+1
  1153     0421                     l1886:
  1154                           
  1155                           ;main.c: 88:         Lcd_Set_Cursor(2,1);
  1156     0421  01F4               	clrf	Lcd_Set_Cursor@b
  1157     0422  0AF4               	incf	Lcd_Set_Cursor@b,f
  1158     0423  3002               	movlw	2
  1159     0424  120A  158A  2641  120A  118A  	fcall	_Lcd_Set_Cursor
  1160     0429                     l1888:
  1161                           
  1162                           ;main.c: 89:         Lcd_Write_String("NADA");
  1163     0429  3030               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1164     042A  00F5               	movwf	Lcd_Write_String@a
  1165     042B  3080               	movlw	128
  1166     042C  00F6               	movwf	Lcd_Write_String@a+1
  1167     042D  120A  158A  25FF  120A  118A  	fcall	_Lcd_Write_String
  1168     0432                     l1890:
  1169                           
  1170                           ;main.c: 93:     sprintf(rojo, "%lu", red_freq);
  1171     0432  303A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1172     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1173     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1174     0435  00AA               	movwf	sprintf@f
  1175     0436  085B               	movf	_red_freq+3,w
  1176     0437  00AE               	movwf	?_sprintf+4
  1177     0438  085A               	movf	_red_freq+2,w
  1178     0439  00AD               	movwf	?_sprintf+3
  1179     043A  0859               	movf	_red_freq+1,w
  1180     043B  00AC               	movwf	?_sprintf+2
  1181     043C  0858               	movf	_red_freq,w
  1182     043D  00AB               	movwf	?_sprintf+1
  1183     043E  3069               	movlw	(low (_rojo| 0))& (0+255)
  1184     043F  120A  118A  2217  120A  118A  	fcall	_sprintf
  1185     0444                     l1892:
  1186                           
  1187                           ;main.c: 94:     sprintf(azul, "%lu", blue_freq);
  1188     0444  303A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1189     0445  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0446  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0447  00AA               	movwf	sprintf@f
  1192     0448  0857               	movf	_blue_freq+3,w
  1193     0449  00AE               	movwf	?_sprintf+4
  1194     044A  0856               	movf	_blue_freq+2,w
  1195     044B  00AD               	movwf	?_sprintf+3
  1196     044C  0855               	movf	_blue_freq+1,w
  1197     044D  00AC               	movwf	?_sprintf+2
  1198     044E  0854               	movf	_blue_freq,w
  1199     044F  00AB               	movwf	?_sprintf+1
  1200     0450  3065               	movlw	(low (_azul| 0))& (0+255)
  1201     0451  120A  118A  2217  120A  118A  	fcall	_sprintf
  1202     0456                     l1894:
  1203                           
  1204                           ;main.c: 95:     sprintf(verde, "%lu", green_freq);
  1205     0456  303A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1206     0457  1283               	bcf	3,5	;RP0=0, select bank0
  1207     0458  1303               	bcf	3,6	;RP1=0, select bank0
  1208     0459  00AA               	movwf	sprintf@f
  1209     045A  0853               	movf	_green_freq+3,w
  1210     045B  00AE               	movwf	?_sprintf+4
  1211     045C  0852               	movf	_green_freq+2,w
  1212     045D  00AD               	movwf	?_sprintf+3
  1213     045E  0851               	movf	_green_freq+1,w
  1214     045F  00AC               	movwf	?_sprintf+2
  1215     0460  0850               	movf	_green_freq,w
  1216     0461  00AB               	movwf	?_sprintf+1
  1217     0462  3061               	movlw	(low (_verde| 0))& (0+255)
  1218     0463  120A  118A  2217  120A  118A  	fcall	_sprintf
  1219     0468                     l1896:
  1220                           
  1221                           ;main.c: 99:     Lcd_Set_Cursor(2,6);
  1222     0468  3006               	movlw	6
  1223     0469  00F4               	movwf	Lcd_Set_Cursor@b
  1224     046A  3002               	movlw	2
  1225     046B  120A  158A  2641  120A  118A  	fcall	_Lcd_Set_Cursor
  1226     0470                     l1898:
  1227                           
  1228                           ;main.c: 100:     Lcd_Write_String(rojo);
  1229     0470  3069               	movlw	(low (_rojo| 0))& (0+255)
  1230     0471  00F5               	movwf	Lcd_Write_String@a
  1231     0472  3000               	movlw	0
  1232     0473  00F6               	movwf	Lcd_Write_String@a+1
  1233     0474  120A  158A  25FF  120A  118A  	fcall	_Lcd_Write_String
  1234     0479                     l1900:
  1235                           
  1236                           ;main.c: 101:     Lcd_Set_Cursor(2,10);
  1237     0479  300A               	movlw	10
  1238     047A  00F4               	movwf	Lcd_Set_Cursor@b
  1239     047B  3002               	movlw	2
  1240     047C  120A  158A  2641  120A  118A  	fcall	_Lcd_Set_Cursor
  1241     0481                     l1902:
  1242                           
  1243                           ;main.c: 102:     Lcd_Write_String(verde);
  1244     0481  3061               	movlw	(low (_verde| 0))& (0+255)
  1245     0482  00F5               	movwf	Lcd_Write_String@a
  1246     0483  3000               	movlw	0
  1247     0484  00F6               	movwf	Lcd_Write_String@a+1
  1248     0485  120A  158A  25FF  120A  118A  	fcall	_Lcd_Write_String
  1249     048A                     l1904:
  1250                           
  1251                           ;main.c: 103:     Lcd_Set_Cursor(2,14);
  1252     048A  300E               	movlw	14
  1253     048B  00F4               	movwf	Lcd_Set_Cursor@b
  1254     048C  3002               	movlw	2
  1255     048D  120A  158A  2641  120A  118A  	fcall	_Lcd_Set_Cursor
  1256     0492                     l1906:
  1257                           
  1258                           ;main.c: 104:     Lcd_Write_String(azul);
  1259     0492  3065               	movlw	(low (_azul| 0))& (0+255)
  1260     0493  00F5               	movwf	Lcd_Write_String@a
  1261     0494  3000               	movlw	0
  1262     0495  00F6               	movwf	Lcd_Write_String@a+1
  1263     0496  120A  158A  25FF  120A  118A  	fcall	_Lcd_Write_String
  1264     049B                     l1908:
  1265                           
  1266                           ;main.c: 106:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1267     049B  3003               	movlw	3
  1268     049C  1283               	bcf	3,5	;RP0=0, select bank0
  1269     049D  1303               	bcf	3,6	;RP1=0, select bank0
  1270     049E  00CF               	movwf	??_main+2
  1271     049F  3008               	movlw	8
  1272     04A0  00CE               	movwf	??_main+1
  1273     04A1  3076               	movlw	118
  1274     04A2  00CD               	movwf	??_main
  1275     04A3                     u2257:
  1276     04A3  0BCD               	decfsz	??_main,f
  1277     04A4  2CA3               	goto	u2257
  1278     04A5  0BCE               	decfsz	??_main+1,f
  1279     04A6  2CA3               	goto	u2257
  1280     04A7  0BCF               	decfsz	??_main+2,f
  1281     04A8  2CA3               	goto	u2257
  1282     04A9  0000               	nop
  1283     04AA  2B52               	goto	l1854
  1284     04AB  120A  118A  2800   	ljmp	start
  1285     04AE                     __end_of_main:
  1286                           
  1287                           	psect	text1
  1288     0217                     __ptext1:	
  1289 ;; *************** function _sprintf *****************
  1290 ;; Defined at:
  1291 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  sp              1    wreg     PTR unsigned char 
  1294 ;;		 -> verde(4), azul(4), rojo(4), 
  1295 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1296 ;;		 -> STR_6(4), STR_5(4), STR_4(4), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1299 ;;		 -> verde(4), azul(4), rojo(4), 
  1300 ;;  val             4   23[BANK0 ] unsigned long 
  1301 ;;  tmpval          4    0        struct .
  1302 ;;  prec            2   21[BANK0 ] int 
  1303 ;;  cp              2    0        PTR const unsigned char 
  1304 ;;  len             2    0        unsigned int 
  1305 ;;  c               1   29[BANK0 ] unsigned char 
  1306 ;;  ap              1   27[BANK0 ] PTR void [1]
  1307 ;;		 -> ?_sprintf(2), 
  1308 ;;  flag            1   20[BANK0 ] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2   10[BANK0 ] int 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       5       0       0       0
  1319 ;;      Locals:         0      10       0       0       0
  1320 ;;      Temps:          0       5       0       0       0
  1321 ;;      Totals:         0      20       0       0       0
  1322 ;;Total ram usage:       20 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 1
  1325 ;; This function calls:
  1326 ;;		___lldiv
  1327 ;;		___llmod
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333     0217                     _sprintf:	
  1334                           ;psect for function _sprintf
  1335                           
  1336                           
  1337                           ;incstack = 0
  1338                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1339                           ;sprintf@sp stored from wreg
  1340     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0219  00BC               	movwf	sprintf@sp
  1343     021A                     l1790:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517: 
      +                           int prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  u
      +                          nsigned char flag;
  1346     021A  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1347     021B  00BB               	movwf	sprintf@ap
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1350     021C  2B2B               	goto	l1836
  1351     021D                     l1792:
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1354     021D  3025               	movlw	37
  1355     021E  063D               	xorwf	sprintf@c,w
  1356     021F  1903               	btfsc	3,2
  1357     0220  2A22               	goto	u2111
  1358     0221  2A23               	goto	u2110
  1359     0222                     u2111:
  1360     0222  2A2D               	goto	l1798
  1361     0223                     u2110:
  1362     0223                     l1794:
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1365     0223  083C               	movf	sprintf@sp,w
  1366     0224  0084               	movwf	4
  1367     0225  083D               	movf	sprintf@c,w
  1368     0226  1383               	bcf	3,7	;select IRP bank0
  1369     0227  0080               	movwf	0
  1370     0228                     l1796:
  1371     0228  3001               	movlw	1
  1372     0229  00AF               	movwf	??_sprintf
  1373     022A  082F               	movf	??_sprintf,w
  1374     022B  07BC               	addwf	sprintf@sp,f
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1377     022C  2B2B               	goto	l1836
  1378     022D                     l1798:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1381     022D  01B4               	clrf	sprintf@flag
  1382     022E  2A36               	goto	l1804
  1383     022F                     l267:	
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  1385                           
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  1388     022F  1634               	bsf	sprintf@flag,4
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  1391     0230  2A36               	goto	l1804
  1392     0231                     l1800:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1395     0231  30C0               	movlw	192
  1396     0232  00AF               	movwf	??_sprintf
  1397     0233  082F               	movf	??_sprintf,w
  1398     0234  04B4               	iorwf	sprintf@flag,f
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1401     0235  2A53               	goto	l270
  1402     0236                     l1804:
  1403     0236  3001               	movlw	1
  1404     0237  07AA               	addwf	sprintf@f,f
  1405     0238  30FF               	movlw	-1
  1406     0239  072A               	addwf	sprintf@f,w
  1407     023A  0084               	movwf	4
  1408     023B  120A  158A  200A  120A  118A  	fcall	stringdir
  1409     0240  00BD               	movwf	sprintf@c
  1410     0241  00AF               	movwf	??_sprintf
  1411     0242  01B0               	clrf	??_sprintf+1
  1412                           
  1413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 1, Range of values is 0 to 0
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            4     3 (average)
  1419                           ; direct_byte           11     8 (fixed)
  1420                           ; jumptable            260     6 (fixed)
  1421                           ;	Chosen strategy is simple_byte
  1422     0243  0830               	movf	??_sprintf+1,w
  1423     0244  3A00               	xorlw	0	; case 0
  1424     0245  1903               	skipnz
  1425     0246  2A48               	goto	l1934
  1426     0247  2B2B               	goto	l1836
  1427     0248                     l1934:
  1428                           
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 3, Range of values is 0 to 117
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           10     6 (average)
  1434                           ; jumptable            260     6 (fixed)
  1435                           ;	Chosen strategy is simple_byte
  1436     0248  082F               	movf	??_sprintf,w
  1437     0249  3A00               	xorlw	0	; case 0
  1438     024A  1903               	skipnz
  1439     024B  2B3B               	goto	l1838
  1440     024C  3A6C               	xorlw	108	; case 108
  1441     024D  1903               	skipnz
  1442     024E  2A2F               	goto	l267
  1443     024F  3A19               	xorlw	25	; case 117
  1444     0250  1903               	skipnz
  1445     0251  2A31               	goto	l1800
  1446     0252  2B2B               	goto	l1836
  1447     0253                     l270:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  1450     0253  1E34               	btfss	sprintf@flag,4
  1451     0254  2A56               	goto	u2121
  1452     0255  2A57               	goto	u2120
  1453     0256                     u2121:
  1454     0256  2A6A               	goto	l1810
  1455     0257                     u2120:
  1456     0257                     l1806:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  1459     0257  083B               	movf	sprintf@ap,w
  1460     0258  0084               	movwf	4
  1461     0259  1383               	bcf	3,7	;select IRP bank0
  1462     025A  0800               	movf	0,w
  1463     025B  00B7               	movwf	sprintf@val
  1464     025C  0A84               	incf	4,f
  1465     025D  0800               	movf	0,w
  1466     025E  00B8               	movwf	sprintf@val+1
  1467     025F  0A84               	incf	4,f
  1468     0260  0800               	movf	0,w
  1469     0261  00B9               	movwf	sprintf@val+2
  1470     0262  0A84               	incf	4,f
  1471     0263  0800               	movf	0,w
  1472     0264  00BA               	movwf	sprintf@val+3
  1473     0265                     l1808:
  1474     0265  3004               	movlw	4
  1475     0266  00AF               	movwf	??_sprintf
  1476     0267  082F               	movf	??_sprintf,w
  1477     0268  07BB               	addwf	sprintf@ap,f
  1478     0269  2A7C               	goto	l1814
  1479     026A                     l1810:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1482     026A  083B               	movf	sprintf@ap,w
  1483     026B  0084               	movwf	4
  1484     026C  1383               	bcf	3,7	;select IRP bank0
  1485     026D  0800               	movf	0,w
  1486     026E  00AF               	movwf	??_sprintf
  1487     026F  0A84               	incf	4,f
  1488     0270  0800               	movf	0,w
  1489     0271  00B0               	movwf	??_sprintf+1
  1490     0272  082F               	movf	??_sprintf,w
  1491     0273  00B7               	movwf	sprintf@val
  1492     0274  0830               	movf	??_sprintf+1,w
  1493     0275  00B8               	movwf	sprintf@val+1
  1494     0276  01B9               	clrf	sprintf@val+2
  1495     0277  01BA               	clrf	sprintf@val+3
  1496     0278                     l1812:
  1497     0278  3002               	movlw	2
  1498     0279  00AF               	movwf	??_sprintf
  1499     027A  082F               	movf	??_sprintf,w
  1500     027B  07BB               	addwf	sprintf@ap,f
  1501     027C                     l1814:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1504     027C  01BD               	clrf	sprintf@c
  1505     027D  0ABD               	incf	sprintf@c,f
  1506     027E                     l1820:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1509     027E  083D               	movf	sprintf@c,w
  1510     027F  00AF               	movwf	??_sprintf
  1511     0280  3001               	movlw	1
  1512     0281                     u2135:
  1513     0281  1003               	clrc
  1514     0282  0DAF               	rlf	??_sprintf,f
  1515     0283  3EFF               	addlw	-1
  1516     0284  1D03               	skipz
  1517     0285  2A81               	goto	u2135
  1518     0286  1003               	clrc
  1519     0287  0D2F               	rlf	??_sprintf,w
  1520     0288  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1521     0289  0084               	movwf	4
  1522     028A  120A  158A  200A  120A  118A  	fcall	stringdir
  1523     028F  00B0               	movwf	??_sprintf+1
  1524     0290  120A  158A  200A  120A  118A  	fcall	stringdir
  1525     0295  00B1               	movwf	??_sprintf+2
  1526     0296  120A  158A  200A  120A  118A  	fcall	stringdir
  1527     029B  00B2               	movwf	??_sprintf+3
  1528     029C  120A  158A  200A  120A  118A  	fcall	stringdir
  1529     02A1  00B3               	movwf	??_sprintf+4
  1530     02A2  0833               	movf	??_sprintf+4,w
  1531     02A3  023A               	subwf	sprintf@val+3,w
  1532     02A4  1D03               	skipz
  1533     02A5  2AB0               	goto	u2145
  1534     02A6  0832               	movf	??_sprintf+3,w
  1535     02A7  0239               	subwf	sprintf@val+2,w
  1536     02A8  1D03               	skipz
  1537     02A9  2AB0               	goto	u2145
  1538     02AA  0831               	movf	??_sprintf+2,w
  1539     02AB  0238               	subwf	sprintf@val+1,w
  1540     02AC  1D03               	skipz
  1541     02AD  2AB0               	goto	u2145
  1542     02AE  0830               	movf	??_sprintf+1,w
  1543     02AF  0237               	subwf	sprintf@val,w
  1544     02B0                     u2145:
  1545     02B0  1803               	skipnc
  1546     02B1  2AB3               	goto	u2141
  1547     02B2  2AB4               	goto	u2140
  1548     02B3                     u2141:
  1549     02B3  2AB5               	goto	l1824
  1550     02B4                     u2140:
  1551     02B4  2ABF               	goto	l1826
  1552     02B5                     l1824:
  1553     02B5  3001               	movlw	1
  1554     02B6  00AF               	movwf	??_sprintf
  1555     02B7  082F               	movf	??_sprintf,w
  1556     02B8  07BD               	addwf	sprintf@c,f
  1557     02B9  300A               	movlw	10
  1558     02BA  063D               	xorwf	sprintf@c,w
  1559     02BB  1D03               	btfss	3,2
  1560     02BC  2ABE               	goto	u2151
  1561     02BD  2ABF               	goto	u2150
  1562     02BE                     u2151:
  1563     02BE  2A7E               	goto	l1820
  1564     02BF                     u2150:
  1565     02BF                     l1826:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1568     02BF  083D               	movf	sprintf@c,w
  1569     02C0  00AF               	movwf	??_sprintf
  1570     02C1  01B0               	clrf	??_sprintf+1
  1571     02C2  082F               	movf	??_sprintf,w
  1572     02C3  00B5               	movwf	sprintf@prec
  1573     02C4  0830               	movf	??_sprintf+1,w
  1574     02C5  00B6               	movwf	sprintf@prec+1
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1577     02C6  2B1D               	goto	l1834
  1578     02C7                     l1828:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  1581     02C7  3000               	movlw	0
  1582     02C8  00A3               	movwf	___llmod@divisor+3
  1583     02C9  3000               	movlw	0
  1584     02CA  00A2               	movwf	___llmod@divisor+2
  1585     02CB  3000               	movlw	0
  1586     02CC  00A1               	movwf	___llmod@divisor+1
  1587     02CD  300A               	movlw	10
  1588     02CE  00A0               	movwf	___llmod@divisor
  1589     02CF  0835               	movf	sprintf@prec,w
  1590     02D0  00AF               	movwf	??_sprintf
  1591     02D1  3001               	movlw	1
  1592     02D2                     u2165:
  1593     02D2  1003               	clrc
  1594     02D3  0DAF               	rlf	??_sprintf,f
  1595     02D4  3EFF               	addlw	-1
  1596     02D5  1D03               	skipz
  1597     02D6  2AD2               	goto	u2165
  1598     02D7  1003               	clrc
  1599     02D8  0D2F               	rlf	??_sprintf,w
  1600     02D9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1601     02DA  0084               	movwf	4
  1602     02DB  120A  158A  200A  120A  118A  	fcall	stringdir
  1603     02E0  00F0               	movwf	___lldiv@divisor
  1604     02E1  120A  158A  200A  120A  118A  	fcall	stringdir
  1605     02E6  00F1               	movwf	___lldiv@divisor+1
  1606     02E7  120A  158A  200A  120A  118A  	fcall	stringdir
  1607     02EC  00F2               	movwf	___lldiv@divisor+2
  1608     02ED  120A  158A  200A  120A  118A  	fcall	stringdir
  1609     02F2  00F3               	movwf	___lldiv@divisor+3
  1610     02F3  083A               	movf	sprintf@val+3,w
  1611     02F4  00F7               	movwf	___lldiv@dividend+3
  1612     02F5  0839               	movf	sprintf@val+2,w
  1613     02F6  00F6               	movwf	___lldiv@dividend+2
  1614     02F7  0838               	movf	sprintf@val+1,w
  1615     02F8  00F5               	movwf	___lldiv@dividend+1
  1616     02F9  0837               	movf	sprintf@val,w
  1617     02FA  00F4               	movwf	___lldiv@dividend
  1618     02FB  120A  118A  2081  120A  118A  	fcall	___lldiv
  1619     0300  0873               	movf	?___lldiv+3,w
  1620     0301  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0302  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0303  00A7               	movwf	___llmod@dividend+3
  1623     0304  0872               	movf	?___lldiv+2,w
  1624     0305  00A6               	movwf	___llmod@dividend+2
  1625     0306  0871               	movf	?___lldiv+1,w
  1626     0307  00A5               	movwf	___llmod@dividend+1
  1627     0308  0870               	movf	?___lldiv,w
  1628     0309  00A4               	movwf	___llmod@dividend
  1629     030A  120A  158A  2687  120A  118A  	fcall	___llmod
  1630     030F  1283               	bcf	3,5	;RP0=0, select bank0
  1631     0310  1303               	bcf	3,6	;RP1=0, select bank0
  1632     0311  0820               	movf	?___llmod,w
  1633     0312  3E30               	addlw	48
  1634     0313  00BD               	movwf	sprintf@c
  1635     0314                     l1830:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1638     0314  083C               	movf	sprintf@sp,w
  1639     0315  0084               	movwf	4
  1640     0316  083D               	movf	sprintf@c,w
  1641     0317  1383               	bcf	3,7	;select IRP bank0
  1642     0318  0080               	movwf	0
  1643     0319                     l1832:
  1644     0319  3001               	movlw	1
  1645     031A  00AF               	movwf	??_sprintf
  1646     031B  082F               	movf	??_sprintf,w
  1647     031C  07BC               	addwf	sprintf@sp,f
  1648     031D                     l1834:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1651     031D  30FF               	movlw	255
  1652     031E  07B5               	addwf	sprintf@prec,f
  1653     031F  1803               	skipnc
  1654     0320  0AB6               	incf	sprintf@prec+1,f
  1655     0321  30FF               	movlw	255
  1656     0322  07B6               	addwf	sprintf@prec+1,f
  1657     0323  0A35               	incf	sprintf@prec,w
  1658     0324  1D03               	skipz
  1659     0325  2B2A               	goto	u2171
  1660     0326  0A36               	incf	sprintf@prec+1,w
  1661     0327  1D03               	btfss	3,2
  1662     0328  2B2A               	goto	u2171
  1663     0329  2B2B               	goto	u2170
  1664     032A                     u2171:
  1665     032A  2AC7               	goto	l1828
  1666     032B                     u2170:
  1667     032B                     l1836:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1670     032B  3001               	movlw	1
  1671     032C  07AA               	addwf	sprintf@f,f
  1672     032D  30FF               	movlw	-1
  1673     032E  072A               	addwf	sprintf@f,w
  1674     032F  0084               	movwf	4
  1675     0330  120A  158A  200A  120A  118A  	fcall	stringdir
  1676     0335  00BD               	movwf	sprintf@c
  1677     0336  083D               	movf	sprintf@c,w
  1678     0337  1D03               	btfss	3,2
  1679     0338  2B3A               	goto	u2181
  1680     0339  2B3B               	goto	u2180
  1681     033A                     u2181:
  1682     033A  2A1D               	goto	l1792
  1683     033B                     u2180:
  1684     033B                     l1838:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1687     033B  083C               	movf	sprintf@sp,w
  1688     033C  0084               	movwf	4
  1689     033D  1383               	bcf	3,7	;select IRP bank0
  1690     033E  0180               	clrf	0
  1691     033F                     l280:
  1692     033F  0008               	return
  1693     0340                     __end_of_sprintf:
  1694                           
  1695                           	psect	text2
  1696     0E87                     __ptext2:	
  1697 ;; *************** function ___llmod *****************
  1698 ;; Defined at:
  1699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  divisor         4    0[BANK0 ] unsigned long 
  1702 ;;  dividend        4    4[BANK0 ] unsigned long 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  counter         1    9[BANK0 ] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  4    0[BANK0 ] unsigned long 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       8       0       0       0
  1715 ;;      Locals:         0       1       0       0       0
  1716 ;;      Temps:          0       1       0       0       0
  1717 ;;      Totals:         0      10       0       0       0
  1718 ;;Total ram usage:       10 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_sprintf
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727     0E87                     ___llmod:	
  1728                           ;psect for function ___llmod
  1729                           
  1730     0E87                     l1476:	
  1731                           ;incstack = 0
  1732                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1733                           
  1734     0E87  1283               	bcf	3,5	;RP0=0, select bank0
  1735     0E88  1303               	bcf	3,6	;RP1=0, select bank0
  1736     0E89  0823               	movf	___llmod@divisor+3,w
  1737     0E8A  0422               	iorwf	___llmod@divisor+2,w
  1738     0E8B  0421               	iorwf	___llmod@divisor+1,w
  1739     0E8C  0420               	iorwf	___llmod@divisor,w
  1740     0E8D  1903               	skipnz
  1741     0E8E  2E90               	goto	u1381
  1742     0E8F  2E91               	goto	u1380
  1743     0E90                     u1381:
  1744     0E90  2ED4               	goto	l1492
  1745     0E91                     u1380:
  1746     0E91                     l1478:
  1747     0E91  01A9               	clrf	___llmod@counter
  1748     0E92  0AA9               	incf	___llmod@counter,f
  1749     0E93  2EA1               	goto	l1482
  1750     0E94                     l1480:
  1751     0E94  3001               	movlw	1
  1752     0E95  00A8               	movwf	??___llmod
  1753     0E96                     u1395:
  1754     0E96  1003               	clrc
  1755     0E97  0DA0               	rlf	___llmod@divisor,f
  1756     0E98  0DA1               	rlf	___llmod@divisor+1,f
  1757     0E99  0DA2               	rlf	___llmod@divisor+2,f
  1758     0E9A  0DA3               	rlf	___llmod@divisor+3,f
  1759     0E9B  0BA8               	decfsz	??___llmod,f
  1760     0E9C  2E96               	goto	u1395
  1761     0E9D  3001               	movlw	1
  1762     0E9E  00A8               	movwf	??___llmod
  1763     0E9F  0828               	movf	??___llmod,w
  1764     0EA0  07A9               	addwf	___llmod@counter,f
  1765     0EA1                     l1482:
  1766     0EA1  1FA3               	btfss	___llmod@divisor+3,7
  1767     0EA2  2EA4               	goto	u1401
  1768     0EA3  2EA5               	goto	u1400
  1769     0EA4                     u1401:
  1770     0EA4  2E94               	goto	l1480
  1771     0EA5                     u1400:
  1772     0EA5                     l1484:
  1773     0EA5  0823               	movf	___llmod@divisor+3,w
  1774     0EA6  0227               	subwf	___llmod@dividend+3,w
  1775     0EA7  1D03               	skipz
  1776     0EA8  2EB3               	goto	u1415
  1777     0EA9  0822               	movf	___llmod@divisor+2,w
  1778     0EAA  0226               	subwf	___llmod@dividend+2,w
  1779     0EAB  1D03               	skipz
  1780     0EAC  2EB3               	goto	u1415
  1781     0EAD  0821               	movf	___llmod@divisor+1,w
  1782     0EAE  0225               	subwf	___llmod@dividend+1,w
  1783     0EAF  1D03               	skipz
  1784     0EB0  2EB3               	goto	u1415
  1785     0EB1  0820               	movf	___llmod@divisor,w
  1786     0EB2  0224               	subwf	___llmod@dividend,w
  1787     0EB3                     u1415:
  1788     0EB3  1C03               	skipc
  1789     0EB4  2EB6               	goto	u1411
  1790     0EB5  2EB7               	goto	u1410
  1791     0EB6                     u1411:
  1792     0EB6  2EC5               	goto	l1488
  1793     0EB7                     u1410:
  1794     0EB7                     l1486:
  1795     0EB7  0820               	movf	___llmod@divisor,w
  1796     0EB8  02A4               	subwf	___llmod@dividend,f
  1797     0EB9  0821               	movf	___llmod@divisor+1,w
  1798     0EBA  1C03               	skipc
  1799     0EBB  0F21               	incfsz	___llmod@divisor+1,w
  1800     0EBC  02A5               	subwf	___llmod@dividend+1,f
  1801     0EBD  0822               	movf	___llmod@divisor+2,w
  1802     0EBE  1C03               	skipc
  1803     0EBF  0F22               	incfsz	___llmod@divisor+2,w
  1804     0EC0  02A6               	subwf	___llmod@dividend+2,f
  1805     0EC1  0823               	movf	___llmod@divisor+3,w
  1806     0EC2  1C03               	skipc
  1807     0EC3  0F23               	incfsz	___llmod@divisor+3,w
  1808     0EC4  02A7               	subwf	___llmod@dividend+3,f
  1809     0EC5                     l1488:
  1810     0EC5  3001               	movlw	1
  1811     0EC6                     u1425:
  1812     0EC6  1003               	clrc
  1813     0EC7  0CA3               	rrf	___llmod@divisor+3,f
  1814     0EC8  0CA2               	rrf	___llmod@divisor+2,f
  1815     0EC9  0CA1               	rrf	___llmod@divisor+1,f
  1816     0ECA  0CA0               	rrf	___llmod@divisor,f
  1817     0ECB  3EFF               	addlw	-1
  1818     0ECC  1D03               	skipz
  1819     0ECD  2EC6               	goto	u1425
  1820     0ECE                     l1490:
  1821     0ECE  3001               	movlw	1
  1822     0ECF  02A9               	subwf	___llmod@counter,f
  1823     0ED0  1D03               	btfss	3,2
  1824     0ED1  2ED3               	goto	u1431
  1825     0ED2  2ED4               	goto	u1430
  1826     0ED3                     u1431:
  1827     0ED3  2EA5               	goto	l1484
  1828     0ED4                     u1430:
  1829     0ED4                     l1492:
  1830     0ED4  0827               	movf	___llmod@dividend+3,w
  1831     0ED5  00A3               	movwf	?___llmod+3
  1832     0ED6  0826               	movf	___llmod@dividend+2,w
  1833     0ED7  00A2               	movwf	?___llmod+2
  1834     0ED8  0825               	movf	___llmod@dividend+1,w
  1835     0ED9  00A1               	movwf	?___llmod+1
  1836     0EDA  0824               	movf	___llmod@dividend,w
  1837     0EDB  00A0               	movwf	?___llmod
  1838     0EDC                     l506:
  1839     0EDC  0008               	return
  1840     0EDD                     __end_of___llmod:
  1841                           
  1842                           	psect	text3
  1843     0081                     __ptext3:	
  1844 ;; *************** function ___lldiv *****************
  1845 ;; Defined at:
  1846 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  divisor         4    0[COMMON] unsigned long 
  1849 ;;  dividend        4    4[COMMON] unsigned long 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  quotient        4    9[COMMON] unsigned long 
  1852 ;;  counter         1   13[COMMON] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  4    0[COMMON] unsigned long 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         8       0       0       0       0
  1863 ;;      Locals:         5       0       0       0       0
  1864 ;;      Temps:          1       0       0       0       0
  1865 ;;      Totals:        14       0       0       0       0
  1866 ;;Total ram usage:       14 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_sprintf
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875     0081                     ___lldiv:	
  1876                           ;psect for function ___lldiv
  1877                           
  1878     0081                     l1416:	
  1879                           ;incstack = 0
  1880                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1881                           
  1882     0081  3000               	movlw	0
  1883     0082  00FC               	movwf	___lldiv@quotient+3
  1884     0083  3000               	movlw	0
  1885     0084  00FB               	movwf	___lldiv@quotient+2
  1886     0085  3000               	movlw	0
  1887     0086  00FA               	movwf	___lldiv@quotient+1
  1888     0087  3000               	movlw	0
  1889     0088  00F9               	movwf	___lldiv@quotient
  1890     0089  0873               	movf	___lldiv@divisor+3,w
  1891     008A  0472               	iorwf	___lldiv@divisor+2,w
  1892     008B  0471               	iorwf	___lldiv@divisor+1,w
  1893     008C  0470               	iorwf	___lldiv@divisor,w
  1894     008D  1903               	skipnz
  1895     008E  2890               	goto	u1211
  1896     008F  2891               	goto	u1210
  1897     0090                     u1211:
  1898     0090  28DE               	goto	l1436
  1899     0091                     u1210:
  1900     0091                     l1418:
  1901     0091  01FD               	clrf	___lldiv@counter
  1902     0092  0AFD               	incf	___lldiv@counter,f
  1903     0093  28A1               	goto	l1422
  1904     0094                     l1420:
  1905     0094  3001               	movlw	1
  1906     0095  00F8               	movwf	??___lldiv
  1907     0096                     u1225:
  1908     0096  1003               	clrc
  1909     0097  0DF0               	rlf	___lldiv@divisor,f
  1910     0098  0DF1               	rlf	___lldiv@divisor+1,f
  1911     0099  0DF2               	rlf	___lldiv@divisor+2,f
  1912     009A  0DF3               	rlf	___lldiv@divisor+3,f
  1913     009B  0BF8               	decfsz	??___lldiv,f
  1914     009C  2896               	goto	u1225
  1915     009D  3001               	movlw	1
  1916     009E  00F8               	movwf	??___lldiv
  1917     009F  0878               	movf	??___lldiv,w
  1918     00A0  07FD               	addwf	___lldiv@counter,f
  1919     00A1                     l1422:
  1920     00A1  1FF3               	btfss	___lldiv@divisor+3,7
  1921     00A2  28A4               	goto	u1231
  1922     00A3  28A5               	goto	u1230
  1923     00A4                     u1231:
  1924     00A4  2894               	goto	l1420
  1925     00A5                     u1230:
  1926     00A5                     l1424:
  1927     00A5  3001               	movlw	1
  1928     00A6  00F8               	movwf	??___lldiv
  1929     00A7                     u1245:
  1930     00A7  1003               	clrc
  1931     00A8  0DF9               	rlf	___lldiv@quotient,f
  1932     00A9  0DFA               	rlf	___lldiv@quotient+1,f
  1933     00AA  0DFB               	rlf	___lldiv@quotient+2,f
  1934     00AB  0DFC               	rlf	___lldiv@quotient+3,f
  1935     00AC  0BF8               	decfsz	??___lldiv,f
  1936     00AD  28A7               	goto	u1245
  1937     00AE                     l1426:
  1938     00AE  0873               	movf	___lldiv@divisor+3,w
  1939     00AF  0277               	subwf	___lldiv@dividend+3,w
  1940     00B0  1D03               	skipz
  1941     00B1  28BC               	goto	u1255
  1942     00B2  0872               	movf	___lldiv@divisor+2,w
  1943     00B3  0276               	subwf	___lldiv@dividend+2,w
  1944     00B4  1D03               	skipz
  1945     00B5  28BC               	goto	u1255
  1946     00B6  0871               	movf	___lldiv@divisor+1,w
  1947     00B7  0275               	subwf	___lldiv@dividend+1,w
  1948     00B8  1D03               	skipz
  1949     00B9  28BC               	goto	u1255
  1950     00BA  0870               	movf	___lldiv@divisor,w
  1951     00BB  0274               	subwf	___lldiv@dividend,w
  1952     00BC                     u1255:
  1953     00BC  1C03               	skipc
  1954     00BD  28BF               	goto	u1251
  1955     00BE  28C0               	goto	u1250
  1956     00BF                     u1251:
  1957     00BF  28CF               	goto	l1432
  1958     00C0                     u1250:
  1959     00C0                     l1428:
  1960     00C0  0870               	movf	___lldiv@divisor,w
  1961     00C1  02F4               	subwf	___lldiv@dividend,f
  1962     00C2  0871               	movf	___lldiv@divisor+1,w
  1963     00C3  1C03               	skipc
  1964     00C4  0F71               	incfsz	___lldiv@divisor+1,w
  1965     00C5  02F5               	subwf	___lldiv@dividend+1,f
  1966     00C6  0872               	movf	___lldiv@divisor+2,w
  1967     00C7  1C03               	skipc
  1968     00C8  0F72               	incfsz	___lldiv@divisor+2,w
  1969     00C9  02F6               	subwf	___lldiv@dividend+2,f
  1970     00CA  0873               	movf	___lldiv@divisor+3,w
  1971     00CB  1C03               	skipc
  1972     00CC  0F73               	incfsz	___lldiv@divisor+3,w
  1973     00CD  02F7               	subwf	___lldiv@dividend+3,f
  1974     00CE                     l1430:
  1975     00CE  1479               	bsf	___lldiv@quotient,0
  1976     00CF                     l1432:
  1977     00CF  3001               	movlw	1
  1978     00D0                     u1265:
  1979     00D0  1003               	clrc
  1980     00D1  0CF3               	rrf	___lldiv@divisor+3,f
  1981     00D2  0CF2               	rrf	___lldiv@divisor+2,f
  1982     00D3  0CF1               	rrf	___lldiv@divisor+1,f
  1983     00D4  0CF0               	rrf	___lldiv@divisor,f
  1984     00D5  3EFF               	addlw	-1
  1985     00D6  1D03               	skipz
  1986     00D7  28D0               	goto	u1265
  1987     00D8                     l1434:
  1988     00D8  3001               	movlw	1
  1989     00D9  02FD               	subwf	___lldiv@counter,f
  1990     00DA  1D03               	btfss	3,2
  1991     00DB  28DD               	goto	u1271
  1992     00DC  28DE               	goto	u1270
  1993     00DD                     u1271:
  1994     00DD  28A5               	goto	l1424
  1995     00DE                     u1270:
  1996     00DE                     l1436:
  1997     00DE  087C               	movf	___lldiv@quotient+3,w
  1998     00DF  00F3               	movwf	?___lldiv+3
  1999     00E0  087B               	movf	___lldiv@quotient+2,w
  2000     00E1  00F2               	movwf	?___lldiv+2
  2001     00E2  087A               	movf	___lldiv@quotient+1,w
  2002     00E3  00F1               	movwf	?___lldiv+1
  2003     00E4  0879               	movf	___lldiv@quotient,w
  2004     00E5  00F0               	movwf	?___lldiv
  2005     00E6                     l320:
  2006     00E6  0008               	return
  2007     00E7                     __end_of___lldiv:
  2008                           
  2009                           	psect	text4
  2010     0D6F                     __ptext4:	
  2011 ;; *************** function _setup *****************
  2012 ;; Defined at:
  2013 ;;		line 112 in file "main.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0
  2030 ;;      Totals:         0       0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040     0D6F                     _setup:	
  2041                           ;psect for function _setup
  2042                           
  2043     0D6F                     l1680:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _setup: [wreg+status,2+status,0]
  2046                           
  2047                           
  2048                           ;main.c: 113:     ANSEL = 0;
  2049     0D6F  1683               	bsf	3,5	;RP0=1, select bank3
  2050     0D70  1703               	bsf	3,6	;RP1=1, select bank3
  2051     0D71  0188               	clrf	8	;volatile
  2052                           
  2053                           ;main.c: 114:     ANSELH = 0;
  2054     0D72  0189               	clrf	9	;volatile
  2055     0D73                     l1682:
  2056                           
  2057                           ;main.c: 115:     TRISA = 0b00000010;
  2058     0D73  3002               	movlw	2
  2059     0D74  1683               	bsf	3,5	;RP0=1, select bank1
  2060     0D75  1303               	bcf	3,6	;RP1=0, select bank1
  2061     0D76  0085               	movwf	5	;volatile
  2062     0D77                     l1684:
  2063                           
  2064                           ;main.c: 116:     TRISD = 0;
  2065     0D77  0188               	clrf	8	;volatile
  2066     0D78                     l1686:
  2067                           
  2068                           ;main.c: 117:     PORTD = 0;
  2069     0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2070     0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2071     0D7A  0188               	clrf	8	;volatile
  2072     0D7B                     l1688:
  2073                           
  2074                           ;main.c: 118:     OSCCONbits.IRCF = 0b111;
  2075     0D7B  3070               	movlw	112
  2076     0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  2077     0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  2078     0D7E  048F               	iorwf	15,f	;volatile
  2079     0D7F                     l1690:
  2080                           
  2081                           ;main.c: 119:     OSCCONbits.SCS = 1;
  2082     0D7F  140F               	bsf	15,0	;volatile
  2083     0D80                     l63:
  2084     0D80  0008               	return
  2085     0D81                     __end_of_setup:
  2086                           
  2087                           	psect	text5
  2088     001E                     __ptext5:	
  2089 ;; *************** function _read_red *****************
  2090 ;; Defined at:
  2091 ;;		line 17 in file "TCS230.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  4   36[BANK0 ] unsigned long 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       4       0       0       0
  2106 ;;      Locals:         0       4       0       0       0
  2107 ;;      Temps:          0       1       0       0       0
  2108 ;;      Totals:         0       9       0       0       0
  2109 ;;Total ram usage:        9 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 2
  2112 ;; This function calls:
  2113 ;;		___flmul
  2114 ;;		___fltol
  2115 ;;		___xxtofl
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121     001E                     _read_red:	
  2122                           ;psect for function _read_red
  2123                           
  2124     001E                     l1740:	
  2125                           ;incstack = 0
  2126                           ; Regs used in _read_red: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2127                           
  2128                           
  2129                           ;TCS230.c: 18:   unsigned long temp_freq;;TCS230.c: 19:   RD0 = 0;
  2130     001E  1283               	bcf	3,5	;RP0=0, select bank0
  2131     001F  1303               	bcf	3,6	;RP1=0, select bank0
  2132     0020  1008               	bcf	8,0	;volatile
  2133                           
  2134                           ;TCS230.c: 20:   RD1 = 0;
  2135     0021  1088               	bcf	8,1	;volatile
  2136     0022                     l1742:
  2137                           
  2138                           ;TCS230.c: 21:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2139     0022  3013               	movlw	19
  2140     0023  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0024  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0025  00C8               	movwf	??_read_red
  2143     0026                     u2267:
  2144     0026  0BC8               	decfsz	??_read_red,f
  2145     0027  2826               	goto	u2267
  2146     0028                     l136:	
  2147                           ;TCS230.c: 23:   }
  2148                           
  2149                           
  2150                           ;TCS230.c: 22:   while(PORTAbits.RA1 == 1){
  2151     0028  1283               	bcf	3,5	;RP0=0, select bank0
  2152     0029  1303               	bcf	3,6	;RP1=0, select bank0
  2153     002A  1885               	btfsc	5,1	;volatile
  2154     002B  282D               	goto	u2021
  2155     002C  282E               	goto	u2020
  2156     002D                     u2021:
  2157     002D  2828               	goto	l136
  2158     002E                     u2020:
  2159     002E                     l139:	
  2160                           ;TCS230.c: 25:   }
  2161                           
  2162                           
  2163                           ;TCS230.c: 24:   while(PORTAbits.RA1 == 0){
  2164     002E  1C85               	btfss	5,1	;volatile
  2165     002F  2831               	goto	u2031
  2166     0030  2832               	goto	u2030
  2167     0031                     u2031:
  2168     0031  282E               	goto	l139
  2169     0032                     u2030:
  2170     0032                     l1744:
  2171                           
  2172                           ;TCS230.c: 26:   TMR1 = 0;
  2173     0032  018E               	clrf	14	;volatile
  2174     0033  018F               	clrf	15	;volatile
  2175     0034                     l1746:
  2176                           
  2177                           ;TCS230.c: 27:   T1CONbits.TMR1ON = 1;
  2178     0034  1410               	bsf	16,0	;volatile
  2179     0035                     l142:	
  2180                           ;TCS230.c: 30:   }
  2181                           
  2182                           
  2183                           ;TCS230.c: 28:   while(PORTAbits.RA1 == 1){
  2184     0035  1885               	btfsc	5,1	;volatile
  2185     0036  2838               	goto	u2041
  2186     0037  2839               	goto	u2040
  2187     0038                     u2041:
  2188     0038  2835               	goto	l142
  2189     0039                     u2040:
  2190     0039                     l144:
  2191                           
  2192                           ;TCS230.c: 31:   T1CONbits.TMR1ON = 0;
  2193     0039  1010               	bcf	16,0	;volatile
  2194     003A                     l1748:
  2195                           
  2196                           ;TCS230.c: 32:   temp_freq = TMR1;
  2197     003A  080E               	movf	14,w	;volatile
  2198     003B  00C9               	movwf	read_red@temp_freq
  2199     003C  080F               	movf	15,w	;volatile
  2200     003D  00CA               	movwf	read_red@temp_freq+1
  2201     003E  01CB               	clrf	read_red@temp_freq+2
  2202     003F  01CC               	clrf	read_red@temp_freq+3
  2203     0040                     l1750:
  2204                           
  2205                           ;TCS230.c: 33:   TMR1 = 0;
  2206     0040  018E               	clrf	14	;volatile
  2207     0041  018F               	clrf	15	;volatile
  2208     0042                     l1752:
  2209                           
  2210                           ;TCS230.c: 34:   return (unsigned long)((float)temp_freq * 1.0);
  2211     0042  084C               	movf	read_red@temp_freq+3,w
  2212     0043  00F3               	movwf	___xxtofl@val+3
  2213     0044  084B               	movf	read_red@temp_freq+2,w
  2214     0045  00F2               	movwf	___xxtofl@val+2
  2215     0046  084A               	movf	read_red@temp_freq+1,w
  2216     0047  00F1               	movwf	___xxtofl@val+1
  2217     0048  0849               	movf	read_red@temp_freq,w
  2218     0049  00F0               	movwf	___xxtofl@val
  2219     004A  3000               	movlw	0
  2220     004B  120A  118A  215F  120A  118A  	fcall	___xxtofl
  2221     0050  0873               	movf	?___xxtofl+3,w
  2222     0051  1283               	bcf	3,5	;RP0=0, select bank0
  2223     0052  1303               	bcf	3,6	;RP1=0, select bank0
  2224     0053  00A7               	movwf	___flmul@a+3
  2225     0054  0872               	movf	?___xxtofl+2,w
  2226     0055  00A6               	movwf	___flmul@a+2
  2227     0056  0871               	movf	?___xxtofl+1,w
  2228     0057  00A5               	movwf	___flmul@a+1
  2229     0058  0870               	movf	?___xxtofl,w
  2230     0059  00A4               	movwf	___flmul@a
  2231     005A  303F               	movlw	63
  2232     005B  00A3               	movwf	___flmul@b+3
  2233     005C  3080               	movlw	128
  2234     005D  00A2               	movwf	___flmul@b+2
  2235     005E  3000               	movlw	0
  2236     005F  00A1               	movwf	___flmul@b+1
  2237     0060  3000               	movlw	0
  2238     0061  00A0               	movwf	___flmul@b
  2239     0062  120A  118A  24AE  120A  118A  	fcall	___flmul
  2240     0067  1283               	bcf	3,5	;RP0=0, select bank0
  2241     0068  1303               	bcf	3,6	;RP1=0, select bank0
  2242     0069  0823               	movf	?___flmul+3,w
  2243     006A  00BD               	movwf	___fltol@f1+3
  2244     006B  0822               	movf	?___flmul+2,w
  2245     006C  00BC               	movwf	___fltol@f1+2
  2246     006D  0821               	movf	?___flmul+1,w
  2247     006E  00BB               	movwf	___fltol@f1+1
  2248     006F  0820               	movf	?___flmul,w
  2249     0070  00BA               	movwf	___fltol@f1
  2250     0071  120A  118A  20E7  120A  118A  	fcall	___fltol
  2251     0076  1283               	bcf	3,5	;RP0=0, select bank0
  2252     0077  1303               	bcf	3,6	;RP1=0, select bank0
  2253     0078  083D               	movf	?___fltol+3,w
  2254     0079  00C7               	movwf	?_read_red+3
  2255     007A  083C               	movf	?___fltol+2,w
  2256     007B  00C6               	movwf	?_read_red+2
  2257     007C  083B               	movf	?___fltol+1,w
  2258     007D  00C5               	movwf	?_read_red+1
  2259     007E  083A               	movf	?___fltol,w
  2260     007F  00C4               	movwf	?_read_red
  2261     0080                     l145:
  2262     0080  0008               	return
  2263     0081                     __end_of_read_red:
  2264                           
  2265                           	psect	text6
  2266     0F9D                     __ptext6:	
  2267 ;; *************** function _read_green *****************
  2268 ;; Defined at:
  2269 ;;		line 38 in file "TCS230.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  4   36[BANK0 ] unsigned long 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       4       0       0       0
  2284 ;;      Locals:         0       4       0       0       0
  2285 ;;      Temps:          0       1       0       0       0
  2286 ;;      Totals:         0       9       0       0       0
  2287 ;;Total ram usage:        9 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 2
  2290 ;; This function calls:
  2291 ;;		___flmul
  2292 ;;		___fltol
  2293 ;;		___xxtofl
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299     0F9D                     _read_green:	
  2300                           ;psect for function _read_green
  2301                           
  2302     0F9D                     l1756:	
  2303                           ;incstack = 0
  2304                           ; Regs used in _read_green: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2305                           
  2306                           
  2307                           ;TCS230.c: 39:   unsigned long temp_freq;;TCS230.c: 40:   RD0 = 1;
  2308     0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  2310     0F9F  1408               	bsf	8,0	;volatile
  2311                           
  2312                           ;TCS230.c: 41:   RD1 = 1;
  2313     0FA0  1488               	bsf	8,1	;volatile
  2314     0FA1                     l1758:
  2315                           
  2316                           ;TCS230.c: 42:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2317     0FA1  3013               	movlw	19
  2318     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  2320     0FA4  00C8               	movwf	??_read_green
  2321     0FA5                     u2277:
  2322     0FA5  0BC8               	decfsz	??_read_green,f
  2323     0FA6  2FA5               	goto	u2277
  2324     0FA7                     l148:	
  2325                           ;TCS230.c: 44:   }
  2326                           
  2327                           
  2328                           ;TCS230.c: 43:   while(PORTAbits.RA1 == 1){
  2329     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2330     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2331     0FA9  1885               	btfsc	5,1	;volatile
  2332     0FAA  2FAC               	goto	u2051
  2333     0FAB  2FAD               	goto	u2050
  2334     0FAC                     u2051:
  2335     0FAC  2FA7               	goto	l148
  2336     0FAD                     u2050:
  2337     0FAD                     l151:	
  2338                           ;TCS230.c: 46:   }
  2339                           
  2340                           
  2341                           ;TCS230.c: 45:   while(PORTAbits.RA1 == 0){
  2342     0FAD  1C85               	btfss	5,1	;volatile
  2343     0FAE  2FB0               	goto	u2061
  2344     0FAF  2FB1               	goto	u2060
  2345     0FB0                     u2061:
  2346     0FB0  2FAD               	goto	l151
  2347     0FB1                     u2060:
  2348     0FB1                     l1760:
  2349                           
  2350                           ;TCS230.c: 47:   TMR1 = 0;
  2351     0FB1  018E               	clrf	14	;volatile
  2352     0FB2  018F               	clrf	15	;volatile
  2353     0FB3                     l1762:
  2354                           
  2355                           ;TCS230.c: 48:   T1CONbits.TMR1ON = 1;
  2356     0FB3  1410               	bsf	16,0	;volatile
  2357     0FB4                     l154:	
  2358                           ;TCS230.c: 50:   }
  2359                           
  2360                           
  2361                           ;TCS230.c: 49:   while(PORTAbits.RA1 == 1){
  2362     0FB4  1885               	btfsc	5,1	;volatile
  2363     0FB5  2FB7               	goto	u2071
  2364     0FB6  2FB8               	goto	u2070
  2365     0FB7                     u2071:
  2366     0FB7  2FB4               	goto	l154
  2367     0FB8                     u2070:
  2368     0FB8                     l156:
  2369                           
  2370                           ;TCS230.c: 51:   T1CONbits.TMR1ON = 0;
  2371     0FB8  1010               	bcf	16,0	;volatile
  2372     0FB9                     l1764:
  2373                           
  2374                           ;TCS230.c: 52:   temp_freq = TMR1;
  2375     0FB9  080E               	movf	14,w	;volatile
  2376     0FBA  00C9               	movwf	read_green@temp_freq
  2377     0FBB  080F               	movf	15,w	;volatile
  2378     0FBC  00CA               	movwf	read_green@temp_freq+1
  2379     0FBD  01CB               	clrf	read_green@temp_freq+2
  2380     0FBE  01CC               	clrf	read_green@temp_freq+3
  2381     0FBF                     l1766:
  2382                           
  2383                           ;TCS230.c: 53:   TMR1 = 0;
  2384     0FBF  018E               	clrf	14	;volatile
  2385     0FC0  018F               	clrf	15	;volatile
  2386     0FC1                     l1768:
  2387                           
  2388                           ;TCS230.c: 54:   return (unsigned long)((float)temp_freq * 1.0);
  2389     0FC1  084C               	movf	read_green@temp_freq+3,w
  2390     0FC2  00F3               	movwf	___xxtofl@val+3
  2391     0FC3  084B               	movf	read_green@temp_freq+2,w
  2392     0FC4  00F2               	movwf	___xxtofl@val+2
  2393     0FC5  084A               	movf	read_green@temp_freq+1,w
  2394     0FC6  00F1               	movwf	___xxtofl@val+1
  2395     0FC7  0849               	movf	read_green@temp_freq,w
  2396     0FC8  00F0               	movwf	___xxtofl@val
  2397     0FC9  3000               	movlw	0
  2398     0FCA  120A  118A  215F  120A  158A  	fcall	___xxtofl
  2399     0FCF  0873               	movf	?___xxtofl+3,w
  2400     0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2401     0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2402     0FD2  00A7               	movwf	___flmul@a+3
  2403     0FD3  0872               	movf	?___xxtofl+2,w
  2404     0FD4  00A6               	movwf	___flmul@a+2
  2405     0FD5  0871               	movf	?___xxtofl+1,w
  2406     0FD6  00A5               	movwf	___flmul@a+1
  2407     0FD7  0870               	movf	?___xxtofl,w
  2408     0FD8  00A4               	movwf	___flmul@a
  2409     0FD9  303F               	movlw	63
  2410     0FDA  00A3               	movwf	___flmul@b+3
  2411     0FDB  3080               	movlw	128
  2412     0FDC  00A2               	movwf	___flmul@b+2
  2413     0FDD  3000               	movlw	0
  2414     0FDE  00A1               	movwf	___flmul@b+1
  2415     0FDF  3000               	movlw	0
  2416     0FE0  00A0               	movwf	___flmul@b
  2417     0FE1  120A  118A  24AE  120A  158A  	fcall	___flmul
  2418     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  2419     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  2420     0FE8  0823               	movf	?___flmul+3,w
  2421     0FE9  00BD               	movwf	___fltol@f1+3
  2422     0FEA  0822               	movf	?___flmul+2,w
  2423     0FEB  00BC               	movwf	___fltol@f1+2
  2424     0FEC  0821               	movf	?___flmul+1,w
  2425     0FED  00BB               	movwf	___fltol@f1+1
  2426     0FEE  0820               	movf	?___flmul,w
  2427     0FEF  00BA               	movwf	___fltol@f1
  2428     0FF0  120A  118A  20E7  120A  158A  	fcall	___fltol
  2429     0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2430     0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2431     0FF7  083D               	movf	?___fltol+3,w
  2432     0FF8  00C7               	movwf	?_read_green+3
  2433     0FF9  083C               	movf	?___fltol+2,w
  2434     0FFA  00C6               	movwf	?_read_green+2
  2435     0FFB  083B               	movf	?___fltol+1,w
  2436     0FFC  00C5               	movwf	?_read_green+1
  2437     0FFD  083A               	movf	?___fltol,w
  2438     0FFE  00C4               	movwf	?_read_green
  2439     0FFF                     l157:
  2440     0FFF  0008               	return
  2441     1000                     __end_of_read_green:
  2442                           
  2443                           	psect	text7
  2444     0F3A                     __ptext7:	
  2445 ;; *************** function _read_blue *****************
  2446 ;; Defined at:
  2447 ;;		line 58 in file "TCS230.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  4   36[BANK0 ] unsigned long 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       4       0       0       0
  2462 ;;      Locals:         0       4       0       0       0
  2463 ;;      Temps:          0       1       0       0       0
  2464 ;;      Totals:         0       9       0       0       0
  2465 ;;Total ram usage:        9 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 2
  2468 ;; This function calls:
  2469 ;;		___flmul
  2470 ;;		___fltol
  2471 ;;		___xxtofl
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477     0F3A                     _read_blue:	
  2478                           ;psect for function _read_blue
  2479                           
  2480     0F3A                     l1772:	
  2481                           ;incstack = 0
  2482                           ; Regs used in _read_blue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2483                           
  2484                           
  2485                           ;TCS230.c: 59:   unsigned long temp_freq;;TCS230.c: 60:   RD0 = 0;
  2486     0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  2487     0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  2488     0F3C  1008               	bcf	8,0	;volatile
  2489                           
  2490                           ;TCS230.c: 61:   RD1 = 1;
  2491     0F3D  1488               	bsf	8,1	;volatile
  2492     0F3E                     l1774:
  2493                           
  2494                           ;TCS230.c: 62:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2495     0F3E  3013               	movlw	19
  2496     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0F41  00C8               	movwf	??_read_blue
  2499     0F42                     u2287:
  2500     0F42  0BC8               	decfsz	??_read_blue,f
  2501     0F43  2F42               	goto	u2287
  2502     0F44                     l160:	
  2503                           ;TCS230.c: 64:   }
  2504                           
  2505                           
  2506                           ;TCS230.c: 63:   while(PORTAbits.RA1 == 1){
  2507     0F44  1283               	bcf	3,5	;RP0=0, select bank0
  2508     0F45  1303               	bcf	3,6	;RP1=0, select bank0
  2509     0F46  1885               	btfsc	5,1	;volatile
  2510     0F47  2F49               	goto	u2081
  2511     0F48  2F4A               	goto	u2080
  2512     0F49                     u2081:
  2513     0F49  2F44               	goto	l160
  2514     0F4A                     u2080:
  2515     0F4A                     l163:	
  2516                           ;TCS230.c: 66:   }
  2517                           
  2518                           
  2519                           ;TCS230.c: 65:   while(PORTAbits.RA1 == 0){
  2520     0F4A  1C85               	btfss	5,1	;volatile
  2521     0F4B  2F4D               	goto	u2091
  2522     0F4C  2F4E               	goto	u2090
  2523     0F4D                     u2091:
  2524     0F4D  2F4A               	goto	l163
  2525     0F4E                     u2090:
  2526     0F4E                     l1776:
  2527                           
  2528                           ;TCS230.c: 67:   TMR1 = 0;
  2529     0F4E  018E               	clrf	14	;volatile
  2530     0F4F  018F               	clrf	15	;volatile
  2531     0F50                     l1778:
  2532                           
  2533                           ;TCS230.c: 68:   T1CONbits.TMR1ON = 1;
  2534     0F50  1410               	bsf	16,0	;volatile
  2535     0F51                     l166:	
  2536                           ;TCS230.c: 70:   }
  2537                           
  2538                           
  2539                           ;TCS230.c: 69:   while(PORTAbits.RA1 == 1){
  2540     0F51  1885               	btfsc	5,1	;volatile
  2541     0F52  2F54               	goto	u2101
  2542     0F53  2F55               	goto	u2100
  2543     0F54                     u2101:
  2544     0F54  2F51               	goto	l166
  2545     0F55                     u2100:
  2546     0F55                     l1780:
  2547                           
  2548                           ;TCS230.c: 71:   temp_freq = TMR1;
  2549     0F55  080E               	movf	14,w	;volatile
  2550     0F56  00C9               	movwf	read_blue@temp_freq
  2551     0F57  080F               	movf	15,w	;volatile
  2552     0F58  00CA               	movwf	read_blue@temp_freq+1
  2553     0F59  01CB               	clrf	read_blue@temp_freq+2
  2554     0F5A  01CC               	clrf	read_blue@temp_freq+3
  2555     0F5B                     l1782:
  2556                           
  2557                           ;TCS230.c: 72:   T1CONbits.TMR1ON = 0;
  2558     0F5B  1010               	bcf	16,0	;volatile
  2559     0F5C                     l1784:
  2560                           
  2561                           ;TCS230.c: 74:   TMR1 = 0;
  2562     0F5C  018E               	clrf	14	;volatile
  2563     0F5D  018F               	clrf	15	;volatile
  2564     0F5E                     l1786:
  2565                           
  2566                           ;TCS230.c: 75:   return (unsigned long)((float)temp_freq * 1.0);
  2567     0F5E  084C               	movf	read_blue@temp_freq+3,w
  2568     0F5F  00F3               	movwf	___xxtofl@val+3
  2569     0F60  084B               	movf	read_blue@temp_freq+2,w
  2570     0F61  00F2               	movwf	___xxtofl@val+2
  2571     0F62  084A               	movf	read_blue@temp_freq+1,w
  2572     0F63  00F1               	movwf	___xxtofl@val+1
  2573     0F64  0849               	movf	read_blue@temp_freq,w
  2574     0F65  00F0               	movwf	___xxtofl@val
  2575     0F66  3000               	movlw	0
  2576     0F67  120A  118A  215F  120A  158A  	fcall	___xxtofl
  2577     0F6C  0873               	movf	?___xxtofl+3,w
  2578     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2579     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2580     0F6F  00A7               	movwf	___flmul@a+3
  2581     0F70  0872               	movf	?___xxtofl+2,w
  2582     0F71  00A6               	movwf	___flmul@a+2
  2583     0F72  0871               	movf	?___xxtofl+1,w
  2584     0F73  00A5               	movwf	___flmul@a+1
  2585     0F74  0870               	movf	?___xxtofl,w
  2586     0F75  00A4               	movwf	___flmul@a
  2587     0F76  303F               	movlw	63
  2588     0F77  00A3               	movwf	___flmul@b+3
  2589     0F78  3080               	movlw	128
  2590     0F79  00A2               	movwf	___flmul@b+2
  2591     0F7A  3000               	movlw	0
  2592     0F7B  00A1               	movwf	___flmul@b+1
  2593     0F7C  3000               	movlw	0
  2594     0F7D  00A0               	movwf	___flmul@b
  2595     0F7E  120A  118A  24AE  120A  158A  	fcall	___flmul
  2596     0F83  1283               	bcf	3,5	;RP0=0, select bank0
  2597     0F84  1303               	bcf	3,6	;RP1=0, select bank0
  2598     0F85  0823               	movf	?___flmul+3,w
  2599     0F86  00BD               	movwf	___fltol@f1+3
  2600     0F87  0822               	movf	?___flmul+2,w
  2601     0F88  00BC               	movwf	___fltol@f1+2
  2602     0F89  0821               	movf	?___flmul+1,w
  2603     0F8A  00BB               	movwf	___fltol@f1+1
  2604     0F8B  0820               	movf	?___flmul,w
  2605     0F8C  00BA               	movwf	___fltol@f1
  2606     0F8D  120A  118A  20E7  120A  158A  	fcall	___fltol
  2607     0F92  1283               	bcf	3,5	;RP0=0, select bank0
  2608     0F93  1303               	bcf	3,6	;RP1=0, select bank0
  2609     0F94  083D               	movf	?___fltol+3,w
  2610     0F95  00C7               	movwf	?_read_blue+3
  2611     0F96  083C               	movf	?___fltol+2,w
  2612     0F97  00C6               	movwf	?_read_blue+2
  2613     0F98  083B               	movf	?___fltol+1,w
  2614     0F99  00C5               	movwf	?_read_blue+1
  2615     0F9A  083A               	movf	?___fltol,w
  2616     0F9B  00C4               	movwf	?_read_blue
  2617     0F9C                     l169:
  2618     0F9C  0008               	return
  2619     0F9D                     __end_of_read_blue:
  2620                           
  2621                           	psect	text8
  2622     015F                     __ptext8:	
  2623 ;; *************** function ___xxtofl *****************
  2624 ;; Defined at:
  2625 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  sign            1    wreg     unsigned char 
  2628 ;;  val             4    0[COMMON] long 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  sign            1    8[COMMON] unsigned char 
  2631 ;;  arg             4   10[COMMON] unsigned long 
  2632 ;;  exp             1    9[COMMON] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  4    0[COMMON] unsigned char 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         4       0       0       0       0
  2643 ;;      Locals:         6       0       0       0       0
  2644 ;;      Temps:          4       0       0       0       0
  2645 ;;      Totals:        14       0       0       0       0
  2646 ;;Total ram usage:       14 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_read_red
  2652 ;;		_read_green
  2653 ;;		_read_blue
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657     015F                     ___xxtofl:	
  2658                           ;psect for function ___xxtofl
  2659                           
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2663                           ;___xxtofl@sign stored from wreg
  2664     015F  00F8               	movwf	___xxtofl@sign
  2665     0160                     l1636:
  2666     0160  0878               	movf	___xxtofl@sign,w
  2667     0161  1903               	btfsc	3,2
  2668     0162  2964               	goto	u1811
  2669     0163  2965               	goto	u1810
  2670     0164                     u1811:
  2671     0164  2979               	goto	l1642
  2672     0165                     u1810:
  2673     0165                     l1638:
  2674     0165  1FF3               	btfss	___xxtofl@val+3,7
  2675     0166  2968               	goto	u1821
  2676     0167  2969               	goto	u1820
  2677     0168                     u1821:
  2678     0168  2979               	goto	l1642
  2679     0169                     u1820:
  2680     0169                     l1640:
  2681     0169  0970               	comf	___xxtofl@val,w
  2682     016A  00FA               	movwf	___xxtofl@arg
  2683     016B  0971               	comf	___xxtofl@val+1,w
  2684     016C  00FB               	movwf	___xxtofl@arg+1
  2685     016D  0972               	comf	___xxtofl@val+2,w
  2686     016E  00FC               	movwf	___xxtofl@arg+2
  2687     016F  0973               	comf	___xxtofl@val+3,w
  2688     0170  00FD               	movwf	___xxtofl@arg+3
  2689     0171  0AFA               	incf	___xxtofl@arg,f
  2690     0172  1903               	skipnz
  2691     0173  0AFB               	incf	___xxtofl@arg+1,f
  2692     0174  1903               	skipnz
  2693     0175  0AFC               	incf	___xxtofl@arg+2,f
  2694     0176  1903               	skipnz
  2695     0177  0AFD               	incf	___xxtofl@arg+3,f
  2696     0178  2981               	goto	l717
  2697     0179                     l1642:
  2698     0179  0873               	movf	___xxtofl@val+3,w
  2699     017A  00FD               	movwf	___xxtofl@arg+3
  2700     017B  0872               	movf	___xxtofl@val+2,w
  2701     017C  00FC               	movwf	___xxtofl@arg+2
  2702     017D  0871               	movf	___xxtofl@val+1,w
  2703     017E  00FB               	movwf	___xxtofl@arg+1
  2704     017F  0870               	movf	___xxtofl@val,w
  2705     0180  00FA               	movwf	___xxtofl@arg
  2706     0181                     l717:
  2707     0181  0873               	movf	___xxtofl@val+3,w
  2708     0182  0472               	iorwf	___xxtofl@val+2,w
  2709     0183  0471               	iorwf	___xxtofl@val+1,w
  2710     0184  0470               	iorwf	___xxtofl@val,w
  2711     0185  1D03               	skipz
  2712     0186  2988               	goto	u1831
  2713     0187  2989               	goto	u1830
  2714     0188                     u1831:
  2715     0188  2992               	goto	l1648
  2716     0189                     u1830:
  2717     0189                     l1644:
  2718     0189  3000               	movlw	0
  2719     018A  00F3               	movwf	?___xxtofl+3
  2720     018B  3000               	movlw	0
  2721     018C  00F2               	movwf	?___xxtofl+2
  2722     018D  3000               	movlw	0
  2723     018E  00F1               	movwf	?___xxtofl+1
  2724     018F  3000               	movlw	0
  2725     0190  00F0               	movwf	?___xxtofl
  2726     0191  2A16               	goto	l719
  2727     0192                     l1648:
  2728     0192  3096               	movlw	150
  2729     0193  00F9               	movwf	___xxtofl@exp
  2730     0194  29A2               	goto	l1652
  2731     0195                     l1650:
  2732     0195  3001               	movlw	1
  2733     0196  00F4               	movwf	??___xxtofl
  2734     0197  0874               	movf	??___xxtofl,w
  2735     0198  07F9               	addwf	___xxtofl@exp,f
  2736     0199  3001               	movlw	1
  2737     019A                     u1845:
  2738     019A  1003               	clrc
  2739     019B  0CFD               	rrf	___xxtofl@arg+3,f
  2740     019C  0CFC               	rrf	___xxtofl@arg+2,f
  2741     019D  0CFB               	rrf	___xxtofl@arg+1,f
  2742     019E  0CFA               	rrf	___xxtofl@arg,f
  2743     019F  3EFF               	addlw	-1
  2744     01A0  1D03               	skipz
  2745     01A1  299A               	goto	u1845
  2746     01A2                     l1652:
  2747     01A2  30FE               	movlw	254
  2748     01A3  057D               	andwf	___xxtofl@arg+3,w
  2749     01A4  1D03               	btfss	3,2
  2750     01A5  29A7               	goto	u1851
  2751     01A6  29A8               	goto	u1850
  2752     01A7                     u1851:
  2753     01A7  2995               	goto	l1650
  2754     01A8                     u1850:
  2755     01A8  29C4               	goto	l723
  2756     01A9                     l1654:
  2757     01A9  3001               	movlw	1
  2758     01AA  00F4               	movwf	??___xxtofl
  2759     01AB  0874               	movf	??___xxtofl,w
  2760     01AC  07F9               	addwf	___xxtofl@exp,f
  2761     01AD                     l1656:
  2762     01AD  3001               	movlw	1
  2763     01AE  07FA               	addwf	___xxtofl@arg,f
  2764     01AF  3000               	movlw	0
  2765     01B0  1803               	skipnc
  2766     01B1  3001               	movlw	1
  2767     01B2  07FB               	addwf	___xxtofl@arg+1,f
  2768     01B3  3000               	movlw	0
  2769     01B4  1803               	skipnc
  2770     01B5  3001               	movlw	1
  2771     01B6  07FC               	addwf	___xxtofl@arg+2,f
  2772     01B7  3000               	movlw	0
  2773     01B8  1803               	skipnc
  2774     01B9  3001               	movlw	1
  2775     01BA  07FD               	addwf	___xxtofl@arg+3,f
  2776     01BB                     l1658:
  2777     01BB  3001               	movlw	1
  2778     01BC                     u1865:
  2779     01BC  1003               	clrc
  2780     01BD  0CFD               	rrf	___xxtofl@arg+3,f
  2781     01BE  0CFC               	rrf	___xxtofl@arg+2,f
  2782     01BF  0CFB               	rrf	___xxtofl@arg+1,f
  2783     01C0  0CFA               	rrf	___xxtofl@arg,f
  2784     01C1  3EFF               	addlw	-1
  2785     01C2  1D03               	skipz
  2786     01C3  29BC               	goto	u1865
  2787     01C4                     l723:
  2788     01C4  30FF               	movlw	255
  2789     01C5  057D               	andwf	___xxtofl@arg+3,w
  2790     01C6  1D03               	btfss	3,2
  2791     01C7  29C9               	goto	u1871
  2792     01C8  29CA               	goto	u1870
  2793     01C9                     u1871:
  2794     01C9  29A9               	goto	l1654
  2795     01CA                     u1870:
  2796     01CA  29D6               	goto	l1662
  2797     01CB                     l1660:
  2798     01CB  3001               	movlw	1
  2799     01CC  02F9               	subwf	___xxtofl@exp,f
  2800     01CD  3001               	movlw	1
  2801     01CE  00F4               	movwf	??___xxtofl
  2802     01CF                     u1885:
  2803     01CF  1003               	clrc
  2804     01D0  0DFA               	rlf	___xxtofl@arg,f
  2805     01D1  0DFB               	rlf	___xxtofl@arg+1,f
  2806     01D2  0DFC               	rlf	___xxtofl@arg+2,f
  2807     01D3  0DFD               	rlf	___xxtofl@arg+3,f
  2808     01D4  0BF4               	decfsz	??___xxtofl,f
  2809     01D5  29CF               	goto	u1885
  2810     01D6                     l1662:
  2811     01D6  1BFC               	btfsc	___xxtofl@arg+2,7
  2812     01D7  29D9               	goto	u1891
  2813     01D8  29DA               	goto	u1890
  2814     01D9                     u1891:
  2815     01D9  29E0               	goto	l730
  2816     01DA                     u1890:
  2817     01DA                     l1664:
  2818     01DA  3002               	movlw	2
  2819     01DB  0279               	subwf	___xxtofl@exp,w
  2820     01DC  1803               	skipnc
  2821     01DD  29DF               	goto	u1901
  2822     01DE  29E0               	goto	u1900
  2823     01DF                     u1901:
  2824     01DF  29CB               	goto	l1660
  2825     01E0                     u1900:
  2826     01E0                     l730:
  2827     01E0  1879               	btfsc	___xxtofl@exp,0
  2828     01E1  29E3               	goto	u1911
  2829     01E2  29E4               	goto	u1910
  2830     01E3                     u1911:
  2831     01E3  29EC               	goto	l731
  2832     01E4                     u1910:
  2833     01E4                     l1666:
  2834     01E4  30FF               	movlw	255
  2835     01E5  05FA               	andwf	___xxtofl@arg,f
  2836     01E6  30FF               	movlw	255
  2837     01E7  05FB               	andwf	___xxtofl@arg+1,f
  2838     01E8  307F               	movlw	127
  2839     01E9  05FC               	andwf	___xxtofl@arg+2,f
  2840     01EA  30FF               	movlw	255
  2841     01EB  05FD               	andwf	___xxtofl@arg+3,f
  2842     01EC                     l731:
  2843     01EC  1003               	clrc
  2844     01ED  0CF9               	rrf	___xxtofl@exp,f
  2845     01EE                     l1668:
  2846     01EE  0879               	movf	___xxtofl@exp,w
  2847     01EF  00F4               	movwf	??___xxtofl
  2848     01F0  01F5               	clrf	??___xxtofl+1
  2849     01F1  01F6               	clrf	??___xxtofl+2
  2850     01F2  01F7               	clrf	??___xxtofl+3
  2851     01F3  3018               	movlw	24
  2852     01F4                     u1925:
  2853     01F4  1003               	clrc
  2854     01F5  0DF4               	rlf	??___xxtofl,f
  2855     01F6  0DF5               	rlf	??___xxtofl+1,f
  2856     01F7  0DF6               	rlf	??___xxtofl+2,f
  2857     01F8  0DF7               	rlf	??___xxtofl+3,f
  2858     01F9                     u1920:
  2859     01F9  3EFF               	addlw	-1
  2860     01FA  1D03               	skipz
  2861     01FB  29F4               	goto	u1925
  2862     01FC  0874               	movf	??___xxtofl,w
  2863     01FD  04FA               	iorwf	___xxtofl@arg,f
  2864     01FE  0875               	movf	??___xxtofl+1,w
  2865     01FF  04FB               	iorwf	___xxtofl@arg+1,f
  2866     0200  0876               	movf	??___xxtofl+2,w
  2867     0201  04FC               	iorwf	___xxtofl@arg+2,f
  2868     0202  0877               	movf	??___xxtofl+3,w
  2869     0203  04FD               	iorwf	___xxtofl@arg+3,f
  2870     0204                     l1670:
  2871     0204  0878               	movf	___xxtofl@sign,w
  2872     0205  1903               	btfsc	3,2
  2873     0206  2A08               	goto	u1931
  2874     0207  2A09               	goto	u1930
  2875     0208                     u1931:
  2876     0208  2A0E               	goto	l1676
  2877     0209                     u1930:
  2878     0209                     l1672:
  2879     0209  1FF3               	btfss	___xxtofl@val+3,7
  2880     020A  2A0C               	goto	u1941
  2881     020B  2A0D               	goto	u1940
  2882     020C                     u1941:
  2883     020C  2A0E               	goto	l1676
  2884     020D                     u1940:
  2885     020D                     l1674:
  2886     020D  17FD               	bsf	___xxtofl@arg+3,7
  2887     020E                     l1676:
  2888     020E  087D               	movf	___xxtofl@arg+3,w
  2889     020F  00F3               	movwf	?___xxtofl+3
  2890     0210  087C               	movf	___xxtofl@arg+2,w
  2891     0211  00F2               	movwf	?___xxtofl+2
  2892     0212  087B               	movf	___xxtofl@arg+1,w
  2893     0213  00F1               	movwf	?___xxtofl+1
  2894     0214  087A               	movf	___xxtofl@arg,w
  2895     0215  00F0               	movwf	?___xxtofl
  2896     0216                     l719:
  2897     0216  0008               	return
  2898     0217                     __end_of___xxtofl:
  2899                           
  2900                           	psect	text9
  2901     00E7                     __ptext9:	
  2902 ;; *************** function ___fltol *****************
  2903 ;; Defined at:
  2904 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  f1              4   26[BANK0 ] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  exp1            1   35[BANK0 ] unsigned char 
  2909 ;;  sign1           1   34[BANK0 ] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  4   26[BANK0 ] long 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         0       4       0       0       0
  2920 ;;      Locals:         0       2       0       0       0
  2921 ;;      Temps:          0       4       0       0       0
  2922 ;;      Totals:         0      10       0       0       0
  2923 ;;Total ram usage:       10 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_read_red
  2929 ;;		_read_green
  2930 ;;		_read_blue
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934     00E7                     ___fltol:	
  2935                           ;psect for function ___fltol
  2936                           
  2937     00E7                     l1440:	
  2938                           ;incstack = 0
  2939                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2940                           
  2941     00E7  1003               	clrc
  2942     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2943     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2944     00EA  0D3C               	rlf	___fltol@f1+2,w
  2945     00EB  0D3D               	rlf	___fltol@f1+3,w
  2946     00EC  00C3               	movwf	___fltol@exp1
  2947     00ED  0843               	movf	___fltol@exp1,w
  2948     00EE  1D03               	btfss	3,2
  2949     00EF  28F1               	goto	u1281
  2950     00F0  28F2               	goto	u1280
  2951     00F1                     u1281:
  2952     00F1  28FB               	goto	l1446
  2953     00F2                     u1280:
  2954     00F2                     l1442:
  2955     00F2  3000               	movlw	0
  2956     00F3  00BD               	movwf	?___fltol+3
  2957     00F4  3000               	movlw	0
  2958     00F5  00BC               	movwf	?___fltol+2
  2959     00F6  3000               	movlw	0
  2960     00F7  00BB               	movwf	?___fltol+1
  2961     00F8  3000               	movlw	0
  2962     00F9  00BA               	movwf	?___fltol
  2963     00FA  295E               	goto	l470
  2964     00FB                     l1446:
  2965     00FB  083A               	movf	___fltol@f1,w
  2966     00FC  00BE               	movwf	??___fltol
  2967     00FD  083B               	movf	___fltol@f1+1,w
  2968     00FE  00BF               	movwf	??___fltol+1
  2969     00FF  083C               	movf	___fltol@f1+2,w
  2970     0100  00C0               	movwf	??___fltol+2
  2971     0101  083D               	movf	___fltol@f1+3,w
  2972     0102  00C1               	movwf	??___fltol+3
  2973     0103  301F               	movlw	31
  2974     0104                     u1295:
  2975     0104  1003               	clrc
  2976     0105  0CC1               	rrf	??___fltol+3,f
  2977     0106  0CC0               	rrf	??___fltol+2,f
  2978     0107  0CBF               	rrf	??___fltol+1,f
  2979     0108  0CBE               	rrf	??___fltol,f
  2980     0109                     u1290:
  2981     0109  3EFF               	addlw	-1
  2982     010A  1D03               	skipz
  2983     010B  2904               	goto	u1295
  2984     010C  083E               	movf	??___fltol,w
  2985     010D  00C2               	movwf	___fltol@sign1
  2986     010E                     l1448:
  2987     010E  17BC               	bsf	___fltol@f1+2,7
  2988     010F                     l1450:
  2989     010F  30FF               	movlw	255
  2990     0110  05BA               	andwf	___fltol@f1,f
  2991     0111  30FF               	movlw	255
  2992     0112  05BB               	andwf	___fltol@f1+1,f
  2993     0113  30FF               	movlw	255
  2994     0114  05BC               	andwf	___fltol@f1+2,f
  2995     0115  3000               	movlw	0
  2996     0116  05BD               	andwf	___fltol@f1+3,f
  2997     0117                     l1452:
  2998     0117  3096               	movlw	150
  2999     0118  02C3               	subwf	___fltol@exp1,f
  3000     0119                     l1454:
  3001     0119  1FC3               	btfss	___fltol@exp1,7
  3002     011A  291C               	goto	u1301
  3003     011B  291D               	goto	u1300
  3004     011C                     u1301:
  3005     011C  2937               	goto	l1464
  3006     011D                     u1300:
  3007     011D                     l1456:
  3008     011D  0843               	movf	___fltol@exp1,w
  3009     011E  3A80               	xorlw	128
  3010     011F  3E97               	addlw	151
  3011     0120  1803               	skipnc
  3012     0121  2923               	goto	u1311
  3013     0122  2924               	goto	u1310
  3014     0123                     u1311:
  3015     0123  2925               	goto	l1462
  3016     0124                     u1310:
  3017     0124  28F2               	goto	l1442
  3018     0125                     l1462:
  3019     0125  3001               	movlw	1
  3020     0126                     u1325:
  3021     0126  1003               	clrc
  3022     0127  0CBD               	rrf	___fltol@f1+3,f
  3023     0128  0CBC               	rrf	___fltol@f1+2,f
  3024     0129  0CBB               	rrf	___fltol@f1+1,f
  3025     012A  0CBA               	rrf	___fltol@f1,f
  3026     012B  3EFF               	addlw	-1
  3027     012C  1D03               	skipz
  3028     012D  2926               	goto	u1325
  3029     012E  3001               	movlw	1
  3030     012F  00BE               	movwf	??___fltol
  3031     0130  083E               	movf	??___fltol,w
  3032     0131  07C3               	addwf	___fltol@exp1,f
  3033     0132  1D03               	btfss	3,2
  3034     0133  2935               	goto	u1331
  3035     0134  2936               	goto	u1330
  3036     0135                     u1331:
  3037     0135  2925               	goto	l1462
  3038     0136                     u1330:
  3039     0136  294E               	goto	l1472
  3040     0137                     l1464:
  3041     0137  3020               	movlw	32
  3042     0138  0243               	subwf	___fltol@exp1,w
  3043     0139  1C03               	skipc
  3044     013A  293C               	goto	u1341
  3045     013B  293D               	goto	u1340
  3046     013C                     u1341:
  3047     013C  2949               	goto	l477
  3048     013D                     u1340:
  3049     013D  28F2               	goto	l1442
  3050     013E                     l1470:
  3051     013E  3001               	movlw	1
  3052     013F  00BE               	movwf	??___fltol
  3053     0140                     u1355:
  3054     0140  1003               	clrc
  3055     0141  0DBA               	rlf	___fltol@f1,f
  3056     0142  0DBB               	rlf	___fltol@f1+1,f
  3057     0143  0DBC               	rlf	___fltol@f1+2,f
  3058     0144  0DBD               	rlf	___fltol@f1+3,f
  3059     0145  0BBE               	decfsz	??___fltol,f
  3060     0146  2940               	goto	u1355
  3061     0147  3001               	movlw	1
  3062     0148  02C3               	subwf	___fltol@exp1,f
  3063     0149                     l477:
  3064     0149  0843               	movf	___fltol@exp1,w
  3065     014A  1D03               	btfss	3,2
  3066     014B  294D               	goto	u1361
  3067     014C  294E               	goto	u1360
  3068     014D                     u1361:
  3069     014D  293E               	goto	l1470
  3070     014E                     u1360:
  3071     014E                     l1472:
  3072     014E  0842               	movf	___fltol@sign1,w
  3073     014F  1903               	btfsc	3,2
  3074     0150  2952               	goto	u1371
  3075     0151  2953               	goto	u1370
  3076     0152                     u1371:
  3077     0152  295E               	goto	l480
  3078     0153                     u1370:
  3079     0153                     l1474:
  3080     0153  09BA               	comf	___fltol@f1,f
  3081     0154  09BB               	comf	___fltol@f1+1,f
  3082     0155  09BC               	comf	___fltol@f1+2,f
  3083     0156  09BD               	comf	___fltol@f1+3,f
  3084     0157  0ABA               	incf	___fltol@f1,f
  3085     0158  1903               	skipnz
  3086     0159  0ABB               	incf	___fltol@f1+1,f
  3087     015A  1903               	skipnz
  3088     015B  0ABC               	incf	___fltol@f1+2,f
  3089     015C  1903               	skipnz
  3090     015D  0ABD               	incf	___fltol@f1+3,f
  3091     015E                     l480:
  3092     015E                     l470:
  3093     015E  0008               	return
  3094     015F                     __end_of___fltol:
  3095                           
  3096                           	psect	text10
  3097     04AE                     __ptext10:	
  3098 ;; *************** function ___flmul *****************
  3099 ;; Defined at:
  3100 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  b               4    0[BANK0 ] long 
  3103 ;;  a               4    4[BANK0 ] long 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  prod            4   20[BANK0 ] struct .
  3106 ;;  grs             4   14[BANK0 ] unsigned long 
  3107 ;;  temp            2   24[BANK0 ] struct .
  3108 ;;  bexp            1   19[BANK0 ] unsigned char 
  3109 ;;  aexp            1   18[BANK0 ] unsigned char 
  3110 ;;  sign            1   13[BANK0 ] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  4    0[BANK0 ] unsigned char 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       8       0       0       0
  3121 ;;      Locals:         0      13       0       0       0
  3122 ;;      Temps:          0       5       0       0       0
  3123 ;;      Totals:         0      26       0       0       0
  3124 ;;Total ram usage:       26 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 1
  3127 ;; This function calls:
  3128 ;;		__Umul8_16
  3129 ;; This function is called by:
  3130 ;;		_read_red
  3131 ;;		_read_green
  3132 ;;		_read_blue
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136     04AE                     ___flmul:	
  3137                           ;psect for function ___flmul
  3138                           
  3139     04AE                     l1496:	
  3140                           ;incstack = 0
  3141                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3142                           
  3143     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3144     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3145     04B0  0823               	movf	___flmul@b+3,w
  3146     04B1  3980               	andlw	128
  3147     04B2  00AD               	movwf	___flmul@sign
  3148     04B3                     l1498:
  3149     04B3  0823               	movf	___flmul@b+3,w
  3150     04B4  00A8               	movwf	??___flmul
  3151     04B5  0728               	addwf	??___flmul,w
  3152     04B6  00B3               	movwf	___flmul@bexp
  3153     04B7                     l1500:
  3154     04B7  1FA2               	btfss	___flmul@b+2,7
  3155     04B8  2CBA               	goto	u1441
  3156     04B9  2CBB               	goto	u1440
  3157     04BA                     u1441:
  3158     04BA  2CBC               	goto	l1504
  3159     04BB                     u1440:
  3160     04BB                     l1502:
  3161     04BB  1433               	bsf	___flmul@bexp,0
  3162     04BC                     l1504:
  3163     04BC  0833               	movf	___flmul@bexp,w
  3164     04BD  1903               	btfsc	3,2
  3165     04BE  2CC0               	goto	u1451
  3166     04BF  2CC1               	goto	u1450
  3167     04C0                     u1451:
  3168     04C0  2CD0               	goto	l1512
  3169     04C1                     u1450:
  3170     04C1                     l1506:
  3171     04C1  0A33               	incf	___flmul@bexp,w
  3172     04C2  1D03               	btfss	3,2
  3173     04C3  2CC5               	goto	u1461
  3174     04C4  2CC6               	goto	u1460
  3175     04C5                     u1461:
  3176     04C5  2CCE               	goto	l1510
  3177     04C6                     u1460:
  3178     04C6                     l1508:
  3179     04C6  3000               	movlw	0
  3180     04C7  00A3               	movwf	___flmul@b+3
  3181     04C8  3000               	movlw	0
  3182     04C9  00A2               	movwf	___flmul@b+2
  3183     04CA  3000               	movlw	0
  3184     04CB  00A1               	movwf	___flmul@b+1
  3185     04CC  3000               	movlw	0
  3186     04CD  00A0               	movwf	___flmul@b
  3187     04CE                     l1510:
  3188     04CE  17A2               	bsf	___flmul@b+2,7
  3189     04CF  2CD8               	goto	l1514
  3190     04D0                     l1512:
  3191     04D0  3000               	movlw	0
  3192     04D1  00A3               	movwf	___flmul@b+3
  3193     04D2  3000               	movlw	0
  3194     04D3  00A2               	movwf	___flmul@b+2
  3195     04D4  3000               	movlw	0
  3196     04D5  00A1               	movwf	___flmul@b+1
  3197     04D6  3000               	movlw	0
  3198     04D7  00A0               	movwf	___flmul@b
  3199     04D8                     l1514:
  3200     04D8  0827               	movf	___flmul@a+3,w
  3201     04D9  3980               	andlw	128
  3202     04DA  00A8               	movwf	??___flmul
  3203     04DB  0828               	movf	??___flmul,w
  3204     04DC  06AD               	xorwf	___flmul@sign,f
  3205     04DD                     l1516:
  3206     04DD  0827               	movf	___flmul@a+3,w
  3207     04DE  00A8               	movwf	??___flmul
  3208     04DF  0728               	addwf	??___flmul,w
  3209     04E0  00B2               	movwf	___flmul@aexp
  3210     04E1                     l1518:
  3211     04E1  1FA6               	btfss	___flmul@a+2,7
  3212     04E2  2CE4               	goto	u1471
  3213     04E3  2CE5               	goto	u1470
  3214     04E4                     u1471:
  3215     04E4  2CE6               	goto	l1522
  3216     04E5                     u1470:
  3217     04E5                     l1520:
  3218     04E5  1432               	bsf	___flmul@aexp,0
  3219     04E6                     l1522:
  3220     04E6  0832               	movf	___flmul@aexp,w
  3221     04E7  1903               	btfsc	3,2
  3222     04E8  2CEA               	goto	u1481
  3223     04E9  2CEB               	goto	u1480
  3224     04EA                     u1481:
  3225     04EA  2CFA               	goto	l1530
  3226     04EB                     u1480:
  3227     04EB                     l1524:
  3228     04EB  0A32               	incf	___flmul@aexp,w
  3229     04EC  1D03               	btfss	3,2
  3230     04ED  2CEF               	goto	u1491
  3231     04EE  2CF0               	goto	u1490
  3232     04EF                     u1491:
  3233     04EF  2CF8               	goto	l1528
  3234     04F0                     u1490:
  3235     04F0                     l1526:
  3236     04F0  3000               	movlw	0
  3237     04F1  00A7               	movwf	___flmul@a+3
  3238     04F2  3000               	movlw	0
  3239     04F3  00A6               	movwf	___flmul@a+2
  3240     04F4  3000               	movlw	0
  3241     04F5  00A5               	movwf	___flmul@a+1
  3242     04F6  3000               	movlw	0
  3243     04F7  00A4               	movwf	___flmul@a
  3244     04F8                     l1528:
  3245     04F8  17A6               	bsf	___flmul@a+2,7
  3246     04F9  2D02               	goto	l1532
  3247     04FA                     l1530:
  3248     04FA  3000               	movlw	0
  3249     04FB  00A7               	movwf	___flmul@a+3
  3250     04FC  3000               	movlw	0
  3251     04FD  00A6               	movwf	___flmul@a+2
  3252     04FE  3000               	movlw	0
  3253     04FF  00A5               	movwf	___flmul@a+1
  3254     0500  3000               	movlw	0
  3255     0501  00A4               	movwf	___flmul@a
  3256     0502                     l1532:
  3257     0502  0832               	movf	___flmul@aexp,w
  3258     0503  1903               	btfsc	3,2
  3259     0504  2D06               	goto	u1501
  3260     0505  2D07               	goto	u1500
  3261     0506                     u1501:
  3262     0506  2D0C               	goto	l1536
  3263     0507                     u1500:
  3264     0507                     l1534:
  3265     0507  0833               	movf	___flmul@bexp,w
  3266     0508  1D03               	btfss	3,2
  3267     0509  2D0B               	goto	u1511
  3268     050A  2D0C               	goto	u1510
  3269     050B                     u1511:
  3270     050B  2D15               	goto	l1540
  3271     050C                     u1510:
  3272     050C                     l1536:
  3273     050C  3000               	movlw	0
  3274     050D  00A3               	movwf	?___flmul+3
  3275     050E  3000               	movlw	0
  3276     050F  00A2               	movwf	?___flmul+2
  3277     0510  3000               	movlw	0
  3278     0511  00A1               	movwf	?___flmul+1
  3279     0512  3000               	movlw	0
  3280     0513  00A0               	movwf	?___flmul
  3281     0514  2FF2               	goto	l673
  3282     0515                     l1540:
  3283     0515  0820               	movf	___flmul@b,w
  3284     0516  00F0               	movwf	__Umul8_16@multiplicand
  3285     0517  0826               	movf	___flmul@a+2,w
  3286     0518  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3287     051D  0871               	movf	?__Umul8_16+1,w
  3288     051E  1283               	bcf	3,5	;RP0=0, select bank0
  3289     051F  1303               	bcf	3,6	;RP1=0, select bank0
  3290     0520  00B9               	movwf	___flmul@temp+1
  3291     0521  0870               	movf	?__Umul8_16,w
  3292     0522  00B8               	movwf	___flmul@temp
  3293     0523                     l1542:
  3294     0523  0838               	movf	___flmul@temp,w
  3295     0524  00A8               	movwf	??___flmul
  3296     0525  01A9               	clrf	??___flmul+1
  3297     0526  01AA               	clrf	??___flmul+2
  3298     0527  01AB               	clrf	??___flmul+3
  3299     0528  082B               	movf	??___flmul+3,w
  3300     0529  00B1               	movwf	___flmul@grs+3
  3301     052A  082A               	movf	??___flmul+2,w
  3302     052B  00B0               	movwf	___flmul@grs+2
  3303     052C  0829               	movf	??___flmul+1,w
  3304     052D  00AF               	movwf	___flmul@grs+1
  3305     052E  0828               	movf	??___flmul,w
  3306     052F  00AE               	movwf	___flmul@grs
  3307     0530                     l1544:
  3308     0530  0839               	movf	___flmul@temp+1,w
  3309     0531  00A8               	movwf	??___flmul
  3310     0532  01A9               	clrf	??___flmul+1
  3311     0533  01AA               	clrf	??___flmul+2
  3312     0534  01AB               	clrf	??___flmul+3
  3313     0535  082B               	movf	??___flmul+3,w
  3314     0536  00B7               	movwf	___flmul@prod+3
  3315     0537  082A               	movf	??___flmul+2,w
  3316     0538  00B6               	movwf	___flmul@prod+2
  3317     0539  0829               	movf	??___flmul+1,w
  3318     053A  00B5               	movwf	___flmul@prod+1
  3319     053B  0828               	movf	??___flmul,w
  3320     053C  00B4               	movwf	___flmul@prod
  3321     053D  0821               	movf	___flmul@b+1,w
  3322     053E  00F0               	movwf	__Umul8_16@multiplicand
  3323     053F  0825               	movf	___flmul@a+1,w
  3324     0540  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3325     0545  0871               	movf	?__Umul8_16+1,w
  3326     0546  1283               	bcf	3,5	;RP0=0, select bank0
  3327     0547  1303               	bcf	3,6	;RP1=0, select bank0
  3328     0548  00B9               	movwf	___flmul@temp+1
  3329     0549  0870               	movf	?__Umul8_16,w
  3330     054A  00B8               	movwf	___flmul@temp
  3331     054B                     l1546:
  3332     054B  0838               	movf	___flmul@temp,w
  3333     054C  00A8               	movwf	??___flmul
  3334     054D  01A9               	clrf	??___flmul+1
  3335     054E  01AA               	clrf	??___flmul+2
  3336     054F  01AB               	clrf	??___flmul+3
  3337     0550  0828               	movf	??___flmul,w
  3338     0551  07AE               	addwf	___flmul@grs,f
  3339     0552  0829               	movf	??___flmul+1,w
  3340     0553  1103               	clrz
  3341     0554  1803               	skipnc
  3342     0555  3E01               	addlw	1
  3343     0556  1903               	skipnz
  3344     0557  2D59               	goto	u1521
  3345     0558  07AF               	addwf	___flmul@grs+1,f
  3346     0559                     u1521:
  3347     0559  082A               	movf	??___flmul+2,w
  3348     055A  1103               	clrz
  3349     055B  1803               	skipnc
  3350     055C  3E01               	addlw	1
  3351     055D  1903               	skipnz
  3352     055E  2D60               	goto	u1522
  3353     055F  07B0               	addwf	___flmul@grs+2,f
  3354     0560                     u1522:
  3355     0560  082B               	movf	??___flmul+3,w
  3356     0561  1103               	clrz
  3357     0562  1803               	skipnc
  3358     0563  3E01               	addlw	1
  3359     0564  1903               	skipnz
  3360     0565  2D67               	goto	u1523
  3361     0566  07B1               	addwf	___flmul@grs+3,f
  3362     0567                     u1523:
  3363     0567                     l1548:
  3364     0567  0839               	movf	___flmul@temp+1,w
  3365     0568  00A8               	movwf	??___flmul
  3366     0569  01A9               	clrf	??___flmul+1
  3367     056A  01AA               	clrf	??___flmul+2
  3368     056B  01AB               	clrf	??___flmul+3
  3369     056C  0828               	movf	??___flmul,w
  3370     056D  07B4               	addwf	___flmul@prod,f
  3371     056E  0829               	movf	??___flmul+1,w
  3372     056F  1103               	clrz
  3373     0570  1803               	skipnc
  3374     0571  3E01               	addlw	1
  3375     0572  1903               	skipnz
  3376     0573  2D75               	goto	u1531
  3377     0574  07B5               	addwf	___flmul@prod+1,f
  3378     0575                     u1531:
  3379     0575  082A               	movf	??___flmul+2,w
  3380     0576  1103               	clrz
  3381     0577  1803               	skipnc
  3382     0578  3E01               	addlw	1
  3383     0579  1903               	skipnz
  3384     057A  2D7C               	goto	u1532
  3385     057B  07B6               	addwf	___flmul@prod+2,f
  3386     057C                     u1532:
  3387     057C  082B               	movf	??___flmul+3,w
  3388     057D  1103               	clrz
  3389     057E  1803               	skipnc
  3390     057F  3E01               	addlw	1
  3391     0580  1903               	skipnz
  3392     0581  2D83               	goto	u1533
  3393     0582  07B7               	addwf	___flmul@prod+3,f
  3394     0583                     u1533:
  3395     0583  0822               	movf	___flmul@b+2,w
  3396     0584  00F0               	movwf	__Umul8_16@multiplicand
  3397     0585  0824               	movf	___flmul@a,w
  3398     0586  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3399     058B  0871               	movf	?__Umul8_16+1,w
  3400     058C  1283               	bcf	3,5	;RP0=0, select bank0
  3401     058D  1303               	bcf	3,6	;RP1=0, select bank0
  3402     058E  00B9               	movwf	___flmul@temp+1
  3403     058F  0870               	movf	?__Umul8_16,w
  3404     0590  00B8               	movwf	___flmul@temp
  3405     0591                     l1550:
  3406     0591  0838               	movf	___flmul@temp,w
  3407     0592  00A8               	movwf	??___flmul
  3408     0593  01A9               	clrf	??___flmul+1
  3409     0594  01AA               	clrf	??___flmul+2
  3410     0595  01AB               	clrf	??___flmul+3
  3411     0596  0828               	movf	??___flmul,w
  3412     0597  07AE               	addwf	___flmul@grs,f
  3413     0598  0829               	movf	??___flmul+1,w
  3414     0599  1103               	clrz
  3415     059A  1803               	skipnc
  3416     059B  3E01               	addlw	1
  3417     059C  1903               	skipnz
  3418     059D  2D9F               	goto	u1541
  3419     059E  07AF               	addwf	___flmul@grs+1,f
  3420     059F                     u1541:
  3421     059F  082A               	movf	??___flmul+2,w
  3422     05A0  1103               	clrz
  3423     05A1  1803               	skipnc
  3424     05A2  3E01               	addlw	1
  3425     05A3  1903               	skipnz
  3426     05A4  2DA6               	goto	u1542
  3427     05A5  07B0               	addwf	___flmul@grs+2,f
  3428     05A6                     u1542:
  3429     05A6  082B               	movf	??___flmul+3,w
  3430     05A7  1103               	clrz
  3431     05A8  1803               	skipnc
  3432     05A9  3E01               	addlw	1
  3433     05AA  1903               	skipnz
  3434     05AB  2DAD               	goto	u1543
  3435     05AC  07B1               	addwf	___flmul@grs+3,f
  3436     05AD                     u1543:
  3437     05AD                     l1552:
  3438     05AD  0839               	movf	___flmul@temp+1,w
  3439     05AE  00A8               	movwf	??___flmul
  3440     05AF  01A9               	clrf	??___flmul+1
  3441     05B0  01AA               	clrf	??___flmul+2
  3442     05B1  01AB               	clrf	??___flmul+3
  3443     05B2  0828               	movf	??___flmul,w
  3444     05B3  07B4               	addwf	___flmul@prod,f
  3445     05B4  0829               	movf	??___flmul+1,w
  3446     05B5  1103               	clrz
  3447     05B6  1803               	skipnc
  3448     05B7  3E01               	addlw	1
  3449     05B8  1903               	skipnz
  3450     05B9  2DBB               	goto	u1551
  3451     05BA  07B5               	addwf	___flmul@prod+1,f
  3452     05BB                     u1551:
  3453     05BB  082A               	movf	??___flmul+2,w
  3454     05BC  1103               	clrz
  3455     05BD  1803               	skipnc
  3456     05BE  3E01               	addlw	1
  3457     05BF  1903               	skipnz
  3458     05C0  2DC2               	goto	u1552
  3459     05C1  07B6               	addwf	___flmul@prod+2,f
  3460     05C2                     u1552:
  3461     05C2  082B               	movf	??___flmul+3,w
  3462     05C3  1103               	clrz
  3463     05C4  1803               	skipnc
  3464     05C5  3E01               	addlw	1
  3465     05C6  1903               	skipnz
  3466     05C7  2DC9               	goto	u1553
  3467     05C8  07B7               	addwf	___flmul@prod+3,f
  3468     05C9                     u1553:
  3469     05C9                     l1554:
  3470     05C9  3008               	movlw	8
  3471     05CA  00A8               	movwf	??___flmul
  3472     05CB                     u1565:
  3473     05CB  1003               	clrc
  3474     05CC  0DAE               	rlf	___flmul@grs,f
  3475     05CD  0DAF               	rlf	___flmul@grs+1,f
  3476     05CE  0DB0               	rlf	___flmul@grs+2,f
  3477     05CF  0DB1               	rlf	___flmul@grs+3,f
  3478     05D0  0BA8               	decfsz	??___flmul,f
  3479     05D1  2DCB               	goto	u1565
  3480     05D2                     l1556:
  3481     05D2  0821               	movf	___flmul@b+1,w
  3482     05D3  00F0               	movwf	__Umul8_16@multiplicand
  3483     05D4  0824               	movf	___flmul@a,w
  3484     05D5  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3485     05DA  0871               	movf	?__Umul8_16+1,w
  3486     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3487     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3488     05DD  00B9               	movwf	___flmul@temp+1
  3489     05DE  0870               	movf	?__Umul8_16,w
  3490     05DF  00B8               	movwf	___flmul@temp
  3491     05E0                     l1558:
  3492     05E0  0838               	movf	___flmul@temp,w
  3493     05E1  00A8               	movwf	??___flmul
  3494     05E2  0839               	movf	___flmul@temp+1,w
  3495     05E3  00A9               	movwf	??___flmul+1
  3496     05E4  01AA               	clrf	??___flmul+2
  3497     05E5  01AB               	clrf	??___flmul+3
  3498     05E6  0828               	movf	??___flmul,w
  3499     05E7  07AE               	addwf	___flmul@grs,f
  3500     05E8  0829               	movf	??___flmul+1,w
  3501     05E9  1103               	clrz
  3502     05EA  1803               	skipnc
  3503     05EB  3E01               	addlw	1
  3504     05EC  1903               	skipnz
  3505     05ED  2DEF               	goto	u1571
  3506     05EE  07AF               	addwf	___flmul@grs+1,f
  3507     05EF                     u1571:
  3508     05EF  082A               	movf	??___flmul+2,w
  3509     05F0  1103               	clrz
  3510     05F1  1803               	skipnc
  3511     05F2  3E01               	addlw	1
  3512     05F3  1903               	skipnz
  3513     05F4  2DF6               	goto	u1572
  3514     05F5  07B0               	addwf	___flmul@grs+2,f
  3515     05F6                     u1572:
  3516     05F6  082B               	movf	??___flmul+3,w
  3517     05F7  1103               	clrz
  3518     05F8  1803               	skipnc
  3519     05F9  3E01               	addlw	1
  3520     05FA  1903               	skipnz
  3521     05FB  2DFD               	goto	u1573
  3522     05FC  07B1               	addwf	___flmul@grs+3,f
  3523     05FD                     u1573:
  3524     05FD                     l1560:
  3525     05FD  0820               	movf	___flmul@b,w
  3526     05FE  00F0               	movwf	__Umul8_16@multiplicand
  3527     05FF  0825               	movf	___flmul@a+1,w
  3528     0600  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3529     0605  0871               	movf	?__Umul8_16+1,w
  3530     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3531     0607  1303               	bcf	3,6	;RP1=0, select bank0
  3532     0608  00B9               	movwf	___flmul@temp+1
  3533     0609  0870               	movf	?__Umul8_16,w
  3534     060A  00B8               	movwf	___flmul@temp
  3535     060B                     l1562:
  3536     060B  0838               	movf	___flmul@temp,w
  3537     060C  00A8               	movwf	??___flmul
  3538     060D  0839               	movf	___flmul@temp+1,w
  3539     060E  00A9               	movwf	??___flmul+1
  3540     060F  01AA               	clrf	??___flmul+2
  3541     0610  01AB               	clrf	??___flmul+3
  3542     0611  0828               	movf	??___flmul,w
  3543     0612  07AE               	addwf	___flmul@grs,f
  3544     0613  0829               	movf	??___flmul+1,w
  3545     0614  1103               	clrz
  3546     0615  1803               	skipnc
  3547     0616  3E01               	addlw	1
  3548     0617  1903               	skipnz
  3549     0618  2E1A               	goto	u1581
  3550     0619  07AF               	addwf	___flmul@grs+1,f
  3551     061A                     u1581:
  3552     061A  082A               	movf	??___flmul+2,w
  3553     061B  1103               	clrz
  3554     061C  1803               	skipnc
  3555     061D  3E01               	addlw	1
  3556     061E  1903               	skipnz
  3557     061F  2E21               	goto	u1582
  3558     0620  07B0               	addwf	___flmul@grs+2,f
  3559     0621                     u1582:
  3560     0621  082B               	movf	??___flmul+3,w
  3561     0622  1103               	clrz
  3562     0623  1803               	skipnc
  3563     0624  3E01               	addlw	1
  3564     0625  1903               	skipnz
  3565     0626  2E28               	goto	u1583
  3566     0627  07B1               	addwf	___flmul@grs+3,f
  3567     0628                     u1583:
  3568     0628                     l1564:
  3569     0628  3008               	movlw	8
  3570     0629  00A8               	movwf	??___flmul
  3571     062A                     u1595:
  3572     062A  1003               	clrc
  3573     062B  0DAE               	rlf	___flmul@grs,f
  3574     062C  0DAF               	rlf	___flmul@grs+1,f
  3575     062D  0DB0               	rlf	___flmul@grs+2,f
  3576     062E  0DB1               	rlf	___flmul@grs+3,f
  3577     062F  0BA8               	decfsz	??___flmul,f
  3578     0630  2E2A               	goto	u1595
  3579     0631  0820               	movf	___flmul@b,w
  3580     0632  00F0               	movwf	__Umul8_16@multiplicand
  3581     0633  0824               	movf	___flmul@a,w
  3582     0634  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3583     0639  0871               	movf	?__Umul8_16+1,w
  3584     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3585     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3586     063C  00B9               	movwf	___flmul@temp+1
  3587     063D  0870               	movf	?__Umul8_16,w
  3588     063E  00B8               	movwf	___flmul@temp
  3589     063F                     l1566:
  3590     063F  0838               	movf	___flmul@temp,w
  3591     0640  00A8               	movwf	??___flmul
  3592     0641  0839               	movf	___flmul@temp+1,w
  3593     0642  00A9               	movwf	??___flmul+1
  3594     0643  01AA               	clrf	??___flmul+2
  3595     0644  01AB               	clrf	??___flmul+3
  3596     0645  0828               	movf	??___flmul,w
  3597     0646  07AE               	addwf	___flmul@grs,f
  3598     0647  0829               	movf	??___flmul+1,w
  3599     0648  1103               	clrz
  3600     0649  1803               	skipnc
  3601     064A  3E01               	addlw	1
  3602     064B  1903               	skipnz
  3603     064C  2E4E               	goto	u1601
  3604     064D  07AF               	addwf	___flmul@grs+1,f
  3605     064E                     u1601:
  3606     064E  082A               	movf	??___flmul+2,w
  3607     064F  1103               	clrz
  3608     0650  1803               	skipnc
  3609     0651  3E01               	addlw	1
  3610     0652  1903               	skipnz
  3611     0653  2E55               	goto	u1602
  3612     0654  07B0               	addwf	___flmul@grs+2,f
  3613     0655                     u1602:
  3614     0655  082B               	movf	??___flmul+3,w
  3615     0656  1103               	clrz
  3616     0657  1803               	skipnc
  3617     0658  3E01               	addlw	1
  3618     0659  1903               	skipnz
  3619     065A  2E5C               	goto	u1603
  3620     065B  07B1               	addwf	___flmul@grs+3,f
  3621     065C                     u1603:
  3622     065C                     l1568:
  3623     065C  0821               	movf	___flmul@b+1,w
  3624     065D  00F0               	movwf	__Umul8_16@multiplicand
  3625     065E  0826               	movf	___flmul@a+2,w
  3626     065F  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3627     0664  0871               	movf	?__Umul8_16+1,w
  3628     0665  1283               	bcf	3,5	;RP0=0, select bank0
  3629     0666  1303               	bcf	3,6	;RP1=0, select bank0
  3630     0667  00B9               	movwf	___flmul@temp+1
  3631     0668  0870               	movf	?__Umul8_16,w
  3632     0669  00B8               	movwf	___flmul@temp
  3633     066A  0838               	movf	___flmul@temp,w
  3634     066B  00A8               	movwf	??___flmul
  3635     066C  0839               	movf	___flmul@temp+1,w
  3636     066D  00A9               	movwf	??___flmul+1
  3637     066E  01AA               	clrf	??___flmul+2
  3638     066F  01AB               	clrf	??___flmul+3
  3639     0670  0828               	movf	??___flmul,w
  3640     0671  07B4               	addwf	___flmul@prod,f
  3641     0672  0829               	movf	??___flmul+1,w
  3642     0673  1103               	clrz
  3643     0674  1803               	skipnc
  3644     0675  3E01               	addlw	1
  3645     0676  1903               	skipnz
  3646     0677  2E79               	goto	u1611
  3647     0678  07B5               	addwf	___flmul@prod+1,f
  3648     0679                     u1611:
  3649     0679  082A               	movf	??___flmul+2,w
  3650     067A  1103               	clrz
  3651     067B  1803               	skipnc
  3652     067C  3E01               	addlw	1
  3653     067D  1903               	skipnz
  3654     067E  2E80               	goto	u1612
  3655     067F  07B6               	addwf	___flmul@prod+2,f
  3656     0680                     u1612:
  3657     0680  082B               	movf	??___flmul+3,w
  3658     0681  1103               	clrz
  3659     0682  1803               	skipnc
  3660     0683  3E01               	addlw	1
  3661     0684  1903               	skipnz
  3662     0685  2E87               	goto	u1613
  3663     0686  07B7               	addwf	___flmul@prod+3,f
  3664     0687                     u1613:
  3665     0687                     l1570:
  3666     0687  0822               	movf	___flmul@b+2,w
  3667     0688  00F0               	movwf	__Umul8_16@multiplicand
  3668     0689  0825               	movf	___flmul@a+1,w
  3669     068A  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3670     068F  0871               	movf	?__Umul8_16+1,w
  3671     0690  1283               	bcf	3,5	;RP0=0, select bank0
  3672     0691  1303               	bcf	3,6	;RP1=0, select bank0
  3673     0692  00B9               	movwf	___flmul@temp+1
  3674     0693  0870               	movf	?__Umul8_16,w
  3675     0694  00B8               	movwf	___flmul@temp
  3676     0695                     l1572:
  3677     0695  0838               	movf	___flmul@temp,w
  3678     0696  00A8               	movwf	??___flmul
  3679     0697  0839               	movf	___flmul@temp+1,w
  3680     0698  00A9               	movwf	??___flmul+1
  3681     0699  01AA               	clrf	??___flmul+2
  3682     069A  01AB               	clrf	??___flmul+3
  3683     069B  0828               	movf	??___flmul,w
  3684     069C  07B4               	addwf	___flmul@prod,f
  3685     069D  0829               	movf	??___flmul+1,w
  3686     069E  1103               	clrz
  3687     069F  1803               	skipnc
  3688     06A0  3E01               	addlw	1
  3689     06A1  1903               	skipnz
  3690     06A2  2EA4               	goto	u1621
  3691     06A3  07B5               	addwf	___flmul@prod+1,f
  3692     06A4                     u1621:
  3693     06A4  082A               	movf	??___flmul+2,w
  3694     06A5  1103               	clrz
  3695     06A6  1803               	skipnc
  3696     06A7  3E01               	addlw	1
  3697     06A8  1903               	skipnz
  3698     06A9  2EAB               	goto	u1622
  3699     06AA  07B6               	addwf	___flmul@prod+2,f
  3700     06AB                     u1622:
  3701     06AB  082B               	movf	??___flmul+3,w
  3702     06AC  1103               	clrz
  3703     06AD  1803               	skipnc
  3704     06AE  3E01               	addlw	1
  3705     06AF  1903               	skipnz
  3706     06B0  2EB2               	goto	u1623
  3707     06B1  07B7               	addwf	___flmul@prod+3,f
  3708     06B2                     u1623:
  3709     06B2  0822               	movf	___flmul@b+2,w
  3710     06B3  00F0               	movwf	__Umul8_16@multiplicand
  3711     06B4  0826               	movf	___flmul@a+2,w
  3712     06B5  120A  158A  25A3  120A  118A  	fcall	__Umul8_16
  3713     06BA  0871               	movf	?__Umul8_16+1,w
  3714     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3715     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3716     06BD  00B9               	movwf	___flmul@temp+1
  3717     06BE  0870               	movf	?__Umul8_16,w
  3718     06BF  00B8               	movwf	___flmul@temp
  3719     06C0                     l1574:
  3720     06C0  0838               	movf	___flmul@temp,w
  3721     06C1  00A8               	movwf	??___flmul
  3722     06C2  0839               	movf	___flmul@temp+1,w
  3723     06C3  00A9               	movwf	??___flmul+1
  3724     06C4  01AA               	clrf	??___flmul+2
  3725     06C5  01AB               	clrf	??___flmul+3
  3726     06C6  3008               	movlw	8
  3727     06C7                     u1635:
  3728     06C7  1003               	clrc
  3729     06C8  0DA8               	rlf	??___flmul,f
  3730     06C9  0DA9               	rlf	??___flmul+1,f
  3731     06CA  0DAA               	rlf	??___flmul+2,f
  3732     06CB  0DAB               	rlf	??___flmul+3,f
  3733     06CC                     u1630:
  3734     06CC  3EFF               	addlw	-1
  3735     06CD  1D03               	skipz
  3736     06CE  2EC7               	goto	u1635
  3737     06CF  0828               	movf	??___flmul,w
  3738     06D0  07B4               	addwf	___flmul@prod,f
  3739     06D1  0829               	movf	??___flmul+1,w
  3740     06D2  1103               	clrz
  3741     06D3  1803               	skipnc
  3742     06D4  3E01               	addlw	1
  3743     06D5  1903               	skipnz
  3744     06D6  2ED8               	goto	u1641
  3745     06D7  07B5               	addwf	___flmul@prod+1,f
  3746     06D8                     u1641:
  3747     06D8  082A               	movf	??___flmul+2,w
  3748     06D9  1103               	clrz
  3749     06DA  1803               	skipnc
  3750     06DB  3E01               	addlw	1
  3751     06DC  1903               	skipnz
  3752     06DD  2EDF               	goto	u1642
  3753     06DE  07B6               	addwf	___flmul@prod+2,f
  3754     06DF                     u1642:
  3755     06DF  082B               	movf	??___flmul+3,w
  3756     06E0  1103               	clrz
  3757     06E1  1803               	skipnc
  3758     06E2  3E01               	addlw	1
  3759     06E3  1903               	skipnz
  3760     06E4  2EE6               	goto	u1643
  3761     06E5  07B7               	addwf	___flmul@prod+3,f
  3762     06E6                     u1643:
  3763     06E6                     l1576:
  3764     06E6  082E               	movf	___flmul@grs,w
  3765     06E7  00A8               	movwf	??___flmul
  3766     06E8  082F               	movf	___flmul@grs+1,w
  3767     06E9  00A9               	movwf	??___flmul+1
  3768     06EA  0830               	movf	___flmul@grs+2,w
  3769     06EB  00AA               	movwf	??___flmul+2
  3770     06EC  0831               	movf	___flmul@grs+3,w
  3771     06ED  00AB               	movwf	??___flmul+3
  3772     06EE  3018               	movlw	24
  3773     06EF                     u1655:
  3774     06EF  1003               	clrc
  3775     06F0  0CAB               	rrf	??___flmul+3,f
  3776     06F1  0CAA               	rrf	??___flmul+2,f
  3777     06F2  0CA9               	rrf	??___flmul+1,f
  3778     06F3  0CA8               	rrf	??___flmul,f
  3779     06F4                     u1650:
  3780     06F4  3EFF               	addlw	-1
  3781     06F5  1D03               	skipz
  3782     06F6  2EEF               	goto	u1655
  3783     06F7  0828               	movf	??___flmul,w
  3784     06F8  07B4               	addwf	___flmul@prod,f
  3785     06F9  0829               	movf	??___flmul+1,w
  3786     06FA  1103               	clrz
  3787     06FB  1803               	skipnc
  3788     06FC  3E01               	addlw	1
  3789     06FD  1903               	skipnz
  3790     06FE  2F00               	goto	u1661
  3791     06FF  07B5               	addwf	___flmul@prod+1,f
  3792     0700                     u1661:
  3793     0700  082A               	movf	??___flmul+2,w
  3794     0701  1103               	clrz
  3795     0702  1803               	skipnc
  3796     0703  3E01               	addlw	1
  3797     0704  1903               	skipnz
  3798     0705  2F07               	goto	u1662
  3799     0706  07B6               	addwf	___flmul@prod+2,f
  3800     0707                     u1662:
  3801     0707  082B               	movf	??___flmul+3,w
  3802     0708  1103               	clrz
  3803     0709  1803               	skipnc
  3804     070A  3E01               	addlw	1
  3805     070B  1903               	skipnz
  3806     070C  2F0E               	goto	u1663
  3807     070D  07B7               	addwf	___flmul@prod+3,f
  3808     070E                     u1663:
  3809     070E                     l1578:
  3810     070E  3008               	movlw	8
  3811     070F  00A8               	movwf	??___flmul
  3812     0710                     u1675:
  3813     0710  1003               	clrc
  3814     0711  0DAE               	rlf	___flmul@grs,f
  3815     0712  0DAF               	rlf	___flmul@grs+1,f
  3816     0713  0DB0               	rlf	___flmul@grs+2,f
  3817     0714  0DB1               	rlf	___flmul@grs+3,f
  3818     0715  0BA8               	decfsz	??___flmul,f
  3819     0716  2F10               	goto	u1675
  3820     0717                     l1580:
  3821     0717  0833               	movf	___flmul@bexp,w
  3822     0718  0732               	addwf	___flmul@aexp,w
  3823     0719  00A8               	movwf	??___flmul
  3824     071A  01A9               	clrf	??___flmul+1
  3825     071B  0DA9               	rlf	??___flmul+1,f
  3826     071C  0828               	movf	??___flmul,w
  3827     071D  3E82               	addlw	130
  3828     071E  00B8               	movwf	___flmul@temp
  3829     071F  0829               	movf	??___flmul+1,w
  3830     0720  1803               	skipnc
  3831     0721  3E01               	addlw	1
  3832     0722  3EFF               	addlw	255
  3833     0723  00B9               	movwf	___flmul@temp+1
  3834     0724  2F42               	goto	l1592
  3835     0725                     l1582:
  3836     0725  3001               	movlw	1
  3837     0726  00A8               	movwf	??___flmul
  3838     0727                     u1685:
  3839     0727  1003               	clrc
  3840     0728  0DB4               	rlf	___flmul@prod,f
  3841     0729  0DB5               	rlf	___flmul@prod+1,f
  3842     072A  0DB6               	rlf	___flmul@prod+2,f
  3843     072B  0DB7               	rlf	___flmul@prod+3,f
  3844     072C  0BA8               	decfsz	??___flmul,f
  3845     072D  2F27               	goto	u1685
  3846     072E                     l1584:
  3847     072E  1FB1               	btfss	___flmul@grs+3,7
  3848     072F  2F31               	goto	u1691
  3849     0730  2F32               	goto	u1690
  3850     0731                     u1691:
  3851     0731  2F33               	goto	l1588
  3852     0732                     u1690:
  3853     0732                     l1586:
  3854     0732  1434               	bsf	___flmul@prod,0
  3855     0733                     l1588:
  3856     0733  3001               	movlw	1
  3857     0734  00A8               	movwf	??___flmul
  3858     0735                     u1705:
  3859     0735  1003               	clrc
  3860     0736  0DAE               	rlf	___flmul@grs,f
  3861     0737  0DAF               	rlf	___flmul@grs+1,f
  3862     0738  0DB0               	rlf	___flmul@grs+2,f
  3863     0739  0DB1               	rlf	___flmul@grs+3,f
  3864     073A  0BA8               	decfsz	??___flmul,f
  3865     073B  2F35               	goto	u1705
  3866     073C                     l1590:
  3867     073C  30FF               	movlw	255
  3868     073D  07B8               	addwf	___flmul@temp,f
  3869     073E  1803               	skipnc
  3870     073F  0AB9               	incf	___flmul@temp+1,f
  3871     0740  30FF               	movlw	255
  3872     0741  07B9               	addwf	___flmul@temp+1,f
  3873     0742                     l1592:
  3874     0742  1FB6               	btfss	___flmul@prod+2,7
  3875     0743  2F45               	goto	u1711
  3876     0744  2F46               	goto	u1710
  3877     0745                     u1711:
  3878     0745  2F25               	goto	l1582
  3879     0746                     u1710:
  3880     0746                     l1594:
  3881     0746  01B2               	clrf	___flmul@aexp
  3882     0747                     l1596:
  3883     0747  1FB1               	btfss	___flmul@grs+3,7
  3884     0748  2F4A               	goto	u1721
  3885     0749  2F4B               	goto	u1720
  3886     074A                     u1721:
  3887     074A  2F67               	goto	l1604
  3888     074B                     u1720:
  3889     074B                     l1598:
  3890     074B  30FF               	movlw	255
  3891     074C  052E               	andwf	___flmul@grs,w
  3892     074D  00A8               	movwf	??___flmul
  3893     074E  30FF               	movlw	255
  3894     074F  052F               	andwf	___flmul@grs+1,w
  3895     0750  00A9               	movwf	??___flmul+1
  3896     0751  30FF               	movlw	255
  3897     0752  0530               	andwf	___flmul@grs+2,w
  3898     0753  00AA               	movwf	??___flmul+2
  3899     0754  307F               	movlw	127
  3900     0755  0531               	andwf	___flmul@grs+3,w
  3901     0756  00AB               	movwf	??___flmul+3
  3902     0757  082B               	movf	??___flmul+3,w
  3903     0758  042A               	iorwf	??___flmul+2,w
  3904     0759  0429               	iorwf	??___flmul+1,w
  3905     075A  0428               	iorwf	??___flmul,w
  3906     075B  1903               	skipnz
  3907     075C  2F5E               	goto	u1731
  3908     075D  2F5F               	goto	u1730
  3909     075E                     u1731:
  3910     075E  2F62               	goto	l679
  3911     075F                     u1730:
  3912     075F                     l1600:
  3913     075F  01B2               	clrf	___flmul@aexp
  3914     0760  0AB2               	incf	___flmul@aexp,f
  3915     0761  2F67               	goto	l1604
  3916     0762                     l679:
  3917     0762  1C34               	btfss	___flmul@prod,0
  3918     0763  2F65               	goto	u1741
  3919     0764  2F66               	goto	u1740
  3920     0765                     u1741:
  3921     0765  2F67               	goto	l1604
  3922     0766                     u1740:
  3923     0766  2F5F               	goto	l1600
  3924     0767                     l1604:
  3925     0767  0832               	movf	___flmul@aexp,w
  3926     0768  1903               	btfsc	3,2
  3927     0769  2F6B               	goto	u1751
  3928     076A  2F6C               	goto	u1750
  3929     076B                     u1751:
  3930     076B  2F9D               	goto	l1614
  3931     076C                     u1750:
  3932     076C                     l1606:
  3933     076C  3001               	movlw	1
  3934     076D  07B4               	addwf	___flmul@prod,f
  3935     076E  3000               	movlw	0
  3936     076F  1803               	skipnc
  3937     0770  3001               	movlw	1
  3938     0771  07B5               	addwf	___flmul@prod+1,f
  3939     0772  3000               	movlw	0
  3940     0773  1803               	skipnc
  3941     0774  3001               	movlw	1
  3942     0775  07B6               	addwf	___flmul@prod+2,f
  3943     0776  3000               	movlw	0
  3944     0777  1803               	skipnc
  3945     0778  3001               	movlw	1
  3946     0779  07B7               	addwf	___flmul@prod+3,f
  3947     077A                     l1608:
  3948     077A  1C37               	btfss	___flmul@prod+3,0
  3949     077B  2F7D               	goto	u1761
  3950     077C  2F7E               	goto	u1760
  3951     077D                     u1761:
  3952     077D  2F9D               	goto	l1614
  3953     077E                     u1760:
  3954     077E                     l1610:
  3955     077E  0834               	movf	___flmul@prod,w
  3956     077F  00A8               	movwf	??___flmul
  3957     0780  0835               	movf	___flmul@prod+1,w
  3958     0781  00A9               	movwf	??___flmul+1
  3959     0782  0836               	movf	___flmul@prod+2,w
  3960     0783  00AA               	movwf	??___flmul+2
  3961     0784  0837               	movf	___flmul@prod+3,w
  3962     0785  00AB               	movwf	??___flmul+3
  3963     0786  3001               	movlw	1
  3964     0787  00AC               	movwf	??___flmul+4
  3965     0788                     u1775:
  3966     0788  0D2B               	rlf	??___flmul+3,w
  3967     0789  0CAB               	rrf	??___flmul+3,f
  3968     078A  0CAA               	rrf	??___flmul+2,f
  3969     078B  0CA9               	rrf	??___flmul+1,f
  3970     078C  0CA8               	rrf	??___flmul,f
  3971     078D                     u1770:
  3972     078D  0BAC               	decfsz	??___flmul+4,f
  3973     078E  2F88               	goto	u1775
  3974     078F  082B               	movf	??___flmul+3,w
  3975     0790  00B7               	movwf	___flmul@prod+3
  3976     0791  082A               	movf	??___flmul+2,w
  3977     0792  00B6               	movwf	___flmul@prod+2
  3978     0793  0829               	movf	??___flmul+1,w
  3979     0794  00B5               	movwf	___flmul@prod+1
  3980     0795  0828               	movf	??___flmul,w
  3981     0796  00B4               	movwf	___flmul@prod
  3982     0797                     l1612:
  3983     0797  3001               	movlw	1
  3984     0798  07B8               	addwf	___flmul@temp,f
  3985     0799  1803               	skipnc
  3986     079A  0AB9               	incf	___flmul@temp+1,f
  3987     079B  3000               	movlw	0
  3988     079C  07B9               	addwf	___flmul@temp+1,f
  3989     079D                     l1614:
  3990     079D  0839               	movf	___flmul@temp+1,w
  3991     079E  3A80               	xorlw	128
  3992     079F  00FF               	movwf	btemp+1
  3993     07A0  3080               	movlw	128
  3994     07A1  027F               	subwf	btemp+1,w
  3995     07A2  1D03               	skipz
  3996     07A3  2FA6               	goto	u1785
  3997     07A4  30FF               	movlw	255
  3998     07A5  0238               	subwf	___flmul@temp,w
  3999     07A6                     u1785:
  4000     07A6  1C03               	skipc
  4001     07A7  2FA9               	goto	u1781
  4002     07A8  2FAA               	goto	u1780
  4003     07A9                     u1781:
  4004     07A9  2FB5               	goto	l1618
  4005     07AA                     u1780:
  4006     07AA                     l1616:
  4007     07AA  307F               	movlw	127
  4008     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4009     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  4010     07AD  00B7               	movwf	___flmul@prod+3
  4011     07AE  3080               	movlw	128
  4012     07AF  00B6               	movwf	___flmul@prod+2
  4013     07B0  3000               	movlw	0
  4014     07B1  00B5               	movwf	___flmul@prod+1
  4015     07B2  3000               	movlw	0
  4016     07B3  00B4               	movwf	___flmul@prod
  4017     07B4  2FE6               	goto	l685
  4018     07B5                     l1618:
  4019     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4020     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4021     07B7  0839               	movf	___flmul@temp+1,w
  4022     07B8  3A80               	xorlw	128
  4023     07B9  00FF               	movwf	btemp+1
  4024     07BA  3080               	movlw	128
  4025     07BB  027F               	subwf	btemp+1,w
  4026     07BC  1D03               	skipz
  4027     07BD  2FC0               	goto	u1795
  4028     07BE  3001               	movlw	1
  4029     07BF  0238               	subwf	___flmul@temp,w
  4030     07C0                     u1795:
  4031     07C0  1803               	skipnc
  4032     07C1  2FC3               	goto	u1791
  4033     07C2  2FC4               	goto	u1790
  4034     07C3                     u1791:
  4035     07C3  2FD0               	goto	l1624
  4036     07C4                     u1790:
  4037     07C4                     l1620:
  4038     07C4  3000               	movlw	0
  4039     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4040     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4041     07C7  00B7               	movwf	___flmul@prod+3
  4042     07C8  3000               	movlw	0
  4043     07C9  00B6               	movwf	___flmul@prod+2
  4044     07CA  3000               	movlw	0
  4045     07CB  00B5               	movwf	___flmul@prod+1
  4046     07CC  3000               	movlw	0
  4047     07CD  00B4               	movwf	___flmul@prod
  4048     07CE                     l1622:
  4049     07CE  01AD               	clrf	___flmul@sign
  4050     07CF  2FE6               	goto	l685
  4051     07D0                     l1624:
  4052     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  4053     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  4054     07D2  0838               	movf	___flmul@temp,w
  4055     07D3  00B3               	movwf	___flmul@bexp
  4056     07D4  30FF               	movlw	255
  4057     07D5  05B4               	andwf	___flmul@prod,f
  4058     07D6  30FF               	movlw	255
  4059     07D7  05B5               	andwf	___flmul@prod+1,f
  4060     07D8  307F               	movlw	127
  4061     07D9  05B6               	andwf	___flmul@prod+2,f
  4062     07DA  3000               	movlw	0
  4063     07DB  05B7               	andwf	___flmul@prod+3,f
  4064     07DC                     l1626:
  4065     07DC  1C33               	btfss	___flmul@bexp,0
  4066     07DD  2FDF               	goto	u1801
  4067     07DE  2FE0               	goto	u1800
  4068     07DF                     u1801:
  4069     07DF  2FE1               	goto	l1630
  4070     07E0                     u1800:
  4071     07E0                     l1628:
  4072     07E0  17B6               	bsf	___flmul@prod+2,7
  4073     07E1                     l1630:
  4074     07E1  0833               	movf	___flmul@bexp,w
  4075     07E2  00A8               	movwf	??___flmul
  4076     07E3  1003               	clrc
  4077     07E4  0C28               	rrf	??___flmul,w
  4078     07E5  00B7               	movwf	___flmul@prod+3
  4079     07E6                     l685:
  4080     07E6  082D               	movf	___flmul@sign,w
  4081     07E7  00A8               	movwf	??___flmul
  4082     07E8  0828               	movf	??___flmul,w
  4083     07E9  04B7               	iorwf	___flmul@prod+3,f
  4084     07EA                     l1632:
  4085     07EA  0837               	movf	___flmul@prod+3,w
  4086     07EB  00A3               	movwf	?___flmul+3
  4087     07EC  0836               	movf	___flmul@prod+2,w
  4088     07ED  00A2               	movwf	?___flmul+2
  4089     07EE  0835               	movf	___flmul@prod+1,w
  4090     07EF  00A1               	movwf	?___flmul+1
  4091     07F0  0834               	movf	___flmul@prod,w
  4092     07F1  00A0               	movwf	?___flmul
  4093     07F2                     l673:
  4094     07F2  0008               	return
  4095     07F3                     __end_of___flmul:
  4096                           
  4097                           	psect	text11
  4098     0DA3                     __ptext11:	
  4099 ;; *************** function __Umul8_16 *****************
  4100 ;; Defined at:
  4101 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  multiplier      1    wreg     unsigned char 
  4104 ;;  multiplicand    1    0[COMMON] unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  multiplier      1    8[COMMON] unsigned char 
  4107 ;;  word_mpld       2    6[COMMON] unsigned int 
  4108 ;;  product         2    4[COMMON] unsigned int 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  2    0[COMMON] unsigned int 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         2       0       0       0       0
  4119 ;;      Locals:         5       0       0       0       0
  4120 ;;      Temps:          2       0       0       0       0
  4121 ;;      Totals:         9       0       0       0       0
  4122 ;;Total ram usage:        9 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		___flmul
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131     0DA3                     __Umul8_16:	
  4132                           ;psect for function __Umul8_16
  4133                           
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4137                           ;__Umul8_16@multiplier stored from wreg
  4138     0DA3  00F8               	movwf	__Umul8_16@multiplier
  4139     0DA4                     l1372:
  4140     0DA4  01F4               	clrf	__Umul8_16@product
  4141     0DA5  01F5               	clrf	__Umul8_16@product+1
  4142     0DA6                     l1374:
  4143     0DA6  0870               	movf	__Umul8_16@multiplicand,w
  4144     0DA7  00F2               	movwf	??__Umul8_16
  4145     0DA8  01F3               	clrf	??__Umul8_16+1
  4146     0DA9  0872               	movf	??__Umul8_16,w
  4147     0DAA  00F6               	movwf	__Umul8_16@word_mpld
  4148     0DAB  0873               	movf	??__Umul8_16+1,w
  4149     0DAC  00F7               	movwf	__Umul8_16@word_mpld+1
  4150     0DAD                     l1376:
  4151     0DAD  1C78               	btfss	__Umul8_16@multiplier,0
  4152     0DAE  2DB0               	goto	u1171
  4153     0DAF  2DB1               	goto	u1170
  4154     0DB0                     u1171:
  4155     0DB0  2DB7               	goto	l692
  4156     0DB1                     u1170:
  4157     0DB1                     l1378:
  4158     0DB1  0876               	movf	__Umul8_16@word_mpld,w
  4159     0DB2  07F4               	addwf	__Umul8_16@product,f
  4160     0DB3  1803               	skipnc
  4161     0DB4  0AF5               	incf	__Umul8_16@product+1,f
  4162     0DB5  0877               	movf	__Umul8_16@word_mpld+1,w
  4163     0DB6  07F5               	addwf	__Umul8_16@product+1,f
  4164     0DB7                     l692:
  4165     0DB7  3001               	movlw	1
  4166     0DB8                     u1185:
  4167     0DB8  1003               	clrc
  4168     0DB9  0DF6               	rlf	__Umul8_16@word_mpld,f
  4169     0DBA  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4170     0DBB  3EFF               	addlw	-1
  4171     0DBC  1D03               	skipz
  4172     0DBD  2DB8               	goto	u1185
  4173     0DBE  1003               	clrc
  4174     0DBF  0CF8               	rrf	__Umul8_16@multiplier,f
  4175     0DC0                     l1380:
  4176     0DC0  0878               	movf	__Umul8_16@multiplier,w
  4177     0DC1  1D03               	btfss	3,2
  4178     0DC2  2DC4               	goto	u1191
  4179     0DC3  2DC5               	goto	u1190
  4180     0DC4                     u1191:
  4181     0DC4  2DAD               	goto	l1376
  4182     0DC5                     u1190:
  4183     0DC5                     l1382:
  4184     0DC5  0875               	movf	__Umul8_16@product+1,w
  4185     0DC6  00F1               	movwf	?__Umul8_16+1
  4186     0DC7  0874               	movf	__Umul8_16@product,w
  4187     0DC8  00F0               	movwf	?__Umul8_16
  4188     0DC9                     l694:
  4189     0DC9  0008               	return
  4190     0DCA                     __end_of__Umul8_16:
  4191                           
  4192                           	psect	text12
  4193     0D58                     __ptext12:	
  4194 ;; *************** function _config_TCS230 *****************
  4195 ;; Defined at:
  4196 ;;		line 8 in file "TCS230.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223     0D58                     _config_TCS230:	
  4224                           ;psect for function _config_TCS230
  4225                           
  4226     0D58                     l1702:	
  4227                           ;incstack = 0
  4228                           ; Regs used in _config_TCS230: [wreg+status,2+status,0]
  4229                           
  4230                           
  4231                           ;TCS230.c: 9:     T1CONbits.TMR1CS = 0;
  4232     0D58  1283               	bcf	3,5	;RP0=0, select bank0
  4233     0D59  1303               	bcf	3,6	;RP1=0, select bank0
  4234     0D5A  1090               	bcf	16,1	;volatile
  4235     0D5B                     l1704:
  4236                           
  4237                           ;TCS230.c: 10:     T1CONbits.T1CKPS = 0b01;
  4238     0D5B  0810               	movf	16,w	;volatile
  4239     0D5C  39CF               	andlw	-49
  4240     0D5D  3810               	iorlw	16
  4241     0D5E  0090               	movwf	16	;volatile
  4242     0D5F                     l1706:
  4243                           
  4244                           ;TCS230.c: 11:     T1CONbits.nT1SYNC = 1;
  4245     0D5F  1510               	bsf	16,2	;volatile
  4246     0D60                     l1708:
  4247                           
  4248                           ;TCS230.c: 12:     T1CONbits.TMR1ON = 0;
  4249     0D60  1010               	bcf	16,0	;volatile
  4250     0D61                     l133:
  4251     0D61  0008               	return
  4252     0D62                     __end_of_config_TCS230:
  4253                           
  4254                           	psect	text13
  4255     0DFF                     __ptext13:	
  4256 ;; *************** function _Lcd_Write_String *****************
  4257 ;; Defined at:
  4258 ;;		line 98 in file "LCD.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  a               2    5[COMMON] PTR unsigned char 
  4261 ;;		 -> verde(4), azul(4), rojo(4), STR_3(5), 
  4262 ;;		 -> STR_2(5), STR_1(7), 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  i               2   10[COMMON] int 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         2       0       0       0       0
  4275 ;;      Locals:         2       0       0       0       0
  4276 ;;      Temps:          3       0       0       0       0
  4277 ;;      Totals:         7       0       0       0       0
  4278 ;;Total ram usage:        7 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 2
  4281 ;; This function calls:
  4282 ;;		_Lcd_Write_Char
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288     0DFF                     _Lcd_Write_String:	
  4289                           ;psect for function _Lcd_Write_String
  4290                           
  4291     0DFF                     l1732:	
  4292                           ;incstack = 0
  4293                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4294                           
  4295                           
  4296                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4297     0DFF  01FA               	clrf	Lcd_Write_String@i
  4298     0E00  01FB               	clrf	Lcd_Write_String@i+1
  4299     0E01  2E24               	goto	l1738
  4300     0E02                     l1734:
  4301                           
  4302                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4303     0E02  087A               	movf	Lcd_Write_String@i,w
  4304     0E03  0775               	addwf	Lcd_Write_String@a,w
  4305     0E04  00F8               	movwf	??_Lcd_Write_String+1
  4306     0E05  0876               	movf	Lcd_Write_String@a+1,w
  4307     0E06  00F7               	movwf	??_Lcd_Write_String
  4308     0E07  1803               	skipnc
  4309     0E08  0AF7               	incf	??_Lcd_Write_String,f
  4310     0E09  1FFA               	btfss	Lcd_Write_String@i,7
  4311     0E0A  2E0C               	goto	u1990
  4312     0E0B  03F7               	decf	??_Lcd_Write_String,f
  4313     0E0C                     u1990:
  4314     0E0C  0877               	movf	??_Lcd_Write_String,w
  4315     0E0D  00F9               	movwf	??_Lcd_Write_String+2
  4316     0E0E  0879               	movf	??_Lcd_Write_String+2,w
  4317     0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  4318     0E10  1303               	bcf	3,6	;RP1=0, select bank0
  4319     0E11  00FF               	movwf	btemp+1
  4320     0E12  0878               	movf	??_Lcd_Write_String+1,w
  4321     0E13  0084               	movwf	4
  4322     0E14  120A  158A  2000  120A  158A  	fcall	stringtab
  4323     0E19  120A  158A  25CA  120A  158A  	fcall	_Lcd_Write_Char
  4324     0E1E                     l1736:
  4325     0E1E  3001               	movlw	1
  4326     0E1F  07FA               	addwf	Lcd_Write_String@i,f
  4327     0E20  1803               	skipnc
  4328     0E21  0AFB               	incf	Lcd_Write_String@i+1,f
  4329     0E22  3000               	movlw	0
  4330     0E23  07FB               	addwf	Lcd_Write_String@i+1,f
  4331     0E24                     l1738:
  4332     0E24  087A               	movf	Lcd_Write_String@i,w
  4333     0E25  0775               	addwf	Lcd_Write_String@a,w
  4334     0E26  00F8               	movwf	??_Lcd_Write_String+1
  4335     0E27  0876               	movf	Lcd_Write_String@a+1,w
  4336     0E28  00F7               	movwf	??_Lcd_Write_String
  4337     0E29  1803               	skipnc
  4338     0E2A  0AF7               	incf	??_Lcd_Write_String,f
  4339     0E2B  1FFA               	btfss	Lcd_Write_String@i,7
  4340     0E2C  2E2E               	goto	u2000
  4341     0E2D  03F7               	decf	??_Lcd_Write_String,f
  4342     0E2E                     u2000:
  4343     0E2E  0877               	movf	??_Lcd_Write_String,w
  4344     0E2F  00F9               	movwf	??_Lcd_Write_String+2
  4345     0E30  0879               	movf	??_Lcd_Write_String+2,w
  4346     0E31  1283               	bcf	3,5	;RP0=0, select bank0
  4347     0E32  1303               	bcf	3,6	;RP1=0, select bank0
  4348     0E33  00FF               	movwf	btemp+1
  4349     0E34  0878               	movf	??_Lcd_Write_String+1,w
  4350     0E35  0084               	movwf	4
  4351     0E36  120A  158A  2000  120A  158A  	fcall	stringtab
  4352     0E3B  3A00               	xorlw	0
  4353     0E3C  1D03               	skipz
  4354     0E3D  2E3F               	goto	u2011
  4355     0E3E  2E40               	goto	u2010
  4356     0E3F                     u2011:
  4357     0E3F  2E02               	goto	l1734
  4358     0E40                     u2010:
  4359     0E40                     l112:
  4360     0E40  0008               	return
  4361     0E41                     __end_of_Lcd_Write_String:
  4362                           
  4363                           	psect	text14
  4364     0DCA                     __ptext14:	
  4365 ;; *************** function _Lcd_Write_Char *****************
  4366 ;; Defined at:
  4367 ;;		line 83 in file "LCD.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  a               1    wreg     unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  a               1    4[COMMON] unsigned char 
  4372 ;;  y               1    3[COMMON] unsigned char 
  4373 ;;  temp            1    2[COMMON] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4383 ;;      Params:         0       0       0       0       0
  4384 ;;      Locals:         3       0       0       0       0
  4385 ;;      Temps:          1       0       0       0       0
  4386 ;;      Totals:         4       0       0       0       0
  4387 ;;Total ram usage:        4 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 1
  4390 ;; This function calls:
  4391 ;;		_Lcd_Port
  4392 ;; This function is called by:
  4393 ;;		_Lcd_Write_String
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397     0DCA                     _Lcd_Write_Char:	
  4398                           ;psect for function _Lcd_Write_Char
  4399                           
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4403                           ;Lcd_Write_Char@a stored from wreg
  4404     0DCA  00F4               	movwf	Lcd_Write_Char@a
  4405     0DCB                     l1396:
  4406                           
  4407                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4408     0DCB  0874               	movf	Lcd_Write_Char@a,w
  4409     0DCC  390F               	andlw	15
  4410     0DCD  00F2               	movwf	Lcd_Write_Char@temp
  4411                           
  4412                           ;LCD.c: 86:     y = a & 0xF0;
  4413     0DCE  0874               	movf	Lcd_Write_Char@a,w
  4414     0DCF  39F0               	andlw	240
  4415     0DD0  00F3               	movwf	Lcd_Write_Char@y
  4416     0DD1                     l1398:
  4417                           
  4418                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4419     0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  4420     0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  4421     0DD3  1508               	bsf	8,2	;volatile
  4422     0DD4                     l1400:
  4423                           
  4424                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4425     0DD4  0873               	movf	Lcd_Write_Char@y,w
  4426     0DD5  00F1               	movwf	??_Lcd_Write_Char
  4427     0DD6  3004               	movlw	4
  4428     0DD7                     u1205:
  4429     0DD7  1003               	clrc
  4430     0DD8  0CF1               	rrf	??_Lcd_Write_Char,f
  4431     0DD9  3EFF               	addlw	-1
  4432     0DDA  1D03               	skipz
  4433     0DDB  2DD7               	goto	u1205
  4434     0DDC  0871               	movf	??_Lcd_Write_Char,w
  4435     0DDD  120A  158A  2581  120A  158A  	fcall	_Lcd_Port
  4436     0DE2                     l1402:
  4437                           
  4438                           ;LCD.c: 89:     RD3 = 1;
  4439     0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4440     0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  4441     0DE4  1588               	bsf	8,3	;volatile
  4442     0DE5                     l1404:
  4443                           
  4444                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4445     0DE5  301A               	movlw	26
  4446     0DE6  00F1               	movwf	??_Lcd_Write_Char
  4447     0DE7                     u2297:
  4448     0DE7  0BF1               	decfsz	??_Lcd_Write_Char,f
  4449     0DE8  2DE7               	goto	u2297
  4450     0DE9  0000               	nop
  4451     0DEA                     l1406:
  4452                           
  4453                           ;LCD.c: 91:     RD3 = 0;
  4454     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4455     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4456     0DEC  1188               	bcf	8,3	;volatile
  4457     0DED                     l1408:
  4458                           
  4459                           ;LCD.c: 92:     Lcd_Port(temp);
  4460     0DED  0872               	movf	Lcd_Write_Char@temp,w
  4461     0DEE  120A  158A  2581  120A  158A  	fcall	_Lcd_Port
  4462     0DF3                     l1410:
  4463                           
  4464                           ;LCD.c: 93:     RD3 = 1;
  4465     0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  4466     0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  4467     0DF5  1588               	bsf	8,3	;volatile
  4468     0DF6                     l1412:
  4469                           
  4470                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4471     0DF6  301A               	movlw	26
  4472     0DF7  00F1               	movwf	??_Lcd_Write_Char
  4473     0DF8                     u2307:
  4474     0DF8  0BF1               	decfsz	??_Lcd_Write_Char,f
  4475     0DF9  2DF8               	goto	u2307
  4476     0DFA  0000               	nop
  4477     0DFB                     l1414:
  4478                           
  4479                           ;LCD.c: 95:     RD3 = 0;
  4480     0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  4481     0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  4482     0DFD  1188               	bcf	8,3	;volatile
  4483     0DFE                     l106:
  4484     0DFE  0008               	return
  4485     0DFF                     __end_of_Lcd_Write_Char:
  4486                           
  4487                           	psect	text15
  4488     0E41                     __ptext15:	
  4489 ;; *************** function _Lcd_Set_Cursor *****************
  4490 ;; Defined at:
  4491 ;;		line 48 in file "LCD.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  a               1    wreg     unsigned char 
  4494 ;;  b               1    4[COMMON] unsigned char 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  a               1    6[COMMON] unsigned char 
  4497 ;;  temp            1    9[COMMON] unsigned char 
  4498 ;;  y               1    8[COMMON] unsigned char 
  4499 ;;  z               1    7[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         1       0       0       0       0
  4510 ;;      Locals:         4       0       0       0       0
  4511 ;;      Temps:          1       0       0       0       0
  4512 ;;      Totals:         6       0       0       0       0
  4513 ;;Total ram usage:        6 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 2
  4516 ;; This function calls:
  4517 ;;		_Lcd_Cmd
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     0E41                     _Lcd_Set_Cursor:	
  4524                           ;psect for function _Lcd_Set_Cursor
  4525                           
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4529                           ;Lcd_Set_Cursor@a stored from wreg
  4530     0E41  00F6               	movwf	Lcd_Set_Cursor@a
  4531     0E42                     l1712:
  4532                           
  4533                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4534     0E42  0376               	decf	Lcd_Set_Cursor@a,w
  4535     0E43  1D03               	btfss	3,2
  4536     0E44  2E46               	goto	u1951
  4537     0E45  2E47               	goto	u1950
  4538     0E46                     u1951:
  4539     0E46  2E64               	goto	l1722
  4540     0E47                     u1950:
  4541     0E47                     l1714:
  4542                           
  4543                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4544     0E47  0874               	movf	Lcd_Set_Cursor@b,w
  4545     0E48  3E7F               	addlw	127
  4546     0E49  00F9               	movwf	Lcd_Set_Cursor@temp
  4547                           
  4548                           ;LCD.c: 52:         z = temp >> 4;
  4549     0E4A  0879               	movf	Lcd_Set_Cursor@temp,w
  4550     0E4B  00F5               	movwf	??_Lcd_Set_Cursor
  4551     0E4C  3004               	movlw	4
  4552     0E4D                     u1965:
  4553     0E4D  1003               	clrc
  4554     0E4E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4555     0E4F  3EFF               	addlw	-1
  4556     0E50  1D03               	skipz
  4557     0E51  2E4D               	goto	u1965
  4558     0E52  0875               	movf	??_Lcd_Set_Cursor,w
  4559     0E53  00F7               	movwf	Lcd_Set_Cursor@z
  4560     0E54                     l1716:
  4561                           
  4562                           ;LCD.c: 53:         y = temp & 0x0F;
  4563     0E54  0879               	movf	Lcd_Set_Cursor@temp,w
  4564     0E55  390F               	andlw	15
  4565     0E56  00F8               	movwf	Lcd_Set_Cursor@y
  4566     0E57                     l1718:
  4567                           
  4568                           ;LCD.c: 54:         Lcd_Cmd(z);
  4569     0E57  0877               	movf	Lcd_Set_Cursor@z,w
  4570     0E58  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4571     0E5D                     l1720:
  4572                           
  4573                           ;LCD.c: 55:         Lcd_Cmd(y);
  4574     0E5D  0878               	movf	Lcd_Set_Cursor@y,w
  4575     0E5E  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4576                           
  4577                           ;LCD.c: 56:     } else if (a == 2) {
  4578     0E63  2E86               	goto	l100
  4579     0E64                     l1722:
  4580     0E64  3002               	movlw	2
  4581     0E65  0676               	xorwf	Lcd_Set_Cursor@a,w
  4582     0E66  1D03               	btfss	3,2
  4583     0E67  2E69               	goto	u1971
  4584     0E68  2E6A               	goto	u1970
  4585     0E69                     u1971:
  4586     0E69  2E86               	goto	l100
  4587     0E6A                     u1970:
  4588     0E6A                     l1724:
  4589                           
  4590                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4591     0E6A  0874               	movf	Lcd_Set_Cursor@b,w
  4592     0E6B  3EBF               	addlw	191
  4593     0E6C  00F9               	movwf	Lcd_Set_Cursor@temp
  4594                           
  4595                           ;LCD.c: 58:         z = temp >> 4;
  4596     0E6D  0879               	movf	Lcd_Set_Cursor@temp,w
  4597     0E6E  00F5               	movwf	??_Lcd_Set_Cursor
  4598     0E6F  3004               	movlw	4
  4599     0E70                     u1985:
  4600     0E70  1003               	clrc
  4601     0E71  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4602     0E72  3EFF               	addlw	-1
  4603     0E73  1D03               	skipz
  4604     0E74  2E70               	goto	u1985
  4605     0E75  0875               	movf	??_Lcd_Set_Cursor,w
  4606     0E76  00F7               	movwf	Lcd_Set_Cursor@z
  4607     0E77                     l1726:
  4608                           
  4609                           ;LCD.c: 59:         y = temp & 0x0F;
  4610     0E77  0879               	movf	Lcd_Set_Cursor@temp,w
  4611     0E78  390F               	andlw	15
  4612     0E79  00F8               	movwf	Lcd_Set_Cursor@y
  4613     0E7A                     l1728:
  4614                           
  4615                           ;LCD.c: 60:         Lcd_Cmd(z);
  4616     0E7A  0877               	movf	Lcd_Set_Cursor@z,w
  4617     0E7B  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4618     0E80                     l1730:
  4619                           
  4620                           ;LCD.c: 61:         Lcd_Cmd(y);
  4621     0E80  0878               	movf	Lcd_Set_Cursor@y,w
  4622     0E81  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4623     0E86                     l100:
  4624     0E86  0008               	return
  4625     0E87                     __end_of_Lcd_Set_Cursor:
  4626                           
  4627                           	psect	text16
  4628     0EDD                     __ptext16:	
  4629 ;; *************** function _Lcd_Init *****************
  4630 ;; Defined at:
  4631 ;;		line 65 in file "LCD.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4645 ;;      Params:         0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0
  4647 ;;      Temps:          2       0       0       0       0
  4648 ;;      Totals:         2       0       0       0       0
  4649 ;;Total ram usage:        2 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 2
  4652 ;; This function calls:
  4653 ;;		_Lcd_Cmd
  4654 ;;		_Lcd_Port
  4655 ;; This function is called by:
  4656 ;;		_main
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660     0EDD                     _Lcd_Init:	
  4661                           ;psect for function _Lcd_Init
  4662                           
  4663     0EDD                     l1692:	
  4664                           ;incstack = 0
  4665                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4666                           
  4667                           
  4668                           ;LCD.c: 66:     Lcd_Port(0x00);
  4669     0EDD  3000               	movlw	0
  4670     0EDE  120A  158A  2581  120A  158A  	fcall	_Lcd_Port
  4671     0EE3                     l1694:
  4672                           
  4673                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4674     0EE3  3034               	movlw	52
  4675     0EE4  00F5               	movwf	??_Lcd_Init+1
  4676     0EE5  30F1               	movlw	241
  4677     0EE6  00F4               	movwf	??_Lcd_Init
  4678     0EE7                     u2317:
  4679     0EE7  0BF4               	decfsz	??_Lcd_Init,f
  4680     0EE8  2EE7               	goto	u2317
  4681     0EE9  0BF5               	decfsz	??_Lcd_Init+1,f
  4682     0EEA  2EE7               	goto	u2317
  4683     0EEB  2EEC               	nop2
  4684     0EEC                     l1696:
  4685                           
  4686                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4687     0EEC  3003               	movlw	3
  4688     0EED  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4689                           
  4690                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4691     0EF2  300D               	movlw	13
  4692     0EF3  00F5               	movwf	??_Lcd_Init+1
  4693     0EF4  30FB               	movlw	251
  4694     0EF5  00F4               	movwf	??_Lcd_Init
  4695     0EF6                     u2327:
  4696     0EF6  0BF4               	decfsz	??_Lcd_Init,f
  4697     0EF7  2EF6               	goto	u2327
  4698     0EF8  0BF5               	decfsz	??_Lcd_Init+1,f
  4699     0EF9  2EF6               	goto	u2327
  4700     0EFA  2EFB               	nop2
  4701     0EFB                     l1698:
  4702                           
  4703                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4704     0EFB  3003               	movlw	3
  4705     0EFC  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4706     0F01                     l1700:
  4707                           
  4708                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4709     0F01  301D               	movlw	29
  4710     0F02  00F5               	movwf	??_Lcd_Init+1
  4711     0F03  3091               	movlw	145
  4712     0F04  00F4               	movwf	??_Lcd_Init
  4713     0F05                     u2337:
  4714     0F05  0BF4               	decfsz	??_Lcd_Init,f
  4715     0F06  2F05               	goto	u2337
  4716     0F07  0BF5               	decfsz	??_Lcd_Init+1,f
  4717     0F08  2F05               	goto	u2337
  4718                           
  4719                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4720     0F09  3003               	movlw	3
  4721     0F0A  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4722                           
  4723                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4724     0F0F  3002               	movlw	2
  4725     0F10  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4726                           
  4727                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  4728     0F15  3002               	movlw	2
  4729     0F16  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4730                           
  4731                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  4732     0F1B  3008               	movlw	8
  4733     0F1C  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4734                           
  4735                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  4736     0F21  3000               	movlw	0
  4737     0F22  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4738                           
  4739                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  4740     0F27  300C               	movlw	12
  4741     0F28  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4742                           
  4743                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  4744     0F2D  3000               	movlw	0
  4745     0F2E  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4746                           
  4747                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  4748     0F33  3006               	movlw	6
  4749     0F34  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4750     0F39                     l103:
  4751     0F39  0008               	return
  4752     0F3A                     __end_of_Lcd_Init:
  4753                           
  4754                           	psect	text17
  4755     0D62                     __ptext17:	
  4756 ;; *************** function _Lcd_Clear *****************
  4757 ;; Defined at:
  4758 ;;		line 43 in file "LCD.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0, pclath, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4772 ;;      Params:         0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; Hardware stack levels required when called: 2
  4779 ;; This function calls:
  4780 ;;		_Lcd_Cmd
  4781 ;; This function is called by:
  4782 ;;		_main
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786     0D62                     _Lcd_Clear:	
  4787                           ;psect for function _Lcd_Clear
  4788                           
  4789     0D62                     l1710:	
  4790                           ;incstack = 0
  4791                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4792                           
  4793                           
  4794                           ;LCD.c: 44:     Lcd_Cmd(0);
  4795     0D62  3000               	movlw	0
  4796     0D63  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4797                           
  4798                           ;LCD.c: 45:     Lcd_Cmd(1);
  4799     0D68  3001               	movlw	1
  4800     0D69  120A  118A  2004  120A  158A  	fcall	_Lcd_Cmd
  4801     0D6E                     l94:
  4802     0D6E  0008               	return
  4803     0D6F                     __end_of_Lcd_Clear:
  4804                           
  4805                           	psect	text18
  4806     0004                     __ptext18:	
  4807 ;; *************** function _Lcd_Cmd *****************
  4808 ;; Defined at:
  4809 ;;		line 35 in file "LCD.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  a               1    wreg     unsigned char 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  a               1    3[COMMON] unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, pclath, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4823 ;;      Params:         0       0       0       0       0
  4824 ;;      Locals:         1       0       0       0       0
  4825 ;;      Temps:          2       0       0       0       0
  4826 ;;      Totals:         3       0       0       0       0
  4827 ;;Total ram usage:        3 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 1
  4830 ;; This function calls:
  4831 ;;		_Lcd_Port
  4832 ;; This function is called by:
  4833 ;;		_Lcd_Clear
  4834 ;;		_Lcd_Set_Cursor
  4835 ;;		_Lcd_Init
  4836 ;;		_Lcd_Shift_Right
  4837 ;;		_Lcd_Shift_Left
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841     0004                     _Lcd_Cmd:	
  4842                           ;psect for function _Lcd_Cmd
  4843                           
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4847                           ;Lcd_Cmd@a stored from wreg
  4848     0004  00F3               	movwf	Lcd_Cmd@a
  4849     0005                     l1386:
  4850                           
  4851                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4852     0005  1283               	bcf	3,5	;RP0=0, select bank0
  4853     0006  1303               	bcf	3,6	;RP1=0, select bank0
  4854     0007  1108               	bcf	8,2	;volatile
  4855     0008                     l1388:
  4856                           
  4857                           ;LCD.c: 37:     Lcd_Port(a);
  4858     0008  0873               	movf	Lcd_Cmd@a,w
  4859     0009  120A  158A  2581  120A  118A  	fcall	_Lcd_Port
  4860     000E                     l1390:
  4861                           
  4862                           ;LCD.c: 38:     RD3 = 1;
  4863     000E  1283               	bcf	3,5	;RP0=0, select bank0
  4864     000F  1303               	bcf	3,6	;RP1=0, select bank0
  4865     0010  1588               	bsf	8,3	;volatile
  4866     0011                     l1392:
  4867                           
  4868                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4869     0011  300B               	movlw	11
  4870     0012  00F2               	movwf	??_Lcd_Cmd+1
  4871     0013  3062               	movlw	98
  4872     0014  00F1               	movwf	??_Lcd_Cmd
  4873     0015                     u2347:
  4874     0015  0BF1               	decfsz	??_Lcd_Cmd,f
  4875     0016  2815               	goto	u2347
  4876     0017  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4877     0018  2815               	goto	u2347
  4878     0019  0000               	nop
  4879     001A                     l1394:
  4880                           
  4881                           ;LCD.c: 40:     RD3 = 0;
  4882     001A  1283               	bcf	3,5	;RP0=0, select bank0
  4883     001B  1303               	bcf	3,6	;RP1=0, select bank0
  4884     001C  1188               	bcf	8,3	;volatile
  4885     001D                     l91:
  4886     001D  0008               	return
  4887     001E                     __end_of_Lcd_Cmd:
  4888                           
  4889                           	psect	text19
  4890     0D81                     __ptext19:	
  4891 ;; *************** function _Lcd_Port *****************
  4892 ;; Defined at:
  4893 ;;		line 13 in file "LCD.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  a               1    wreg     unsigned char 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  a               1    0[COMMON] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4907 ;;      Params:         0       0       0       0       0
  4908 ;;      Locals:         1       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0
  4910 ;;      Totals:         1       0       0       0       0
  4911 ;;Total ram usage:        1 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_Lcd_Cmd
  4917 ;;		_Lcd_Init
  4918 ;;		_Lcd_Write_Char
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922     0D81                     _Lcd_Port:	
  4923                           ;psect for function _Lcd_Port
  4924                           
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _Lcd_Port: [wreg]
  4928                           ;Lcd_Port@a stored from wreg
  4929     0D81  00F0               	movwf	Lcd_Port@a
  4930     0D82                     l1362:
  4931                           
  4932                           ;LCD.c: 14:     if (a & 1)
  4933     0D82  1C70               	btfss	Lcd_Port@a,0
  4934     0D83  2D85               	goto	u1131
  4935     0D84  2D86               	goto	u1130
  4936     0D85                     u1131:
  4937     0D85  2D8A               	goto	l80
  4938     0D86                     u1130:
  4939     0D86                     l1364:
  4940                           
  4941                           ;LCD.c: 15:         RD4 = 1;
  4942     0D86  1283               	bcf	3,5	;RP0=0, select bank0
  4943     0D87  1303               	bcf	3,6	;RP1=0, select bank0
  4944     0D88  1608               	bsf	8,4	;volatile
  4945     0D89  2D8D               	goto	l81
  4946     0D8A                     l80:	
  4947                           ;LCD.c: 16:     else
  4948                           
  4949                           
  4950                           ;LCD.c: 17:         RD4 = 0;
  4951     0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  4952     0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  4953     0D8C  1208               	bcf	8,4	;volatile
  4954     0D8D                     l81:
  4955                           
  4956                           ;LCD.c: 19:     if (a & 2)
  4957     0D8D  1CF0               	btfss	Lcd_Port@a,1
  4958     0D8E  2D90               	goto	u1141
  4959     0D8F  2D91               	goto	u1140
  4960     0D90                     u1141:
  4961     0D90  2D93               	goto	l82
  4962     0D91                     u1140:
  4963     0D91                     l1366:
  4964                           
  4965                           ;LCD.c: 20:         RD5 = 1;
  4966     0D91  1688               	bsf	8,5	;volatile
  4967     0D92  2D94               	goto	l83
  4968     0D93                     l82:	
  4969                           ;LCD.c: 21:     else
  4970                           
  4971                           
  4972                           ;LCD.c: 22:         RD5 = 0;
  4973     0D93  1288               	bcf	8,5	;volatile
  4974     0D94                     l83:
  4975                           
  4976                           ;LCD.c: 24:     if (a & 4)
  4977     0D94  1D70               	btfss	Lcd_Port@a,2
  4978     0D95  2D97               	goto	u1151
  4979     0D96  2D98               	goto	u1150
  4980     0D97                     u1151:
  4981     0D97  2D9A               	goto	l84
  4982     0D98                     u1150:
  4983     0D98                     l1368:
  4984                           
  4985                           ;LCD.c: 25:         RD6 = 1;
  4986     0D98  1708               	bsf	8,6	;volatile
  4987     0D99  2D9B               	goto	l85
  4988     0D9A                     l84:	
  4989                           ;LCD.c: 26:     else
  4990                           
  4991                           
  4992                           ;LCD.c: 27:         RD6 = 0;
  4993     0D9A  1308               	bcf	8,6	;volatile
  4994     0D9B                     l85:
  4995                           
  4996                           ;LCD.c: 29:     if (a & 8)
  4997     0D9B  1DF0               	btfss	Lcd_Port@a,3
  4998     0D9C  2D9E               	goto	u1161
  4999     0D9D  2D9F               	goto	u1160
  5000     0D9E                     u1161:
  5001     0D9E  2DA1               	goto	l86
  5002     0D9F                     u1160:
  5003     0D9F                     l1370:
  5004                           
  5005                           ;LCD.c: 30:         RD7 = 1;
  5006     0D9F  1788               	bsf	8,7	;volatile
  5007     0DA0  2DA2               	goto	l88
  5008     0DA1                     l86:	
  5009                           ;LCD.c: 31:     else
  5010                           
  5011                           
  5012                           ;LCD.c: 32:         RD7 = 0;
  5013     0DA1  1388               	bcf	8,7	;volatile
  5014     0DA2                     l88:
  5015     0DA2  0008               	return
  5016     0DA3                     __end_of_Lcd_Port:
  5017     007E                     btemp	set	126	;btemp
  5018     007E                     wtemp0	set	126
  5019                           
  5020                           	psect	idloc
  5021                           
  5022                           ;Config register IDLOC0 @ 0x2000
  5023                           ;	unspecified, using default values
  5024     2000                     	org	8192
  5025     2000  3FFF               	dw	16383
  5026                           
  5027                           ;Config register IDLOC1 @ 0x2001
  5028                           ;	unspecified, using default values
  5029     2001                     	org	8193
  5030     2001  3FFF               	dw	16383
  5031                           
  5032                           ;Config register IDLOC2 @ 0x2002
  5033                           ;	unspecified, using default values
  5034     2002                     	org	8194
  5035     2002  3FFF               	dw	16383
  5036                           
  5037                           ;Config register IDLOC3 @ 0x2003
  5038                           ;	unspecified, using default values
  5039     2003                     	org	8195
  5040     2003  3FFF               	dw	16383
  5041                           
  5042                           	psect	config
  5043                           
  5044                           ;Config register CONFIG1 @ 0x2007
  5045                           ;	Oscillator Selection bits
  5046                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5047                           ;	Watchdog Timer Enable bit
  5048                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5049                           ;	Power-up Timer Enable bit
  5050                           ;	PWRTE = OFF, PWRT disabled
  5051                           ;	RE3/MCLR pin function select bit
  5052                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5053                           ;	Code Protection bit
  5054                           ;	CP = OFF, Program memory code protection is disabled
  5055                           ;	Data Code Protection bit
  5056                           ;	CPD = OFF, Data memory code protection is disabled
  5057                           ;	Brown Out Reset Selection bits
  5058                           ;	BOREN = OFF, BOR disabled
  5059                           ;	Internal External Switchover bit
  5060                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5061                           ;	Fail-Safe Clock Monitor Enabled bit
  5062                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5063                           ;	Low Voltage Programming Enable bit
  5064                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5065                           ;	In-Circuit Debugger Mode bit
  5066                           ;	DEBUG = 0x1, unprogramme  5067     2007                     	org	8199
  5068     2007  20D4               	dw	8404
  5069                           
  5070                           ;Config register CONFIG2 @ 0x2008
  5071                           ;	Brown-out Reset Selection bit
  5072                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5073                           ;	Flash Program Memory Self Write Enable bits
  5074                           ;	WRT = OFF, Write protection off
  5075     2008                     	org	8200
  5076     2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    40
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> verde(BANK0[4]), azul(BANK0[4]), rojo(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 7
		 -> verde(BANK0[4]), azul(BANK0[4]), rojo(BANK0[4]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___llmod->___lldiv
    _read_red->___xxtofl
    _read_green->___xxtofl
    _read_blue->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_read_blue
    _main->_read_green
    _main->_read_red
    _sprintf->___llmod
    _read_red->___fltol
    _read_green->___fltol
    _read_blue->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14507
                                             45 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _config_TCS230
                          _read_blue
                         _read_green
                           _read_red
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    23      5    1386
                                             10 BANK0     20    15      5
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_red                                             9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_green                                           9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_blue                                            9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _config_TCS230                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     836
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _config_TCS230
   _read_blue
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _read_green
     ___flmul
     ___fltol
     ___xxtofl
   _read_red
     ___flmul
     ___fltol
     ___xxtofl
   _setup
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 13:22:25 2023

                       pc 0002                        l63 0D80                        l80 0D8A  
                      l81 0D8D                        l82 0D93                        l83 0D94  
                      l91 001D                        l84 0D9A                        l85 0D9B  
                      l86 0DA1                        l94 0D6E                        l88 0DA2  
                      fsr 0004       __Umul8_16@word_mpld 0076                       l100 0E86  
                     l103 0F39                       l112 0E40                       l106 0DFE  
                     l133 0D61                       l142 0035                       l151 0FAD  
                     l160 0F44                       l144 0039                       l136 0028  
                     l320 00E6                       l145 0080                       l154 0FB4  
                     l163 0F4A                       l139 002E                       l156 0FB8  
                     l148 0FA7                       l157 0FFF                       l166 0F51  
                     l270 0253                       l280 033F                       l169 0F9C  
                     l506 0EDC                       l267 022F                       l470 015E  
                     l480 015E                       l730 01E0                       l731 01EC  
                     l723 01C4                       l477 0149                       l717 0181  
                     l719 0216                       l673 07F2                       l692 0DB7  
                     l685 07E6                       l694 0DC9                       l679 0762  
                     _RD0 0040                       _RD1 0041                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0032              ___flmul@bexp 0033              ___flmul@sign 002D  
            ___flmul@temp 0038              ___flmul@prod 0034              ___fltol@exp1 0043  
                    l1400 0DD4                      l1410 0DF3                      l1402 0DE2  
                    l1412 0DF6                      l1404 0DE5                      l1500 04B7  
                    l1420 0094                      l1414 0DFB                      l1406 0DEA  
                    l1510 04CE                      l1502 04BB                      l1430 00CE  
                    l1422 00A1                      l1408 0DED                      l1600 075F  
                    l1520 04E5                      l1512 04D0                      l1504 04BC  
                    l1440 00E7                      l1432 00CF                      l1424 00A5  
                    l1416 0081                      l1370 0D9F                      l1362 0D82  
                    l1610 077E                      l1530 04FA                      l1522 04E6  
                    l1514 04D8                      l1506 04C1                      l1450 010F  
                    l1442 00F2                      l1434 00D8                      l1426 00AE  
                    l1418 0091                      l1364 0D86                      l1700 0F01  
                    l1380 0DC0                      l1372 0DA4                      l1620 07C4  
                    l1612 0797                      l1604 0767                      l1540 0515  
                    l1532 0502                      l1524 04EB                      l1516 04DD  
                    l1508 04C6                      l1452 0117                      l1428 00C0  
                    l1436 00DE                      l1366 0D91                      l1390 000E  
                    l1710 0D62                      l1702 0D58                      l1382 0DC5  
                    l1374 0DA6                      l1630 07E1                      l1622 07CE  
                    l1606 076C                      l1614 079D                      l1550 0591  
                    l1542 0523                      l1534 0507                      l1526 04F0  
                    l1518 04E1                      l1470 013E                      l1462 0125  
                    l1454 0119                      l1446 00FB                      l1368 0D98  
                    l1392 0011                      l1720 0E5D                      l1712 0E42  
                    l1704 0D5B                      l1376 0DAD                      l1632 07EA  
                    l1624 07D0                      l1616 07AA                      l1608 077A  
                    l1560 05FD                      l1552 05AD                      l1544 0530  
                    l1536 050C                      l1528 04F8                      l1472 014E  
                    l1456 011D                      l1464 0137                      l1448 010E  
                    l1640 0169                      l1480 0E94                      l1800 0231  
                    l1394 001A                      l1386 0005                      l1730 0E80  
                    l1714 0E47                      l1722 0E64                      l1706 0D5F  
                    l1378 0DB1                      l1626 07DC                      l1618 07B5  
                    l1570 0687                      l1562 060B                      l1554 05C9  
                    l1546 054B                      l1474 0153                      l1650 0195  
                    l1642 0179                      l1490 0ECE                      l1482 0EA1  
                    l1810 026A                      l1388 0008                      l1724 0E6A  
                    l1716 0E54                      l1396 0DCB                      l1732 0DFF  
                    l1708 0D60                      l1628 07E0                      l1580 0717  
                    l1572 0695                      l1564 0628                      l1556 05D2  
                    l1548 0567                      l1660 01CB                      l1652 01A2  
                    l1644 0189                      l1636 0160                      l1740 001E  
                    l1484 0EA5                      l1492 0ED4                      l1476 0E87  
                    l1820 027E                      l1812 0278                      l1804 0236  
                    l1900 0479                      l1726 0E77                      l1718 0E57  
                    l1398 0DD1                      l1734 0E02                      l1590 073C  
                    l1582 0725                      l1574 06C0                      l1566 063F  
                    l1558 05E0                      l1670 0204                      l1662 01D6  
                    l1654 01A9                      l1638 0165                      l1750 0040  
                    l1742 0022                      l1486 0EB7                      l1478 0E91  
                    l1830 0314                      l1814 027C                      l1806 0257  
                    l1902 0481                      l1728 0E7A                      l1736 0E1E  
                    l1584 072E                      l1592 0742                      l1576 06E6  
                    l1568 065C                      l1496 04AE                      l1672 0209  
                    l1664 01DA                      l1656 01AD                      l1648 0192  
                    l1760 0FB1                      l1752 0042                      l1744 0032  
                    l1680 0D6F                      l1488 0EC5                      l1832 0319  
                    l1824 02B5                      l1808 0265                      l1904 048A  
                    l1738 0E24                      l1594 0746                      l1586 0732  
                    l1578 070E                      l1498 04B3                      l1674 020D  
                    l1666 01E4                      l1658 01BB                      l1762 0FB3  
                    l1746 0034                      l1690 0D7F                      l1682 0D73  
                    l1834 031D                      l1826 02BF                      l1906 0492  
                    l1850 0348                      l1692 0EDD                      l1596 0747  
                    l1588 0733                      l1676 020E                      l1668 01EE  
                    l1780 0F55                      l1772 0F3A                      l1764 0FB9  
                    l1756 0F9D                      l1748 003A                      l1684 0D77  
                    l1828 02C7                      l1836 032B                      l1908 049B  
                    l1860 0368                      l1852 034D                      l1694 0EE3  
                    l1598 074B                      l1782 0F5B                      l1774 0F3E  
                    l1766 0FBF                      l1758 0FA1                      l1686 0D78  
                    l1838 033B                      l1934 0248                      l1790 021A  
                    l1870 03B9                      l1862 0377                      l1854 0352  
                    l1846 0340                      l1696 0EEC                      l1784 0F5C  
                    l1776 0F4E                      l1768 0FC1                      l1688 0D7B  
                    l1792 021D                      l1880 040B                      l1872 03CC  
                    l1864 0386                      l1856 0357                      l1848 0345  
                    l1698 0EFB                      l1786 0F5E                      l1778 0F50  
                    l1794 0223                      l1890 0432                      l1882 0413  
                    l1874 03DF                      l1866 0395                      l1858 035F  
                    l1796 0228                      l1892 0444                      l1876 03F2  
                    l1868 03A6                      l1884 041D                      l1798 022D  
                    l1894 0456                      l1886 0421                      l1878 0405  
                    l1896 0468                      l1888 0429                      l1898 0470  
                    STR_1 0838                      STR_2 0844                      STR_3 083F  
                    STR_4 0849                      STR_5 0849                      STR_6 0849  
                    u2000 0E2E                      u1130 0D86                      u2010 0E40  
                    u1210 0091                      u1131 0D85                      u2011 0E3F  
                    u1211 0090                      u1140 0D91                      u1300 011D  
                    u2100 0F55                      u2020 002E                      u1141 0D90  
                    u1205 0DD7                      u1301 011C                      u2101 0F54  
                    u2021 002D                      u1150 0D98                      u1310 0124  
                    u2030 0032                      u1230 00A5                      u2110 0223  
                    u1151 0D97                      u1311 0123                      u2031 0031  
                    u1231 00A4                      u2111 0222                      u1160 0D9F  
                    u2040 0039                      u1400 0EA5                      u2120 0257  
                    u2200 03B9                      u1161 0D9E                      u2041 0038  
                    u1225 0096                      u1401 0EA4                      u2121 0256  
                    u2201 03B8                      u1170 0DB1                      u1330 0136  
                    u2050 0FAD                      u1250 00C0                      u1410 0EB7  
                    u2210 03CC                      u1171 0DB0                      u1331 0135  
                    u2051 0FAC                      u1251 00BF                      u1411 0EB6  
                    u2211 03CB                      u2203 03B5                      u1500 0507  
                    u1340 013D                      u2060 0FB1                      u2140 02B4  
                    u2220 03DF                      u1501 0506                      u1341 013C  
                    u1325 0126                      u2061 0FB0                      u1245 00A7  
                    u2141 02B3                      u2221 03DE                      u2213 03C8  
                    u1190 0DC5                      u1510 050C                      u2070 0FB8  
                    u1270 00DE                      u1430 0ED4                      u2150 02BF  
                    u2230 03F2                      u1191 0DC4                      u1511 050B  
                    u2071 0FB7                      u1271 00DD                      u1255 00BC  
                    u1431 0ED3                      u1415 0EB3                      u2151 02BE  
                    u2135 0281                      u2231 03F1                      u2223 03DB  
                    u1440 04BB                      u1360 014E                      u1280 00F2  
                    u2080 0F4A                      u2240 0405                      u1185 0DB8  
                    u1601 064E                      u1521 0559                      u1441 04BA  
                    u1361 014D                      u1281 00F1                      u2081 0F49  
                    u1265 00D0                      u1425 0EC6                      u2145 02B0  
                    u2241 0404                      u2233 03EE                      u1602 0655  
                    u1522 0560                      u1450 04C1                      u1370 0153  
                    u1290 0109                      u2090 0F4E                      u2170 032B  
                    u2307 0DF8                      u1611 0679                      u1603 065C  
                    u1531 0575                      u1523 0567                      u1451 04C0  
                    u1371 0152                      u1355 0140                      u2091 0F4D  
                    u2171 032A                      u2243 0401                      u1612 0680  
                    u1532 057C                      u1460 04C6                      u1380 0E91  
                    u2180 033B                      u2317 0EE7                      u1621 06A4  
                    u1613 0687                      u1541 059F                      u1533 0583  
                    u1461 04C5                      u1381 0E90                      u2181 033A  
                    u2165 02D2                      u1710 0746                      u1630 06CC  
                    u1622 06AB                      u1542 05A6                      u1470 04E5  
                    u2190 03A6                      u2327 0EF6                      u1711 0745  
                    u1623 06B2                      u1551 05BB                      u1543 05AD  
                    u1471 04E4                      u1295 0104                      u2191 03A5  
                    u1800 07E0                      u1720 074B                      u1552 05C2  
                    u1480 04EB                      u2337 0F05                      u1801 07DF  
                    u1721 074A                      u1705 0735                      u1641 06D8  
                    u1553 05C9                      u1481 04EA                      u2257 04A3  
                    u2193 03A2                      u1730 075F                      u1650 06F4  
                    u1642 06DF                      u1490 04F0                      u1810 0165  
                    u2347 0015                      u1731 075E                      u1643 06E6  
                    u1635 06C7                      u1571 05EF                      u1491 04EF  
                    u1811 0164                      u2267 0026                      u1395 0E96  
                    u1740 0766                      u1572 05F6                      u1900 01E0  
                    u1820 0169                      u1741 0765                      u1661 0700  
                    u1581 061A                      u1573 05FD                      u1565 05CB  
                    u1901 01DF                      u1821 0168                      u2277 0FA5  
                    u1750 076C                      u1662 0707                      u1582 0621  
                    u1910 01E4                      u1830 0189                      u1751 076B  
                    u1663 070E                      u1655 06EF                      u1583 0628  
                    u1911 01E3                      u1831 0188                      u2287 0F42  
                    u1760 077E                      u1920 01F9                      u2297 0DE7  
                    u1761 077D                      u1770 078D                      u1690 0732  
                    u1930 0209                      u1850 01A8                      u1691 0731  
                    u1675 0710                      u1595 062A                      u1931 0208  
                    u1851 01A7                      u1780 07AA                      u1940 020D  
                    u1781 07A9                      u1685 0727                      u1941 020C  
                    u1925 01F4                      u1845 019A                      u1950 0E47  
                    u1790 07C4                      u1870 01CA                      u1951 0E46  
                    u1791 07C3                      u1775 0788                      u1871 01C9  
                    u1785 07A6                      u1865 01BC                      u1970 0E6A  
                    u1890 01DA                      u1971 0E69                      u1795 07C0  
                    u1891 01D9                      u1965 0E4D                      u1885 01CF  
                    u1990 0E0C                      u1985 0E70                      _TMR1 000E  
       ?_Lcd_Write_String 0075                      _cont 005C                      _main 0340  
                    _azul 0065                      _rojo 0069                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 001E  
         ??_config_TCS230 0070             ___fltol@sign1 0042                     ?_main 0070  
         __end_of___flmul 07F3           __end_of___fltol 015F                     _ANSEL 0188  
         __end_of___lldiv 00E7           __end_of___llmod 0EDD                     _PORTD 0008  
                   _TRISA 0085                     _TRISD 0088           __end_of_dpowers 0838  
                   _verde 0061                     _setup 0D6F                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0340  
        __end_of_Lcd_Init 0F3A          __end_of_Lcd_Port 0DA3           __initialization 07F3  
            __end_of_main 04AE                    ??_main 004D          ___llmod@dividend 0024  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
        __end_of___xxtofl 0217                 ??___flmul 0028                 ??___fltol 003E  
               ??___lldiv 0078                 ??___llmod 0028                    _estado 005F  
        __end_of_read_red 0081         read_red@temp_freq 0049                 ??_sprintf 002F  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070   __end_of__initialization 07FC         __end_of_Lcd_Clear 0D6F  
              ___fltol@f1 003A            __pcstackCOMMON 0070             __end_of_setup 0D81  
          _Lcd_Set_Cursor 0E41                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0070                __pbssBANK0 0050         __end_of__Umul8_16 0DCA  
              __pmaintext 0340    __end_of_Lcd_Set_Cursor 0E87                 ?___xxtofl 0070  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                __stringtab 0800  
          _Lcd_Write_Char 0DCA                   _Lcd_Cmd 0004                 ?_read_red 0044  
              _green_freq 0050                   ___flmul 04AE                   ___fltol 00E7  
                 ___lldiv 0081                   ___llmod 0E87           ?_Lcd_Set_Cursor 0074  
              _read_green 0F9D                   __ptext1 0217                   __ptext2 0E87  
                 __ptext3 0081                   __ptext4 0D6F                   __ptext5 001E  
                 __ptext6 0F9D                   __ptext7 0F3A                   __ptext8 015F  
                 __ptext9 00E7                 _T1CONbits 0010     __end_of_config_TCS230 0D62  
                 _dpowers 0810                ??___xxtofl 0074         __end_of_read_blue 0F9D  
                 _sprintf 0217                   clrloop0 0D51    __end_of_Lcd_Write_Char 0DFF  
    end_of_initialization 07FC                ??_read_red 0048           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                 Lcd_Port@a 0070                 _PORTAbits 0005  
               _PORTDbits 0008             ___xxtofl@sign 0078           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A               ___flmul@grs 002E  
               _Lcd_Clear 0D62          _Lcd_Write_String 0DFF               ?_read_green 0044  
     start_initialization 07F3        read_blue@temp_freq 0049           ___llmod@divisor 0020  
         ___llmod@counter 0029                ?_Lcd_Clear 0070       read_green@temp_freq 0049  
               __Umul8_16 0DA3           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___flmul@a 0024                 ___flmul@b 0020                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070               sprintf@flag 0034  
             sprintf@prec 0035          ??_Lcd_Set_Cursor 0075                  ?___flmul 0020  
                ?___fltol 003A                  ?___lldiv 0070                  ?___llmod 0020  
              ?__Umul8_16 0070                 _blue_freq 0054                 __pstrings 0800  
                ?_sprintf 002A                 _read_blue 0F3A                 clear_ram0 0D50  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 080F  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 0EDD                  _Lcd_Port 0D81  
              ?_read_blue 0044  __end_of_Lcd_Write_String 0E41               ??__Umul8_16 0072  
            ??_read_green 0048        __end_of__stringtab 0810                sprintf@val 0037  
                ___xxtofl 015F                  __ptext10 04AE                  __ptext11 0DA3  
                __ptext12 0D58                  __ptext13 0DFF                  __ptext14 0DCA  
                __ptext15 0E41                  __ptext16 0EDD                  __ptext17 0D62  
                __ptext18 0004                  __ptext19 0D81                  _read_red 001E  
                _red_freq 0058        __end_of_read_green 1000             _config_TCS230 0D58  
             ??_read_blue 0048        Lcd_Write_Char@temp 0072                 sprintf@ap 003B  
               sprintf@sp 003C          ___lldiv@dividend 0074                 stringcode 080A  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079    __Umul8_16@multiplicand 0070  
                sprintf@c 003D                  sprintf@f 002A            ?_config_TCS230 0070  
        ___lldiv@quotient 0079                  stringdir 080A                  stringtab 0800  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  

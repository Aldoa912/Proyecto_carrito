

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 08 22:53:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 04/07/2022 GMT
    20                           ; 
    21                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	nvCOMMON
   211  0000'                    __pnvCOMMON:
   212  0000'                    _lectura1:
   213  0000'                    	ds	2
   214                           
   215                           	psect	nvBANK0
   216  0000'                    __pnvBANK0:
   217  0000'                    _lectura2:
   218  0000'                    	ds	2
   219  0005                     _PORTA	set	5
   220  0005                     _PORTAbits	set	5
   221  0006                     _PORTB	set	6
   222  0008                     _PORTD	set	8
   223  0013                     _SSPBUF	set	19
   224  0014                     _SSPCONbits	set	20
   225  000C                     _PIR1bits	set	12
   226  008F                     _OSCCONbits	set	143
   227  0085                     _TRISA	set	133
   228  0088                     _TRISD	set	136
   229  0094                     _SSPSTATbits	set	148
   230  04A0                     _BF	set	1184
   231  0189                     _ANSELH	set	393
   232  0188                     _ANSEL	set	392
   233                           
   234                           	psect	cinit
   235  0000'                    start_initialization:	
   236                           ; #config settings
   237                           
   238  0000'                    __initialization:
   239                           
   240                           ; Clear objects allocated to COMMON
   241  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   242  0001' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   243  0002' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
   244  0003' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
   245  0004' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
   246  0005' 0180'              	clrf	(__pbssCOMMON+5)& (0+127)
   247  0006'                    end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250  0006'                    __end_of__initialization:
   251  0006' 0183               	clrf	3
   252  0007' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMMON
   255  0000'                    __pbssCOMMON:
   256  0000'                    _estado2:
   257  0000'                    	ds	2
   258  0002'                    _estado:
   259  0002'                    	ds	2
   260  0004'                    _z:
   261  0004'                    	ds	1
   262  0005'                    _enviar:
   263  0005'                    	ds	1
   264                           
   265                           	psect	cstackCOMMON
   266  0000'                    __pcstackCOMMON:
   267  0000'                    ?_setup:
   268  0000'                    ?_I2C_Slave_Init:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0000'                    ??_I2C_Slave_Init:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0000'                    ?_isr:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0000'                    ??_isr:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0000'                    ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283                           
   284                           ; 1 bytes @ 0x0
   285  0000'                    	ds	3
   286  0003'                    ??_setup:
   287                           
   288                           	psect	cstackBANK0
   289  0000'                    __pcstackBANK0:	
   290                           ; 1 bytes @ 0x3
   291                           
   292  0000'                    ??_main:
   293                           
   294                           ; 1 bytes @ 0x0
   295  0000'                    	ds	2
   296                           
   297                           	psect	maintext
   298  0000'                    __pmaintext:	
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 86 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : B00/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   318 ;;      Params:         0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0
   320 ;;      Temps:          0       2       0       0       0
   321 ;;      Totals:         0       2       0       0       0
   322 ;;Total ram usage:        2 bytes
   323 ;; Hardware stack levels required when called: 3
   324 ;; This function calls:
   325 ;;		_setup
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331  0000'                    _main:	
   332                           ;psect for function _main
   333                           
   334  0000'                    l830:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [allreg]
   337                           
   338                           
   339                           ;main.c: 88:     setup();
   340  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
   341  0005'                    l832:
   342                           
   343                           ;main.c: 89:     TRISD = 0x00;
   344  0005' 1683               	bsf	3,5	;RP0=1, select bank1
   345  0006' 1303               	bcf	3,6	;RP1=0, select bank1
   346  0007' 0188               	clrf	8	;volatile
   347  0008'                    l834:
   348                           
   349                           ;main.c: 92:     {;main.c: 94:     lectura1 = PORTAbits.RA0;
   350  0008' 1283               	bcf	3,5	;RP0=0, select bank0
   351  0009' 0805               	movf	5,w	;volatile
   352  000A' 3901               	andlw	1
   353  000B' 0080'              	movwf	??_main
   354  000C' 0181'              	clrf	??_main+1
   355  000D' 0800'              	movf	??_main,w
   356  000E' 0080'              	movwf	_lectura1
   357  000F' 0801'              	movf	??_main+1,w
   358  0010' 0081'              	movwf	_lectura1+1
   359  0011'                    l836:
   360                           
   361                           ;main.c: 95:     lectura2 = PORTAbits.RA1;
   362  0011' 0C05               	rrf	5,w	;volatile
   363  0012' 3901               	andlw	1
   364  0013' 0080'              	movwf	??_main
   365  0014' 0181'              	clrf	??_main+1
   366  0015' 0800'              	movf	??_main,w
   367  0016' 0080'              	movwf	_lectura2
   368  0017' 0801'              	movf	??_main+1,w
   369  0018' 0081'              	movwf	_lectura2+1
   370  0019'                    l838:
   371                           
   372                           ;main.c: 97:     if (lectura1 == 0){
   373  0019' 0800'              	movf	_lectura1,w
   374  001A' 0401'              	iorwf	_lectura1+1,w
   375  001B' 1D03               	btfss	3,2
   376  001C' 2800'              	goto	u261
   377  001D' 2800'              	goto	u260
   378  001E'                    u261:
   379  001E' 2800'              	goto	l842
   380  001F'                    u260:
   381  001F'                    l840:
   382                           
   383                           ;main.c: 98:         estado = 1;
   384  001F' 3001               	movlw	1
   385  0020' 0082'              	movwf	_estado
   386  0021' 3000               	movlw	0
   387  0022' 0083'              	movwf	_estado+1
   388                           
   389                           ;main.c: 99:     }
   390  0023' 2800'              	goto	l868
   391  0024'                    l842:
   392  0024' 0300'              	decf	_lectura1,w
   393  0025' 0401'              	iorwf	_lectura1+1,w
   394  0026' 1D03               	btfss	3,2
   395  0027' 2800'              	goto	u271
   396  0028' 2800'              	goto	u270
   397  0029'                    u271:
   398  0029' 2800'              	goto	l846
   399  002A'                    u270:
   400  002A'                    l844:
   401                           
   402                           ;main.c: 101:         estado = 0;
   403  002A' 0182'              	clrf	_estado
   404  002B' 0183'              	clrf	_estado+1
   405                           
   406                           ;main.c: 102:     }
   407  002C' 2800'              	goto	l868
   408  002D'                    l846:
   409  002D' 0800'              	movf	_lectura2,w
   410  002E' 0401'              	iorwf	_lectura2+1,w
   411  002F' 1D03               	btfss	3,2
   412  0030' 2800'              	goto	u281
   413  0031' 2800'              	goto	u280
   414  0032'                    u281:
   415  0032' 2800'              	goto	l850
   416  0033'                    u280:
   417  0033'                    l848:
   418                           
   419                           ;main.c: 104:         estado2 = 1;
   420  0033' 3001               	movlw	1
   421  0034' 0080'              	movwf	_estado2
   422  0035' 3000               	movlw	0
   423  0036' 0081'              	movwf	_estado2+1
   424                           
   425                           ;main.c: 105:     }
   426  0037' 2800'              	goto	l868
   427  0038'                    l850:
   428  0038' 0300'              	decf	_lectura2,w
   429  0039' 0401'              	iorwf	_lectura2+1,w
   430  003A' 1D03               	btfss	3,2
   431  003B' 2800'              	goto	u291
   432  003C' 2800'              	goto	u290
   433  003D'                    u291:
   434  003D' 2800'              	goto	l854
   435  003E'                    u290:
   436  003E'                    l852:
   437                           
   438                           ;main.c: 107:         estado2 = 0;
   439  003E' 0180'              	clrf	_estado2
   440  003F' 0181'              	clrf	_estado2+1
   441                           
   442                           ;main.c: 108:     }
   443  0040' 2800'              	goto	l868
   444  0041'                    l854:
   445  0041' 0302'              	decf	_estado,w
   446  0042' 0403'              	iorwf	_estado+1,w
   447  0043' 1D03               	btfss	3,2
   448  0044' 2800'              	goto	u301
   449  0045' 2800'              	goto	u300
   450  0046'                    u301:
   451  0046' 2800'              	goto	l858
   452  0047'                    u300:
   453  0047'                    l856:
   454                           
   455                           ;main.c: 111:         enviar = 1;
   456  0047' 0185'              	clrf	_enviar
   457  0048' 0A85'              	incf	_enviar,f
   458                           
   459                           ;main.c: 112:     }
   460  0049' 2800'              	goto	l868
   461  004A'                    l858:
   462  004A' 0300'              	decf	_estado2,w
   463  004B' 0401'              	iorwf	_estado2+1,w
   464  004C' 1D03               	btfss	3,2
   465  004D' 2800'              	goto	u311
   466  004E' 2800'              	goto	u310
   467  004F'                    u311:
   468  004F' 2800'              	goto	l862
   469  0050'                    u310:
   470  0050'                    l860:
   471                           
   472                           ;main.c: 115:         enviar = 2;
   473  0050' 3002               	movlw	2
   474  0051' 0085'              	movwf	_enviar
   475                           
   476                           ;main.c: 116:     }
   477  0052' 2800'              	goto	l868
   478  0053'                    l862:
   479  0053' 0802'              	movf	_estado,w
   480  0054' 0403'              	iorwf	_estado+1,w
   481  0055' 1D03               	btfss	3,2
   482  0056' 2800'              	goto	u321
   483  0057' 2800'              	goto	u320
   484  0058'                    u321:
   485  0058' 2800'              	goto	l77
   486  0059'                    u320:
   487  0059'                    l864:
   488  0059' 0800'              	movf	_estado2,w
   489  005A' 0401'              	iorwf	_estado2+1,w
   490  005B' 1D03               	btfss	3,2
   491  005C' 2800'              	goto	u331
   492  005D' 2800'              	goto	u330
   493  005E'                    u331:
   494  005E' 2800'              	goto	l77
   495  005F'                    u330:
   496  005F'                    l866:
   497                           
   498                           ;main.c: 119:         enviar = 0;
   499  005F' 0185'              	clrf	_enviar
   500  0060' 2800'              	goto	l868
   501  0061'                    l77:
   502  0061'                    l868:
   503                           
   504                           ;main.c: 124:     _delay((unsigned long)((10)*(8000000/4000.0)));
   505  0061' 301A               	movlw	26
   506  0062' 1283               	bcf	3,5	;RP0=0, select bank0
   507  0063' 1303               	bcf	3,6	;RP1=0, select bank0
   508  0064' 0081'              	movwf	??_main+1
   509  0065' 30F7               	movlw	247
   510  0066' 0080'              	movwf	??_main
   511  0067'                    u347:
   512  0067' 0B80'              	decfsz	??_main,f
   513  0068' 2800'              	goto	u347
   514  0069' 0B81'              	decfsz	??_main+1,f
   515  006A' 2800'              	goto	u347
   516  006B' 2800'              	nop2
   517  006C'                    l870:
   518                           
   519                           ;main.c: 126:     PORTB = enviar;
   520  006C' 0805'              	movf	_enviar,w
   521  006D' 1283               	bcf	3,5	;RP0=0, select bank0
   522  006E' 1303               	bcf	3,6	;RP1=0, select bank0
   523  006F' 0086               	movwf	6	;volatile
   524  0070' 2800'              	goto	l834
   525  0071' 120A' 118A' 2800'  	ljmp	start
   526  0074'                    __end_of_main:
   527                           
   528                           	psect	text1
   529  0000'                    __ptext1:	
   530 ;; *************** function _setup *****************
   531 ;; Defined at:
   532 ;;		line 133 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 2
   553 ;; This function calls:
   554 ;;		_I2C_Slave_Init
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560  0000'                    _setup:	
   561                           ;psect for function _setup
   562                           
   563  0000'                    l772:	
   564                           ;incstack = 0
   565                           ; Regs used in _setup: [allreg]
   566                           
   567                           
   568                           ;main.c: 134:     ANSEL = 0;
   569  0000' 1683               	bsf	3,5	;RP0=1, select bank3
   570  0001' 1703               	bsf	3,6	;RP1=1, select bank3
   571  0002' 0188               	clrf	8	;volatile
   572                           
   573                           ;main.c: 135:     ANSELH = 0;
   574  0003' 0189               	clrf	9	;volatile
   575  0004'                    l774:
   576                           
   577                           ;main.c: 136:     TRISA = 0b00000011;
   578  0004' 3003               	movlw	3
   579  0005' 1683               	bsf	3,5	;RP0=1, select bank1
   580  0006' 1303               	bcf	3,6	;RP1=0, select bank1
   581  0007' 0085               	movwf	5	;volatile
   582  0008'                    l776:
   583                           
   584                           ;main.c: 137:     TRISD = 0;
   585  0008' 0188               	clrf	8	;volatile
   586  0009'                    l778:
   587                           
   588                           ;main.c: 138:     PORTD = 0;
   589  0009' 1283               	bcf	3,5	;RP0=0, select bank0
   590  000A' 1303               	bcf	3,6	;RP1=0, select bank0
   591  000B' 0188               	clrf	8	;volatile
   592  000C'                    l780:
   593                           
   594                           ;main.c: 139:     PORTA = 0;
   595  000C' 0185               	clrf	5	;volatile
   596  000D'                    l782:
   597                           
   598                           ;main.c: 140:     OSCCONbits.IRCF = 0b111;
   599  000D' 3070               	movlw	112
   600  000E' 1683               	bsf	3,5	;RP0=1, select bank1
   601  000F' 1303               	bcf	3,6	;RP1=0, select bank1
   602  0010' 048F               	iorwf	15,f	;volatile
   603  0011'                    l784:
   604                           
   605                           ;main.c: 141:     OSCCONbits.SCS = 1;
   606  0011' 140F               	bsf	15,0	;volatile
   607  0012'                    l786:
   608                           
   609                           ;main.c: 142:     I2C_Slave_Init(0x20);
   610  0012' 3020               	movlw	32
   611  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_I2C_Slave_Init
   612  0018'                    l88:
   613  0018' 0008               	return
   614  0019'                    __end_of_setup:
   615                           
   616                           	psect	text2
   617  0000'                    __ptext2:	
   618 ;; *************** function _isr *****************
   619 ;; Defined at:
   620 ;;		line 51 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          3       0       0       0       0
   637 ;;      Totals:         3       0       0       0       0
   638 ;;Total ram usage:        3 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		Interrupt level 1
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647  0000'                    _isr:	
   648                           ;psect for function _isr
   649                           
   650  0000'                    i1l696:
   651                           
   652                           ;main.c: 52:    if(PIR1bits.SSPIF == 1){
   653  0000' 1283               	bcf	3,5	;RP0=0, select bank0
   654  0001' 1303               	bcf	3,6	;RP1=0, select bank0
   655  0002' 1D8C               	btfss	12,3	;volatile
   656  0003' 2800'              	goto	u1_21
   657  0004' 2800'              	goto	u1_20
   658  0005'                    u1_21:
   659  0005' 2800'              	goto	i1l64
   660  0006'                    u1_20:
   661  0006'                    i1l698:
   662                           
   663                           ;main.c: 54:         SSPCONbits.CKP = 0;
   664  0006' 1214               	bcf	20,4	;volatile
   665                           
   666                           ;main.c: 56:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   667  0007' 1B14               	btfsc	20,6	;volatile
   668  0008' 2800'              	goto	u2_21
   669  0009' 2800'              	goto	u2_20
   670  000A'                    u2_21:
   671  000A' 2800'              	goto	i1l702
   672  000B'                    u2_20:
   673  000B'                    i1l700:
   674  000B' 1F94               	btfss	20,7	;volatile
   675  000C' 2800'              	goto	u3_21
   676  000D' 2800'              	goto	u3_20
   677  000E'                    u3_21:
   678  000E' 2800'              	goto	i1l710
   679  000F'                    u3_20:
   680  000F'                    i1l702:
   681                           
   682                           ;main.c: 57:             z = SSPBUF;
   683  000F' 0813               	movf	19,w	;volatile
   684  0010' 0084'              	movwf	_z
   685  0011'                    i1l704:
   686                           
   687                           ;main.c: 58:             SSPCONbits.SSPOV = 0;
   688  0011' 1314               	bcf	20,6	;volatile
   689  0012'                    i1l706:
   690                           
   691                           ;main.c: 59:             SSPCONbits.WCOL = 0;
   692  0012' 1394               	bcf	20,7	;volatile
   693  0013'                    i1l708:
   694                           
   695                           ;main.c: 60:             SSPCONbits.CKP = 1;
   696  0013' 1614               	bsf	20,4	;volatile
   697  0014'                    i1l710:
   698                           
   699                           ;main.c: 63:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   700  0014' 1683               	bsf	3,5	;RP0=1, select bank1
   701  0015' 1303               	bcf	3,6	;RP1=0, select bank1
   702  0016' 1A94               	btfsc	20,5	;volatile
   703  0017' 2800'              	goto	u4_21
   704  0018' 2800'              	goto	u4_20
   705  0019'                    u4_21:
   706  0019' 2800'              	goto	i1l55
   707  001A'                    u4_20:
   708  001A'                    i1l712:
   709  001A' 1914               	btfsc	20,2	;volatile
   710  001B' 2800'              	goto	u5_21
   711  001C' 2800'              	goto	u5_20
   712  001D'                    u5_21:
   713  001D' 2800'              	goto	i1l55
   714  001E'                    u5_20:
   715  001E'                    i1l714:
   716                           
   717                           ;main.c: 65:             z = SSPBUF;
   718  001E' 1283               	bcf	3,5	;RP0=0, select bank0
   719  001F' 1303               	bcf	3,6	;RP1=0, select bank0
   720  0020' 0813               	movf	19,w	;volatile
   721  0021' 0084'              	movwf	_z
   722  0022'                    i1l716:
   723                           
   724                           ;main.c: 67:             PIR1bits.SSPIF = 0;
   725  0022' 118C               	bcf	12,3	;volatile
   726  0023'                    i1l718:
   727                           
   728                           ;main.c: 68:             SSPCONbits.CKP = 1;
   729  0023' 1614               	bsf	20,4	;volatile
   730  0024'                    i1l56:	
   731                           ;main.c: 69:             while(!SSPSTATbits.BF);
   732                           
   733  0024' 1683               	bsf	3,5	;RP0=1, select bank1
   734  0025' 1303               	bcf	3,6	;RP1=0, select bank1
   735  0026' 1C14               	btfss	20,0	;volatile
   736  0027' 2800'              	goto	u6_21
   737  0028' 2800'              	goto	u6_20
   738  0029'                    u6_21:
   739  0029' 2800'              	goto	i1l56
   740  002A'                    u6_20:
   741  002A'                    i1l720:
   742                           
   743                           ;main.c: 70:             PORTD = SSPBUF;
   744  002A' 1283               	bcf	3,5	;RP0=0, select bank0
   745  002B' 1303               	bcf	3,6	;RP1=0, select bank0
   746  002C' 0813               	movf	19,w	;volatile
   747  002D' 0088               	movwf	8	;volatile
   748                           
   749                           ;main.c: 71:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   750  002E' 30A6               	movlw	166
   751  002F' 0080'              	movwf	??_isr
   752  0030'                    u35_27:
   753  0030' 0B80'              	decfsz	??_isr,f
   754  0031' 2800'              	goto	u35_27
   755  0032' 0000               	nop
   756                           
   757                           ;main.c: 73:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   758  0033' 2800'              	goto	i1l59
   759  0034'                    i1l55:
   760  0034' 1A94               	btfsc	20,5	;volatile
   761  0035' 2800'              	goto	u7_21
   762  0036' 2800'              	goto	u7_20
   763  0037'                    u7_21:
   764  0037' 2800'              	goto	i1l59
   765  0038'                    u7_20:
   766  0038'                    i1l722:
   767  0038' 1D14               	btfss	20,2	;volatile
   768  0039' 2800'              	goto	u8_21
   769  003A' 2800'              	goto	u8_20
   770  003B'                    u8_21:
   771  003B' 2800'              	goto	i1l59
   772  003C'                    u8_20:
   773  003C'                    i1l724:
   774                           
   775                           ;main.c: 74:             z = SSPBUF;
   776  003C' 1283               	bcf	3,5	;RP0=0, select bank0
   777  003D' 1303               	bcf	3,6	;RP1=0, select bank0
   778  003E' 0813               	movf	19,w	;volatile
   779  003F' 0084'              	movwf	_z
   780  0040'                    i1l726:
   781                           
   782                           ;main.c: 75:             BF = 0;
   783  0040' 1683               	bsf	3,5	;RP0=1, select bank1
   784  0041' 1303               	bcf	3,6	;RP1=0, select bank1
   785  0042' 1014               	bcf	20,0	;volatile
   786                           
   787                           ;main.c: 76:             SSPBUF = PORTB;
   788  0043' 1283               	bcf	3,5	;RP0=0, select bank0
   789  0044' 1303               	bcf	3,6	;RP1=0, select bank0
   790  0045' 0806               	movf	6,w	;volatile
   791  0046' 0093               	movwf	19	;volatile
   792  0047'                    i1l728:
   793                           
   794                           ;main.c: 77:             SSPCONbits.CKP = 1;
   795  0047' 1614               	bsf	20,4	;volatile
   796                           
   797                           ;main.c: 78:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   798  0048' 30A6               	movlw	166
   799  0049' 0080'              	movwf	??_isr
   800  004A'                    u36_27:
   801  004A' 0B80'              	decfsz	??_isr,f
   802  004B' 2800'              	goto	u36_27
   803  004C' 0000               	nop
   804  004D'                    i1l61:	
   805                           ;main.c: 79:             while(SSPSTATbits.BF);
   806                           
   807  004D' 1683               	bsf	3,5	;RP0=1, select bank1
   808  004E' 1303               	bcf	3,6	;RP1=0, select bank1
   809  004F' 1814               	btfsc	20,0	;volatile
   810  0050' 2800'              	goto	u9_21
   811  0051' 2800'              	goto	u9_20
   812  0052'                    u9_21:
   813  0052' 2800'              	goto	i1l61
   814  0053'                    u9_20:
   815  0053'                    i1l59:
   816                           
   817                           ;main.c: 82:         PIR1bits.SSPIF = 0;
   818  0053' 1283               	bcf	3,5	;RP0=0, select bank0
   819  0054' 1303               	bcf	3,6	;RP1=0, select bank0
   820  0055' 118C               	bcf	12,3	;volatile
   821  0056'                    i1l64:
   822  0056' 0802'              	movf	??_isr+2,w
   823  0057' 008A               	movwf	10
   824  0058' 0E01'              	swapf	??_isr+1,w
   825  0059' 0083               	movwf	3
   826  005A' 0EFE               	swapf	btemp,f
   827  005B' 0E7E               	swapf	btemp,w
   828  005C' 0009               	retfie
   829  005D'                    __end_of_isr:
   830  007E                     btemp	set	126	;btemp
   831  007E                     wtemp0	set	126
   832                           
   833                           	psect	intentry
   834  0000'                    __pintentry:	
   835                           ;incstack = 0
   836                           ; Regs used in _isr: [wreg]
   837                           
   838  0000'                    interrupt_function:
   839  007E                     saved_w	set	btemp
   840  0000' 00FE               	movwf	btemp
   841  0001' 0E03               	swapf	3,w
   842  0002' 0081'              	movwf	??_isr+1
   843  0003' 080A               	movf	10,w
   844  0004' 0082'              	movwf	??_isr+2
   845  0005' 120A' 118A' 2800'  	ljmp	_isr
   846                           
   847                           	psect	idloc
   848                           
   849                           ;Config register IDLOC0 @ 0x2000
   850                           ;	unspecified, using default values
   851  2000                     	org	8192
   852  2000  3FFF               	dw	16383
   853                           
   854                           ;Config register IDLOC1 @ 0x2001
   855                           ;	unspecified, using default values
   856  2001                     	org	8193
   857  2001  3FFF               	dw	16383
   858                           
   859                           ;Config register IDLOC2 @ 0x2002
   860                           ;	unspecified, using default values
   861  2002                     	org	8194
   862  2002  3FFF               	dw	16383
   863                           
   864                           ;Config register IDLOC3 @ 0x2003
   865                           ;	unspecified, using default values
   866  2003                     	org	8195
   867  2003  3FFF               	dw	16383
   868                           
   869                           	psect	config
   870                           
   871                           ;Config register CONFIG1 @ 0x2007
   872                           ;	Oscillator Selection bits
   873                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   874                           ;	Watchdog Timer Enable bit
   875                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   876                           ;	Power-up Timer Enable bit
   877                           ;	PWRTE = OFF, PWRT disabled
   878                           ;	RE3/MCLR pin function select bit
   879                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   880                           ;	Code Protection bit
   881                           ;	CP = OFF, Program memory code protection is disabled
   882                           ;	Data Code Protection bit
   883                           ;	CPD = OFF, Data memory code protection is disabled
   884                           ;	Brown Out Reset Selection bits
   885                           ;	BOREN = OFF, BOR disabled
   886                           ;	Internal External Switchover bit
   887                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   888                           ;	Fail-Safe Clock Monitor Enabled bit
   889                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   890                           ;	Low Voltage Programming Enable bit
   891                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   892                           ;	In-Circuit Debugger Mode bit
   893                           ;	DEBUG = 0x1, unprogrammed default
   894  2007                     	org	8199
   895  2007  20D4               	dw	8404
   896                           
   897                           ;Config register CONFIG2 @ 0x2008
   898                           ;	Brown-out Reset Selection bit
   899                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   900                           ;	Flash Program Memory Self Write Enable bits
   901                           ;	WRT = OFF, Write protection off
   902  2008                     	org	8200
   903  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      11
    BANK0            80      2       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 08 22:53:49 2023

                      _z 0004              _SSPSTATbits 0094                       _BF 04A0  
                     l77 0061                       l88 0018                      l830 0000  
                    l840 001F                      l832 0005                      l850 0038  
                    l842 0024                      l834 0008                      l780 000C  
                    l772 0000                      l860 0050                      l852 003E  
                    l844 002A                      l836 0011                      l782 000D  
                    l774 0004                      l870 006C                      l862 0053  
                    l854 0041                      l846 002D                      l838 0019  
                    l784 0011                      l776 0008                      l864 0059  
                    l856 0047                      l848 0033                      l786 0012  
                    l778 0009                      l866 005F                      l858 004A  
                    l868 0061                      u300 0047                      u301 0046  
                    u310 0050                      u311 004F                      u320 0059  
                    u321 0058                      u330 005F                      u331 005E  
                    u260 001F                      u261 001E                      u270 002A  
                    u271 0029                      u280 0033                      u281 0032  
                    u290 003E                      u347 0067                      u291 003D  
                    _isr 0000                     ?_isr 0000                     i1l61 004D  
                   i1l55 0034                     i1l56 0024                     i1l64 0056  
                   i1l59 0053                     u1_20 0006                     u1_21 0005  
                   u2_20 000B                     u2_21 000A                     u3_20 000F  
                   u3_21 000E                     u4_20 001A                     u4_21 0019  
                   u5_20 001E                     u5_21 001D                     u6_20 002A  
                   u6_21 0029                     u7_20 0038                     u7_21 0037  
                   u8_20 003C                     u8_21 003B                     u9_20 0053  
                   u9_21 0052                     _main 0000                     btemp 007E  
                   start 0000*                   ??_isr 0000                    ?_main 0000  
                  _ANSEL 0188                    i1l700 000B                    i1l710 0014  
                  i1l702 000F                    i1l720 002A                    i1l712 001A  
                  i1l704 0011                    i1l722 0038                    i1l714 001E  
                  i1l706 0012                    i1l724 003C                    i1l716 0022  
                  i1l708 0013                    i1l726 0040                    i1l718 0023  
                  i1l728 0047                    i1l696 0000                    i1l698 0006  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  u35_27 0030                    u36_27 004A                    _TRISA 0085  
                  _TRISD 0088                    _setup 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0000  
           __end_of_main 0074                   ??_main 0000                   ?_setup 0000  
                 _ANSELH 0189                   _SSPBUF 0013                   _enviar 0005  
                 _estado 0002                   saved_w 007E  __end_of__initialization 0006  
         __pcstackCOMMON 0000            __end_of_setup 0019                  ??_setup 0003  
             __pnvCOMMON 0000               __pmaintext 0000               __pintentry 0000  
                __ptext1 0000                  __ptext2 0000                  _estado2 0000  
   end_of_initialization 0006           _I2C_Slave_Init 0000*               _PORTAbits 0005  
    start_initialization 0000              __end_of_isr 005D          ?_I2C_Slave_Init 0000  
            __pbssCOMMON 0000                ___latbits 0002            __pcstackBANK0 0000  
              __pnvBANK0 0000        interrupt_function 0000                 _PIR1bits 000C  
       ??_I2C_Slave_Init 0000                 _lectura1 0000                 _lectura2 0000  
               intlevel1 0000*              _OSCCONbits 008F               _SSPCONbits 0014  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 11:00:43 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 04/07/2022 GMT
    24                           ; 
    25                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0008                     _PORTDbits	set	8
   292     0043                     _RD3	set	67
   293     0047                     _RD7	set	71
   294     0046                     _RD6	set	70
   295     0045                     _RD5	set	69
   296     0044                     _RD4	set	68
   297     008F                     _OSCCONbits	set	143
   298     0088                     _TRISD	set	136
   299                           
   300                           	psect	strings
   301     0003                     __pstrings:
   302     0003                     stringtab:
   303     0003                     __stringtab:
   304     0003                     stringcode:	
   305                           ;	String table - string pointers are 1 byte each
   306                           
   307     0003                     stringdir:
   308     0003  3000               	movlw	high stringdir
   309     0004  008A               	movwf	10
   310     0005  0804               	movf	4,w
   311     0006  0A84               	incf	4,f
   312     0007  0782               	addwf	2,f
   313     0008                     __stringbase:
   314     0008  3400               	retlw	0
   315     0009                     __end_of__stringtab:
   316     0009                     STR_5:
   317     0009  3477               	retlw	119	;'w'
   318     000A  3477               	retlw	119	;'w'
   319     000B  3477               	retlw	119	;'w'
   320     000C  342E               	retlw	46	;'.'
   321     000D  3465               	retlw	101	;'e'
   322     000E  346C               	retlw	108	;'l'
   323     000F  3465               	retlw	101	;'e'
   324     0010  3463               	retlw	99	;'c'
   325     0011  3474               	retlw	116	;'t'
   326     0012  3472               	retlw	114	;'r'
   327     0013  346F               	retlw	111	;'o'
   328     0014  3453               	retlw	83	;'S'
   329     0015  346F               	retlw	111	;'o'
   330     0016  346D               	retlw	109	;'m'
   331     0017  3465               	retlw	101	;'e'
   332     0018  342E               	retlw	46	;'.'
   333     0019  3463               	retlw	99	;'c'
   334     001A  346F               	retlw	111	;'o'
   335     001B  346D               	retlw	109	;'m'
   336     001C  3400               	retlw	0
   337     001D                     STR_1:
   338     001D  344C               	retlw	76	;'L'
   339     001E  3443               	retlw	67	;'C'
   340     001F  3444               	retlw	68	;'D'
   341     0020  3420               	retlw	32	;' '
   342     0021  344C               	retlw	76	;'L'
   343     0022  3469               	retlw	105	;'i'
   344     0023  3462               	retlw	98	;'b'
   345     0024  3472               	retlw	114	;'r'
   346     0025  3461               	retlw	97	;'a'
   347     0026  3472               	retlw	114	;'r'
   348     0027  3479               	retlw	121	;'y'
   349     0028  3420               	retlw	32	;' '
   350     0029  3466               	retlw	102	;'f'
   351     002A  346F               	retlw	111	;'o'
   352     002B  3472               	retlw	114	;'r'
   353     002C  3400               	retlw	0
   354     002D                     STR_3:
   355     002D  3444               	retlw	68	;'D'
   356     002E  3465               	retlw	101	;'e'
   357     002F  3476               	retlw	118	;'v'
   358     0030  3465               	retlw	101	;'e'
   359     0031  346C               	retlw	108	;'l'
   360     0032  346F               	retlw	111	;'o'
   361     0033  3470               	retlw	112	;'p'
   362     0034  3465               	retlw	101	;'e'
   363     0035  3464               	retlw	100	;'d'
   364     0036  3420               	retlw	32	;' '
   365     0037  3442               	retlw	66	;'B'
   366     0038  3479               	retlw	121	;'y'
   367     0039  3400               	retlw	0
   368     003A                     STR_4:
   369     003A  3465               	retlw	101	;'e'
   370     003B  346C               	retlw	108	;'l'
   371     003C  3465               	retlw	101	;'e'
   372     003D  3463               	retlw	99	;'c'
   373     003E  3474               	retlw	116	;'t'
   374     003F  3472               	retlw	114	;'r'
   375     0040  346F               	retlw	111	;'o'
   376     0041  3453               	retlw	83	;'S'
   377     0042  346F               	retlw	111	;'o'
   378     0043  346D               	retlw	109	;'m'
   379     0044  3465               	retlw	101	;'e'
   380     0045  3400               	retlw	0
   381     0046                     STR_6:
   382     0046  3448               	retlw	72	;'H'
   383     0047  346F               	retlw	111	;'o'
   384     0048  346C               	retlw	108	;'l'
   385     0049  3461               	retlw	97	;'a'
   386     004A  3420               	retlw	32	;' '
   387     004B  344D               	retlw	77	;'M'
   388     004C  3475               	retlw	117	;'u'
   389     004D  346E               	retlw	110	;'n'
   390     004E  3464               	retlw	100	;'d'
   391     004F  346F               	retlw	111	;'o'
   392     0050  3400               	retlw	0
   393     0051                     STR_2:
   394     0051  344D               	retlw	77	;'M'
   395     0052  3450               	retlw	80	;'P'
   396     0053  344C               	retlw	76	;'L'
   397     0054  3441               	retlw	65	;'A'
   398     0055  3442               	retlw	66	;'B'
   399     0056  3420               	retlw	32	;' '
   400     0057  3458               	retlw	88	;'X'
   401     0058  3443               	retlw	67	;'C'
   402     0059  3438               	retlw	56	;'8'
   403     005A  3400               	retlw	0
   404                           
   405                           	psect	cinit
   406     07FC                     start_initialization:	
   407                           ; #config settings
   408                           
   409     07FC                     __initialization:
   410     07FC                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413     07FC                     __end_of__initialization:
   414     07FC  0183               	clrf	3
   415     07FD  120A  118A  2EF2   	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	cstackCOMMON
   418     0070                     __pcstackCOMMON:
   419     0070                     ?_Lcd_Init:
   420     0070                     ?_Lcd_Clear:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_Lcd_Write_String:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_Lcd_Shift_Left:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_Lcd_Shift_Right:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_Lcd_Write_Char:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_Lcd_Port:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ??_Lcd_Port:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_Lcd_Cmd:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     Lcd_Port@a:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 1 bytes @ 0x0
   452     0070                     	ds	1
   453     0071                     ??_Lcd_Write_Char:
   454     0071                     ??_Lcd_Cmd:	
   455                           ; 1 bytes @ 0x1
   456                           
   457                           
   458                           ; 1 bytes @ 0x1
   459     0071                     	ds	1
   460     0072                     Lcd_Write_Char@temp:
   461                           
   462                           ; 1 bytes @ 0x2
   463     0072                     	ds	1
   464     0073                     Lcd_Cmd@a:
   465     0073                     Lcd_Write_Char@y:	
   466                           ; 1 bytes @ 0x3
   467                           
   468                           
   469                           ; 1 bytes @ 0x3
   470     0073                     	ds	1
   471     0074                     ??_Lcd_Init:
   472     0074                     ??_Lcd_Clear:	
   473                           ; 1 bytes @ 0x4
   474                           
   475     0074                     ?_Lcd_Set_Cursor:	
   476                           ; 1 bytes @ 0x4
   477                           
   478     0074                     ??_Lcd_Shift_Left:	
   479                           ; 1 bytes @ 0x4
   480                           
   481     0074                     ??_Lcd_Shift_Right:	
   482                           ; 1 bytes @ 0x4
   483                           
   484     0074                     Lcd_Set_Cursor@b:	
   485                           ; 1 bytes @ 0x4
   486                           
   487     0074                     Lcd_Write_Char@a:	
   488                           ; 1 bytes @ 0x4
   489                           
   490                           
   491                           ; 1 bytes @ 0x4
   492     0074                     	ds	1
   493     0075                     ??_Lcd_Set_Cursor:
   494     0075                     ??_Lcd_Write_String:	
   495                           ; 1 bytes @ 0x5
   496                           
   497     0075                     Lcd_Write_String@i:	
   498                           ; 1 bytes @ 0x5
   499                           
   500                           
   501                           ; 2 bytes @ 0x5
   502     0075                     	ds	1
   503     0076                     Lcd_Set_Cursor@a:
   504                           
   505                           ; 1 bytes @ 0x6
   506     0076                     	ds	1
   507     0077                     Lcd_Set_Cursor@z:
   508     0077                     Lcd_Write_String@a:	
   509                           ; 1 bytes @ 0x7
   510                           
   511                           
   512                           ; 1 bytes @ 0x7
   513     0077                     	ds	1
   514     0078                     Lcd_Set_Cursor@y:
   515                           
   516                           ; 1 bytes @ 0x8
   517     0078                     	ds	1
   518     0079                     Lcd_Set_Cursor@temp:
   519                           
   520                           ; 1 bytes @ 0x9
   521     0079                     	ds	1
   522     007A                     ??_main:
   523                           
   524                           ; 1 bytes @ 0xA
   525     007A                     	ds	3
   526                           
   527                           	psect	cstackBANK0
   528     0020                     __pcstackBANK0:
   529     0020                     main@a:
   530                           
   531                           ; 2 bytes @ 0x0
   532     0020                     	ds	2
   533                           
   534                           	psect	maintext
   535     06F2                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 39 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  a               2    0[BANK0 ] unsigned int 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       2       0       0       0
   557 ;;      Temps:          3       0       0       0       0
   558 ;;      Totals:         3       2       0       0       0
   559 ;;Total ram usage:        5 bytes
   560 ;; Hardware stack levels required when called: 3
   561 ;; This function calls:
   562 ;;		_Lcd_Clear
   563 ;;		_Lcd_Init
   564 ;;		_Lcd_Set_Cursor
   565 ;;		_Lcd_Shift_Left
   566 ;;		_Lcd_Shift_Right
   567 ;;		_Lcd_Write_Char
   568 ;;		_Lcd_Write_String
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574     06F2                     _main:	
   575                           ;psect for function _main
   576                           
   577     06F2                     l919:	
   578                           ;incstack = 0
   579                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   580                           
   581                           
   582                           ;main.c: 40:   unsigned int a;;main.c: 41:   TRISD = 0x00;
   583     06F2  1683               	bsf	3,5	;RP0=1, select bank1
   584     06F3  1303               	bcf	3,6	;RP1=0, select bank1
   585     06F4  0188               	clrf	8	;volatile
   586     06F5                     l921:
   587                           
   588                           ;main.c: 42:   OSCCONbits.IRCF = 0b111;
   589     06F5  3070               	movlw	112
   590     06F6  048F               	iorwf	15,f	;volatile
   591     06F7                     l923:
   592                           
   593                           ;main.c: 43:   OSCCONbits.SCS = 1;
   594     06F7  140F               	bsf	15,0	;volatile
   595     06F8                     l925:
   596                           
   597                           ;main.c: 44:   Lcd_Init();
   598     06F8  120A  118A  2695  120A  118A  	fcall	_Lcd_Init
   599     06FD                     l927:
   600                           
   601                           ;main.c: 46:   {;main.c: 47:     Lcd_Clear();
   602     06FD  120A  118A  2592  120A  118A  	fcall	_Lcd_Clear
   603     0702                     l929:
   604                           
   605                           ;main.c: 48:     Lcd_Set_Cursor(1,1);
   606     0702  01F4               	clrf	Lcd_Set_Cursor@b
   607     0703  0AF4               	incf	Lcd_Set_Cursor@b,f
   608     0704  3001               	movlw	1
   609     0705  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   610     070A                     l931:
   611                           
   612                           ;main.c: 49:     Lcd_Write_String("LCD Library for");
   613     070A  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   614     070B  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   615     0710                     l933:
   616                           
   617                           ;main.c: 50:     Lcd_Set_Cursor(2,1);
   618     0710  01F4               	clrf	Lcd_Set_Cursor@b
   619     0711  0AF4               	incf	Lcd_Set_Cursor@b,f
   620     0712  3002               	movlw	2
   621     0713  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   622     0718                     l935:
   623                           
   624                           ;main.c: 51:     Lcd_Write_String("MPLAB XC8");
   625     0718  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   626     0719  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   627     071E                     l937:
   628                           
   629                           ;main.c: 52:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   630     071E  3015               	movlw	21
   631     071F  00FC               	movwf	??_main+2
   632     0720  304B               	movlw	75
   633     0721  00FB               	movwf	??_main+1
   634     0722  30BE               	movlw	190
   635     0723  00FA               	movwf	??_main
   636     0724                     u257:
   637     0724  0BFA               	decfsz	??_main,f
   638     0725  2F24               	goto	u257
   639     0726  0BFB               	decfsz	??_main+1,f
   640     0727  2F24               	goto	u257
   641     0728  0BFC               	decfsz	??_main+2,f
   642     0729  2F24               	goto	u257
   643     072A  0000               	nop
   644     072B                     l939:
   645                           
   646                           ;main.c: 53:     Lcd_Clear();
   647     072B  120A  118A  2592  120A  118A  	fcall	_Lcd_Clear
   648     0730                     l941:
   649                           
   650                           ;main.c: 54:     Lcd_Set_Cursor(1,1);
   651     0730  01F4               	clrf	Lcd_Set_Cursor@b
   652     0731  0AF4               	incf	Lcd_Set_Cursor@b,f
   653     0732  3001               	movlw	1
   654     0733  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   655     0738                     l943:
   656                           
   657                           ;main.c: 55:     Lcd_Write_String("Developed By");
   658     0738  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   659     0739  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   660     073E                     l945:
   661                           
   662                           ;main.c: 56:     Lcd_Set_Cursor(2,1);
   663     073E  01F4               	clrf	Lcd_Set_Cursor@b
   664     073F  0AF4               	incf	Lcd_Set_Cursor@b,f
   665     0740  3002               	movlw	2
   666     0741  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   667     0746                     l947:
   668                           
   669                           ;main.c: 57:     Lcd_Write_String("electroSome");
   670     0746  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   671     0747  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   672     074C                     l949:
   673                           
   674                           ;main.c: 58:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   675     074C  3015               	movlw	21
   676     074D  00FC               	movwf	??_main+2
   677     074E  304B               	movlw	75
   678     074F  00FB               	movwf	??_main+1
   679     0750  30BE               	movlw	190
   680     0751  00FA               	movwf	??_main
   681     0752                     u267:
   682     0752  0BFA               	decfsz	??_main,f
   683     0753  2F52               	goto	u267
   684     0754  0BFB               	decfsz	??_main+1,f
   685     0755  2F52               	goto	u267
   686     0756  0BFC               	decfsz	??_main+2,f
   687     0757  2F52               	goto	u267
   688     0758  0000               	nop
   689     0759                     l951:
   690                           
   691                           ;main.c: 59:     Lcd_Clear();
   692     0759  120A  118A  2592  120A  118A  	fcall	_Lcd_Clear
   693     075E                     l953:
   694                           
   695                           ;main.c: 60:     Lcd_Set_Cursor(1,1);
   696     075E  01F4               	clrf	Lcd_Set_Cursor@b
   697     075F  0AF4               	incf	Lcd_Set_Cursor@b,f
   698     0760  3001               	movlw	1
   699     0761  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   700     0766                     l955:
   701                           
   702                           ;main.c: 61:     Lcd_Write_String("www.electroSome.com");
   703     0766  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   704     0767  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   705     076C                     l957:
   706                           
   707                           ;main.c: 63:     for(a=0;a<15;a++)
   708     076C  1283               	bcf	3,5	;RP0=0, select bank0
   709     076D  1303               	bcf	3,6	;RP1=0, select bank0
   710     076E  01A0               	clrf	main@a
   711     076F  01A1               	clrf	main@a+1
   712     0770                     l963:
   713                           
   714                           ;main.c: 64:     {;main.c: 65:         _delay((unsigned long)((300)*(8000000/4000.0)));
   715     0770  3004               	movlw	4
   716     0771  00FC               	movwf	??_main+2
   717     0772  300C               	movlw	12
   718     0773  00FB               	movwf	??_main+1
   719     0774  3033               	movlw	51
   720     0775  00FA               	movwf	??_main
   721     0776                     u277:
   722     0776  0BFA               	decfsz	??_main,f
   723     0777  2F76               	goto	u277
   724     0778  0BFB               	decfsz	??_main+1,f
   725     0779  2F76               	goto	u277
   726     077A  0BFC               	decfsz	??_main+2,f
   727     077B  2F76               	goto	u277
   728     077C  2F7D               	nop2
   729     077D                     l965:
   730                           
   731                           ;main.c: 66:         Lcd_Shift_Left();
   732     077D  120A  118A  259F  120A  118A  	fcall	_Lcd_Shift_Left
   733     0782                     l967:
   734                           
   735                           ;main.c: 67:     }
   736     0782  3001               	movlw	1
   737     0783  1283               	bcf	3,5	;RP0=0, select bank0
   738     0784  1303               	bcf	3,6	;RP1=0, select bank0
   739     0785  07A0               	addwf	main@a,f
   740     0786  1803               	skipnc
   741     0787  0AA1               	incf	main@a+1,f
   742     0788  3000               	movlw	0
   743     0789  07A1               	addwf	main@a+1,f
   744     078A                     l969:
   745     078A  3000               	movlw	0
   746     078B  0221               	subwf	main@a+1,w
   747     078C  300F               	movlw	15
   748     078D  1903               	skipnz
   749     078E  0220               	subwf	main@a,w
   750     078F  1C03               	skipc
   751     0790  2F92               	goto	u231
   752     0791  2F93               	goto	u230
   753     0792                     u231:
   754     0792  2F70               	goto	l963
   755     0793                     u230:
   756     0793                     l971:
   757                           
   758                           ;main.c: 69:     for(a=0;a<15;a++)
   759     0793  01A0               	clrf	main@a
   760     0794  01A1               	clrf	main@a+1
   761     0795                     l977:
   762                           
   763                           ;main.c: 70:     {;main.c: 71:         _delay((unsigned long)((300)*(8000000/4000.0)));
   764     0795  3004               	movlw	4
   765     0796  00FC               	movwf	??_main+2
   766     0797  300C               	movlw	12
   767     0798  00FB               	movwf	??_main+1
   768     0799  3033               	movlw	51
   769     079A  00FA               	movwf	??_main
   770     079B                     u287:
   771     079B  0BFA               	decfsz	??_main,f
   772     079C  2F9B               	goto	u287
   773     079D  0BFB               	decfsz	??_main+1,f
   774     079E  2F9B               	goto	u287
   775     079F  0BFC               	decfsz	??_main+2,f
   776     07A0  2F9B               	goto	u287
   777     07A1  2FA2               	nop2
   778     07A2                     l979:
   779                           
   780                           ;main.c: 72:         Lcd_Shift_Right();
   781     07A2  120A  118A  25AC  120A  118A  	fcall	_Lcd_Shift_Right
   782     07A7                     l981:
   783                           
   784                           ;main.c: 73:     }
   785     07A7  3001               	movlw	1
   786     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   787     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   788     07AA  07A0               	addwf	main@a,f
   789     07AB  1803               	skipnc
   790     07AC  0AA1               	incf	main@a+1,f
   791     07AD  3000               	movlw	0
   792     07AE  07A1               	addwf	main@a+1,f
   793     07AF                     l983:
   794     07AF  3000               	movlw	0
   795     07B0  0221               	subwf	main@a+1,w
   796     07B1  300F               	movlw	15
   797     07B2  1903               	skipnz
   798     07B3  0220               	subwf	main@a,w
   799     07B4  1C03               	skipc
   800     07B5  2FB7               	goto	u241
   801     07B6  2FB8               	goto	u240
   802     07B7                     u241:
   803     07B7  2F95               	goto	l977
   804     07B8                     u240:
   805     07B8                     l985:
   806                           
   807                           ;main.c: 75:     Lcd_Clear();
   808     07B8  120A  118A  2592  120A  118A  	fcall	_Lcd_Clear
   809                           
   810                           ;main.c: 76:     Lcd_Set_Cursor(2,1);
   811     07BD  01F4               	clrf	Lcd_Set_Cursor@b
   812     07BE  0AF4               	incf	Lcd_Set_Cursor@b,f
   813     07BF  3002               	movlw	2
   814     07C0  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   815                           
   816                           ;main.c: 77:     Lcd_Write_Char('H');
   817     07C5  3048               	movlw	72
   818     07C6  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_Char
   819                           
   820                           ;main.c: 78:     Lcd_Write_Char('o');
   821     07CB  306F               	movlw	111
   822     07CC  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_Char
   823                           
   824                           ;main.c: 79:     Lcd_Write_Char('l');
   825     07D1  306C               	movlw	108
   826     07D2  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_Char
   827                           
   828                           ;main.c: 80:     Lcd_Write_Char('a');
   829     07D7  3061               	movlw	97
   830     07D8  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_Char
   831                           
   832                           ;main.c: 81:     Lcd_Set_Cursor(1,1);
   833     07DD  01F4               	clrf	Lcd_Set_Cursor@b
   834     07DE  0AF4               	incf	Lcd_Set_Cursor@b,f
   835     07DF  3001               	movlw	1
   836     07E0  120A  118A  264F  120A  118A  	fcall	_Lcd_Set_Cursor
   837     07E5                     l987:
   838                           
   839                           ;main.c: 82:     Lcd_Write_String("Hola Mundo");
   840     07E5  303E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   841     07E6  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   842     07EB                     l989:
   843                           
   844                           ;main.c: 83:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   845     07EB  3015               	movlw	21
   846     07EC  00FC               	movwf	??_main+2
   847     07ED  304B               	movlw	75
   848     07EE  00FB               	movwf	??_main+1
   849     07EF  30BE               	movlw	190
   850     07F0  00FA               	movwf	??_main
   851     07F1                     u297:
   852     07F1  0BFA               	decfsz	??_main,f
   853     07F2  2FF1               	goto	u297
   854     07F3  0BFB               	decfsz	??_main+1,f
   855     07F4  2FF1               	goto	u297
   856     07F5  0BFC               	decfsz	??_main+2,f
   857     07F6  2FF1               	goto	u297
   858     07F7  0000               	nop
   859     07F8  2EFD               	goto	l927
   860     07F9  120A  118A  2800   	ljmp	start
   861     07FC                     __end_of_main:
   862                           
   863                           	psect	text1
   864     05F5                     __ptext1:	
   865 ;; *************** function _Lcd_Write_String *****************
   866 ;; Defined at:
   867 ;;		line 98 in file "LCD.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  a               1    wreg     PTR unsigned char 
   870 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   871 ;;		 -> STR_2(10), STR_1(16), 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  a               1    7[COMMON] PTR unsigned char 
   874 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   875 ;;		 -> STR_2(10), STR_1(16), 
   876 ;;  i               2    5[COMMON] int 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         3       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         3       0       0       0       0
   890 ;;Total ram usage:        3 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 2
   893 ;; This function calls:
   894 ;;		_Lcd_Write_Char
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     05F5                     _Lcd_Write_String:	
   901                           ;psect for function _Lcd_Write_String
   902                           
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   906                           ;Lcd_Write_String@a stored from wreg
   907     05F5  00F7               	movwf	Lcd_Write_String@a
   908     05F6                     l907:
   909                           
   910                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
   911     05F6  01F5               	clrf	Lcd_Write_String@i
   912     05F7  01F6               	clrf	Lcd_Write_String@i+1
   913     05F8  2E0C               	goto	l913
   914     05F9                     l909:
   915                           
   916                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
   917     05F9  0875               	movf	Lcd_Write_String@i,w
   918     05FA  0777               	addwf	Lcd_Write_String@a,w
   919     05FB  0084               	movwf	4
   920     05FC  120A  118A  2003  120A  118A  	fcall	stringdir
   921     0601  120A  118A  261A  120A  118A  	fcall	_Lcd_Write_Char
   922     0606                     l911:
   923     0606  3001               	movlw	1
   924     0607  07F5               	addwf	Lcd_Write_String@i,f
   925     0608  1803               	skipnc
   926     0609  0AF6               	incf	Lcd_Write_String@i+1,f
   927     060A  3000               	movlw	0
   928     060B  07F6               	addwf	Lcd_Write_String@i+1,f
   929     060C                     l913:
   930     060C  0875               	movf	Lcd_Write_String@i,w
   931     060D  0777               	addwf	Lcd_Write_String@a,w
   932     060E  0084               	movwf	4
   933     060F  120A  118A  2003  120A  118A  	fcall	stringdir
   934     0614  3A00               	xorlw	0
   935     0615  1D03               	skipz
   936     0616  2E18               	goto	u221
   937     0617  2E19               	goto	u220
   938     0618                     u221:
   939     0618  2DF9               	goto	l909
   940     0619                     u220:
   941     0619                     l81:
   942     0619  0008               	return
   943     061A                     __end_of_Lcd_Write_String:
   944                           
   945                           	psect	text2
   946     061A                     __ptext2:	
   947 ;; *************** function _Lcd_Write_Char *****************
   948 ;; Defined at:
   949 ;;		line 83 in file "LCD.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  a               1    wreg     unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  a               1    4[COMMON] unsigned char 
   954 ;;  y               1    3[COMMON] unsigned char 
   955 ;;  temp            1    2[COMMON] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, pclath, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         3       0       0       0       0
   967 ;;      Temps:          1       0       0       0       0
   968 ;;      Totals:         4       0       0       0       0
   969 ;;Total ram usage:        4 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 1
   972 ;; This function calls:
   973 ;;		_Lcd_Port
   974 ;; This function is called by:
   975 ;;		_main
   976 ;;		_Lcd_Write_String
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980     061A                     _Lcd_Write_Char:	
   981                           ;psect for function _Lcd_Write_Char
   982                           
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   986                           ;Lcd_Write_Char@a stored from wreg
   987     061A  00F4               	movwf	Lcd_Write_Char@a
   988     061B                     l845:
   989                           
   990                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
   991     061B  0874               	movf	Lcd_Write_Char@a,w
   992     061C  390F               	andlw	15
   993     061D  00F2               	movwf	Lcd_Write_Char@temp
   994                           
   995                           ;LCD.c: 86:     y = a & 0xF0;
   996     061E  0874               	movf	Lcd_Write_Char@a,w
   997     061F  39F0               	andlw	240
   998     0620  00F3               	movwf	Lcd_Write_Char@y
   999     0621                     l847:
  1000                           
  1001                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1002     0621  1283               	bcf	3,5	;RP0=0, select bank0
  1003     0622  1303               	bcf	3,6	;RP1=0, select bank0
  1004     0623  1508               	bsf	8,2	;volatile
  1005     0624                     l849:
  1006                           
  1007                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1008     0624  0873               	movf	Lcd_Write_Char@y,w
  1009     0625  00F1               	movwf	??_Lcd_Write_Char
  1010     0626  3004               	movlw	4
  1011     0627                     u175:
  1012     0627  1003               	clrc
  1013     0628  0CF1               	rrf	??_Lcd_Write_Char,f
  1014     0629  3EFF               	addlw	-1
  1015     062A  1D03               	skipz
  1016     062B  2E27               	goto	u175
  1017     062C  0871               	movf	??_Lcd_Write_Char,w
  1018     062D  120A  118A  25D3  120A  118A  	fcall	_Lcd_Port
  1019     0632                     l851:
  1020                           
  1021                           ;LCD.c: 89:     RD3 = 1;
  1022     0632  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0633  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0634  1588               	bsf	8,3	;volatile
  1025     0635                     l853:
  1026                           
  1027                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1028     0635  301A               	movlw	26
  1029     0636  00F1               	movwf	??_Lcd_Write_Char
  1030     0637                     u307:
  1031     0637  0BF1               	decfsz	??_Lcd_Write_Char,f
  1032     0638  2E37               	goto	u307
  1033     0639  0000               	nop
  1034     063A                     l855:
  1035                           
  1036                           ;LCD.c: 91:     RD3 = 0;
  1037     063A  1283               	bcf	3,5	;RP0=0, select bank0
  1038     063B  1303               	bcf	3,6	;RP1=0, select bank0
  1039     063C  1188               	bcf	8,3	;volatile
  1040     063D                     l857:
  1041                           
  1042                           ;LCD.c: 92:     Lcd_Port(temp);
  1043     063D  0872               	movf	Lcd_Write_Char@temp,w
  1044     063E  120A  118A  25D3  120A  118A  	fcall	_Lcd_Port
  1045     0643                     l859:
  1046                           
  1047                           ;LCD.c: 93:     RD3 = 1;
  1048     0643  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0644  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0645  1588               	bsf	8,3	;volatile
  1051     0646                     l861:
  1052                           
  1053                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1054     0646  301A               	movlw	26
  1055     0647  00F1               	movwf	??_Lcd_Write_Char
  1056     0648                     u317:
  1057     0648  0BF1               	decfsz	??_Lcd_Write_Char,f
  1058     0649  2E48               	goto	u317
  1059     064A  0000               	nop
  1060     064B                     l863:
  1061                           
  1062                           ;LCD.c: 95:     RD3 = 0;
  1063     064B  1283               	bcf	3,5	;RP0=0, select bank0
  1064     064C  1303               	bcf	3,6	;RP1=0, select bank0
  1065     064D  1188               	bcf	8,3	;volatile
  1066     064E                     l75:
  1067     064E  0008               	return
  1068     064F                     __end_of_Lcd_Write_Char:
  1069                           
  1070                           	psect	text3
  1071     05AC                     __ptext3:	
  1072 ;; *************** function _Lcd_Shift_Right *****************
  1073 ;; Defined at:
  1074 ;;		line 104 in file "LCD.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0
  1091 ;;      Totals:         0       0       0       0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 2
  1095 ;; This function calls:
  1096 ;;		_Lcd_Cmd
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102     05AC                     _Lcd_Shift_Right:	
  1103                           ;psect for function _Lcd_Shift_Right
  1104                           
  1105     05AC                     l917:	
  1106                           ;incstack = 0
  1107                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1108                           
  1109                           
  1110                           ;LCD.c: 105:     Lcd_Cmd(0x01);
  1111     05AC  3001               	movlw	1
  1112     05AD  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1113                           
  1114                           ;LCD.c: 106:     Lcd_Cmd(0x0C);
  1115     05B2  300C               	movlw	12
  1116     05B3  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1117     05B8                     l84:
  1118     05B8  0008               	return
  1119     05B9                     __end_of_Lcd_Shift_Right:
  1120                           
  1121                           	psect	text4
  1122     059F                     __ptext4:	
  1123 ;; *************** function _Lcd_Shift_Left *****************
  1124 ;; Defined at:
  1125 ;;		line 109 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 2
  1146 ;; This function calls:
  1147 ;;		_Lcd_Cmd
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     059F                     _Lcd_Shift_Left:	
  1154                           ;psect for function _Lcd_Shift_Left
  1155                           
  1156     059F                     l915:	
  1157                           ;incstack = 0
  1158                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1159                           
  1160                           
  1161                           ;LCD.c: 110:     Lcd_Cmd(0x01);
  1162     059F  3001               	movlw	1
  1163     05A0  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1164                           
  1165                           ;LCD.c: 111:     Lcd_Cmd(0x08);
  1166     05A5  3008               	movlw	8
  1167     05A6  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1168     05AB                     l87:
  1169     05AB  0008               	return
  1170     05AC                     __end_of_Lcd_Shift_Left:
  1171                           
  1172                           	psect	text5
  1173     064F                     __ptext5:	
  1174 ;; *************** function _Lcd_Set_Cursor *****************
  1175 ;; Defined at:
  1176 ;;		line 48 in file "LCD.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  a               1    wreg     unsigned char 
  1179 ;;  b               1    4[COMMON] unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  a               1    6[COMMON] unsigned char 
  1182 ;;  temp            1    9[COMMON] unsigned char 
  1183 ;;  y               1    8[COMMON] unsigned char 
  1184 ;;  z               1    7[COMMON] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         1       0       0       0       0
  1195 ;;      Locals:         4       0       0       0       0
  1196 ;;      Temps:          1       0       0       0       0
  1197 ;;      Totals:         6       0       0       0       0
  1198 ;;Total ram usage:        6 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 2
  1201 ;; This function calls:
  1202 ;;		_Lcd_Cmd
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208     064F                     _Lcd_Set_Cursor:	
  1209                           ;psect for function _Lcd_Set_Cursor
  1210                           
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1214                           ;Lcd_Set_Cursor@a stored from wreg
  1215     064F  00F6               	movwf	Lcd_Set_Cursor@a
  1216     0650                     l887:
  1217                           
  1218                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1219     0650  0376               	decf	Lcd_Set_Cursor@a,w
  1220     0651  1D03               	btfss	3,2
  1221     0652  2E54               	goto	u181
  1222     0653  2E55               	goto	u180
  1223     0654                     u181:
  1224     0654  2E72               	goto	l897
  1225     0655                     u180:
  1226     0655                     l889:
  1227                           
  1228                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1229     0655  0874               	movf	Lcd_Set_Cursor@b,w
  1230     0656  3E7F               	addlw	127
  1231     0657  00F9               	movwf	Lcd_Set_Cursor@temp
  1232                           
  1233                           ;LCD.c: 52:         z = temp >> 4;
  1234     0658  0879               	movf	Lcd_Set_Cursor@temp,w
  1235     0659  00F5               	movwf	??_Lcd_Set_Cursor
  1236     065A  3004               	movlw	4
  1237     065B                     u195:
  1238     065B  1003               	clrc
  1239     065C  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1240     065D  3EFF               	addlw	-1
  1241     065E  1D03               	skipz
  1242     065F  2E5B               	goto	u195
  1243     0660  0875               	movf	??_Lcd_Set_Cursor,w
  1244     0661  00F7               	movwf	Lcd_Set_Cursor@z
  1245     0662                     l891:
  1246                           
  1247                           ;LCD.c: 53:         y = temp & 0x0F;
  1248     0662  0879               	movf	Lcd_Set_Cursor@temp,w
  1249     0663  390F               	andlw	15
  1250     0664  00F8               	movwf	Lcd_Set_Cursor@y
  1251     0665                     l893:
  1252                           
  1253                           ;LCD.c: 54:         Lcd_Cmd(z);
  1254     0665  0877               	movf	Lcd_Set_Cursor@z,w
  1255     0666  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1256     066B                     l895:
  1257                           
  1258                           ;LCD.c: 55:         Lcd_Cmd(y);
  1259     066B  0878               	movf	Lcd_Set_Cursor@y,w
  1260     066C  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1261                           
  1262                           ;LCD.c: 56:     } else if (a == 2) {
  1263     0671  2E94               	goto	l69
  1264     0672                     l897:
  1265     0672  3002               	movlw	2
  1266     0673  0676               	xorwf	Lcd_Set_Cursor@a,w
  1267     0674  1D03               	btfss	3,2
  1268     0675  2E77               	goto	u201
  1269     0676  2E78               	goto	u200
  1270     0677                     u201:
  1271     0677  2E94               	goto	l69
  1272     0678                     u200:
  1273     0678                     l899:
  1274                           
  1275                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1276     0678  0874               	movf	Lcd_Set_Cursor@b,w
  1277     0679  3EBF               	addlw	191
  1278     067A  00F9               	movwf	Lcd_Set_Cursor@temp
  1279                           
  1280                           ;LCD.c: 58:         z = temp >> 4;
  1281     067B  0879               	movf	Lcd_Set_Cursor@temp,w
  1282     067C  00F5               	movwf	??_Lcd_Set_Cursor
  1283     067D  3004               	movlw	4
  1284     067E                     u215:
  1285     067E  1003               	clrc
  1286     067F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1287     0680  3EFF               	addlw	-1
  1288     0681  1D03               	skipz
  1289     0682  2E7E               	goto	u215
  1290     0683  0875               	movf	??_Lcd_Set_Cursor,w
  1291     0684  00F7               	movwf	Lcd_Set_Cursor@z
  1292     0685                     l901:
  1293                           
  1294                           ;LCD.c: 59:         y = temp & 0x0F;
  1295     0685  0879               	movf	Lcd_Set_Cursor@temp,w
  1296     0686  390F               	andlw	15
  1297     0687  00F8               	movwf	Lcd_Set_Cursor@y
  1298     0688                     l903:
  1299                           
  1300                           ;LCD.c: 60:         Lcd_Cmd(z);
  1301     0688  0877               	movf	Lcd_Set_Cursor@z,w
  1302     0689  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1303     068E                     l905:
  1304                           
  1305                           ;LCD.c: 61:         Lcd_Cmd(y);
  1306     068E  0878               	movf	Lcd_Set_Cursor@y,w
  1307     068F  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1308     0694                     l69:
  1309     0694  0008               	return
  1310     0695                     __end_of_Lcd_Set_Cursor:
  1311                           
  1312                           	psect	text6
  1313     0695                     __ptext6:	
  1314 ;; *************** function _Lcd_Init *****************
  1315 ;; Defined at:
  1316 ;;		line 65 in file "LCD.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0
  1332 ;;      Temps:          2       0       0       0       0
  1333 ;;      Totals:         2       0       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 2
  1337 ;; This function calls:
  1338 ;;		_Lcd_Cmd
  1339 ;;		_Lcd_Port
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345     0695                     _Lcd_Init:	
  1346                           ;psect for function _Lcd_Init
  1347                           
  1348     0695                     l875:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1351                           
  1352                           
  1353                           ;LCD.c: 66:     Lcd_Port(0x00);
  1354     0695  3000               	movlw	0
  1355     0696  120A  118A  25D3  120A  118A  	fcall	_Lcd_Port
  1356     069B                     l877:
  1357                           
  1358                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1359     069B  3034               	movlw	52
  1360     069C  00F5               	movwf	??_Lcd_Init+1
  1361     069D  30F1               	movlw	241
  1362     069E  00F4               	movwf	??_Lcd_Init
  1363     069F                     u327:
  1364     069F  0BF4               	decfsz	??_Lcd_Init,f
  1365     06A0  2E9F               	goto	u327
  1366     06A1  0BF5               	decfsz	??_Lcd_Init+1,f
  1367     06A2  2E9F               	goto	u327
  1368     06A3  2EA4               	nop2
  1369     06A4                     l879:
  1370                           
  1371                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1372     06A4  3003               	movlw	3
  1373     06A5  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1374                           
  1375                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1376     06AA  300D               	movlw	13
  1377     06AB  00F5               	movwf	??_Lcd_Init+1
  1378     06AC  30FB               	movlw	251
  1379     06AD  00F4               	movwf	??_Lcd_Init
  1380     06AE                     u337:
  1381     06AE  0BF4               	decfsz	??_Lcd_Init,f
  1382     06AF  2EAE               	goto	u337
  1383     06B0  0BF5               	decfsz	??_Lcd_Init+1,f
  1384     06B1  2EAE               	goto	u337
  1385     06B2  2EB3               	nop2
  1386     06B3                     l881:
  1387                           
  1388                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1389     06B3  3003               	movlw	3
  1390     06B4  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1391     06B9                     l883:
  1392                           
  1393                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1394     06B9  301D               	movlw	29
  1395     06BA  00F5               	movwf	??_Lcd_Init+1
  1396     06BB  3091               	movlw	145
  1397     06BC  00F4               	movwf	??_Lcd_Init
  1398     06BD                     u347:
  1399     06BD  0BF4               	decfsz	??_Lcd_Init,f
  1400     06BE  2EBD               	goto	u347
  1401     06BF  0BF5               	decfsz	??_Lcd_Init+1,f
  1402     06C0  2EBD               	goto	u347
  1403                           
  1404                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1405     06C1  3003               	movlw	3
  1406     06C2  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1407                           
  1408                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1409     06C7  3002               	movlw	2
  1410     06C8  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1411                           
  1412                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1413     06CD  3002               	movlw	2
  1414     06CE  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1415                           
  1416                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1417     06D3  3008               	movlw	8
  1418     06D4  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1419                           
  1420                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1421     06D9  3000               	movlw	0
  1422     06DA  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1423                           
  1424                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1425     06DF  300C               	movlw	12
  1426     06E0  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1427                           
  1428                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1429     06E5  3000               	movlw	0
  1430     06E6  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1431                           
  1432                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1433     06EB  3006               	movlw	6
  1434     06EC  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1435     06F1                     l72:
  1436     06F1  0008               	return
  1437     06F2                     __end_of_Lcd_Init:
  1438                           
  1439                           	psect	text7
  1440     0592                     __ptext7:	
  1441 ;; *************** function _Lcd_Clear *****************
  1442 ;; Defined at:
  1443 ;;		line 43 in file "LCD.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 2
  1464 ;; This function calls:
  1465 ;;		_Lcd_Cmd
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471     0592                     _Lcd_Clear:	
  1472                           ;psect for function _Lcd_Clear
  1473                           
  1474     0592                     l885:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;LCD.c: 44:     Lcd_Cmd(0);
  1480     0592  3000               	movlw	0
  1481     0593  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1482                           
  1483                           ;LCD.c: 45:     Lcd_Cmd(1);
  1484     0598  3001               	movlw	1
  1485     0599  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1486     059E                     l63:
  1487     059E  0008               	return
  1488     059F                     __end_of_Lcd_Clear:
  1489                           
  1490                           	psect	text8
  1491     05B9                     __ptext8:	
  1492 ;; *************** function _Lcd_Cmd *****************
  1493 ;; Defined at:
  1494 ;;		line 35 in file "LCD.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  a               1    wreg     unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  a               1    3[COMMON] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0
  1510 ;;      Temps:          2       0       0       0       0
  1511 ;;      Totals:         3       0       0       0       0
  1512 ;;Total ram usage:        3 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 1
  1515 ;; This function calls:
  1516 ;;		_Lcd_Port
  1517 ;; This function is called by:
  1518 ;;		_Lcd_Clear
  1519 ;;		_Lcd_Set_Cursor
  1520 ;;		_Lcd_Init
  1521 ;;		_Lcd_Shift_Right
  1522 ;;		_Lcd_Shift_Left
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526     05B9                     _Lcd_Cmd:	
  1527                           ;psect for function _Lcd_Cmd
  1528                           
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1532                           ;Lcd_Cmd@a stored from wreg
  1533     05B9  00F3               	movwf	Lcd_Cmd@a
  1534     05BA                     l865:
  1535                           
  1536                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  1537     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1538     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1539     05BC  1108               	bcf	8,2	;volatile
  1540     05BD                     l867:
  1541                           
  1542                           ;LCD.c: 37:     Lcd_Port(a);
  1543     05BD  0873               	movf	Lcd_Cmd@a,w
  1544     05BE  120A  118A  25D3  120A  118A  	fcall	_Lcd_Port
  1545     05C3                     l869:
  1546                           
  1547                           ;LCD.c: 38:     RD3 = 1;
  1548     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1549     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1550     05C5  1588               	bsf	8,3	;volatile
  1551     05C6                     l871:
  1552                           
  1553                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1554     05C6  300B               	movlw	11
  1555     05C7  00F2               	movwf	??_Lcd_Cmd+1
  1556     05C8  3062               	movlw	98
  1557     05C9  00F1               	movwf	??_Lcd_Cmd
  1558     05CA                     u357:
  1559     05CA  0BF1               	decfsz	??_Lcd_Cmd,f
  1560     05CB  2DCA               	goto	u357
  1561     05CC  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1562     05CD  2DCA               	goto	u357
  1563     05CE  0000               	nop
  1564     05CF                     l873:
  1565                           
  1566                           ;LCD.c: 40:     RD3 = 0;
  1567     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1568     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1569     05D1  1188               	bcf	8,3	;volatile
  1570     05D2                     l60:
  1571     05D2  0008               	return
  1572     05D3                     __end_of_Lcd_Cmd:
  1573                           
  1574                           	psect	text9
  1575     05D3                     __ptext9:	
  1576 ;; *************** function _Lcd_Port *****************
  1577 ;; Defined at:
  1578 ;;		line 13 in file "LCD.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  a               1    wreg     unsigned char 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  a               1    0[COMMON] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       0       0       0       0
  1593 ;;      Locals:         1       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0
  1595 ;;      Totals:         1       0       0       0       0
  1596 ;;Total ram usage:        1 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_Lcd_Cmd
  1602 ;;		_Lcd_Init
  1603 ;;		_Lcd_Write_Char
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607     05D3                     _Lcd_Port:	
  1608                           ;psect for function _Lcd_Port
  1609                           
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _Lcd_Port: [wreg]
  1613                           ;Lcd_Port@a stored from wreg
  1614     05D3  00F0               	movwf	Lcd_Port@a
  1615     05D4                     l835:
  1616                           
  1617                           ;LCD.c: 14:     if (a & 1)
  1618     05D4  1C70               	btfss	Lcd_Port@a,0
  1619     05D5  2DD7               	goto	u131
  1620     05D6  2DD8               	goto	u130
  1621     05D7                     u131:
  1622     05D7  2DDC               	goto	l49
  1623     05D8                     u130:
  1624     05D8                     l837:
  1625                           
  1626                           ;LCD.c: 15:         RD4 = 1;
  1627     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1628     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1629     05DA  1608               	bsf	8,4	;volatile
  1630     05DB  2DDF               	goto	l50
  1631     05DC                     l49:	
  1632                           ;LCD.c: 16:     else
  1633                           
  1634                           
  1635                           ;LCD.c: 17:         RD4 = 0;
  1636     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1637     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1638     05DE  1208               	bcf	8,4	;volatile
  1639     05DF                     l50:
  1640                           
  1641                           ;LCD.c: 19:     if (a & 2)
  1642     05DF  1CF0               	btfss	Lcd_Port@a,1
  1643     05E0  2DE2               	goto	u141
  1644     05E1  2DE3               	goto	u140
  1645     05E2                     u141:
  1646     05E2  2DE5               	goto	l51
  1647     05E3                     u140:
  1648     05E3                     l839:
  1649                           
  1650                           ;LCD.c: 20:         RD5 = 1;
  1651     05E3  1688               	bsf	8,5	;volatile
  1652     05E4  2DE6               	goto	l52
  1653     05E5                     l51:	
  1654                           ;LCD.c: 21:     else
  1655                           
  1656                           
  1657                           ;LCD.c: 22:         RD5 = 0;
  1658     05E5  1288               	bcf	8,5	;volatile
  1659     05E6                     l52:
  1660                           
  1661                           ;LCD.c: 24:     if (a & 4)
  1662     05E6  1D70               	btfss	Lcd_Port@a,2
  1663     05E7  2DE9               	goto	u151
  1664     05E8  2DEA               	goto	u150
  1665     05E9                     u151:
  1666     05E9  2DEC               	goto	l53
  1667     05EA                     u150:
  1668     05EA                     l841:
  1669                           
  1670                           ;LCD.c: 25:         RD6 = 1;
  1671     05EA  1708               	bsf	8,6	;volatile
  1672     05EB  2DED               	goto	l54
  1673     05EC                     l53:	
  1674                           ;LCD.c: 26:     else
  1675                           
  1676                           
  1677                           ;LCD.c: 27:         RD6 = 0;
  1678     05EC  1308               	bcf	8,6	;volatile
  1679     05ED                     l54:
  1680                           
  1681                           ;LCD.c: 29:     if (a & 8)
  1682     05ED  1DF0               	btfss	Lcd_Port@a,3
  1683     05EE  2DF0               	goto	u161
  1684     05EF  2DF1               	goto	u160
  1685     05F0                     u161:
  1686     05F0  2DF3               	goto	l55
  1687     05F1                     u160:
  1688     05F1                     l843:
  1689                           
  1690                           ;LCD.c: 30:         RD7 = 1;
  1691     05F1  1788               	bsf	8,7	;volatile
  1692     05F2  2DF4               	goto	l57
  1693     05F3                     l55:	
  1694                           ;LCD.c: 31:     else
  1695                           
  1696                           
  1697                           ;LCD.c: 32:         RD7 = 0;
  1698     05F3  1388               	bcf	8,7	;volatile
  1699     05F4                     l57:
  1700     05F4  0008               	return
  1701     05F5                     __end_of_Lcd_Port:
  1702     007E                     btemp	set	126	;btemp
  1703     007E                     wtemp0	set	126
  1704                           
  1705                           	psect	idloc
  1706                           
  1707                           ;Config register IDLOC0 @ 0x2000
  1708                           ;	unspecified, using default values
  1709     2000                     	org	8192
  1710     2000  3FFF               	dw	16383
  1711                           
  1712                           ;Config register IDLOC1 @ 0x2001
  1713                           ;	unspecified, using default values
  1714     2001                     	org	8193
  1715     2001  3FFF               	dw	16383
  1716                           
  1717                           ;Config register IDLOC2 @ 0x2002
  1718                           ;	unspecified, using default values
  1719     2002                     	org	8194
  1720     2002  3FFF               	dw	16383
  1721                           
  1722                           ;Config register IDLOC3 @ 0x2003
  1723                           ;	unspecified, using default values
  1724     2003                     	org	8195
  1725     2003  3FFF               	dw	16383
  1726                           
  1727                           	psect	config
  1728                           
  1729                           ;Config register CONFIG1 @ 0x2007
  1730                           ;	Oscillator Selection bits
  1731                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1732                           ;	Watchdog Timer Enable bit
  1733                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1734                           ;	Power-up Timer Enable bit
  1735                           ;	PWRTE = OFF, PWRT disabled
  1736                           ;	RE3/MCLR pin function select bit
  1737                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1738                           ;	Code Protection bit
  1739                           ;	CP = OFF, Program memory code protection is disabled
  1740                           ;	Data Code Protection bit
  1741                           ;	CPD = OFF, Data memory code protection is disabled
  1742                           ;	Brown Out Reset Selection bits
  1743                           ;	BOREN = OFF, BOR disabled
  1744                           ;	Internal External Switchover bit
  1745                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1746                           ;	Fail-Safe Clock Monitor Enabled bit
  1747                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1748                           ;	Low Voltage Programming Enable bit
  1749                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1750                           ;	In-Circuit Debugger Mode bit
  1751                           ;	DEBUG = 0x1, unprogrammed default
  1752     2007                     	org	8199
  1753     2007  20D6               	dw	8406
  1754                           
  1755                           ;Config register CONFIG2 @ 0x2008
  1756                           ;	Brown-out Reset Selection bit
  1757                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1758                           ;	Flash Program Memory Self Write Enable bits
  1759                           ;	WRT = OFF, Write protection off
  1760     2008                     	org	8200
  1761     2008  3FFF               	dw	16383

Data Sizes:
    Strings     82
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_6(CODE[11]), STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2176
                                             10 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     466
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     912
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Shift_Left
     _Lcd_Cmd
   _Lcd_Shift_Right
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 11:00:43 2023

                       pc 0002                        l50 05DF                        l51 05E5  
                      l52 05E6                        l60 05D2                        l53 05EC  
                      l54 05ED                        l55 05F3                        l63 059E  
                      l72 06F1                        l57 05F4                        l49 05DC  
                      l81 0619                        l75 064E                        l84 05B8  
                      l69 0694                        l87 05AB                        fsr 0004  
                     l901 0685                       l903 0688                       l911 0606  
                     l841 05EA                       l905 068E                       l913 060C  
                     l921 06F5                       l843 05F1                       l835 05D4  
                     l915 059F                       l851 0632                       l907 05F6  
                     l931 070A                       l923 06F7                       l837 05D8  
                     l917 05AC                       l861 0646                       l853 0635  
                     l845 061B                       l909 05F9                       l941 0730  
                     l933 0710                       l925 06F8                       l839 05E3  
                     l871 05C6                       l863 064B                       l855 063A  
                     l847 0621                       l951 0759                       l943 0738  
                     l935 0718                       l927 06FD                       l919 06F2  
                     l873 05CF                       l865 05BA                       l881 06B3  
                     l857 063D                       l849 0624                       l953 075E  
                     l945 073E                       l937 071E                       l929 0702  
                     l867 05BD                       l883 06B9                       l875 0695  
                     l891 0662                       l859 0643                       l971 0793  
                     l963 0770                       l955 0766                       l947 0746  
                     l939 072B                       l869 05C3                       l885 0592  
                     l877 069B                       l893 0665                       l981 07A7  
                     l965 077D                       l957 076C                       l949 074C  
                     l879 06A4                       l895 066B                       l887 0650  
                     l983 07AF                       l967 0782                       l889 0655  
                     l897 0672                       l985 07B8                       l977 0795  
                     l969 078A                       l899 0678                       l987 07E5  
                     l979 07A2                       l989 07EB                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       u200 0678                       u201 0677  
                     u130 05D8                       u131 05D7                       u140 05E3  
                     u220 0619                       u141 05E2                       u221 0618  
                     u150 05EA                       u230 0793                       u151 05E9  
                     u215 067E                       u231 0792                       u160 05F1  
                     u240 07B8                       u161 05F0                       u241 07B7  
                     u307 0637                       u180 0655                       u181 0654  
                     u317 0648                       u327 069F                       u175 0627  
                     u337 06AE                       u257 0724                       u347 06BD  
                     u195 065B                       u267 0752                       u357 05CA  
                     u277 0776                       u287 079B                       u297 07F1  
                     fsr0 0004                      STR_1 001D                      STR_2 0051  
                    STR_3 002D                      STR_4 003A                      STR_5 0009  
                    STR_6 0046         ?_Lcd_Write_String 0070                      _main 06F2  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 05D3                     ?_main 0070                     _TRISD 0088  
                   main@a 0020                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 06F2          __end_of_Lcd_Port 05F5  
         __initialization 07FC              __end_of_main 07FC                    ??_main 007A  
               ??_Lcd_Cmd 0071           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 059F            __pcstackCOMMON 0070            _Lcd_Set_Cursor 064F  
          _Lcd_Shift_Left 059F                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
              __pmaintext 06F2    __end_of_Lcd_Set_Cursor 0695    __end_of_Lcd_Shift_Left 05AC  
       ??_Lcd_Shift_Right 0074                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
              __stringtab 0003            _Lcd_Write_Char 061A                   _Lcd_Cmd 05B9  
         ?_Lcd_Set_Cursor 0074                   __ptext1 05F5                   __ptext2 061A  
                 __ptext3 05AC                   __ptext4 059F                   __ptext5 064F  
                 __ptext6 0695                   __ptext7 0592                   __ptext8 05B9  
                 __ptext9 05D3           ?_Lcd_Shift_Left 0070    __end_of_Lcd_Write_Char 064F  
    end_of_initialization 07FC                 Lcd_Port@a 0070                 _PORTDbits 0008  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077         Lcd_Write_String@i 0075  
               _Lcd_Clear 0592          _Lcd_Write_String 05F5       start_initialization 07FC  
              ?_Lcd_Clear 0070           _Lcd_Shift_Right 05AC           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0075          ??_Lcd_Shift_Left 0074  
               __pstrings 0003   __end_of_Lcd_Shift_Right 05B9                  Lcd_Cmd@a 0073  
             ??_Lcd_Clear 0074               __stringbase 0008          ??_Lcd_Write_Char 0071  
                _Lcd_Init 0695                  _Lcd_Port 05D3  __end_of_Lcd_Write_String 061A  
      __end_of__stringtab 0009          ?_Lcd_Shift_Right 0070        Lcd_Write_Char@temp 0072  
               stringcode 0003                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                stringdir 0003                  stringtab 0003  

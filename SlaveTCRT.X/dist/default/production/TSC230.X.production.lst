

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 09:24:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381                           
   382                           	psect	strings
   383     0800                     __pstrings:
   384     0800                     stringtab:
   385     0800                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388     0800  1BFF               	btfsc	btemp+1,7
   389     0801  280A               	ljmp	stringcode
   390     0802  1383               	bcf	3,7
   391     0803  187F               	btfsc	btemp+1,0
   392     0804  1783               	bsf	3,7
   393     0805  0800               	movf	0,w
   394     0806  0A84               	incf	4,f
   395     0807  1903               	skipnz
   396     0808  0AFF               	incf	btemp+1,f
   397     0809  0008               	return
   398     080A                     stringcode:
   399     080A                     stringdir:
   400     080A  3008               	movlw	high stringdir
   401     080B  008A               	movwf	10
   402     080C  0804               	movf	4,w
   403     080D  0A84               	incf	4,f
   404     080E  0782               	addwf	2,f
   405     080F                     __stringbase:
   406     080F  3400               	retlw	0
   407     0810                     __end_of__stringtab:
   408     0810                     _dpowers:
   409     0810  3401               	retlw	1
   410     0811  3400               	retlw	0
   411     0812  3400               	retlw	0
   412     0813  3400               	retlw	0
   413     0814  340A               	retlw	10
   414     0815  3400               	retlw	0
   415     0816  3400               	retlw	0
   416     0817  3400               	retlw	0
   417     0818  3464               	retlw	100
   418     0819  3400               	retlw	0
   419     081A  3400               	retlw	0
   420     081B  3400               	retlw	0
   421     081C  34E8               	retlw	232
   422     081D  3403               	retlw	3
   423     081E  3400               	retlw	0
   424     081F  3400               	retlw	0
   425     0820  3410               	retlw	16
   426     0821  3427               	retlw	39
   427     0822  3400               	retlw	0
   428     0823  3400               	retlw	0
   429     0824  34A0               	retlw	160
   430     0825  3486               	retlw	134
   431     0826  3401               	retlw	1
   432     0827  3400               	retlw	0
   433     0828  3440               	retlw	64
   434     0829  3442               	retlw	66
   435     082A  340F               	retlw	15
   436     082B  3400               	retlw	0
   437     082C  3480               	retlw	128
   438     082D  3496               	retlw	150
   439     082E  3498               	retlw	152
   440     082F  3400               	retlw	0
   441     0830  3400               	retlw	0
   442     0831  34E1               	retlw	225
   443     0832  34F5               	retlw	245
   444     0833  3405               	retlw	5
   445     0834  3400               	retlw	0
   446     0835  34CA               	retlw	202
   447     0836  349A               	retlw	154
   448     0837  343B               	retlw	59
   449     0838                     __end_of_dpowers:
   450     000E                     _TMR1	set	14
   451     0005                     _PORTAbits	set	5
   452     0010                     _T1CONbits	set	16
   453     0008                     _PORTDbits	set	8
   454     0008                     _PORTD	set	8
   455     0041                     _RD1	set	65
   456     0040                     _RD0	set	64
   457     0043                     _RD3	set	67
   458     0047                     _RD7	set	71
   459     0046                     _RD6	set	70
   460     0045                     _RD5	set	69
   461     0044                     _RD4	set	68
   462     008F                     _OSCCONbits	set	143
   463     0085                     _TRISA	set	133
   464     0088                     _TRISD	set	136
   465     0189                     _ANSELH	set	393
   466     0188                     _ANSEL	set	392
   467     0838                     STR_1:
   468     0838  3452               	retlw	82	;'R'
   469     0839  344F               	retlw	79	;'O'
   470     083A  344A               	retlw	74	;'J'
   471     083B  344F               	retlw	79	;'O'
   472     083C  3420               	retlw	32	;' '
   473     083D  3456               	retlw	86	;'V'
   474     083E  3445               	retlw	69	;'E'
   475     083F  3452               	retlw	82	;'R'
   476     0840  3444               	retlw	68	;'D'
   477     0841  3445               	retlw	69	;'E'
   478     0842  3420               	retlw	32	;' '
   479     0843  3441               	retlw	65	;'A'
   480     0844  345A               	retlw	90	;'Z'
   481     0845  3455               	retlw	85	;'U'
   482     0846  344C               	retlw	76	;'L'
   483     0847  3400               	retlw	0
   484     0848                     STR_2:
   485     0848  3425               	retlw	37	;'%'
   486     0849  346C               	retlw	108	;'l'
   487     084A  3475               	retlw	117	;'u'
   488     084B  3400               	retlw	0
   489     0848                     
   490                           	psect	cinit
   491     07F3                     start_initialization:	
   492                           ; #config settings
   493                           
   494     07F3                     __initialization:
   495                           
   496                           ; Clear objects allocated to BANK0
   497     07F3  1383               	bcf	3,7	;select IRP bank0
   498     07F4  3050               	movlw	low __pbssBANK0
   499     07F5  0084               	movwf	4
   500     07F6  306D               	movlw	low (__pbssBANK0+29)
   501     07F7  120A  158A  25EF  120A  118A  	fcall	clear_ram0
   502     07FC                     end_of_initialization:	
   503                           ;End of C runtime variable initialization code
   504                           
   505     07FC                     __end_of__initialization:
   506     07FC  0183               	clrf	3
   507     07FD  120A  118A  2AB6   	ljmp	_main	;jump to C main() function
   508                           
   509                           	psect	bssBANK0
   510     0050                     __pbssBANK0:
   511     0050                     _green_freq:
   512     0050                     	ds	4
   513     0054                     _blue_freq:
   514     0054                     	ds	4
   515     0058                     _red_freq:
   516     0058                     	ds	4
   517     005C                     _cont:
   518     005C                     	ds	3
   519     005F                     _contador:
   520     005F                     	ds	2
   521     0061                     _verde:
   522     0061                     	ds	4
   523     0065                     _azul:
   524     0065                     	ds	4
   525     0069                     _rojo:
   526     0069                     	ds	4
   527                           
   528                           	psect	clrtext
   529     0DEF                     clear_ram0:	
   530                           ;	Called with FSR containing the base address, and
   531                           ;	W with the last address+1
   532                           
   533     0DEF  0064               	clrwdt	;clear the watchdog before getting into this loop
   534     0DF0                     clrloop0:
   535     0DF0  0180               	clrf	0	;clear RAM location pointed to by FSR
   536     0DF1  0A84               	incf	4,f	;increment pointer
   537     0DF2  0604               	xorwf	4,w	;XOR with final address
   538     0DF3  1903               	btfsc	3,2	;have we reached the end yet?
   539     0DF4  3400               	retlw	0	;all done for this memory range, return
   540     0DF5  0604               	xorwf	4,w	;XOR again to restore value
   541     0DF6  2DF0               	goto	clrloop0	;do the next byte
   542                           
   543                           	psect	cstackCOMMON
   544     0070                     __pcstackCOMMON:
   545     0070                     ?_setup:
   546     0070                     ??_setup:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_Lcd_Init:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_config_TCS230:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ??_config_TCS230:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_Lcd_Clear:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_main:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_Lcd_Port:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_Lcd_Port:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_Lcd_Cmd:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_Lcd_Write_Char:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?__Umul8_16:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?___lldiv:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0070                     ?___xxtofl:	
   583                           ; 4 bytes @ 0x0
   584                           
   585     0070                     Lcd_Port@a:	
   586                           ; 4 bytes @ 0x0
   587                           
   588     0070                     __Umul8_16@multiplicand:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ___lldiv@divisor:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ___xxtofl@val:	
   595                           ; 4 bytes @ 0x0
   596                           
   597                           
   598                           ; 4 bytes @ 0x0
   599     0070                     	ds	1
   600     0071                     ??_Lcd_Cmd:
   601     0071                     ??_Lcd_Write_Char:	
   602                           ; 1 bytes @ 0x1
   603                           
   604                           
   605                           ; 1 bytes @ 0x1
   606     0071                     	ds	1
   607     0072                     ??__Umul8_16:
   608     0072                     Lcd_Write_Char@temp:	
   609                           ; 1 bytes @ 0x2
   610                           
   611                           
   612                           ; 1 bytes @ 0x2
   613     0072                     	ds	1
   614     0073                     Lcd_Cmd@a:
   615     0073                     Lcd_Write_Char@y:	
   616                           ; 1 bytes @ 0x3
   617                           
   618                           
   619                           ; 1 bytes @ 0x3
   620     0073                     	ds	1
   621     0074                     ??_Lcd_Init:
   622     0074                     ??_Lcd_Clear:	
   623                           ; 1 bytes @ 0x4
   624                           
   625     0074                     ?_Lcd_Set_Cursor:	
   626                           ; 1 bytes @ 0x4
   627                           
   628     0074                     ??___xxtofl:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0074                     Lcd_Set_Cursor@b:	
   632                           ; 1 bytes @ 0x4
   633                           
   634     0074                     Lcd_Write_Char@a:	
   635                           ; 1 bytes @ 0x4
   636                           
   637     0074                     __Umul8_16@product:	
   638                           ; 1 bytes @ 0x4
   639                           
   640     0074                     ___lldiv@dividend:	
   641                           ; 2 bytes @ 0x4
   642                           
   643                           
   644                           ; 4 bytes @ 0x4
   645     0074                     	ds	1
   646     0075                     ??_Lcd_Set_Cursor:
   647     0075                     ?_Lcd_Write_String:	
   648                           ; 1 bytes @ 0x5
   649                           
   650     0075                     Lcd_Write_String@a:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 2 bytes @ 0x5
   655     0075                     	ds	1
   656     0076                     Lcd_Set_Cursor@a:
   657     0076                     __Umul8_16@word_mpld:	
   658                           ; 1 bytes @ 0x6
   659                           
   660                           
   661                           ; 2 bytes @ 0x6
   662     0076                     	ds	1
   663     0077                     ??_Lcd_Write_String:
   664     0077                     Lcd_Set_Cursor@z:	
   665                           ; 1 bytes @ 0x7
   666                           
   667                           
   668                           ; 1 bytes @ 0x7
   669     0077                     	ds	1
   670     0078                     ??___lldiv:
   671     0078                     Lcd_Set_Cursor@y:	
   672                           ; 1 bytes @ 0x8
   673                           
   674     0078                     __Umul8_16@multiplier:	
   675                           ; 1 bytes @ 0x8
   676                           
   677     0078                     ___xxtofl@sign:	
   678                           ; 1 bytes @ 0x8
   679                           
   680                           
   681                           ; 1 bytes @ 0x8
   682     0078                     	ds	1
   683     0079                     Lcd_Set_Cursor@temp:
   684     0079                     ___xxtofl@exp:	
   685                           ; 1 bytes @ 0x9
   686                           
   687     0079                     ___lldiv@quotient:	
   688                           ; 1 bytes @ 0x9
   689                           
   690                           
   691                           ; 4 bytes @ 0x9
   692     0079                     	ds	1
   693     007A                     Lcd_Write_String@i:
   694     007A                     ___xxtofl@arg:	
   695                           ; 2 bytes @ 0xA
   696                           
   697                           
   698                           ; 4 bytes @ 0xA
   699     007A                     	ds	3
   700     007D                     ___lldiv@counter:
   701                           
   702                           ; 1 bytes @ 0xD
   703     007D                     	ds	1
   704                           
   705                           	psect	cstackBANK0
   706     0020                     __pcstackBANK0:
   707     0020                     ?___llmod:
   708     0020                     ?___flmul:	
   709                           ; 4 bytes @ 0x0
   710                           
   711     0020                     ___llmod@divisor:	
   712                           ; 4 bytes @ 0x0
   713                           
   714     0020                     ___flmul@b:	
   715                           ; 4 bytes @ 0x0
   716                           
   717                           
   718                           ; 4 bytes @ 0x0
   719     0020                     	ds	4
   720     0024                     ___llmod@dividend:
   721     0024                     ___flmul@a:	
   722                           ; 4 bytes @ 0x4
   723                           
   724                           
   725                           ; 4 bytes @ 0x4
   726     0024                     	ds	4
   727     0028                     ??___llmod:
   728     0028                     ??___flmul:	
   729                           ; 1 bytes @ 0x8
   730                           
   731                           
   732                           ; 1 bytes @ 0x8
   733     0028                     	ds	1
   734     0029                     ___llmod@counter:
   735                           
   736                           ; 1 bytes @ 0x9
   737     0029                     	ds	1
   738     002A                     ?_sprintf:
   739     002A                     sprintf@f:	
   740                           ; 2 bytes @ 0xA
   741                           
   742                           
   743                           ; 1 bytes @ 0xA
   744     002A                     	ds	3
   745     002D                     ___flmul@sign:
   746                           
   747                           ; 1 bytes @ 0xD
   748     002D                     	ds	1
   749     002E                     ___flmul@grs:
   750                           
   751                           ; 4 bytes @ 0xE
   752     002E                     	ds	1
   753     002F                     ??_sprintf:
   754                           
   755                           ; 1 bytes @ 0xF
   756     002F                     	ds	3
   757     0032                     ___flmul@aexp:
   758                           
   759                           ; 1 bytes @ 0x12
   760     0032                     	ds	1
   761     0033                     ___flmul@bexp:
   762                           
   763                           ; 1 bytes @ 0x13
   764     0033                     	ds	1
   765     0034                     sprintf@flag:
   766     0034                     ___flmul@prod:	
   767                           ; 1 bytes @ 0x14
   768                           
   769                           
   770                           ; 4 bytes @ 0x14
   771     0034                     	ds	1
   772     0035                     sprintf@prec:
   773                           
   774                           ; 2 bytes @ 0x15
   775     0035                     	ds	2
   776     0037                     sprintf@val:
   777                           
   778                           ; 4 bytes @ 0x17
   779     0037                     	ds	1
   780     0038                     ___flmul@temp:
   781                           
   782                           ; 2 bytes @ 0x18
   783     0038                     	ds	2
   784     003A                     ?___fltol:
   785     003A                     ___fltol@f1:	
   786                           ; 4 bytes @ 0x1A
   787                           
   788                           
   789                           ; 4 bytes @ 0x1A
   790     003A                     	ds	1
   791     003B                     sprintf@ap:
   792                           
   793                           ; 1 bytes @ 0x1B
   794     003B                     	ds	1
   795     003C                     sprintf@sp:
   796                           
   797                           ; 1 bytes @ 0x1C
   798     003C                     	ds	1
   799     003D                     sprintf@c:
   800                           
   801                           ; 1 bytes @ 0x1D
   802     003D                     	ds	1
   803     003E                     ??___fltol:
   804                           
   805                           ; 1 bytes @ 0x1E
   806     003E                     	ds	4
   807     0042                     ___fltol@sign1:
   808                           
   809                           ; 1 bytes @ 0x22
   810     0042                     	ds	1
   811     0043                     ___fltol@exp1:
   812                           
   813                           ; 1 bytes @ 0x23
   814     0043                     	ds	1
   815     0044                     ?_read_red:
   816     0044                     ?_read_green:	
   817                           ; 4 bytes @ 0x24
   818                           
   819     0044                     ?_read_blue:	
   820                           ; 4 bytes @ 0x24
   821                           
   822                           
   823                           ; 4 bytes @ 0x24
   824     0044                     	ds	4
   825     0048                     ??_read_red:
   826     0048                     ??_read_green:	
   827                           ; 1 bytes @ 0x28
   828                           
   829     0048                     ??_read_blue:	
   830                           ; 1 bytes @ 0x28
   831                           
   832                           
   833                           ; 1 bytes @ 0x28
   834     0048                     	ds	1
   835     0049                     read_red@temp_freq:
   836     0049                     read_green@temp_freq:	
   837                           ; 4 bytes @ 0x29
   838                           
   839     0049                     read_blue@temp_freq:	
   840                           ; 4 bytes @ 0x29
   841                           
   842                           
   843                           ; 4 bytes @ 0x29
   844     0049                     	ds	4
   845     004D                     ??_main:
   846                           
   847                           ; 1 bytes @ 0x2D
   848     004D                     	ds	3
   849                           
   850                           	psect	maintext
   851     02B6                     __pmaintext:	
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 51 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : B00/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       3       0       0       0
   874 ;;      Totals:         0       3       0       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels required when called: 3
   877 ;; This function calls:
   878 ;;		_Lcd_Clear
   879 ;;		_Lcd_Init
   880 ;;		_Lcd_Set_Cursor
   881 ;;		_Lcd_Write_String
   882 ;;		_config_TCS230
   883 ;;		_read_blue
   884 ;;		_read_green
   885 ;;		_read_red
   886 ;;		_setup
   887 ;;		_sprintf
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     02B6                     _main:	
   894                           ;psect for function _main
   895                           
   896     02B6                     l1820:	
   897                           ;incstack = 0
   898                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   899                           
   900                           
   901                           ;main.c: 52:     setup();
   902     02B6  120A  158A  260E  120A  118A  	fcall	_setup
   903     02BB                     l1822:
   904                           
   905                           ;main.c: 53:     TRISD = 0x00;
   906     02BB  1683               	bsf	3,5	;RP0=1, select bank1
   907     02BC  1303               	bcf	3,6	;RP1=0, select bank1
   908     02BD  0188               	clrf	8	;volatile
   909     02BE                     l1824:
   910                           
   911                           ;main.c: 54:     Lcd_Init();
   912     02BE  120A  158A  2740  120A  118A  	fcall	_Lcd_Init
   913     02C3                     l1826:
   914                           
   915                           ;main.c: 55:     config_TCS230();
   916     02C3  120A  158A  25F7  120A  118A  	fcall	_config_TCS230
   917     02C8                     l1828:
   918                           
   919                           ;main.c: 58:   {;main.c: 60:     Lcd_Clear();
   920     02C8  120A  158A  2601  120A  118A  	fcall	_Lcd_Clear
   921     02CD                     l1830:
   922                           
   923                           ;main.c: 61:     Lcd_Set_Cursor(1,1);
   924     02CD  01F4               	clrf	Lcd_Set_Cursor@b
   925     02CE  0AF4               	incf	Lcd_Set_Cursor@b,f
   926     02CF  3001               	movlw	1
   927     02D0  120A  158A  26FA  120A  118A  	fcall	_Lcd_Set_Cursor
   928     02D5                     l1832:
   929                           
   930                           ;main.c: 62:     Lcd_Write_String("ROJO VERDE AZUL");
   931     02D5  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   932     02D6  00F5               	movwf	Lcd_Write_String@a
   933     02D7  3080               	movlw	128
   934     02D8  00F6               	movwf	Lcd_Write_String@a+1
   935     02D9  120A  158A  26B8  120A  118A  	fcall	_Lcd_Write_String
   936     02DE                     l1834:
   937                           
   938                           ;main.c: 63:     red_freq = read_red();
   939     02DE  120A  118A  20BD  120A  118A  	fcall	_read_red
   940     02E3  1283               	bcf	3,5	;RP0=0, select bank0
   941     02E4  1303               	bcf	3,6	;RP1=0, select bank0
   942     02E5  0847               	movf	?_read_red+3,w
   943     02E6  00DB               	movwf	_red_freq+3
   944     02E7  0846               	movf	?_read_red+2,w
   945     02E8  00DA               	movwf	_red_freq+2
   946     02E9  0845               	movf	?_read_red+1,w
   947     02EA  00D9               	movwf	_red_freq+1
   948     02EB  0844               	movf	?_read_red,w
   949     02EC  00D8               	movwf	_red_freq
   950     02ED                     l1836:
   951                           
   952                           ;main.c: 64:     green_freq = read_green();
   953     02ED  120A  118A  205A  120A  118A  	fcall	_read_green
   954     02F2  1283               	bcf	3,5	;RP0=0, select bank0
   955     02F3  1303               	bcf	3,6	;RP1=0, select bank0
   956     02F4  0847               	movf	?_read_green+3,w
   957     02F5  00D3               	movwf	_green_freq+3
   958     02F6  0846               	movf	?_read_green+2,w
   959     02F7  00D2               	movwf	_green_freq+2
   960     02F8  0845               	movf	?_read_green+1,w
   961     02F9  00D1               	movwf	_green_freq+1
   962     02FA  0844               	movf	?_read_green,w
   963     02FB  00D0               	movwf	_green_freq
   964     02FC                     l1838:
   965                           
   966                           ;main.c: 65:     blue_freq = read_blue();
   967     02FC  120A  158A  279D  120A  118A  	fcall	_read_blue
   968     0301  1283               	bcf	3,5	;RP0=0, select bank0
   969     0302  1303               	bcf	3,6	;RP1=0, select bank0
   970     0303  0847               	movf	?_read_blue+3,w
   971     0304  00D7               	movwf	_blue_freq+3
   972     0305  0846               	movf	?_read_blue+2,w
   973     0306  00D6               	movwf	_blue_freq+2
   974     0307  0845               	movf	?_read_blue+1,w
   975     0308  00D5               	movwf	_blue_freq+1
   976     0309  0844               	movf	?_read_blue,w
   977     030A  00D4               	movwf	_blue_freq
   978     030B                     l1840:
   979                           
   980                           ;main.c: 68:     sprintf(rojo, "%lu", red_freq);
   981     030B  3039               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   982     030C  00AA               	movwf	sprintf@f
   983     030D  085B               	movf	_red_freq+3,w
   984     030E  00AE               	movwf	?_sprintf+4
   985     030F  085A               	movf	_red_freq+2,w
   986     0310  00AD               	movwf	?_sprintf+3
   987     0311  0859               	movf	_red_freq+1,w
   988     0312  00AC               	movwf	?_sprintf+2
   989     0313  0858               	movf	_red_freq,w
   990     0314  00AB               	movwf	?_sprintf+1
   991     0315  3069               	movlw	(low (_rojo| 0))& (0+255)
   992     0316  120A  118A  2385  120A  118A  	fcall	_sprintf
   993     031B                     l1842:
   994                           
   995                           ;main.c: 69:     sprintf(azul, "%lu", blue_freq);
   996     031B  3039               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   997     031C  1283               	bcf	3,5	;RP0=0, select bank0
   998     031D  1303               	bcf	3,6	;RP1=0, select bank0
   999     031E  00AA               	movwf	sprintf@f
  1000     031F  0857               	movf	_blue_freq+3,w
  1001     0320  00AE               	movwf	?_sprintf+4
  1002     0321  0856               	movf	_blue_freq+2,w
  1003     0322  00AD               	movwf	?_sprintf+3
  1004     0323  0855               	movf	_blue_freq+1,w
  1005     0324  00AC               	movwf	?_sprintf+2
  1006     0325  0854               	movf	_blue_freq,w
  1007     0326  00AB               	movwf	?_sprintf+1
  1008     0327  3065               	movlw	(low (_azul| 0))& (0+255)
  1009     0328  120A  118A  2385  120A  118A  	fcall	_sprintf
  1010     032D                     l1844:
  1011                           
  1012                           ;main.c: 70:     sprintf(verde, "%lu", green_freq);
  1013     032D  3039               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1014     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1015     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1016     0330  00AA               	movwf	sprintf@f
  1017     0331  0853               	movf	_green_freq+3,w
  1018     0332  00AE               	movwf	?_sprintf+4
  1019     0333  0852               	movf	_green_freq+2,w
  1020     0334  00AD               	movwf	?_sprintf+3
  1021     0335  0851               	movf	_green_freq+1,w
  1022     0336  00AC               	movwf	?_sprintf+2
  1023     0337  0850               	movf	_green_freq,w
  1024     0338  00AB               	movwf	?_sprintf+1
  1025     0339  3061               	movlw	(low (_verde| 0))& (0+255)
  1026     033A  120A  118A  2385  120A  118A  	fcall	_sprintf
  1027     033F                     l1846:
  1028                           
  1029                           ;main.c: 74:     Lcd_Set_Cursor(2,1);
  1030     033F  01F4               	clrf	Lcd_Set_Cursor@b
  1031     0340  0AF4               	incf	Lcd_Set_Cursor@b,f
  1032     0341  3002               	movlw	2
  1033     0342  120A  158A  26FA  120A  118A  	fcall	_Lcd_Set_Cursor
  1034     0347                     l1848:
  1035                           
  1036                           ;main.c: 75:     Lcd_Write_String(rojo);
  1037     0347  3069               	movlw	(low (_rojo| 0))& (0+255)
  1038     0348  00F5               	movwf	Lcd_Write_String@a
  1039     0349  3000               	movlw	0
  1040     034A  00F6               	movwf	Lcd_Write_String@a+1
  1041     034B  120A  158A  26B8  120A  118A  	fcall	_Lcd_Write_String
  1042     0350                     l1850:
  1043                           
  1044                           ;main.c: 76:     Lcd_Set_Cursor(2,6);
  1045     0350  3006               	movlw	6
  1046     0351  00F4               	movwf	Lcd_Set_Cursor@b
  1047     0352  3002               	movlw	2
  1048     0353  120A  158A  26FA  120A  118A  	fcall	_Lcd_Set_Cursor
  1049     0358                     l1852:
  1050                           
  1051                           ;main.c: 77:     Lcd_Write_String(verde);
  1052     0358  3061               	movlw	(low (_verde| 0))& (0+255)
  1053     0359  00F5               	movwf	Lcd_Write_String@a
  1054     035A  3000               	movlw	0
  1055     035B  00F6               	movwf	Lcd_Write_String@a+1
  1056     035C  120A  158A  26B8  120A  118A  	fcall	_Lcd_Write_String
  1057     0361                     l1854:
  1058                           
  1059                           ;main.c: 78:     Lcd_Set_Cursor(2,12);
  1060     0361  300C               	movlw	12
  1061     0362  00F4               	movwf	Lcd_Set_Cursor@b
  1062     0363  3002               	movlw	2
  1063     0364  120A  158A  26FA  120A  118A  	fcall	_Lcd_Set_Cursor
  1064     0369                     l1856:
  1065                           
  1066                           ;main.c: 79:     Lcd_Write_String(azul);
  1067     0369  3065               	movlw	(low (_azul| 0))& (0+255)
  1068     036A  00F5               	movwf	Lcd_Write_String@a
  1069     036B  3000               	movlw	0
  1070     036C  00F6               	movwf	Lcd_Write_String@a+1
  1071     036D  120A  158A  26B8  120A  118A  	fcall	_Lcd_Write_String
  1072     0372                     l1858:
  1073                           
  1074                           ;main.c: 80:     _delay((unsigned long)((800)*(8000000/4000.0)));
  1075     0372  3009               	movlw	9
  1076     0373  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0374  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0375  00CF               	movwf	??_main+2
  1079     0376  301E               	movlw	30
  1080     0377  00CE               	movwf	??_main+1
  1081     0378  30E3               	movlw	227
  1082     0379  00CD               	movwf	??_main
  1083     037A                     u2137:
  1084     037A  0BCD               	decfsz	??_main,f
  1085     037B  2B7A               	goto	u2137
  1086     037C  0BCE               	decfsz	??_main+1,f
  1087     037D  2B7A               	goto	u2137
  1088     037E  0BCF               	decfsz	??_main+2,f
  1089     037F  2B7A               	goto	u2137
  1090     0380  2B81               	nop2
  1091     0381  2AC8               	goto	l1828
  1092     0382  120A  118A  2800   	ljmp	start
  1093     0385                     __end_of_main:
  1094                           
  1095                           	psect	text1
  1096     0385                     __ptext1:	
  1097 ;; *************** function _sprintf *****************
  1098 ;; Defined at:
  1099 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  sp              1    wreg     PTR unsigned char 
  1102 ;;		 -> verde(4), azul(4), rojo(4), 
  1103 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1104 ;;		 -> STR_4(4), STR_3(4), STR_2(4), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1107 ;;		 -> verde(4), azul(4), rojo(4), 
  1108 ;;  val             4   23[BANK0 ] unsigned long 
  1109 ;;  tmpval          4    0        struct .
  1110 ;;  prec            2   21[BANK0 ] int 
  1111 ;;  cp              2    0        PTR const unsigned char 
  1112 ;;  len             2    0        unsigned int 
  1113 ;;  c               1   29[BANK0 ] unsigned char 
  1114 ;;  ap              1   27[BANK0 ] PTR void [1]
  1115 ;;		 -> ?_sprintf(2), 
  1116 ;;  flag            1   20[BANK0 ] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  2   10[BANK0 ] int 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       5       0       0       0
  1127 ;;      Locals:         0      10       0       0       0
  1128 ;;      Temps:          0       5       0       0       0
  1129 ;;      Totals:         0      20       0       0       0
  1130 ;;Total ram usage:       20 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 1
  1133 ;; This function calls:
  1134 ;;		___lldiv
  1135 ;;		___llmod
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141     0385                     _sprintf:	
  1142                           ;psect for function _sprintf
  1143                           
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1147                           ;sprintf@sp stored from wreg
  1148     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1150     0387  00BC               	movwf	sprintf@sp
  1151     0388                     l1764:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517: 
      +                           int prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  u
      +                          nsigned char flag;
  1154     0388  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1155     0389  00BB               	movwf	sprintf@ap
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1158     038A  2C99               	goto	l1810
  1159     038B                     l1766:
  1160                           
  1161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1162     038B  3025               	movlw	37
  1163     038C  063D               	xorwf	sprintf@c,w
  1164     038D  1903               	btfsc	3,2
  1165     038E  2B90               	goto	u2051
  1166     038F  2B91               	goto	u2050
  1167     0390                     u2051:
  1168     0390  2B9B               	goto	l1772
  1169     0391                     u2050:
  1170     0391                     l1768:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1173     0391  083C               	movf	sprintf@sp,w
  1174     0392  0084               	movwf	4
  1175     0393  083D               	movf	sprintf@c,w
  1176     0394  1383               	bcf	3,7	;select IRP bank0
  1177     0395  0080               	movwf	0
  1178     0396                     l1770:
  1179     0396  3001               	movlw	1
  1180     0397  00AF               	movwf	??_sprintf
  1181     0398  082F               	movf	??_sprintf,w
  1182     0399  07BC               	addwf	sprintf@sp,f
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1185     039A  2C99               	goto	l1810
  1186     039B                     l1772:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1189     039B  01B4               	clrf	sprintf@flag
  1190     039C  2BA4               	goto	l1778
  1191     039D                     l265:	
  1192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  1193                           
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  1196     039D  1634               	bsf	sprintf@flag,4
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  1199     039E  2BA4               	goto	l1778
  1200     039F                     l1774:
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1203     039F  30C0               	movlw	192
  1204     03A0  00AF               	movwf	??_sprintf
  1205     03A1  082F               	movf	??_sprintf,w
  1206     03A2  04B4               	iorwf	sprintf@flag,f
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1209     03A3  2BC1               	goto	l268
  1210     03A4                     l1778:
  1211     03A4  3001               	movlw	1
  1212     03A5  07AA               	addwf	sprintf@f,f
  1213     03A6  30FF               	movlw	-1
  1214     03A7  072A               	addwf	sprintf@f,w
  1215     03A8  0084               	movwf	4
  1216     03A9  120A  158A  200A  120A  118A  	fcall	stringdir
  1217     03AE  00BD               	movwf	sprintf@c
  1218     03AF  00AF               	movwf	??_sprintf
  1219     03B0  01B0               	clrf	??_sprintf+1
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ; direct_byte           11     8 (fixed)
  1228                           ; jumptable            260     6 (fixed)
  1229                           ;	Chosen strategy is simple_byte
  1230     03B1  0830               	movf	??_sprintf+1,w
  1231     03B2  3A00               	xorlw	0	; case 0
  1232     03B3  1903               	skipnz
  1233     03B4  2BB6               	goto	l1884
  1234     03B5  2C99               	goto	l1810
  1235     03B6                     l1884:
  1236                           
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 3, Range of values is 0 to 117
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte           10     6 (average)
  1242                           ; jumptable            260     6 (fixed)
  1243                           ;	Chosen strategy is simple_byte
  1244     03B6  082F               	movf	??_sprintf,w
  1245     03B7  3A00               	xorlw	0	; case 0
  1246     03B8  1903               	skipnz
  1247     03B9  2CA9               	goto	l1812
  1248     03BA  3A6C               	xorlw	108	; case 108
  1249     03BB  1903               	skipnz
  1250     03BC  2B9D               	goto	l265
  1251     03BD  3A19               	xorlw	25	; case 117
  1252     03BE  1903               	skipnz
  1253     03BF  2B9F               	goto	l1774
  1254     03C0  2C99               	goto	l1810
  1255     03C1                     l268:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  1258     03C1  1E34               	btfss	sprintf@flag,4
  1259     03C2  2BC4               	goto	u2061
  1260     03C3  2BC5               	goto	u2060
  1261     03C4                     u2061:
  1262     03C4  2BD8               	goto	l1784
  1263     03C5                     u2060:
  1264     03C5                     l1780:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  1267     03C5  083B               	movf	sprintf@ap,w
  1268     03C6  0084               	movwf	4
  1269     03C7  1383               	bcf	3,7	;select IRP bank0
  1270     03C8  0800               	movf	0,w
  1271     03C9  00B7               	movwf	sprintf@val
  1272     03CA  0A84               	incf	4,f
  1273     03CB  0800               	movf	0,w
  1274     03CC  00B8               	movwf	sprintf@val+1
  1275     03CD  0A84               	incf	4,f
  1276     03CE  0800               	movf	0,w
  1277     03CF  00B9               	movwf	sprintf@val+2
  1278     03D0  0A84               	incf	4,f
  1279     03D1  0800               	movf	0,w
  1280     03D2  00BA               	movwf	sprintf@val+3
  1281     03D3                     l1782:
  1282     03D3  3004               	movlw	4
  1283     03D4  00AF               	movwf	??_sprintf
  1284     03D5  082F               	movf	??_sprintf,w
  1285     03D6  07BB               	addwf	sprintf@ap,f
  1286     03D7  2BEA               	goto	l1788
  1287     03D8                     l1784:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1290     03D8  083B               	movf	sprintf@ap,w
  1291     03D9  0084               	movwf	4
  1292     03DA  1383               	bcf	3,7	;select IRP bank0
  1293     03DB  0800               	movf	0,w
  1294     03DC  00AF               	movwf	??_sprintf
  1295     03DD  0A84               	incf	4,f
  1296     03DE  0800               	movf	0,w
  1297     03DF  00B0               	movwf	??_sprintf+1
  1298     03E0  082F               	movf	??_sprintf,w
  1299     03E1  00B7               	movwf	sprintf@val
  1300     03E2  0830               	movf	??_sprintf+1,w
  1301     03E3  00B8               	movwf	sprintf@val+1
  1302     03E4  01B9               	clrf	sprintf@val+2
  1303     03E5  01BA               	clrf	sprintf@val+3
  1304     03E6                     l1786:
  1305     03E6  3002               	movlw	2
  1306     03E7  00AF               	movwf	??_sprintf
  1307     03E8  082F               	movf	??_sprintf,w
  1308     03E9  07BB               	addwf	sprintf@ap,f
  1309     03EA                     l1788:
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1312     03EA  01BD               	clrf	sprintf@c
  1313     03EB  0ABD               	incf	sprintf@c,f
  1314     03EC                     l1794:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1317     03EC  083D               	movf	sprintf@c,w
  1318     03ED  00AF               	movwf	??_sprintf
  1319     03EE  3001               	movlw	1
  1320     03EF                     u2075:
  1321     03EF  1003               	clrc
  1322     03F0  0DAF               	rlf	??_sprintf,f
  1323     03F1  3EFF               	addlw	-1
  1324     03F2  1D03               	skipz
  1325     03F3  2BEF               	goto	u2075
  1326     03F4  1003               	clrc
  1327     03F5  0D2F               	rlf	??_sprintf,w
  1328     03F6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1329     03F7  0084               	movwf	4
  1330     03F8  120A  158A  200A  120A  118A  	fcall	stringdir
  1331     03FD  00B0               	movwf	??_sprintf+1
  1332     03FE  120A  158A  200A  120A  118A  	fcall	stringdir
  1333     0403  00B1               	movwf	??_sprintf+2
  1334     0404  120A  158A  200A  120A  118A  	fcall	stringdir
  1335     0409  00B2               	movwf	??_sprintf+3
  1336     040A  120A  158A  200A  120A  118A  	fcall	stringdir
  1337     040F  00B3               	movwf	??_sprintf+4
  1338     0410  0833               	movf	??_sprintf+4,w
  1339     0411  023A               	subwf	sprintf@val+3,w
  1340     0412  1D03               	skipz
  1341     0413  2C1E               	goto	u2085
  1342     0414  0832               	movf	??_sprintf+3,w
  1343     0415  0239               	subwf	sprintf@val+2,w
  1344     0416  1D03               	skipz
  1345     0417  2C1E               	goto	u2085
  1346     0418  0831               	movf	??_sprintf+2,w
  1347     0419  0238               	subwf	sprintf@val+1,w
  1348     041A  1D03               	skipz
  1349     041B  2C1E               	goto	u2085
  1350     041C  0830               	movf	??_sprintf+1,w
  1351     041D  0237               	subwf	sprintf@val,w
  1352     041E                     u2085:
  1353     041E  1803               	skipnc
  1354     041F  2C21               	goto	u2081
  1355     0420  2C22               	goto	u2080
  1356     0421                     u2081:
  1357     0421  2C23               	goto	l1798
  1358     0422                     u2080:
  1359     0422  2C2D               	goto	l1800
  1360     0423                     l1798:
  1361     0423  3001               	movlw	1
  1362     0424  00AF               	movwf	??_sprintf
  1363     0425  082F               	movf	??_sprintf,w
  1364     0426  07BD               	addwf	sprintf@c,f
  1365     0427  300A               	movlw	10
  1366     0428  063D               	xorwf	sprintf@c,w
  1367     0429  1D03               	btfss	3,2
  1368     042A  2C2C               	goto	u2091
  1369     042B  2C2D               	goto	u2090
  1370     042C                     u2091:
  1371     042C  2BEC               	goto	l1794
  1372     042D                     u2090:
  1373     042D                     l1800:
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1376     042D  083D               	movf	sprintf@c,w
  1377     042E  00AF               	movwf	??_sprintf
  1378     042F  01B0               	clrf	??_sprintf+1
  1379     0430  082F               	movf	??_sprintf,w
  1380     0431  00B5               	movwf	sprintf@prec
  1381     0432  0830               	movf	??_sprintf+1,w
  1382     0433  00B6               	movwf	sprintf@prec+1
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1385     0434  2C8B               	goto	l1808
  1386     0435                     l1802:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  1389     0435  3000               	movlw	0
  1390     0436  00A3               	movwf	___llmod@divisor+3
  1391     0437  3000               	movlw	0
  1392     0438  00A2               	movwf	___llmod@divisor+2
  1393     0439  3000               	movlw	0
  1394     043A  00A1               	movwf	___llmod@divisor+1
  1395     043B  300A               	movlw	10
  1396     043C  00A0               	movwf	___llmod@divisor
  1397     043D  0835               	movf	sprintf@prec,w
  1398     043E  00AF               	movwf	??_sprintf
  1399     043F  3001               	movlw	1
  1400     0440                     u2105:
  1401     0440  1003               	clrc
  1402     0441  0DAF               	rlf	??_sprintf,f
  1403     0442  3EFF               	addlw	-1
  1404     0443  1D03               	skipz
  1405     0444  2C40               	goto	u2105
  1406     0445  1003               	clrc
  1407     0446  0D2F               	rlf	??_sprintf,w
  1408     0447  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1409     0448  0084               	movwf	4
  1410     0449  120A  158A  200A  120A  118A  	fcall	stringdir
  1411     044E  00F0               	movwf	___lldiv@divisor
  1412     044F  120A  158A  200A  120A  118A  	fcall	stringdir
  1413     0454  00F1               	movwf	___lldiv@divisor+1
  1414     0455  120A  158A  200A  120A  118A  	fcall	stringdir
  1415     045A  00F2               	movwf	___lldiv@divisor+2
  1416     045B  120A  158A  200A  120A  118A  	fcall	stringdir
  1417     0460  00F3               	movwf	___lldiv@divisor+3
  1418     0461  083A               	movf	sprintf@val+3,w
  1419     0462  00F7               	movwf	___lldiv@dividend+3
  1420     0463  0839               	movf	sprintf@val+2,w
  1421     0464  00F6               	movwf	___lldiv@dividend+2
  1422     0465  0838               	movf	sprintf@val+1,w
  1423     0466  00F5               	movwf	___lldiv@dividend+1
  1424     0467  0837               	movf	sprintf@val,w
  1425     0468  00F4               	movwf	___lldiv@dividend
  1426     0469  120A  118A  2120  120A  118A  	fcall	___lldiv
  1427     046E  0873               	movf	?___lldiv+3,w
  1428     046F  1283               	bcf	3,5	;RP0=0, select bank0
  1429     0470  1303               	bcf	3,6	;RP1=0, select bank0
  1430     0471  00A7               	movwf	___llmod@dividend+3
  1431     0472  0872               	movf	?___lldiv+2,w
  1432     0473  00A6               	movwf	___llmod@dividend+2
  1433     0474  0871               	movf	?___lldiv+1,w
  1434     0475  00A5               	movwf	___llmod@dividend+1
  1435     0476  0870               	movf	?___lldiv,w
  1436     0477  00A4               	movwf	___llmod@dividend
  1437     0478  120A  118A  2004  120A  118A  	fcall	___llmod
  1438     047D  1283               	bcf	3,5	;RP0=0, select bank0
  1439     047E  1303               	bcf	3,6	;RP1=0, select bank0
  1440     047F  0820               	movf	?___llmod,w
  1441     0480  3E30               	addlw	48
  1442     0481  00BD               	movwf	sprintf@c
  1443     0482                     l1804:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1446     0482  083C               	movf	sprintf@sp,w
  1447     0483  0084               	movwf	4
  1448     0484  083D               	movf	sprintf@c,w
  1449     0485  1383               	bcf	3,7	;select IRP bank0
  1450     0486  0080               	movwf	0
  1451     0487                     l1806:
  1452     0487  3001               	movlw	1
  1453     0488  00AF               	movwf	??_sprintf
  1454     0489  082F               	movf	??_sprintf,w
  1455     048A  07BC               	addwf	sprintf@sp,f
  1456     048B                     l1808:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1459     048B  30FF               	movlw	255
  1460     048C  07B5               	addwf	sprintf@prec,f
  1461     048D  1803               	skipnc
  1462     048E  0AB6               	incf	sprintf@prec+1,f
  1463     048F  30FF               	movlw	255
  1464     0490  07B6               	addwf	sprintf@prec+1,f
  1465     0491  0A35               	incf	sprintf@prec,w
  1466     0492  1D03               	skipz
  1467     0493  2C98               	goto	u2111
  1468     0494  0A36               	incf	sprintf@prec+1,w
  1469     0495  1D03               	btfss	3,2
  1470     0496  2C98               	goto	u2111
  1471     0497  2C99               	goto	u2110
  1472     0498                     u2111:
  1473     0498  2C35               	goto	l1802
  1474     0499                     u2110:
  1475     0499                     l1810:
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1478     0499  3001               	movlw	1
  1479     049A  07AA               	addwf	sprintf@f,f
  1480     049B  30FF               	movlw	-1
  1481     049C  072A               	addwf	sprintf@f,w
  1482     049D  0084               	movwf	4
  1483     049E  120A  158A  200A  120A  118A  	fcall	stringdir
  1484     04A3  00BD               	movwf	sprintf@c
  1485     04A4  083D               	movf	sprintf@c,w
  1486     04A5  1D03               	btfss	3,2
  1487     04A6  2CA8               	goto	u2121
  1488     04A7  2CA9               	goto	u2120
  1489     04A8                     u2121:
  1490     04A8  2B8B               	goto	l1766
  1491     04A9                     u2120:
  1492     04A9                     l1812:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1495     04A9  083C               	movf	sprintf@sp,w
  1496     04AA  0084               	movwf	4
  1497     04AB  1383               	bcf	3,7	;select IRP bank0
  1498     04AC  0180               	clrf	0
  1499     04AD                     l278:
  1500     04AD  0008               	return
  1501     04AE                     __end_of_sprintf:
  1502                           
  1503                           	psect	text2
  1504     0004                     __ptext2:	
  1505 ;; *************** function ___llmod *****************
  1506 ;; Defined at:
  1507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  divisor         4    0[BANK0 ] unsigned long 
  1510 ;;  dividend        4    4[BANK0 ] unsigned long 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  counter         1    9[BANK0 ] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  4    0[BANK0 ] unsigned long 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       8       0       0       0
  1523 ;;      Locals:         0       1       0       0       0
  1524 ;;      Temps:          0       1       0       0       0
  1525 ;;      Totals:         0      10       0       0       0
  1526 ;;Total ram usage:       10 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_sprintf
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535     0004                     ___llmod:	
  1536                           ;psect for function ___llmod
  1537                           
  1538     0004                     l1450:	
  1539                           ;incstack = 0
  1540                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1541                           
  1542     0004  1283               	bcf	3,5	;RP0=0, select bank0
  1543     0005  1303               	bcf	3,6	;RP1=0, select bank0
  1544     0006  0823               	movf	___llmod@divisor+3,w
  1545     0007  0422               	iorwf	___llmod@divisor+2,w
  1546     0008  0421               	iorwf	___llmod@divisor+1,w
  1547     0009  0420               	iorwf	___llmod@divisor,w
  1548     000A  1903               	skipnz
  1549     000B  280D               	goto	u1321
  1550     000C  280E               	goto	u1320
  1551     000D                     u1321:
  1552     000D  2851               	goto	l1466
  1553     000E                     u1320:
  1554     000E                     l1452:
  1555     000E  01A9               	clrf	___llmod@counter
  1556     000F  0AA9               	incf	___llmod@counter,f
  1557     0010  281E               	goto	l1456
  1558     0011                     l1454:
  1559     0011  3001               	movlw	1
  1560     0012  00A8               	movwf	??___llmod
  1561     0013                     u1335:
  1562     0013  1003               	clrc
  1563     0014  0DA0               	rlf	___llmod@divisor,f
  1564     0015  0DA1               	rlf	___llmod@divisor+1,f
  1565     0016  0DA2               	rlf	___llmod@divisor+2,f
  1566     0017  0DA3               	rlf	___llmod@divisor+3,f
  1567     0018  0BA8               	decfsz	??___llmod,f
  1568     0019  2813               	goto	u1335
  1569     001A  3001               	movlw	1
  1570     001B  00A8               	movwf	??___llmod
  1571     001C  0828               	movf	??___llmod,w
  1572     001D  07A9               	addwf	___llmod@counter,f
  1573     001E                     l1456:
  1574     001E  1FA3               	btfss	___llmod@divisor+3,7
  1575     001F  2821               	goto	u1341
  1576     0020  2822               	goto	u1340
  1577     0021                     u1341:
  1578     0021  2811               	goto	l1454
  1579     0022                     u1340:
  1580     0022                     l1458:
  1581     0022  0823               	movf	___llmod@divisor+3,w
  1582     0023  0227               	subwf	___llmod@dividend+3,w
  1583     0024  1D03               	skipz
  1584     0025  2830               	goto	u1355
  1585     0026  0822               	movf	___llmod@divisor+2,w
  1586     0027  0226               	subwf	___llmod@dividend+2,w
  1587     0028  1D03               	skipz
  1588     0029  2830               	goto	u1355
  1589     002A  0821               	movf	___llmod@divisor+1,w
  1590     002B  0225               	subwf	___llmod@dividend+1,w
  1591     002C  1D03               	skipz
  1592     002D  2830               	goto	u1355
  1593     002E  0820               	movf	___llmod@divisor,w
  1594     002F  0224               	subwf	___llmod@dividend,w
  1595     0030                     u1355:
  1596     0030  1C03               	skipc
  1597     0031  2833               	goto	u1351
  1598     0032  2834               	goto	u1350
  1599     0033                     u1351:
  1600     0033  2842               	goto	l1462
  1601     0034                     u1350:
  1602     0034                     l1460:
  1603     0034  0820               	movf	___llmod@divisor,w
  1604     0035  02A4               	subwf	___llmod@dividend,f
  1605     0036  0821               	movf	___llmod@divisor+1,w
  1606     0037  1C03               	skipc
  1607     0038  0F21               	incfsz	___llmod@divisor+1,w
  1608     0039  02A5               	subwf	___llmod@dividend+1,f
  1609     003A  0822               	movf	___llmod@divisor+2,w
  1610     003B  1C03               	skipc
  1611     003C  0F22               	incfsz	___llmod@divisor+2,w
  1612     003D  02A6               	subwf	___llmod@dividend+2,f
  1613     003E  0823               	movf	___llmod@divisor+3,w
  1614     003F  1C03               	skipc
  1615     0040  0F23               	incfsz	___llmod@divisor+3,w
  1616     0041  02A7               	subwf	___llmod@dividend+3,f
  1617     0042                     l1462:
  1618     0042  3001               	movlw	1
  1619     0043                     u1365:
  1620     0043  1003               	clrc
  1621     0044  0CA3               	rrf	___llmod@divisor+3,f
  1622     0045  0CA2               	rrf	___llmod@divisor+2,f
  1623     0046  0CA1               	rrf	___llmod@divisor+1,f
  1624     0047  0CA0               	rrf	___llmod@divisor,f
  1625     0048  3EFF               	addlw	-1
  1626     0049  1D03               	skipz
  1627     004A  2843               	goto	u1365
  1628     004B                     l1464:
  1629     004B  3001               	movlw	1
  1630     004C  02A9               	subwf	___llmod@counter,f
  1631     004D  1D03               	btfss	3,2
  1632     004E  2850               	goto	u1371
  1633     004F  2851               	goto	u1370
  1634     0050                     u1371:
  1635     0050  2822               	goto	l1458
  1636     0051                     u1370:
  1637     0051                     l1466:
  1638     0051  0827               	movf	___llmod@dividend+3,w
  1639     0052  00A3               	movwf	?___llmod+3
  1640     0053  0826               	movf	___llmod@dividend+2,w
  1641     0054  00A2               	movwf	?___llmod+2
  1642     0055  0825               	movf	___llmod@dividend+1,w
  1643     0056  00A1               	movwf	?___llmod+1
  1644     0057  0824               	movf	___llmod@dividend,w
  1645     0058  00A0               	movwf	?___llmod
  1646     0059                     l504:
  1647     0059  0008               	return
  1648     005A                     __end_of___llmod:
  1649                           
  1650                           	psect	text3
  1651     0120                     __ptext3:	
  1652 ;; *************** function ___lldiv *****************
  1653 ;; Defined at:
  1654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  divisor         4    0[COMMON] unsigned long 
  1657 ;;  dividend        4    4[COMMON] unsigned long 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  quotient        4    9[COMMON] unsigned long 
  1660 ;;  counter         1   13[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  4    0[COMMON] unsigned long 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         8       0       0       0       0
  1671 ;;      Locals:         5       0       0       0       0
  1672 ;;      Temps:          1       0       0       0       0
  1673 ;;      Totals:        14       0       0       0       0
  1674 ;;Total ram usage:       14 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_sprintf
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     0120                     ___lldiv:	
  1684                           ;psect for function ___lldiv
  1685                           
  1686     0120                     l1390:	
  1687                           ;incstack = 0
  1688                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1689                           
  1690     0120  3000               	movlw	0
  1691     0121  00FC               	movwf	___lldiv@quotient+3
  1692     0122  3000               	movlw	0
  1693     0123  00FB               	movwf	___lldiv@quotient+2
  1694     0124  3000               	movlw	0
  1695     0125  00FA               	movwf	___lldiv@quotient+1
  1696     0126  3000               	movlw	0
  1697     0127  00F9               	movwf	___lldiv@quotient
  1698     0128  0873               	movf	___lldiv@divisor+3,w
  1699     0129  0472               	iorwf	___lldiv@divisor+2,w
  1700     012A  0471               	iorwf	___lldiv@divisor+1,w
  1701     012B  0470               	iorwf	___lldiv@divisor,w
  1702     012C  1903               	skipnz
  1703     012D  292F               	goto	u1151
  1704     012E  2930               	goto	u1150
  1705     012F                     u1151:
  1706     012F  297D               	goto	l1410
  1707     0130                     u1150:
  1708     0130                     l1392:
  1709     0130  01FD               	clrf	___lldiv@counter
  1710     0131  0AFD               	incf	___lldiv@counter,f
  1711     0132  2940               	goto	l1396
  1712     0133                     l1394:
  1713     0133  3001               	movlw	1
  1714     0134  00F8               	movwf	??___lldiv
  1715     0135                     u1165:
  1716     0135  1003               	clrc
  1717     0136  0DF0               	rlf	___lldiv@divisor,f
  1718     0137  0DF1               	rlf	___lldiv@divisor+1,f
  1719     0138  0DF2               	rlf	___lldiv@divisor+2,f
  1720     0139  0DF3               	rlf	___lldiv@divisor+3,f
  1721     013A  0BF8               	decfsz	??___lldiv,f
  1722     013B  2935               	goto	u1165
  1723     013C  3001               	movlw	1
  1724     013D  00F8               	movwf	??___lldiv
  1725     013E  0878               	movf	??___lldiv,w
  1726     013F  07FD               	addwf	___lldiv@counter,f
  1727     0140                     l1396:
  1728     0140  1FF3               	btfss	___lldiv@divisor+3,7
  1729     0141  2943               	goto	u1171
  1730     0142  2944               	goto	u1170
  1731     0143                     u1171:
  1732     0143  2933               	goto	l1394
  1733     0144                     u1170:
  1734     0144                     l1398:
  1735     0144  3001               	movlw	1
  1736     0145  00F8               	movwf	??___lldiv
  1737     0146                     u1185:
  1738     0146  1003               	clrc
  1739     0147  0DF9               	rlf	___lldiv@quotient,f
  1740     0148  0DFA               	rlf	___lldiv@quotient+1,f
  1741     0149  0DFB               	rlf	___lldiv@quotient+2,f
  1742     014A  0DFC               	rlf	___lldiv@quotient+3,f
  1743     014B  0BF8               	decfsz	??___lldiv,f
  1744     014C  2946               	goto	u1185
  1745     014D                     l1400:
  1746     014D  0873               	movf	___lldiv@divisor+3,w
  1747     014E  0277               	subwf	___lldiv@dividend+3,w
  1748     014F  1D03               	skipz
  1749     0150  295B               	goto	u1195
  1750     0151  0872               	movf	___lldiv@divisor+2,w
  1751     0152  0276               	subwf	___lldiv@dividend+2,w
  1752     0153  1D03               	skipz
  1753     0154  295B               	goto	u1195
  1754     0155  0871               	movf	___lldiv@divisor+1,w
  1755     0156  0275               	subwf	___lldiv@dividend+1,w
  1756     0157  1D03               	skipz
  1757     0158  295B               	goto	u1195
  1758     0159  0870               	movf	___lldiv@divisor,w
  1759     015A  0274               	subwf	___lldiv@dividend,w
  1760     015B                     u1195:
  1761     015B  1C03               	skipc
  1762     015C  295E               	goto	u1191
  1763     015D  295F               	goto	u1190
  1764     015E                     u1191:
  1765     015E  296E               	goto	l1406
  1766     015F                     u1190:
  1767     015F                     l1402:
  1768     015F  0870               	movf	___lldiv@divisor,w
  1769     0160  02F4               	subwf	___lldiv@dividend,f
  1770     0161  0871               	movf	___lldiv@divisor+1,w
  1771     0162  1C03               	skipc
  1772     0163  0F71               	incfsz	___lldiv@divisor+1,w
  1773     0164  02F5               	subwf	___lldiv@dividend+1,f
  1774     0165  0872               	movf	___lldiv@divisor+2,w
  1775     0166  1C03               	skipc
  1776     0167  0F72               	incfsz	___lldiv@divisor+2,w
  1777     0168  02F6               	subwf	___lldiv@dividend+2,f
  1778     0169  0873               	movf	___lldiv@divisor+3,w
  1779     016A  1C03               	skipc
  1780     016B  0F73               	incfsz	___lldiv@divisor+3,w
  1781     016C  02F7               	subwf	___lldiv@dividend+3,f
  1782     016D                     l1404:
  1783     016D  1479               	bsf	___lldiv@quotient,0
  1784     016E                     l1406:
  1785     016E  3001               	movlw	1
  1786     016F                     u1205:
  1787     016F  1003               	clrc
  1788     0170  0CF3               	rrf	___lldiv@divisor+3,f
  1789     0171  0CF2               	rrf	___lldiv@divisor+2,f
  1790     0172  0CF1               	rrf	___lldiv@divisor+1,f
  1791     0173  0CF0               	rrf	___lldiv@divisor,f
  1792     0174  3EFF               	addlw	-1
  1793     0175  1D03               	skipz
  1794     0176  296F               	goto	u1205
  1795     0177                     l1408:
  1796     0177  3001               	movlw	1
  1797     0178  02FD               	subwf	___lldiv@counter,f
  1798     0179  1D03               	btfss	3,2
  1799     017A  297C               	goto	u1211
  1800     017B  297D               	goto	u1210
  1801     017C                     u1211:
  1802     017C  2944               	goto	l1398
  1803     017D                     u1210:
  1804     017D                     l1410:
  1805     017D  087C               	movf	___lldiv@quotient+3,w
  1806     017E  00F3               	movwf	?___lldiv+3
  1807     017F  087B               	movf	___lldiv@quotient+2,w
  1808     0180  00F2               	movwf	?___lldiv+2
  1809     0181  087A               	movf	___lldiv@quotient+1,w
  1810     0182  00F1               	movwf	?___lldiv+1
  1811     0183  0879               	movf	___lldiv@quotient,w
  1812     0184  00F0               	movwf	?___lldiv
  1813     0185                     l318:
  1814     0185  0008               	return
  1815     0186                     __end_of___lldiv:
  1816                           
  1817                           	psect	text4
  1818     0E0E                     __ptext4:	
  1819 ;; *************** function _setup *****************
  1820 ;; Defined at:
  1821 ;;		line 86 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     0E0E                     _setup:	
  1849                           ;psect for function _setup
  1850                           
  1851     0E0E                     l1654:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _setup: [wreg+status,2+status,0]
  1854                           
  1855                           
  1856                           ;main.c: 87:     ANSEL = 0;
  1857     0E0E  1683               	bsf	3,5	;RP0=1, select bank3
  1858     0E0F  1703               	bsf	3,6	;RP1=1, select bank3
  1859     0E10  0188               	clrf	8	;volatile
  1860                           
  1861                           ;main.c: 88:     ANSELH = 0;
  1862     0E11  0189               	clrf	9	;volatile
  1863     0E12                     l1656:
  1864                           
  1865                           ;main.c: 89:     TRISA = 0b00000010;
  1866     0E12  3002               	movlw	2
  1867     0E13  1683               	bsf	3,5	;RP0=1, select bank1
  1868     0E14  1303               	bcf	3,6	;RP1=0, select bank1
  1869     0E15  0085               	movwf	5	;volatile
  1870     0E16                     l1658:
  1871                           
  1872                           ;main.c: 90:     TRISD = 0;
  1873     0E16  0188               	clrf	8	;volatile
  1874     0E17                     l1660:
  1875                           
  1876                           ;main.c: 91:     PORTD = 0;
  1877     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  1878     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  1879     0E19  0188               	clrf	8	;volatile
  1880     0E1A                     l1662:
  1881                           
  1882                           ;main.c: 92:     OSCCONbits.IRCF = 0b111;
  1883     0E1A  3070               	movlw	112
  1884     0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  1885     0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  1886     0E1D  048F               	iorwf	15,f	;volatile
  1887     0E1E                     l1664:
  1888                           
  1889                           ;main.c: 93:     OSCCONbits.SCS = 1;
  1890     0E1E  140F               	bsf	15,0	;volatile
  1891     0E1F                     l61:
  1892     0E1F  0008               	return
  1893     0E20                     __end_of_setup:
  1894                           
  1895                           	psect	text5
  1896     00BD                     __ptext5:	
  1897 ;; *************** function _read_red *****************
  1898 ;; Defined at:
  1899 ;;		line 17 in file "TCS230.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  4   36[BANK0 ] unsigned long 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       4       0       0       0
  1914 ;;      Locals:         0       4       0       0       0
  1915 ;;      Temps:          0       1       0       0       0
  1916 ;;      Totals:         0       9       0       0       0
  1917 ;;Total ram usage:        9 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 2
  1920 ;; This function calls:
  1921 ;;		___flmul
  1922 ;;		___fltol
  1923 ;;		___xxtofl
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929     00BD                     _read_red:	
  1930                           ;psect for function _read_red
  1931                           
  1932     00BD                     l1714:	
  1933                           ;incstack = 0
  1934                           ; Regs used in _read_red: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1935                           
  1936                           
  1937                           ;TCS230.c: 18:   unsigned long temp_freq;;TCS230.c: 19:   RD0 = 0;
  1938     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1939     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1940     00BF  1008               	bcf	8,0	;volatile
  1941                           
  1942                           ;TCS230.c: 20:   RD1 = 0;
  1943     00C0  1088               	bcf	8,1	;volatile
  1944     00C1                     l1716:
  1945                           
  1946                           ;TCS230.c: 21:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  1947     00C1  3013               	movlw	19
  1948     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1949     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1950     00C4  00C8               	movwf	??_read_red
  1951     00C5                     u2147:
  1952     00C5  0BC8               	decfsz	??_read_red,f
  1953     00C6  28C5               	goto	u2147
  1954     00C7                     l134:	
  1955                           ;TCS230.c: 23:   }
  1956                           
  1957                           
  1958                           ;TCS230.c: 22:   while(PORTAbits.RA1 == 1){
  1959     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1960     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1961     00C9  1885               	btfsc	5,1	;volatile
  1962     00CA  28CC               	goto	u1961
  1963     00CB  28CD               	goto	u1960
  1964     00CC                     u1961:
  1965     00CC  28C7               	goto	l134
  1966     00CD                     u1960:
  1967     00CD                     l137:	
  1968                           ;TCS230.c: 25:   }
  1969                           
  1970                           
  1971                           ;TCS230.c: 24:   while(PORTAbits.RA1 == 0){
  1972     00CD  1C85               	btfss	5,1	;volatile
  1973     00CE  28D0               	goto	u1971
  1974     00CF  28D1               	goto	u1970
  1975     00D0                     u1971:
  1976     00D0  28CD               	goto	l137
  1977     00D1                     u1970:
  1978     00D1                     l1718:
  1979                           
  1980                           ;TCS230.c: 26:   TMR1 = 0;
  1981     00D1  018E               	clrf	14	;volatile
  1982     00D2  018F               	clrf	15	;volatile
  1983     00D3                     l1720:
  1984                           
  1985                           ;TCS230.c: 27:   T1CONbits.TMR1ON = 1;
  1986     00D3  1410               	bsf	16,0	;volatile
  1987     00D4                     l140:	
  1988                           ;TCS230.c: 30:   }
  1989                           
  1990                           
  1991                           ;TCS230.c: 28:   while(PORTAbits.RA1 == 1){
  1992     00D4  1885               	btfsc	5,1	;volatile
  1993     00D5  28D7               	goto	u1981
  1994     00D6  28D8               	goto	u1980
  1995     00D7                     u1981:
  1996     00D7  28D4               	goto	l140
  1997     00D8                     u1980:
  1998     00D8                     l142:
  1999                           
  2000                           ;TCS230.c: 31:   T1CONbits.TMR1ON = 0;
  2001     00D8  1010               	bcf	16,0	;volatile
  2002     00D9                     l1722:
  2003                           
  2004                           ;TCS230.c: 32:   temp_freq = TMR1;
  2005     00D9  080E               	movf	14,w	;volatile
  2006     00DA  00C9               	movwf	read_red@temp_freq
  2007     00DB  080F               	movf	15,w	;volatile
  2008     00DC  00CA               	movwf	read_red@temp_freq+1
  2009     00DD  01CB               	clrf	read_red@temp_freq+2
  2010     00DE  01CC               	clrf	read_red@temp_freq+3
  2011     00DF                     l1724:
  2012                           
  2013                           ;TCS230.c: 33:   TMR1 = 0;
  2014     00DF  018E               	clrf	14	;volatile
  2015     00E0  018F               	clrf	15	;volatile
  2016     00E1                     l1726:
  2017                           
  2018                           ;TCS230.c: 34:   return (unsigned long)((float)temp_freq * 1.0);
  2019     00E1  084C               	movf	read_red@temp_freq+3,w
  2020     00E2  00F3               	movwf	___xxtofl@val+3
  2021     00E3  084B               	movf	read_red@temp_freq+2,w
  2022     00E4  00F2               	movwf	___xxtofl@val+2
  2023     00E5  084A               	movf	read_red@temp_freq+1,w
  2024     00E6  00F1               	movwf	___xxtofl@val+1
  2025     00E7  0849               	movf	read_red@temp_freq,w
  2026     00E8  00F0               	movwf	___xxtofl@val
  2027     00E9  3000               	movlw	0
  2028     00EA  120A  118A  21FE  120A  118A  	fcall	___xxtofl
  2029     00EF  0873               	movf	?___xxtofl+3,w
  2030     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  2031     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  2032     00F2  00A7               	movwf	___flmul@a+3
  2033     00F3  0872               	movf	?___xxtofl+2,w
  2034     00F4  00A6               	movwf	___flmul@a+2
  2035     00F5  0871               	movf	?___xxtofl+1,w
  2036     00F6  00A5               	movwf	___flmul@a+1
  2037     00F7  0870               	movf	?___xxtofl,w
  2038     00F8  00A4               	movwf	___flmul@a
  2039     00F9  303F               	movlw	63
  2040     00FA  00A3               	movwf	___flmul@b+3
  2041     00FB  3080               	movlw	128
  2042     00FC  00A2               	movwf	___flmul@b+2
  2043     00FD  3000               	movlw	0
  2044     00FE  00A1               	movwf	___flmul@b+1
  2045     00FF  3000               	movlw	0
  2046     0100  00A0               	movwf	___flmul@b
  2047     0101  120A  118A  24AE  120A  118A  	fcall	___flmul
  2048     0106  1283               	bcf	3,5	;RP0=0, select bank0
  2049     0107  1303               	bcf	3,6	;RP1=0, select bank0
  2050     0108  0823               	movf	?___flmul+3,w
  2051     0109  00BD               	movwf	___fltol@f1+3
  2052     010A  0822               	movf	?___flmul+2,w
  2053     010B  00BC               	movwf	___fltol@f1+2
  2054     010C  0821               	movf	?___flmul+1,w
  2055     010D  00BB               	movwf	___fltol@f1+1
  2056     010E  0820               	movf	?___flmul,w
  2057     010F  00BA               	movwf	___fltol@f1
  2058     0110  120A  118A  2186  120A  118A  	fcall	___fltol
  2059     0115  1283               	bcf	3,5	;RP0=0, select bank0
  2060     0116  1303               	bcf	3,6	;RP1=0, select bank0
  2061     0117  083D               	movf	?___fltol+3,w
  2062     0118  00C7               	movwf	?_read_red+3
  2063     0119  083C               	movf	?___fltol+2,w
  2064     011A  00C6               	movwf	?_read_red+2
  2065     011B  083B               	movf	?___fltol+1,w
  2066     011C  00C5               	movwf	?_read_red+1
  2067     011D  083A               	movf	?___fltol,w
  2068     011E  00C4               	movwf	?_read_red
  2069     011F                     l143:
  2070     011F  0008               	return
  2071     0120                     __end_of_read_red:
  2072                           
  2073                           	psect	text6
  2074     005A                     __ptext6:	
  2075 ;; *************** function _read_green *****************
  2076 ;; Defined at:
  2077 ;;		line 38 in file "TCS230.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  4   36[BANK0 ] unsigned long 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       4       0       0       0
  2092 ;;      Locals:         0       4       0       0       0
  2093 ;;      Temps:          0       1       0       0       0
  2094 ;;      Totals:         0       9       0       0       0
  2095 ;;Total ram usage:        9 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 2
  2098 ;; This function calls:
  2099 ;;		___flmul
  2100 ;;		___fltol
  2101 ;;		___xxtofl
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107     005A                     _read_green:	
  2108                           ;psect for function _read_green
  2109                           
  2110     005A                     l1730:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _read_green: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2113                           
  2114                           
  2115                           ;TCS230.c: 39:   unsigned long temp_freq;;TCS230.c: 40:   RD0 = 1;
  2116     005A  1283               	bcf	3,5	;RP0=0, select bank0
  2117     005B  1303               	bcf	3,6	;RP1=0, select bank0
  2118     005C  1408               	bsf	8,0	;volatile
  2119                           
  2120                           ;TCS230.c: 41:   RD1 = 1;
  2121     005D  1488               	bsf	8,1	;volatile
  2122     005E                     l1732:
  2123                           
  2124                           ;TCS230.c: 42:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2125     005E  3013               	movlw	19
  2126     005F  1283               	bcf	3,5	;RP0=0, select bank0
  2127     0060  1303               	bcf	3,6	;RP1=0, select bank0
  2128     0061  00C8               	movwf	??_read_green
  2129     0062                     u2157:
  2130     0062  0BC8               	decfsz	??_read_green,f
  2131     0063  2862               	goto	u2157
  2132     0064                     l146:	
  2133                           ;TCS230.c: 44:   }
  2134                           
  2135                           
  2136                           ;TCS230.c: 43:   while(PORTAbits.RA1 == 1){
  2137     0064  1283               	bcf	3,5	;RP0=0, select bank0
  2138     0065  1303               	bcf	3,6	;RP1=0, select bank0
  2139     0066  1885               	btfsc	5,1	;volatile
  2140     0067  2869               	goto	u1991
  2141     0068  286A               	goto	u1990
  2142     0069                     u1991:
  2143     0069  2864               	goto	l146
  2144     006A                     u1990:
  2145     006A                     l149:	
  2146                           ;TCS230.c: 46:   }
  2147                           
  2148                           
  2149                           ;TCS230.c: 45:   while(PORTAbits.RA1 == 0){
  2150     006A  1C85               	btfss	5,1	;volatile
  2151     006B  286D               	goto	u2001
  2152     006C  286E               	goto	u2000
  2153     006D                     u2001:
  2154     006D  286A               	goto	l149
  2155     006E                     u2000:
  2156     006E                     l1734:
  2157                           
  2158                           ;TCS230.c: 47:   TMR1 = 0;
  2159     006E  018E               	clrf	14	;volatile
  2160     006F  018F               	clrf	15	;volatile
  2161     0070                     l1736:
  2162                           
  2163                           ;TCS230.c: 48:   T1CONbits.TMR1ON = 1;
  2164     0070  1410               	bsf	16,0	;volatile
  2165     0071                     l152:	
  2166                           ;TCS230.c: 50:   }
  2167                           
  2168                           
  2169                           ;TCS230.c: 49:   while(PORTAbits.RA1 == 1){
  2170     0071  1885               	btfsc	5,1	;volatile
  2171     0072  2874               	goto	u2011
  2172     0073  2875               	goto	u2010
  2173     0074                     u2011:
  2174     0074  2871               	goto	l152
  2175     0075                     u2010:
  2176     0075                     l154:
  2177                           
  2178                           ;TCS230.c: 51:   T1CONbits.TMR1ON = 0;
  2179     0075  1010               	bcf	16,0	;volatile
  2180     0076                     l1738:
  2181                           
  2182                           ;TCS230.c: 52:   temp_freq = TMR1;
  2183     0076  080E               	movf	14,w	;volatile
  2184     0077  00C9               	movwf	read_green@temp_freq
  2185     0078  080F               	movf	15,w	;volatile
  2186     0079  00CA               	movwf	read_green@temp_freq+1
  2187     007A  01CB               	clrf	read_green@temp_freq+2
  2188     007B  01CC               	clrf	read_green@temp_freq+3
  2189     007C                     l1740:
  2190                           
  2191                           ;TCS230.c: 53:   TMR1 = 0;
  2192     007C  018E               	clrf	14	;volatile
  2193     007D  018F               	clrf	15	;volatile
  2194     007E                     l1742:
  2195                           
  2196                           ;TCS230.c: 54:   return (unsigned long)((float)temp_freq * 1.0);
  2197     007E  084C               	movf	read_green@temp_freq+3,w
  2198     007F  00F3               	movwf	___xxtofl@val+3
  2199     0080  084B               	movf	read_green@temp_freq+2,w
  2200     0081  00F2               	movwf	___xxtofl@val+2
  2201     0082  084A               	movf	read_green@temp_freq+1,w
  2202     0083  00F1               	movwf	___xxtofl@val+1
  2203     0084  0849               	movf	read_green@temp_freq,w
  2204     0085  00F0               	movwf	___xxtofl@val
  2205     0086  3000               	movlw	0
  2206     0087  120A  118A  21FE  120A  118A  	fcall	___xxtofl
  2207     008C  0873               	movf	?___xxtofl+3,w
  2208     008D  1283               	bcf	3,5	;RP0=0, select bank0
  2209     008E  1303               	bcf	3,6	;RP1=0, select bank0
  2210     008F  00A7               	movwf	___flmul@a+3
  2211     0090  0872               	movf	?___xxtofl+2,w
  2212     0091  00A6               	movwf	___flmul@a+2
  2213     0092  0871               	movf	?___xxtofl+1,w
  2214     0093  00A5               	movwf	___flmul@a+1
  2215     0094  0870               	movf	?___xxtofl,w
  2216     0095  00A4               	movwf	___flmul@a
  2217     0096  303F               	movlw	63
  2218     0097  00A3               	movwf	___flmul@b+3
  2219     0098  3080               	movlw	128
  2220     0099  00A2               	movwf	___flmul@b+2
  2221     009A  3000               	movlw	0
  2222     009B  00A1               	movwf	___flmul@b+1
  2223     009C  3000               	movlw	0
  2224     009D  00A0               	movwf	___flmul@b
  2225     009E  120A  118A  24AE  120A  118A  	fcall	___flmul
  2226     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2227     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2228     00A5  0823               	movf	?___flmul+3,w
  2229     00A6  00BD               	movwf	___fltol@f1+3
  2230     00A7  0822               	movf	?___flmul+2,w
  2231     00A8  00BC               	movwf	___fltol@f1+2
  2232     00A9  0821               	movf	?___flmul+1,w
  2233     00AA  00BB               	movwf	___fltol@f1+1
  2234     00AB  0820               	movf	?___flmul,w
  2235     00AC  00BA               	movwf	___fltol@f1
  2236     00AD  120A  118A  2186  120A  118A  	fcall	___fltol
  2237     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2238     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2239     00B4  083D               	movf	?___fltol+3,w
  2240     00B5  00C7               	movwf	?_read_green+3
  2241     00B6  083C               	movf	?___fltol+2,w
  2242     00B7  00C6               	movwf	?_read_green+2
  2243     00B8  083B               	movf	?___fltol+1,w
  2244     00B9  00C5               	movwf	?_read_green+1
  2245     00BA  083A               	movf	?___fltol,w
  2246     00BB  00C4               	movwf	?_read_green
  2247     00BC                     l155:
  2248     00BC  0008               	return
  2249     00BD                     __end_of_read_green:
  2250                           
  2251                           	psect	text7
  2252     0F9D                     __ptext7:	
  2253 ;; *************** function _read_blue *****************
  2254 ;; Defined at:
  2255 ;;		line 58 in file "TCS230.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  temp_freq       4   41[BANK0 ] unsigned long 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  4   36[BANK0 ] unsigned long 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       4       0       0       0
  2270 ;;      Locals:         0       4       0       0       0
  2271 ;;      Temps:          0       1       0       0       0
  2272 ;;      Totals:         0       9       0       0       0
  2273 ;;Total ram usage:        9 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 2
  2276 ;; This function calls:
  2277 ;;		___flmul
  2278 ;;		___fltol
  2279 ;;		___xxtofl
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285     0F9D                     _read_blue:	
  2286                           ;psect for function _read_blue
  2287                           
  2288     0F9D                     l1746:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _read_blue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2291                           
  2292                           
  2293                           ;TCS230.c: 59:   unsigned long temp_freq;;TCS230.c: 60:   RD0 = 0;
  2294     0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  2296     0F9F  1008               	bcf	8,0	;volatile
  2297                           
  2298                           ;TCS230.c: 61:   RD1 = 1;
  2299     0FA0  1488               	bsf	8,1	;volatile
  2300     0FA1                     l1748:
  2301                           
  2302                           ;TCS230.c: 62:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2303     0FA1  3013               	movlw	19
  2304     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  2305     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  2306     0FA4  00C8               	movwf	??_read_blue
  2307     0FA5                     u2167:
  2308     0FA5  0BC8               	decfsz	??_read_blue,f
  2309     0FA6  2FA5               	goto	u2167
  2310     0FA7                     l158:	
  2311                           ;TCS230.c: 64:   }
  2312                           
  2313                           
  2314                           ;TCS230.c: 63:   while(PORTAbits.RA1 == 1){
  2315     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2316     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2317     0FA9  1885               	btfsc	5,1	;volatile
  2318     0FAA  2FAC               	goto	u2021
  2319     0FAB  2FAD               	goto	u2020
  2320     0FAC                     u2021:
  2321     0FAC  2FA7               	goto	l158
  2322     0FAD                     u2020:
  2323     0FAD                     l161:	
  2324                           ;TCS230.c: 66:   }
  2325                           
  2326                           
  2327                           ;TCS230.c: 65:   while(PORTAbits.RA1 == 0){
  2328     0FAD  1C85               	btfss	5,1	;volatile
  2329     0FAE  2FB0               	goto	u2031
  2330     0FAF  2FB1               	goto	u2030
  2331     0FB0                     u2031:
  2332     0FB0  2FAD               	goto	l161
  2333     0FB1                     u2030:
  2334     0FB1                     l1750:
  2335                           
  2336                           ;TCS230.c: 67:   TMR1 = 0;
  2337     0FB1  018E               	clrf	14	;volatile
  2338     0FB2  018F               	clrf	15	;volatile
  2339     0FB3                     l1752:
  2340                           
  2341                           ;TCS230.c: 68:   T1CONbits.TMR1ON = 1;
  2342     0FB3  1410               	bsf	16,0	;volatile
  2343     0FB4                     l164:	
  2344                           ;TCS230.c: 70:   }
  2345                           
  2346                           
  2347                           ;TCS230.c: 69:   while(PORTAbits.RA1 == 1){
  2348     0FB4  1885               	btfsc	5,1	;volatile
  2349     0FB5  2FB7               	goto	u2041
  2350     0FB6  2FB8               	goto	u2040
  2351     0FB7                     u2041:
  2352     0FB7  2FB4               	goto	l164
  2353     0FB8                     u2040:
  2354     0FB8                     l1754:
  2355                           
  2356                           ;TCS230.c: 71:   temp_freq = TMR1;
  2357     0FB8  080E               	movf	14,w	;volatile
  2358     0FB9  00C9               	movwf	read_blue@temp_freq
  2359     0FBA  080F               	movf	15,w	;volatile
  2360     0FBB  00CA               	movwf	read_blue@temp_freq+1
  2361     0FBC  01CB               	clrf	read_blue@temp_freq+2
  2362     0FBD  01CC               	clrf	read_blue@temp_freq+3
  2363     0FBE                     l1756:
  2364                           
  2365                           ;TCS230.c: 72:   T1CONbits.TMR1ON = 0;
  2366     0FBE  1010               	bcf	16,0	;volatile
  2367     0FBF                     l1758:
  2368                           
  2369                           ;TCS230.c: 74:   TMR1 = 0;
  2370     0FBF  018E               	clrf	14	;volatile
  2371     0FC0  018F               	clrf	15	;volatile
  2372     0FC1                     l1760:
  2373                           
  2374                           ;TCS230.c: 75:   return (unsigned long)((float)temp_freq * 1.0);
  2375     0FC1  084C               	movf	read_blue@temp_freq+3,w
  2376     0FC2  00F3               	movwf	___xxtofl@val+3
  2377     0FC3  084B               	movf	read_blue@temp_freq+2,w
  2378     0FC4  00F2               	movwf	___xxtofl@val+2
  2379     0FC5  084A               	movf	read_blue@temp_freq+1,w
  2380     0FC6  00F1               	movwf	___xxtofl@val+1
  2381     0FC7  0849               	movf	read_blue@temp_freq,w
  2382     0FC8  00F0               	movwf	___xxtofl@val
  2383     0FC9  3000               	movlw	0
  2384     0FCA  120A  118A  21FE  120A  158A  	fcall	___xxtofl
  2385     0FCF  0873               	movf	?___xxtofl+3,w
  2386     0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0FD2  00A7               	movwf	___flmul@a+3
  2389     0FD3  0872               	movf	?___xxtofl+2,w
  2390     0FD4  00A6               	movwf	___flmul@a+2
  2391     0FD5  0871               	movf	?___xxtofl+1,w
  2392     0FD6  00A5               	movwf	___flmul@a+1
  2393     0FD7  0870               	movf	?___xxtofl,w
  2394     0FD8  00A4               	movwf	___flmul@a
  2395     0FD9  303F               	movlw	63
  2396     0FDA  00A3               	movwf	___flmul@b+3
  2397     0FDB  3080               	movlw	128
  2398     0FDC  00A2               	movwf	___flmul@b+2
  2399     0FDD  3000               	movlw	0
  2400     0FDE  00A1               	movwf	___flmul@b+1
  2401     0FDF  3000               	movlw	0
  2402     0FE0  00A0               	movwf	___flmul@b
  2403     0FE1  120A  118A  24AE  120A  158A  	fcall	___flmul
  2404     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  2405     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  2406     0FE8  0823               	movf	?___flmul+3,w
  2407     0FE9  00BD               	movwf	___fltol@f1+3
  2408     0FEA  0822               	movf	?___flmul+2,w
  2409     0FEB  00BC               	movwf	___fltol@f1+2
  2410     0FEC  0821               	movf	?___flmul+1,w
  2411     0FED  00BB               	movwf	___fltol@f1+1
  2412     0FEE  0820               	movf	?___flmul,w
  2413     0FEF  00BA               	movwf	___fltol@f1
  2414     0FF0  120A  118A  2186  120A  158A  	fcall	___fltol
  2415     0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2416     0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2417     0FF7  083D               	movf	?___fltol+3,w
  2418     0FF8  00C7               	movwf	?_read_blue+3
  2419     0FF9  083C               	movf	?___fltol+2,w
  2420     0FFA  00C6               	movwf	?_read_blue+2
  2421     0FFB  083B               	movf	?___fltol+1,w
  2422     0FFC  00C5               	movwf	?_read_blue+1
  2423     0FFD  083A               	movf	?___fltol,w
  2424     0FFE  00C4               	movwf	?_read_blue
  2425     0FFF                     l167:
  2426     0FFF  0008               	return
  2427     1000                     __end_of_read_blue:
  2428                           
  2429                           	psect	text8
  2430     01FE                     __ptext8:	
  2431 ;; *************** function ___xxtofl *****************
  2432 ;; Defined at:
  2433 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  sign            1    wreg     unsigned char 
  2436 ;;  val             4    0[COMMON] long 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  sign            1    8[COMMON] unsigned char 
  2439 ;;  arg             4   10[COMMON] unsigned long 
  2440 ;;  exp             1    9[COMMON] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  4    0[COMMON] unsigned char 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         4       0       0       0       0
  2451 ;;      Locals:         6       0       0       0       0
  2452 ;;      Temps:          4       0       0       0       0
  2453 ;;      Totals:        14       0       0       0       0
  2454 ;;Total ram usage:       14 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_read_red
  2460 ;;		_read_green
  2461 ;;		_read_blue
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     01FE                     ___xxtofl:	
  2466                           ;psect for function ___xxtofl
  2467                           
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2471                           ;___xxtofl@sign stored from wreg
  2472     01FE  00F8               	movwf	___xxtofl@sign
  2473     01FF                     l1610:
  2474     01FF  0878               	movf	___xxtofl@sign,w
  2475     0200  1903               	btfsc	3,2
  2476     0201  2A03               	goto	u1751
  2477     0202  2A04               	goto	u1750
  2478     0203                     u1751:
  2479     0203  2A18               	goto	l1616
  2480     0204                     u1750:
  2481     0204                     l1612:
  2482     0204  1FF3               	btfss	___xxtofl@val+3,7
  2483     0205  2A07               	goto	u1761
  2484     0206  2A08               	goto	u1760
  2485     0207                     u1761:
  2486     0207  2A18               	goto	l1616
  2487     0208                     u1760:
  2488     0208                     l1614:
  2489     0208  0970               	comf	___xxtofl@val,w
  2490     0209  00FA               	movwf	___xxtofl@arg
  2491     020A  0971               	comf	___xxtofl@val+1,w
  2492     020B  00FB               	movwf	___xxtofl@arg+1
  2493     020C  0972               	comf	___xxtofl@val+2,w
  2494     020D  00FC               	movwf	___xxtofl@arg+2
  2495     020E  0973               	comf	___xxtofl@val+3,w
  2496     020F  00FD               	movwf	___xxtofl@arg+3
  2497     0210  0AFA               	incf	___xxtofl@arg,f
  2498     0211  1903               	skipnz
  2499     0212  0AFB               	incf	___xxtofl@arg+1,f
  2500     0213  1903               	skipnz
  2501     0214  0AFC               	incf	___xxtofl@arg+2,f
  2502     0215  1903               	skipnz
  2503     0216  0AFD               	incf	___xxtofl@arg+3,f
  2504     0217  2A20               	goto	l715
  2505     0218                     l1616:
  2506     0218  0873               	movf	___xxtofl@val+3,w
  2507     0219  00FD               	movwf	___xxtofl@arg+3
  2508     021A  0872               	movf	___xxtofl@val+2,w
  2509     021B  00FC               	movwf	___xxtofl@arg+2
  2510     021C  0871               	movf	___xxtofl@val+1,w
  2511     021D  00FB               	movwf	___xxtofl@arg+1
  2512     021E  0870               	movf	___xxtofl@val,w
  2513     021F  00FA               	movwf	___xxtofl@arg
  2514     0220                     l715:
  2515     0220  0873               	movf	___xxtofl@val+3,w
  2516     0221  0472               	iorwf	___xxtofl@val+2,w
  2517     0222  0471               	iorwf	___xxtofl@val+1,w
  2518     0223  0470               	iorwf	___xxtofl@val,w
  2519     0224  1D03               	skipz
  2520     0225  2A27               	goto	u1771
  2521     0226  2A28               	goto	u1770
  2522     0227                     u1771:
  2523     0227  2A31               	goto	l1622
  2524     0228                     u1770:
  2525     0228                     l1618:
  2526     0228  3000               	movlw	0
  2527     0229  00F3               	movwf	?___xxtofl+3
  2528     022A  3000               	movlw	0
  2529     022B  00F2               	movwf	?___xxtofl+2
  2530     022C  3000               	movlw	0
  2531     022D  00F1               	movwf	?___xxtofl+1
  2532     022E  3000               	movlw	0
  2533     022F  00F0               	movwf	?___xxtofl
  2534     0230  2AB5               	goto	l717
  2535     0231                     l1622:
  2536     0231  3096               	movlw	150
  2537     0232  00F9               	movwf	___xxtofl@exp
  2538     0233  2A41               	goto	l1626
  2539     0234                     l1624:
  2540     0234  3001               	movlw	1
  2541     0235  00F4               	movwf	??___xxtofl
  2542     0236  0874               	movf	??___xxtofl,w
  2543     0237  07F9               	addwf	___xxtofl@exp,f
  2544     0238  3001               	movlw	1
  2545     0239                     u1785:
  2546     0239  1003               	clrc
  2547     023A  0CFD               	rrf	___xxtofl@arg+3,f
  2548     023B  0CFC               	rrf	___xxtofl@arg+2,f
  2549     023C  0CFB               	rrf	___xxtofl@arg+1,f
  2550     023D  0CFA               	rrf	___xxtofl@arg,f
  2551     023E  3EFF               	addlw	-1
  2552     023F  1D03               	skipz
  2553     0240  2A39               	goto	u1785
  2554     0241                     l1626:
  2555     0241  30FE               	movlw	254
  2556     0242  057D               	andwf	___xxtofl@arg+3,w
  2557     0243  1D03               	btfss	3,2
  2558     0244  2A46               	goto	u1791
  2559     0245  2A47               	goto	u1790
  2560     0246                     u1791:
  2561     0246  2A34               	goto	l1624
  2562     0247                     u1790:
  2563     0247  2A63               	goto	l721
  2564     0248                     l1628:
  2565     0248  3001               	movlw	1
  2566     0249  00F4               	movwf	??___xxtofl
  2567     024A  0874               	movf	??___xxtofl,w
  2568     024B  07F9               	addwf	___xxtofl@exp,f
  2569     024C                     l1630:
  2570     024C  3001               	movlw	1
  2571     024D  07FA               	addwf	___xxtofl@arg,f
  2572     024E  3000               	movlw	0
  2573     024F  1803               	skipnc
  2574     0250  3001               	movlw	1
  2575     0251  07FB               	addwf	___xxtofl@arg+1,f
  2576     0252  3000               	movlw	0
  2577     0253  1803               	skipnc
  2578     0254  3001               	movlw	1
  2579     0255  07FC               	addwf	___xxtofl@arg+2,f
  2580     0256  3000               	movlw	0
  2581     0257  1803               	skipnc
  2582     0258  3001               	movlw	1
  2583     0259  07FD               	addwf	___xxtofl@arg+3,f
  2584     025A                     l1632:
  2585     025A  3001               	movlw	1
  2586     025B                     u1805:
  2587     025B  1003               	clrc
  2588     025C  0CFD               	rrf	___xxtofl@arg+3,f
  2589     025D  0CFC               	rrf	___xxtofl@arg+2,f
  2590     025E  0CFB               	rrf	___xxtofl@arg+1,f
  2591     025F  0CFA               	rrf	___xxtofl@arg,f
  2592     0260  3EFF               	addlw	-1
  2593     0261  1D03               	skipz
  2594     0262  2A5B               	goto	u1805
  2595     0263                     l721:
  2596     0263  30FF               	movlw	255
  2597     0264  057D               	andwf	___xxtofl@arg+3,w
  2598     0265  1D03               	btfss	3,2
  2599     0266  2A68               	goto	u1811
  2600     0267  2A69               	goto	u1810
  2601     0268                     u1811:
  2602     0268  2A48               	goto	l1628
  2603     0269                     u1810:
  2604     0269  2A75               	goto	l1636
  2605     026A                     l1634:
  2606     026A  3001               	movlw	1
  2607     026B  02F9               	subwf	___xxtofl@exp,f
  2608     026C  3001               	movlw	1
  2609     026D  00F4               	movwf	??___xxtofl
  2610     026E                     u1825:
  2611     026E  1003               	clrc
  2612     026F  0DFA               	rlf	___xxtofl@arg,f
  2613     0270  0DFB               	rlf	___xxtofl@arg+1,f
  2614     0271  0DFC               	rlf	___xxtofl@arg+2,f
  2615     0272  0DFD               	rlf	___xxtofl@arg+3,f
  2616     0273  0BF4               	decfsz	??___xxtofl,f
  2617     0274  2A6E               	goto	u1825
  2618     0275                     l1636:
  2619     0275  1BFC               	btfsc	___xxtofl@arg+2,7
  2620     0276  2A78               	goto	u1831
  2621     0277  2A79               	goto	u1830
  2622     0278                     u1831:
  2623     0278  2A7F               	goto	l728
  2624     0279                     u1830:
  2625     0279                     l1638:
  2626     0279  3002               	movlw	2
  2627     027A  0279               	subwf	___xxtofl@exp,w
  2628     027B  1803               	skipnc
  2629     027C  2A7E               	goto	u1841
  2630     027D  2A7F               	goto	u1840
  2631     027E                     u1841:
  2632     027E  2A6A               	goto	l1634
  2633     027F                     u1840:
  2634     027F                     l728:
  2635     027F  1879               	btfsc	___xxtofl@exp,0
  2636     0280  2A82               	goto	u1851
  2637     0281  2A83               	goto	u1850
  2638     0282                     u1851:
  2639     0282  2A8B               	goto	l729
  2640     0283                     u1850:
  2641     0283                     l1640:
  2642     0283  30FF               	movlw	255
  2643     0284  05FA               	andwf	___xxtofl@arg,f
  2644     0285  30FF               	movlw	255
  2645     0286  05FB               	andwf	___xxtofl@arg+1,f
  2646     0287  307F               	movlw	127
  2647     0288  05FC               	andwf	___xxtofl@arg+2,f
  2648     0289  30FF               	movlw	255
  2649     028A  05FD               	andwf	___xxtofl@arg+3,f
  2650     028B                     l729:
  2651     028B  1003               	clrc
  2652     028C  0CF9               	rrf	___xxtofl@exp,f
  2653     028D                     l1642:
  2654     028D  0879               	movf	___xxtofl@exp,w
  2655     028E  00F4               	movwf	??___xxtofl
  2656     028F  01F5               	clrf	??___xxtofl+1
  2657     0290  01F6               	clrf	??___xxtofl+2
  2658     0291  01F7               	clrf	??___xxtofl+3
  2659     0292  3018               	movlw	24
  2660     0293                     u1865:
  2661     0293  1003               	clrc
  2662     0294  0DF4               	rlf	??___xxtofl,f
  2663     0295  0DF5               	rlf	??___xxtofl+1,f
  2664     0296  0DF6               	rlf	??___xxtofl+2,f
  2665     0297  0DF7               	rlf	??___xxtofl+3,f
  2666     0298                     u1860:
  2667     0298  3EFF               	addlw	-1
  2668     0299  1D03               	skipz
  2669     029A  2A93               	goto	u1865
  2670     029B  0874               	movf	??___xxtofl,w
  2671     029C  04FA               	iorwf	___xxtofl@arg,f
  2672     029D  0875               	movf	??___xxtofl+1,w
  2673     029E  04FB               	iorwf	___xxtofl@arg+1,f
  2674     029F  0876               	movf	??___xxtofl+2,w
  2675     02A0  04FC               	iorwf	___xxtofl@arg+2,f
  2676     02A1  0877               	movf	??___xxtofl+3,w
  2677     02A2  04FD               	iorwf	___xxtofl@arg+3,f
  2678     02A3                     l1644:
  2679     02A3  0878               	movf	___xxtofl@sign,w
  2680     02A4  1903               	btfsc	3,2
  2681     02A5  2AA7               	goto	u1871
  2682     02A6  2AA8               	goto	u1870
  2683     02A7                     u1871:
  2684     02A7  2AAD               	goto	l1650
  2685     02A8                     u1870:
  2686     02A8                     l1646:
  2687     02A8  1FF3               	btfss	___xxtofl@val+3,7
  2688     02A9  2AAB               	goto	u1881
  2689     02AA  2AAC               	goto	u1880
  2690     02AB                     u1881:
  2691     02AB  2AAD               	goto	l1650
  2692     02AC                     u1880:
  2693     02AC                     l1648:
  2694     02AC  17FD               	bsf	___xxtofl@arg+3,7
  2695     02AD                     l1650:
  2696     02AD  087D               	movf	___xxtofl@arg+3,w
  2697     02AE  00F3               	movwf	?___xxtofl+3
  2698     02AF  087C               	movf	___xxtofl@arg+2,w
  2699     02B0  00F2               	movwf	?___xxtofl+2
  2700     02B1  087B               	movf	___xxtofl@arg+1,w
  2701     02B2  00F1               	movwf	?___xxtofl+1
  2702     02B3  087A               	movf	___xxtofl@arg,w
  2703     02B4  00F0               	movwf	?___xxtofl
  2704     02B5                     l717:
  2705     02B5  0008               	return
  2706     02B6                     __end_of___xxtofl:
  2707                           
  2708                           	psect	text9
  2709     0186                     __ptext9:	
  2710 ;; *************** function ___fltol *****************
  2711 ;; Defined at:
  2712 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  f1              4   26[BANK0 ] unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  exp1            1   35[BANK0 ] unsigned char 
  2717 ;;  sign1           1   34[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  4   26[BANK0 ] long 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       4       0       0       0
  2728 ;;      Locals:         0       2       0       0       0
  2729 ;;      Temps:          0       4       0       0       0
  2730 ;;      Totals:         0      10       0       0       0
  2731 ;;Total ram usage:       10 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_read_red
  2737 ;;		_read_green
  2738 ;;		_read_blue
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742     0186                     ___fltol:	
  2743                           ;psect for function ___fltol
  2744                           
  2745     0186                     l1414:	
  2746                           ;incstack = 0
  2747                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2748                           
  2749     0186  1003               	clrc
  2750     0187  1283               	bcf	3,5	;RP0=0, select bank0
  2751     0188  1303               	bcf	3,6	;RP1=0, select bank0
  2752     0189  0D3C               	rlf	___fltol@f1+2,w
  2753     018A  0D3D               	rlf	___fltol@f1+3,w
  2754     018B  00C3               	movwf	___fltol@exp1
  2755     018C  0843               	movf	___fltol@exp1,w
  2756     018D  1D03               	btfss	3,2
  2757     018E  2990               	goto	u1221
  2758     018F  2991               	goto	u1220
  2759     0190                     u1221:
  2760     0190  299A               	goto	l1420
  2761     0191                     u1220:
  2762     0191                     l1416:
  2763     0191  3000               	movlw	0
  2764     0192  00BD               	movwf	?___fltol+3
  2765     0193  3000               	movlw	0
  2766     0194  00BC               	movwf	?___fltol+2
  2767     0195  3000               	movlw	0
  2768     0196  00BB               	movwf	?___fltol+1
  2769     0197  3000               	movlw	0
  2770     0198  00BA               	movwf	?___fltol
  2771     0199  29FD               	goto	l468
  2772     019A                     l1420:
  2773     019A  083A               	movf	___fltol@f1,w
  2774     019B  00BE               	movwf	??___fltol
  2775     019C  083B               	movf	___fltol@f1+1,w
  2776     019D  00BF               	movwf	??___fltol+1
  2777     019E  083C               	movf	___fltol@f1+2,w
  2778     019F  00C0               	movwf	??___fltol+2
  2779     01A0  083D               	movf	___fltol@f1+3,w
  2780     01A1  00C1               	movwf	??___fltol+3
  2781     01A2  301F               	movlw	31
  2782     01A3                     u1235:
  2783     01A3  1003               	clrc
  2784     01A4  0CC1               	rrf	??___fltol+3,f
  2785     01A5  0CC0               	rrf	??___fltol+2,f
  2786     01A6  0CBF               	rrf	??___fltol+1,f
  2787     01A7  0CBE               	rrf	??___fltol,f
  2788     01A8                     u1230:
  2789     01A8  3EFF               	addlw	-1
  2790     01A9  1D03               	skipz
  2791     01AA  29A3               	goto	u1235
  2792     01AB  083E               	movf	??___fltol,w
  2793     01AC  00C2               	movwf	___fltol@sign1
  2794     01AD                     l1422:
  2795     01AD  17BC               	bsf	___fltol@f1+2,7
  2796     01AE                     l1424:
  2797     01AE  30FF               	movlw	255
  2798     01AF  05BA               	andwf	___fltol@f1,f
  2799     01B0  30FF               	movlw	255
  2800     01B1  05BB               	andwf	___fltol@f1+1,f
  2801     01B2  30FF               	movlw	255
  2802     01B3  05BC               	andwf	___fltol@f1+2,f
  2803     01B4  3000               	movlw	0
  2804     01B5  05BD               	andwf	___fltol@f1+3,f
  2805     01B6                     l1426:
  2806     01B6  3096               	movlw	150
  2807     01B7  02C3               	subwf	___fltol@exp1,f
  2808     01B8                     l1428:
  2809     01B8  1FC3               	btfss	___fltol@exp1,7
  2810     01B9  29BB               	goto	u1241
  2811     01BA  29BC               	goto	u1240
  2812     01BB                     u1241:
  2813     01BB  29D6               	goto	l1438
  2814     01BC                     u1240:
  2815     01BC                     l1430:
  2816     01BC  0843               	movf	___fltol@exp1,w
  2817     01BD  3A80               	xorlw	128
  2818     01BE  3E97               	addlw	151
  2819     01BF  1803               	skipnc
  2820     01C0  29C2               	goto	u1251
  2821     01C1  29C3               	goto	u1250
  2822     01C2                     u1251:
  2823     01C2  29C4               	goto	l1436
  2824     01C3                     u1250:
  2825     01C3  2991               	goto	l1416
  2826     01C4                     l1436:
  2827     01C4  3001               	movlw	1
  2828     01C5                     u1265:
  2829     01C5  1003               	clrc
  2830     01C6  0CBD               	rrf	___fltol@f1+3,f
  2831     01C7  0CBC               	rrf	___fltol@f1+2,f
  2832     01C8  0CBB               	rrf	___fltol@f1+1,f
  2833     01C9  0CBA               	rrf	___fltol@f1,f
  2834     01CA  3EFF               	addlw	-1
  2835     01CB  1D03               	skipz
  2836     01CC  29C5               	goto	u1265
  2837     01CD  3001               	movlw	1
  2838     01CE  00BE               	movwf	??___fltol
  2839     01CF  083E               	movf	??___fltol,w
  2840     01D0  07C3               	addwf	___fltol@exp1,f
  2841     01D1  1D03               	btfss	3,2
  2842     01D2  29D4               	goto	u1271
  2843     01D3  29D5               	goto	u1270
  2844     01D4                     u1271:
  2845     01D4  29C4               	goto	l1436
  2846     01D5                     u1270:
  2847     01D5  29ED               	goto	l1446
  2848     01D6                     l1438:
  2849     01D6  3020               	movlw	32
  2850     01D7  0243               	subwf	___fltol@exp1,w
  2851     01D8  1C03               	skipc
  2852     01D9  29DB               	goto	u1281
  2853     01DA  29DC               	goto	u1280
  2854     01DB                     u1281:
  2855     01DB  29E8               	goto	l475
  2856     01DC                     u1280:
  2857     01DC  2991               	goto	l1416
  2858     01DD                     l1444:
  2859     01DD  3001               	movlw	1
  2860     01DE  00BE               	movwf	??___fltol
  2861     01DF                     u1295:
  2862     01DF  1003               	clrc
  2863     01E0  0DBA               	rlf	___fltol@f1,f
  2864     01E1  0DBB               	rlf	___fltol@f1+1,f
  2865     01E2  0DBC               	rlf	___fltol@f1+2,f
  2866     01E3  0DBD               	rlf	___fltol@f1+3,f
  2867     01E4  0BBE               	decfsz	??___fltol,f
  2868     01E5  29DF               	goto	u1295
  2869     01E6  3001               	movlw	1
  2870     01E7  02C3               	subwf	___fltol@exp1,f
  2871     01E8                     l475:
  2872     01E8  0843               	movf	___fltol@exp1,w
  2873     01E9  1D03               	btfss	3,2
  2874     01EA  29EC               	goto	u1301
  2875     01EB  29ED               	goto	u1300
  2876     01EC                     u1301:
  2877     01EC  29DD               	goto	l1444
  2878     01ED                     u1300:
  2879     01ED                     l1446:
  2880     01ED  0842               	movf	___fltol@sign1,w
  2881     01EE  1903               	btfsc	3,2
  2882     01EF  29F1               	goto	u1311
  2883     01F0  29F2               	goto	u1310
  2884     01F1                     u1311:
  2885     01F1  29FD               	goto	l478
  2886     01F2                     u1310:
  2887     01F2                     l1448:
  2888     01F2  09BA               	comf	___fltol@f1,f
  2889     01F3  09BB               	comf	___fltol@f1+1,f
  2890     01F4  09BC               	comf	___fltol@f1+2,f
  2891     01F5  09BD               	comf	___fltol@f1+3,f
  2892     01F6  0ABA               	incf	___fltol@f1,f
  2893     01F7  1903               	skipnz
  2894     01F8  0ABB               	incf	___fltol@f1+1,f
  2895     01F9  1903               	skipnz
  2896     01FA  0ABC               	incf	___fltol@f1+2,f
  2897     01FB  1903               	skipnz
  2898     01FC  0ABD               	incf	___fltol@f1+3,f
  2899     01FD                     l478:
  2900     01FD                     l468:
  2901     01FD  0008               	return
  2902     01FE                     __end_of___fltol:
  2903                           
  2904                           	psect	text10
  2905     04AE                     __ptext10:	
  2906 ;; *************** function ___flmul *****************
  2907 ;; Defined at:
  2908 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  b               4    0[BANK0 ] long 
  2911 ;;  a               4    4[BANK0 ] long 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  prod            4   20[BANK0 ] struct .
  2914 ;;  grs             4   14[BANK0 ] unsigned long 
  2915 ;;  temp            2   24[BANK0 ] struct .
  2916 ;;  bexp            1   19[BANK0 ] unsigned char 
  2917 ;;  aexp            1   18[BANK0 ] unsigned char 
  2918 ;;  sign            1   13[BANK0 ] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  4    0[BANK0 ] unsigned char 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       8       0       0       0
  2929 ;;      Locals:         0      13       0       0       0
  2930 ;;      Temps:          0       5       0       0       0
  2931 ;;      Totals:         0      26       0       0       0
  2932 ;;Total ram usage:       26 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 1
  2935 ;; This function calls:
  2936 ;;		__Umul8_16
  2937 ;; This function is called by:
  2938 ;;		_read_red
  2939 ;;		_read_green
  2940 ;;		_read_blue
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944     04AE                     ___flmul:	
  2945                           ;psect for function ___flmul
  2946                           
  2947     04AE                     l1470:	
  2948                           ;incstack = 0
  2949                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2950                           
  2951     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2952     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2953     04B0  0823               	movf	___flmul@b+3,w
  2954     04B1  3980               	andlw	128
  2955     04B2  00AD               	movwf	___flmul@sign
  2956     04B3                     l1472:
  2957     04B3  0823               	movf	___flmul@b+3,w
  2958     04B4  00A8               	movwf	??___flmul
  2959     04B5  0728               	addwf	??___flmul,w
  2960     04B6  00B3               	movwf	___flmul@bexp
  2961     04B7                     l1474:
  2962     04B7  1FA2               	btfss	___flmul@b+2,7
  2963     04B8  2CBA               	goto	u1381
  2964     04B9  2CBB               	goto	u1380
  2965     04BA                     u1381:
  2966     04BA  2CBC               	goto	l1478
  2967     04BB                     u1380:
  2968     04BB                     l1476:
  2969     04BB  1433               	bsf	___flmul@bexp,0
  2970     04BC                     l1478:
  2971     04BC  0833               	movf	___flmul@bexp,w
  2972     04BD  1903               	btfsc	3,2
  2973     04BE  2CC0               	goto	u1391
  2974     04BF  2CC1               	goto	u1390
  2975     04C0                     u1391:
  2976     04C0  2CD0               	goto	l1486
  2977     04C1                     u1390:
  2978     04C1                     l1480:
  2979     04C1  0A33               	incf	___flmul@bexp,w
  2980     04C2  1D03               	btfss	3,2
  2981     04C3  2CC5               	goto	u1401
  2982     04C4  2CC6               	goto	u1400
  2983     04C5                     u1401:
  2984     04C5  2CCE               	goto	l1484
  2985     04C6                     u1400:
  2986     04C6                     l1482:
  2987     04C6  3000               	movlw	0
  2988     04C7  00A3               	movwf	___flmul@b+3
  2989     04C8  3000               	movlw	0
  2990     04C9  00A2               	movwf	___flmul@b+2
  2991     04CA  3000               	movlw	0
  2992     04CB  00A1               	movwf	___flmul@b+1
  2993     04CC  3000               	movlw	0
  2994     04CD  00A0               	movwf	___flmul@b
  2995     04CE                     l1484:
  2996     04CE  17A2               	bsf	___flmul@b+2,7
  2997     04CF  2CD8               	goto	l1488
  2998     04D0                     l1486:
  2999     04D0  3000               	movlw	0
  3000     04D1  00A3               	movwf	___flmul@b+3
  3001     04D2  3000               	movlw	0
  3002     04D3  00A2               	movwf	___flmul@b+2
  3003     04D4  3000               	movlw	0
  3004     04D5  00A1               	movwf	___flmul@b+1
  3005     04D6  3000               	movlw	0
  3006     04D7  00A0               	movwf	___flmul@b
  3007     04D8                     l1488:
  3008     04D8  0827               	movf	___flmul@a+3,w
  3009     04D9  3980               	andlw	128
  3010     04DA  00A8               	movwf	??___flmul
  3011     04DB  0828               	movf	??___flmul,w
  3012     04DC  06AD               	xorwf	___flmul@sign,f
  3013     04DD                     l1490:
  3014     04DD  0827               	movf	___flmul@a+3,w
  3015     04DE  00A8               	movwf	??___flmul
  3016     04DF  0728               	addwf	??___flmul,w
  3017     04E0  00B2               	movwf	___flmul@aexp
  3018     04E1                     l1492:
  3019     04E1  1FA6               	btfss	___flmul@a+2,7
  3020     04E2  2CE4               	goto	u1411
  3021     04E3  2CE5               	goto	u1410
  3022     04E4                     u1411:
  3023     04E4  2CE6               	goto	l1496
  3024     04E5                     u1410:
  3025     04E5                     l1494:
  3026     04E5  1432               	bsf	___flmul@aexp,0
  3027     04E6                     l1496:
  3028     04E6  0832               	movf	___flmul@aexp,w
  3029     04E7  1903               	btfsc	3,2
  3030     04E8  2CEA               	goto	u1421
  3031     04E9  2CEB               	goto	u1420
  3032     04EA                     u1421:
  3033     04EA  2CFA               	goto	l1504
  3034     04EB                     u1420:
  3035     04EB                     l1498:
  3036     04EB  0A32               	incf	___flmul@aexp,w
  3037     04EC  1D03               	btfss	3,2
  3038     04ED  2CEF               	goto	u1431
  3039     04EE  2CF0               	goto	u1430
  3040     04EF                     u1431:
  3041     04EF  2CF8               	goto	l1502
  3042     04F0                     u1430:
  3043     04F0                     l1500:
  3044     04F0  3000               	movlw	0
  3045     04F1  00A7               	movwf	___flmul@a+3
  3046     04F2  3000               	movlw	0
  3047     04F3  00A6               	movwf	___flmul@a+2
  3048     04F4  3000               	movlw	0
  3049     04F5  00A5               	movwf	___flmul@a+1
  3050     04F6  3000               	movlw	0
  3051     04F7  00A4               	movwf	___flmul@a
  3052     04F8                     l1502:
  3053     04F8  17A6               	bsf	___flmul@a+2,7
  3054     04F9  2D02               	goto	l1506
  3055     04FA                     l1504:
  3056     04FA  3000               	movlw	0
  3057     04FB  00A7               	movwf	___flmul@a+3
  3058     04FC  3000               	movlw	0
  3059     04FD  00A6               	movwf	___flmul@a+2
  3060     04FE  3000               	movlw	0
  3061     04FF  00A5               	movwf	___flmul@a+1
  3062     0500  3000               	movlw	0
  3063     0501  00A4               	movwf	___flmul@a
  3064     0502                     l1506:
  3065     0502  0832               	movf	___flmul@aexp,w
  3066     0503  1903               	btfsc	3,2
  3067     0504  2D06               	goto	u1441
  3068     0505  2D07               	goto	u1440
  3069     0506                     u1441:
  3070     0506  2D0C               	goto	l1510
  3071     0507                     u1440:
  3072     0507                     l1508:
  3073     0507  0833               	movf	___flmul@bexp,w
  3074     0508  1D03               	btfss	3,2
  3075     0509  2D0B               	goto	u1451
  3076     050A  2D0C               	goto	u1450
  3077     050B                     u1451:
  3078     050B  2D15               	goto	l1514
  3079     050C                     u1450:
  3080     050C                     l1510:
  3081     050C  3000               	movlw	0
  3082     050D  00A3               	movwf	?___flmul+3
  3083     050E  3000               	movlw	0
  3084     050F  00A2               	movwf	?___flmul+2
  3085     0510  3000               	movlw	0
  3086     0511  00A1               	movwf	?___flmul+1
  3087     0512  3000               	movlw	0
  3088     0513  00A0               	movwf	?___flmul
  3089     0514  2FF2               	goto	l671
  3090     0515                     l1514:
  3091     0515  0820               	movf	___flmul@b,w
  3092     0516  00F0               	movwf	__Umul8_16@multiplicand
  3093     0517  0826               	movf	___flmul@a+2,w
  3094     0518  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3095     051D  0871               	movf	?__Umul8_16+1,w
  3096     051E  1283               	bcf	3,5	;RP0=0, select bank0
  3097     051F  1303               	bcf	3,6	;RP1=0, select bank0
  3098     0520  00B9               	movwf	___flmul@temp+1
  3099     0521  0870               	movf	?__Umul8_16,w
  3100     0522  00B8               	movwf	___flmul@temp
  3101     0523                     l1516:
  3102     0523  0838               	movf	___flmul@temp,w
  3103     0524  00A8               	movwf	??___flmul
  3104     0525  01A9               	clrf	??___flmul+1
  3105     0526  01AA               	clrf	??___flmul+2
  3106     0527  01AB               	clrf	??___flmul+3
  3107     0528  082B               	movf	??___flmul+3,w
  3108     0529  00B1               	movwf	___flmul@grs+3
  3109     052A  082A               	movf	??___flmul+2,w
  3110     052B  00B0               	movwf	___flmul@grs+2
  3111     052C  0829               	movf	??___flmul+1,w
  3112     052D  00AF               	movwf	___flmul@grs+1
  3113     052E  0828               	movf	??___flmul,w
  3114     052F  00AE               	movwf	___flmul@grs
  3115     0530                     l1518:
  3116     0530  0839               	movf	___flmul@temp+1,w
  3117     0531  00A8               	movwf	??___flmul
  3118     0532  01A9               	clrf	??___flmul+1
  3119     0533  01AA               	clrf	??___flmul+2
  3120     0534  01AB               	clrf	??___flmul+3
  3121     0535  082B               	movf	??___flmul+3,w
  3122     0536  00B7               	movwf	___flmul@prod+3
  3123     0537  082A               	movf	??___flmul+2,w
  3124     0538  00B6               	movwf	___flmul@prod+2
  3125     0539  0829               	movf	??___flmul+1,w
  3126     053A  00B5               	movwf	___flmul@prod+1
  3127     053B  0828               	movf	??___flmul,w
  3128     053C  00B4               	movwf	___flmul@prod
  3129     053D  0821               	movf	___flmul@b+1,w
  3130     053E  00F0               	movwf	__Umul8_16@multiplicand
  3131     053F  0825               	movf	___flmul@a+1,w
  3132     0540  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3133     0545  0871               	movf	?__Umul8_16+1,w
  3134     0546  1283               	bcf	3,5	;RP0=0, select bank0
  3135     0547  1303               	bcf	3,6	;RP1=0, select bank0
  3136     0548  00B9               	movwf	___flmul@temp+1
  3137     0549  0870               	movf	?__Umul8_16,w
  3138     054A  00B8               	movwf	___flmul@temp
  3139     054B                     l1520:
  3140     054B  0838               	movf	___flmul@temp,w
  3141     054C  00A8               	movwf	??___flmul
  3142     054D  01A9               	clrf	??___flmul+1
  3143     054E  01AA               	clrf	??___flmul+2
  3144     054F  01AB               	clrf	??___flmul+3
  3145     0550  0828               	movf	??___flmul,w
  3146     0551  07AE               	addwf	___flmul@grs,f
  3147     0552  0829               	movf	??___flmul+1,w
  3148     0553  1103               	clrz
  3149     0554  1803               	skipnc
  3150     0555  3E01               	addlw	1
  3151     0556  1903               	skipnz
  3152     0557  2D59               	goto	u1461
  3153     0558  07AF               	addwf	___flmul@grs+1,f
  3154     0559                     u1461:
  3155     0559  082A               	movf	??___flmul+2,w
  3156     055A  1103               	clrz
  3157     055B  1803               	skipnc
  3158     055C  3E01               	addlw	1
  3159     055D  1903               	skipnz
  3160     055E  2D60               	goto	u1462
  3161     055F  07B0               	addwf	___flmul@grs+2,f
  3162     0560                     u1462:
  3163     0560  082B               	movf	??___flmul+3,w
  3164     0561  1103               	clrz
  3165     0562  1803               	skipnc
  3166     0563  3E01               	addlw	1
  3167     0564  1903               	skipnz
  3168     0565  2D67               	goto	u1463
  3169     0566  07B1               	addwf	___flmul@grs+3,f
  3170     0567                     u1463:
  3171     0567                     l1522:
  3172     0567  0839               	movf	___flmul@temp+1,w
  3173     0568  00A8               	movwf	??___flmul
  3174     0569  01A9               	clrf	??___flmul+1
  3175     056A  01AA               	clrf	??___flmul+2
  3176     056B  01AB               	clrf	??___flmul+3
  3177     056C  0828               	movf	??___flmul,w
  3178     056D  07B4               	addwf	___flmul@prod,f
  3179     056E  0829               	movf	??___flmul+1,w
  3180     056F  1103               	clrz
  3181     0570  1803               	skipnc
  3182     0571  3E01               	addlw	1
  3183     0572  1903               	skipnz
  3184     0573  2D75               	goto	u1471
  3185     0574  07B5               	addwf	___flmul@prod+1,f
  3186     0575                     u1471:
  3187     0575  082A               	movf	??___flmul+2,w
  3188     0576  1103               	clrz
  3189     0577  1803               	skipnc
  3190     0578  3E01               	addlw	1
  3191     0579  1903               	skipnz
  3192     057A  2D7C               	goto	u1472
  3193     057B  07B6               	addwf	___flmul@prod+2,f
  3194     057C                     u1472:
  3195     057C  082B               	movf	??___flmul+3,w
  3196     057D  1103               	clrz
  3197     057E  1803               	skipnc
  3198     057F  3E01               	addlw	1
  3199     0580  1903               	skipnz
  3200     0581  2D83               	goto	u1473
  3201     0582  07B7               	addwf	___flmul@prod+3,f
  3202     0583                     u1473:
  3203     0583  0822               	movf	___flmul@b+2,w
  3204     0584  00F0               	movwf	__Umul8_16@multiplicand
  3205     0585  0824               	movf	___flmul@a,w
  3206     0586  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3207     058B  0871               	movf	?__Umul8_16+1,w
  3208     058C  1283               	bcf	3,5	;RP0=0, select bank0
  3209     058D  1303               	bcf	3,6	;RP1=0, select bank0
  3210     058E  00B9               	movwf	___flmul@temp+1
  3211     058F  0870               	movf	?__Umul8_16,w
  3212     0590  00B8               	movwf	___flmul@temp
  3213     0591                     l1524:
  3214     0591  0838               	movf	___flmul@temp,w
  3215     0592  00A8               	movwf	??___flmul
  3216     0593  01A9               	clrf	??___flmul+1
  3217     0594  01AA               	clrf	??___flmul+2
  3218     0595  01AB               	clrf	??___flmul+3
  3219     0596  0828               	movf	??___flmul,w
  3220     0597  07AE               	addwf	___flmul@grs,f
  3221     0598  0829               	movf	??___flmul+1,w
  3222     0599  1103               	clrz
  3223     059A  1803               	skipnc
  3224     059B  3E01               	addlw	1
  3225     059C  1903               	skipnz
  3226     059D  2D9F               	goto	u1481
  3227     059E  07AF               	addwf	___flmul@grs+1,f
  3228     059F                     u1481:
  3229     059F  082A               	movf	??___flmul+2,w
  3230     05A0  1103               	clrz
  3231     05A1  1803               	skipnc
  3232     05A2  3E01               	addlw	1
  3233     05A3  1903               	skipnz
  3234     05A4  2DA6               	goto	u1482
  3235     05A5  07B0               	addwf	___flmul@grs+2,f
  3236     05A6                     u1482:
  3237     05A6  082B               	movf	??___flmul+3,w
  3238     05A7  1103               	clrz
  3239     05A8  1803               	skipnc
  3240     05A9  3E01               	addlw	1
  3241     05AA  1903               	skipnz
  3242     05AB  2DAD               	goto	u1483
  3243     05AC  07B1               	addwf	___flmul@grs+3,f
  3244     05AD                     u1483:
  3245     05AD                     l1526:
  3246     05AD  0839               	movf	___flmul@temp+1,w
  3247     05AE  00A8               	movwf	??___flmul
  3248     05AF  01A9               	clrf	??___flmul+1
  3249     05B0  01AA               	clrf	??___flmul+2
  3250     05B1  01AB               	clrf	??___flmul+3
  3251     05B2  0828               	movf	??___flmul,w
  3252     05B3  07B4               	addwf	___flmul@prod,f
  3253     05B4  0829               	movf	??___flmul+1,w
  3254     05B5  1103               	clrz
  3255     05B6  1803               	skipnc
  3256     05B7  3E01               	addlw	1
  3257     05B8  1903               	skipnz
  3258     05B9  2DBB               	goto	u1491
  3259     05BA  07B5               	addwf	___flmul@prod+1,f
  3260     05BB                     u1491:
  3261     05BB  082A               	movf	??___flmul+2,w
  3262     05BC  1103               	clrz
  3263     05BD  1803               	skipnc
  3264     05BE  3E01               	addlw	1
  3265     05BF  1903               	skipnz
  3266     05C0  2DC2               	goto	u1492
  3267     05C1  07B6               	addwf	___flmul@prod+2,f
  3268     05C2                     u1492:
  3269     05C2  082B               	movf	??___flmul+3,w
  3270     05C3  1103               	clrz
  3271     05C4  1803               	skipnc
  3272     05C5  3E01               	addlw	1
  3273     05C6  1903               	skipnz
  3274     05C7  2DC9               	goto	u1493
  3275     05C8  07B7               	addwf	___flmul@prod+3,f
  3276     05C9                     u1493:
  3277     05C9                     l1528:
  3278     05C9  3008               	movlw	8
  3279     05CA  00A8               	movwf	??___flmul
  3280     05CB                     u1505:
  3281     05CB  1003               	clrc
  3282     05CC  0DAE               	rlf	___flmul@grs,f
  3283     05CD  0DAF               	rlf	___flmul@grs+1,f
  3284     05CE  0DB0               	rlf	___flmul@grs+2,f
  3285     05CF  0DB1               	rlf	___flmul@grs+3,f
  3286     05D0  0BA8               	decfsz	??___flmul,f
  3287     05D1  2DCB               	goto	u1505
  3288     05D2                     l1530:
  3289     05D2  0821               	movf	___flmul@b+1,w
  3290     05D3  00F0               	movwf	__Umul8_16@multiplicand
  3291     05D4  0824               	movf	___flmul@a,w
  3292     05D5  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3293     05DA  0871               	movf	?__Umul8_16+1,w
  3294     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3295     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3296     05DD  00B9               	movwf	___flmul@temp+1
  3297     05DE  0870               	movf	?__Umul8_16,w
  3298     05DF  00B8               	movwf	___flmul@temp
  3299     05E0                     l1532:
  3300     05E0  0838               	movf	___flmul@temp,w
  3301     05E1  00A8               	movwf	??___flmul
  3302     05E2  0839               	movf	___flmul@temp+1,w
  3303     05E3  00A9               	movwf	??___flmul+1
  3304     05E4  01AA               	clrf	??___flmul+2
  3305     05E5  01AB               	clrf	??___flmul+3
  3306     05E6  0828               	movf	??___flmul,w
  3307     05E7  07AE               	addwf	___flmul@grs,f
  3308     05E8  0829               	movf	??___flmul+1,w
  3309     05E9  1103               	clrz
  3310     05EA  1803               	skipnc
  3311     05EB  3E01               	addlw	1
  3312     05EC  1903               	skipnz
  3313     05ED  2DEF               	goto	u1511
  3314     05EE  07AF               	addwf	___flmul@grs+1,f
  3315     05EF                     u1511:
  3316     05EF  082A               	movf	??___flmul+2,w
  3317     05F0  1103               	clrz
  3318     05F1  1803               	skipnc
  3319     05F2  3E01               	addlw	1
  3320     05F3  1903               	skipnz
  3321     05F4  2DF6               	goto	u1512
  3322     05F5  07B0               	addwf	___flmul@grs+2,f
  3323     05F6                     u1512:
  3324     05F6  082B               	movf	??___flmul+3,w
  3325     05F7  1103               	clrz
  3326     05F8  1803               	skipnc
  3327     05F9  3E01               	addlw	1
  3328     05FA  1903               	skipnz
  3329     05FB  2DFD               	goto	u1513
  3330     05FC  07B1               	addwf	___flmul@grs+3,f
  3331     05FD                     u1513:
  3332     05FD                     l1534:
  3333     05FD  0820               	movf	___flmul@b,w
  3334     05FE  00F0               	movwf	__Umul8_16@multiplicand
  3335     05FF  0825               	movf	___flmul@a+1,w
  3336     0600  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3337     0605  0871               	movf	?__Umul8_16+1,w
  3338     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3339     0607  1303               	bcf	3,6	;RP1=0, select bank0
  3340     0608  00B9               	movwf	___flmul@temp+1
  3341     0609  0870               	movf	?__Umul8_16,w
  3342     060A  00B8               	movwf	___flmul@temp
  3343     060B                     l1536:
  3344     060B  0838               	movf	___flmul@temp,w
  3345     060C  00A8               	movwf	??___flmul
  3346     060D  0839               	movf	___flmul@temp+1,w
  3347     060E  00A9               	movwf	??___flmul+1
  3348     060F  01AA               	clrf	??___flmul+2
  3349     0610  01AB               	clrf	??___flmul+3
  3350     0611  0828               	movf	??___flmul,w
  3351     0612  07AE               	addwf	___flmul@grs,f
  3352     0613  0829               	movf	??___flmul+1,w
  3353     0614  1103               	clrz
  3354     0615  1803               	skipnc
  3355     0616  3E01               	addlw	1
  3356     0617  1903               	skipnz
  3357     0618  2E1A               	goto	u1521
  3358     0619  07AF               	addwf	___flmul@grs+1,f
  3359     061A                     u1521:
  3360     061A  082A               	movf	??___flmul+2,w
  3361     061B  1103               	clrz
  3362     061C  1803               	skipnc
  3363     061D  3E01               	addlw	1
  3364     061E  1903               	skipnz
  3365     061F  2E21               	goto	u1522
  3366     0620  07B0               	addwf	___flmul@grs+2,f
  3367     0621                     u1522:
  3368     0621  082B               	movf	??___flmul+3,w
  3369     0622  1103               	clrz
  3370     0623  1803               	skipnc
  3371     0624  3E01               	addlw	1
  3372     0625  1903               	skipnz
  3373     0626  2E28               	goto	u1523
  3374     0627  07B1               	addwf	___flmul@grs+3,f
  3375     0628                     u1523:
  3376     0628                     l1538:
  3377     0628  3008               	movlw	8
  3378     0629  00A8               	movwf	??___flmul
  3379     062A                     u1535:
  3380     062A  1003               	clrc
  3381     062B  0DAE               	rlf	___flmul@grs,f
  3382     062C  0DAF               	rlf	___flmul@grs+1,f
  3383     062D  0DB0               	rlf	___flmul@grs+2,f
  3384     062E  0DB1               	rlf	___flmul@grs+3,f
  3385     062F  0BA8               	decfsz	??___flmul,f
  3386     0630  2E2A               	goto	u1535
  3387     0631  0820               	movf	___flmul@b,w
  3388     0632  00F0               	movwf	__Umul8_16@multiplicand
  3389     0633  0824               	movf	___flmul@a,w
  3390     0634  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3391     0639  0871               	movf	?__Umul8_16+1,w
  3392     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3393     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3394     063C  00B9               	movwf	___flmul@temp+1
  3395     063D  0870               	movf	?__Umul8_16,w
  3396     063E  00B8               	movwf	___flmul@temp
  3397     063F                     l1540:
  3398     063F  0838               	movf	___flmul@temp,w
  3399     0640  00A8               	movwf	??___flmul
  3400     0641  0839               	movf	___flmul@temp+1,w
  3401     0642  00A9               	movwf	??___flmul+1
  3402     0643  01AA               	clrf	??___flmul+2
  3403     0644  01AB               	clrf	??___flmul+3
  3404     0645  0828               	movf	??___flmul,w
  3405     0646  07AE               	addwf	___flmul@grs,f
  3406     0647  0829               	movf	??___flmul+1,w
  3407     0648  1103               	clrz
  3408     0649  1803               	skipnc
  3409     064A  3E01               	addlw	1
  3410     064B  1903               	skipnz
  3411     064C  2E4E               	goto	u1541
  3412     064D  07AF               	addwf	___flmul@grs+1,f
  3413     064E                     u1541:
  3414     064E  082A               	movf	??___flmul+2,w
  3415     064F  1103               	clrz
  3416     0650  1803               	skipnc
  3417     0651  3E01               	addlw	1
  3418     0652  1903               	skipnz
  3419     0653  2E55               	goto	u1542
  3420     0654  07B0               	addwf	___flmul@grs+2,f
  3421     0655                     u1542:
  3422     0655  082B               	movf	??___flmul+3,w
  3423     0656  1103               	clrz
  3424     0657  1803               	skipnc
  3425     0658  3E01               	addlw	1
  3426     0659  1903               	skipnz
  3427     065A  2E5C               	goto	u1543
  3428     065B  07B1               	addwf	___flmul@grs+3,f
  3429     065C                     u1543:
  3430     065C                     l1542:
  3431     065C  0821               	movf	___flmul@b+1,w
  3432     065D  00F0               	movwf	__Umul8_16@multiplicand
  3433     065E  0826               	movf	___flmul@a+2,w
  3434     065F  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3435     0664  0871               	movf	?__Umul8_16+1,w
  3436     0665  1283               	bcf	3,5	;RP0=0, select bank0
  3437     0666  1303               	bcf	3,6	;RP1=0, select bank0
  3438     0667  00B9               	movwf	___flmul@temp+1
  3439     0668  0870               	movf	?__Umul8_16,w
  3440     0669  00B8               	movwf	___flmul@temp
  3441     066A  0838               	movf	___flmul@temp,w
  3442     066B  00A8               	movwf	??___flmul
  3443     066C  0839               	movf	___flmul@temp+1,w
  3444     066D  00A9               	movwf	??___flmul+1
  3445     066E  01AA               	clrf	??___flmul+2
  3446     066F  01AB               	clrf	??___flmul+3
  3447     0670  0828               	movf	??___flmul,w
  3448     0671  07B4               	addwf	___flmul@prod,f
  3449     0672  0829               	movf	??___flmul+1,w
  3450     0673  1103               	clrz
  3451     0674  1803               	skipnc
  3452     0675  3E01               	addlw	1
  3453     0676  1903               	skipnz
  3454     0677  2E79               	goto	u1551
  3455     0678  07B5               	addwf	___flmul@prod+1,f
  3456     0679                     u1551:
  3457     0679  082A               	movf	??___flmul+2,w
  3458     067A  1103               	clrz
  3459     067B  1803               	skipnc
  3460     067C  3E01               	addlw	1
  3461     067D  1903               	skipnz
  3462     067E  2E80               	goto	u1552
  3463     067F  07B6               	addwf	___flmul@prod+2,f
  3464     0680                     u1552:
  3465     0680  082B               	movf	??___flmul+3,w
  3466     0681  1103               	clrz
  3467     0682  1803               	skipnc
  3468     0683  3E01               	addlw	1
  3469     0684  1903               	skipnz
  3470     0685  2E87               	goto	u1553
  3471     0686  07B7               	addwf	___flmul@prod+3,f
  3472     0687                     u1553:
  3473     0687                     l1544:
  3474     0687  0822               	movf	___flmul@b+2,w
  3475     0688  00F0               	movwf	__Umul8_16@multiplicand
  3476     0689  0825               	movf	___flmul@a+1,w
  3477     068A  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3478     068F  0871               	movf	?__Umul8_16+1,w
  3479     0690  1283               	bcf	3,5	;RP0=0, select bank0
  3480     0691  1303               	bcf	3,6	;RP1=0, select bank0
  3481     0692  00B9               	movwf	___flmul@temp+1
  3482     0693  0870               	movf	?__Umul8_16,w
  3483     0694  00B8               	movwf	___flmul@temp
  3484     0695                     l1546:
  3485     0695  0838               	movf	___flmul@temp,w
  3486     0696  00A8               	movwf	??___flmul
  3487     0697  0839               	movf	___flmul@temp+1,w
  3488     0698  00A9               	movwf	??___flmul+1
  3489     0699  01AA               	clrf	??___flmul+2
  3490     069A  01AB               	clrf	??___flmul+3
  3491     069B  0828               	movf	??___flmul,w
  3492     069C  07B4               	addwf	___flmul@prod,f
  3493     069D  0829               	movf	??___flmul+1,w
  3494     069E  1103               	clrz
  3495     069F  1803               	skipnc
  3496     06A0  3E01               	addlw	1
  3497     06A1  1903               	skipnz
  3498     06A2  2EA4               	goto	u1561
  3499     06A3  07B5               	addwf	___flmul@prod+1,f
  3500     06A4                     u1561:
  3501     06A4  082A               	movf	??___flmul+2,w
  3502     06A5  1103               	clrz
  3503     06A6  1803               	skipnc
  3504     06A7  3E01               	addlw	1
  3505     06A8  1903               	skipnz
  3506     06A9  2EAB               	goto	u1562
  3507     06AA  07B6               	addwf	___flmul@prod+2,f
  3508     06AB                     u1562:
  3509     06AB  082B               	movf	??___flmul+3,w
  3510     06AC  1103               	clrz
  3511     06AD  1803               	skipnc
  3512     06AE  3E01               	addlw	1
  3513     06AF  1903               	skipnz
  3514     06B0  2EB2               	goto	u1563
  3515     06B1  07B7               	addwf	___flmul@prod+3,f
  3516     06B2                     u1563:
  3517     06B2  0822               	movf	___flmul@b+2,w
  3518     06B3  00F0               	movwf	__Umul8_16@multiplicand
  3519     06B4  0826               	movf	___flmul@a+2,w
  3520     06B5  120A  158A  265C  120A  118A  	fcall	__Umul8_16
  3521     06BA  0871               	movf	?__Umul8_16+1,w
  3522     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3523     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3524     06BD  00B9               	movwf	___flmul@temp+1
  3525     06BE  0870               	movf	?__Umul8_16,w
  3526     06BF  00B8               	movwf	___flmul@temp
  3527     06C0                     l1548:
  3528     06C0  0838               	movf	___flmul@temp,w
  3529     06C1  00A8               	movwf	??___flmul
  3530     06C2  0839               	movf	___flmul@temp+1,w
  3531     06C3  00A9               	movwf	??___flmul+1
  3532     06C4  01AA               	clrf	??___flmul+2
  3533     06C5  01AB               	clrf	??___flmul+3
  3534     06C6  3008               	movlw	8
  3535     06C7                     u1575:
  3536     06C7  1003               	clrc
  3537     06C8  0DA8               	rlf	??___flmul,f
  3538     06C9  0DA9               	rlf	??___flmul+1,f
  3539     06CA  0DAA               	rlf	??___flmul+2,f
  3540     06CB  0DAB               	rlf	??___flmul+3,f
  3541     06CC                     u1570:
  3542     06CC  3EFF               	addlw	-1
  3543     06CD  1D03               	skipz
  3544     06CE  2EC7               	goto	u1575
  3545     06CF  0828               	movf	??___flmul,w
  3546     06D0  07B4               	addwf	___flmul@prod,f
  3547     06D1  0829               	movf	??___flmul+1,w
  3548     06D2  1103               	clrz
  3549     06D3  1803               	skipnc
  3550     06D4  3E01               	addlw	1
  3551     06D5  1903               	skipnz
  3552     06D6  2ED8               	goto	u1581
  3553     06D7  07B5               	addwf	___flmul@prod+1,f
  3554     06D8                     u1581:
  3555     06D8  082A               	movf	??___flmul+2,w
  3556     06D9  1103               	clrz
  3557     06DA  1803               	skipnc
  3558     06DB  3E01               	addlw	1
  3559     06DC  1903               	skipnz
  3560     06DD  2EDF               	goto	u1582
  3561     06DE  07B6               	addwf	___flmul@prod+2,f
  3562     06DF                     u1582:
  3563     06DF  082B               	movf	??___flmul+3,w
  3564     06E0  1103               	clrz
  3565     06E1  1803               	skipnc
  3566     06E2  3E01               	addlw	1
  3567     06E3  1903               	skipnz
  3568     06E4  2EE6               	goto	u1583
  3569     06E5  07B7               	addwf	___flmul@prod+3,f
  3570     06E6                     u1583:
  3571     06E6                     l1550:
  3572     06E6  082E               	movf	___flmul@grs,w
  3573     06E7  00A8               	movwf	??___flmul
  3574     06E8  082F               	movf	___flmul@grs+1,w
  3575     06E9  00A9               	movwf	??___flmul+1
  3576     06EA  0830               	movf	___flmul@grs+2,w
  3577     06EB  00AA               	movwf	??___flmul+2
  3578     06EC  0831               	movf	___flmul@grs+3,w
  3579     06ED  00AB               	movwf	??___flmul+3
  3580     06EE  3018               	movlw	24
  3581     06EF                     u1595:
  3582     06EF  1003               	clrc
  3583     06F0  0CAB               	rrf	??___flmul+3,f
  3584     06F1  0CAA               	rrf	??___flmul+2,f
  3585     06F2  0CA9               	rrf	??___flmul+1,f
  3586     06F3  0CA8               	rrf	??___flmul,f
  3587     06F4                     u1590:
  3588     06F4  3EFF               	addlw	-1
  3589     06F5  1D03               	skipz
  3590     06F6  2EEF               	goto	u1595
  3591     06F7  0828               	movf	??___flmul,w
  3592     06F8  07B4               	addwf	___flmul@prod,f
  3593     06F9  0829               	movf	??___flmul+1,w
  3594     06FA  1103               	clrz
  3595     06FB  1803               	skipnc
  3596     06FC  3E01               	addlw	1
  3597     06FD  1903               	skipnz
  3598     06FE  2F00               	goto	u1601
  3599     06FF  07B5               	addwf	___flmul@prod+1,f
  3600     0700                     u1601:
  3601     0700  082A               	movf	??___flmul+2,w
  3602     0701  1103               	clrz
  3603     0702  1803               	skipnc
  3604     0703  3E01               	addlw	1
  3605     0704  1903               	skipnz
  3606     0705  2F07               	goto	u1602
  3607     0706  07B6               	addwf	___flmul@prod+2,f
  3608     0707                     u1602:
  3609     0707  082B               	movf	??___flmul+3,w
  3610     0708  1103               	clrz
  3611     0709  1803               	skipnc
  3612     070A  3E01               	addlw	1
  3613     070B  1903               	skipnz
  3614     070C  2F0E               	goto	u1603
  3615     070D  07B7               	addwf	___flmul@prod+3,f
  3616     070E                     u1603:
  3617     070E                     l1552:
  3618     070E  3008               	movlw	8
  3619     070F  00A8               	movwf	??___flmul
  3620     0710                     u1615:
  3621     0710  1003               	clrc
  3622     0711  0DAE               	rlf	___flmul@grs,f
  3623     0712  0DAF               	rlf	___flmul@grs+1,f
  3624     0713  0DB0               	rlf	___flmul@grs+2,f
  3625     0714  0DB1               	rlf	___flmul@grs+3,f
  3626     0715  0BA8               	decfsz	??___flmul,f
  3627     0716  2F10               	goto	u1615
  3628     0717                     l1554:
  3629     0717  0833               	movf	___flmul@bexp,w
  3630     0718  0732               	addwf	___flmul@aexp,w
  3631     0719  00A8               	movwf	??___flmul
  3632     071A  01A9               	clrf	??___flmul+1
  3633     071B  0DA9               	rlf	??___flmul+1,f
  3634     071C  0828               	movf	??___flmul,w
  3635     071D  3E82               	addlw	130
  3636     071E  00B8               	movwf	___flmul@temp
  3637     071F  0829               	movf	??___flmul+1,w
  3638     0720  1803               	skipnc
  3639     0721  3E01               	addlw	1
  3640     0722  3EFF               	addlw	255
  3641     0723  00B9               	movwf	___flmul@temp+1
  3642     0724  2F42               	goto	l1566
  3643     0725                     l1556:
  3644     0725  3001               	movlw	1
  3645     0726  00A8               	movwf	??___flmul
  3646     0727                     u1625:
  3647     0727  1003               	clrc
  3648     0728  0DB4               	rlf	___flmul@prod,f
  3649     0729  0DB5               	rlf	___flmul@prod+1,f
  3650     072A  0DB6               	rlf	___flmul@prod+2,f
  3651     072B  0DB7               	rlf	___flmul@prod+3,f
  3652     072C  0BA8               	decfsz	??___flmul,f
  3653     072D  2F27               	goto	u1625
  3654     072E                     l1558:
  3655     072E  1FB1               	btfss	___flmul@grs+3,7
  3656     072F  2F31               	goto	u1631
  3657     0730  2F32               	goto	u1630
  3658     0731                     u1631:
  3659     0731  2F33               	goto	l1562
  3660     0732                     u1630:
  3661     0732                     l1560:
  3662     0732  1434               	bsf	___flmul@prod,0
  3663     0733                     l1562:
  3664     0733  3001               	movlw	1
  3665     0734  00A8               	movwf	??___flmul
  3666     0735                     u1645:
  3667     0735  1003               	clrc
  3668     0736  0DAE               	rlf	___flmul@grs,f
  3669     0737  0DAF               	rlf	___flmul@grs+1,f
  3670     0738  0DB0               	rlf	___flmul@grs+2,f
  3671     0739  0DB1               	rlf	___flmul@grs+3,f
  3672     073A  0BA8               	decfsz	??___flmul,f
  3673     073B  2F35               	goto	u1645
  3674     073C                     l1564:
  3675     073C  30FF               	movlw	255
  3676     073D  07B8               	addwf	___flmul@temp,f
  3677     073E  1803               	skipnc
  3678     073F  0AB9               	incf	___flmul@temp+1,f
  3679     0740  30FF               	movlw	255
  3680     0741  07B9               	addwf	___flmul@temp+1,f
  3681     0742                     l1566:
  3682     0742  1FB6               	btfss	___flmul@prod+2,7
  3683     0743  2F45               	goto	u1651
  3684     0744  2F46               	goto	u1650
  3685     0745                     u1651:
  3686     0745  2F25               	goto	l1556
  3687     0746                     u1650:
  3688     0746                     l1568:
  3689     0746  01B2               	clrf	___flmul@aexp
  3690     0747                     l1570:
  3691     0747  1FB1               	btfss	___flmul@grs+3,7
  3692     0748  2F4A               	goto	u1661
  3693     0749  2F4B               	goto	u1660
  3694     074A                     u1661:
  3695     074A  2F67               	goto	l1578
  3696     074B                     u1660:
  3697     074B                     l1572:
  3698     074B  30FF               	movlw	255
  3699     074C  052E               	andwf	___flmul@grs,w
  3700     074D  00A8               	movwf	??___flmul
  3701     074E  30FF               	movlw	255
  3702     074F  052F               	andwf	___flmul@grs+1,w
  3703     0750  00A9               	movwf	??___flmul+1
  3704     0751  30FF               	movlw	255
  3705     0752  0530               	andwf	___flmul@grs+2,w
  3706     0753  00AA               	movwf	??___flmul+2
  3707     0754  307F               	movlw	127
  3708     0755  0531               	andwf	___flmul@grs+3,w
  3709     0756  00AB               	movwf	??___flmul+3
  3710     0757  082B               	movf	??___flmul+3,w
  3711     0758  042A               	iorwf	??___flmul+2,w
  3712     0759  0429               	iorwf	??___flmul+1,w
  3713     075A  0428               	iorwf	??___flmul,w
  3714     075B  1903               	skipnz
  3715     075C  2F5E               	goto	u1671
  3716     075D  2F5F               	goto	u1670
  3717     075E                     u1671:
  3718     075E  2F62               	goto	l677
  3719     075F                     u1670:
  3720     075F                     l1574:
  3721     075F  01B2               	clrf	___flmul@aexp
  3722     0760  0AB2               	incf	___flmul@aexp,f
  3723     0761  2F67               	goto	l1578
  3724     0762                     l677:
  3725     0762  1C34               	btfss	___flmul@prod,0
  3726     0763  2F65               	goto	u1681
  3727     0764  2F66               	goto	u1680
  3728     0765                     u1681:
  3729     0765  2F67               	goto	l1578
  3730     0766                     u1680:
  3731     0766  2F5F               	goto	l1574
  3732     0767                     l1578:
  3733     0767  0832               	movf	___flmul@aexp,w
  3734     0768  1903               	btfsc	3,2
  3735     0769  2F6B               	goto	u1691
  3736     076A  2F6C               	goto	u1690
  3737     076B                     u1691:
  3738     076B  2F9D               	goto	l1588
  3739     076C                     u1690:
  3740     076C                     l1580:
  3741     076C  3001               	movlw	1
  3742     076D  07B4               	addwf	___flmul@prod,f
  3743     076E  3000               	movlw	0
  3744     076F  1803               	skipnc
  3745     0770  3001               	movlw	1
  3746     0771  07B5               	addwf	___flmul@prod+1,f
  3747     0772  3000               	movlw	0
  3748     0773  1803               	skipnc
  3749     0774  3001               	movlw	1
  3750     0775  07B6               	addwf	___flmul@prod+2,f
  3751     0776  3000               	movlw	0
  3752     0777  1803               	skipnc
  3753     0778  3001               	movlw	1
  3754     0779  07B7               	addwf	___flmul@prod+3,f
  3755     077A                     l1582:
  3756     077A  1C37               	btfss	___flmul@prod+3,0
  3757     077B  2F7D               	goto	u1701
  3758     077C  2F7E               	goto	u1700
  3759     077D                     u1701:
  3760     077D  2F9D               	goto	l1588
  3761     077E                     u1700:
  3762     077E                     l1584:
  3763     077E  0834               	movf	___flmul@prod,w
  3764     077F  00A8               	movwf	??___flmul
  3765     0780  0835               	movf	___flmul@prod+1,w
  3766     0781  00A9               	movwf	??___flmul+1
  3767     0782  0836               	movf	___flmul@prod+2,w
  3768     0783  00AA               	movwf	??___flmul+2
  3769     0784  0837               	movf	___flmul@prod+3,w
  3770     0785  00AB               	movwf	??___flmul+3
  3771     0786  3001               	movlw	1
  3772     0787  00AC               	movwf	??___flmul+4
  3773     0788                     u1715:
  3774     0788  0D2B               	rlf	??___flmul+3,w
  3775     0789  0CAB               	rrf	??___flmul+3,f
  3776     078A  0CAA               	rrf	??___flmul+2,f
  3777     078B  0CA9               	rrf	??___flmul+1,f
  3778     078C  0CA8               	rrf	??___flmul,f
  3779     078D                     u1710:
  3780     078D  0BAC               	decfsz	??___flmul+4,f
  3781     078E  2F88               	goto	u1715
  3782     078F  082B               	movf	??___flmul+3,w
  3783     0790  00B7               	movwf	___flmul@prod+3
  3784     0791  082A               	movf	??___flmul+2,w
  3785     0792  00B6               	movwf	___flmul@prod+2
  3786     0793  0829               	movf	??___flmul+1,w
  3787     0794  00B5               	movwf	___flmul@prod+1
  3788     0795  0828               	movf	??___flmul,w
  3789     0796  00B4               	movwf	___flmul@prod
  3790     0797                     l1586:
  3791     0797  3001               	movlw	1
  3792     0798  07B8               	addwf	___flmul@temp,f
  3793     0799  1803               	skipnc
  3794     079A  0AB9               	incf	___flmul@temp+1,f
  3795     079B  3000               	movlw	0
  3796     079C  07B9               	addwf	___flmul@temp+1,f
  3797     079D                     l1588:
  3798     079D  0839               	movf	___flmul@temp+1,w
  3799     079E  3A80               	xorlw	128
  3800     079F  00FF               	movwf	btemp+1
  3801     07A0  3080               	movlw	128
  3802     07A1  027F               	subwf	btemp+1,w
  3803     07A2  1D03               	skipz
  3804     07A3  2FA6               	goto	u1725
  3805     07A4  30FF               	movlw	255
  3806     07A5  0238               	subwf	___flmul@temp,w
  3807     07A6                     u1725:
  3808     07A6  1C03               	skipc
  3809     07A7  2FA9               	goto	u1721
  3810     07A8  2FAA               	goto	u1720
  3811     07A9                     u1721:
  3812     07A9  2FB5               	goto	l1592
  3813     07AA                     u1720:
  3814     07AA                     l1590:
  3815     07AA  307F               	movlw	127
  3816     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3817     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3818     07AD  00B7               	movwf	___flmul@prod+3
  3819     07AE  3080               	movlw	128
  3820     07AF  00B6               	movwf	___flmul@prod+2
  3821     07B0  3000               	movlw	0
  3822     07B1  00B5               	movwf	___flmul@prod+1
  3823     07B2  3000               	movlw	0
  3824     07B3  00B4               	movwf	___flmul@prod
  3825     07B4  2FE6               	goto	l683
  3826     07B5                     l1592:
  3827     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3828     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3829     07B7  0839               	movf	___flmul@temp+1,w
  3830     07B8  3A80               	xorlw	128
  3831     07B9  00FF               	movwf	btemp+1
  3832     07BA  3080               	movlw	128
  3833     07BB  027F               	subwf	btemp+1,w
  3834     07BC  1D03               	skipz
  3835     07BD  2FC0               	goto	u1735
  3836     07BE  3001               	movlw	1
  3837     07BF  0238               	subwf	___flmul@temp,w
  3838     07C0                     u1735:
  3839     07C0  1803               	skipnc
  3840     07C1  2FC3               	goto	u1731
  3841     07C2  2FC4               	goto	u1730
  3842     07C3                     u1731:
  3843     07C3  2FD0               	goto	l1598
  3844     07C4                     u1730:
  3845     07C4                     l1594:
  3846     07C4  3000               	movlw	0
  3847     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  3848     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  3849     07C7  00B7               	movwf	___flmul@prod+3
  3850     07C8  3000               	movlw	0
  3851     07C9  00B6               	movwf	___flmul@prod+2
  3852     07CA  3000               	movlw	0
  3853     07CB  00B5               	movwf	___flmul@prod+1
  3854     07CC  3000               	movlw	0
  3855     07CD  00B4               	movwf	___flmul@prod
  3856     07CE                     l1596:
  3857     07CE  01AD               	clrf	___flmul@sign
  3858     07CF  2FE6               	goto	l683
  3859     07D0                     l1598:
  3860     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  3861     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  3862     07D2  0838               	movf	___flmul@temp,w
  3863     07D3  00B3               	movwf	___flmul@bexp
  3864     07D4  30FF               	movlw	255
  3865     07D5  05B4               	andwf	___flmul@prod,f
  3866     07D6  30FF               	movlw	255
  3867     07D7  05B5               	andwf	___flmul@prod+1,f
  3868     07D8  307F               	movlw	127
  3869     07D9  05B6               	andwf	___flmul@prod+2,f
  3870     07DA  3000               	movlw	0
  3871     07DB  05B7               	andwf	___flmul@prod+3,f
  3872     07DC                     l1600:
  3873     07DC  1C33               	btfss	___flmul@bexp,0
  3874     07DD  2FDF               	goto	u1741
  3875     07DE  2FE0               	goto	u1740
  3876     07DF                     u1741:
  3877     07DF  2FE1               	goto	l1604
  3878     07E0                     u1740:
  3879     07E0                     l1602:
  3880     07E0  17B6               	bsf	___flmul@prod+2,7
  3881     07E1                     l1604:
  3882     07E1  0833               	movf	___flmul@bexp,w
  3883     07E2  00A8               	movwf	??___flmul
  3884     07E3  1003               	clrc
  3885     07E4  0C28               	rrf	??___flmul,w
  3886     07E5  00B7               	movwf	___flmul@prod+3
  3887     07E6                     l683:
  3888     07E6  082D               	movf	___flmul@sign,w
  3889     07E7  00A8               	movwf	??___flmul
  3890     07E8  0828               	movf	??___flmul,w
  3891     07E9  04B7               	iorwf	___flmul@prod+3,f
  3892     07EA                     l1606:
  3893     07EA  0837               	movf	___flmul@prod+3,w
  3894     07EB  00A3               	movwf	?___flmul+3
  3895     07EC  0836               	movf	___flmul@prod+2,w
  3896     07ED  00A2               	movwf	?___flmul+2
  3897     07EE  0835               	movf	___flmul@prod+1,w
  3898     07EF  00A1               	movwf	?___flmul+1
  3899     07F0  0834               	movf	___flmul@prod,w
  3900     07F1  00A0               	movwf	?___flmul
  3901     07F2                     l671:
  3902     07F2  0008               	return
  3903     07F3                     __end_of___flmul:
  3904                           
  3905                           	psect	text11
  3906     0E5C                     __ptext11:	
  3907 ;; *************** function __Umul8_16 *****************
  3908 ;; Defined at:
  3909 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  multiplier      1    wreg     unsigned char 
  3912 ;;  multiplicand    1    0[COMMON] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  multiplier      1    8[COMMON] unsigned char 
  3915 ;;  word_mpld       2    6[COMMON] unsigned int 
  3916 ;;  product         2    4[COMMON] unsigned int 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2    0[COMMON] unsigned int 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         2       0       0       0       0
  3927 ;;      Locals:         5       0       0       0       0
  3928 ;;      Temps:          2       0       0       0       0
  3929 ;;      Totals:         9       0       0       0       0
  3930 ;;Total ram usage:        9 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		___flmul
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939     0E5C                     __Umul8_16:	
  3940                           ;psect for function __Umul8_16
  3941                           
  3942                           
  3943                           ;incstack = 0
  3944                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3945                           ;__Umul8_16@multiplier stored from wreg
  3946     0E5C  00F8               	movwf	__Umul8_16@multiplier
  3947     0E5D                     l1346:
  3948     0E5D  01F4               	clrf	__Umul8_16@product
  3949     0E5E  01F5               	clrf	__Umul8_16@product+1
  3950     0E5F                     l1348:
  3951     0E5F  0870               	movf	__Umul8_16@multiplicand,w
  3952     0E60  00F2               	movwf	??__Umul8_16
  3953     0E61  01F3               	clrf	??__Umul8_16+1
  3954     0E62  0872               	movf	??__Umul8_16,w
  3955     0E63  00F6               	movwf	__Umul8_16@word_mpld
  3956     0E64  0873               	movf	??__Umul8_16+1,w
  3957     0E65  00F7               	movwf	__Umul8_16@word_mpld+1
  3958     0E66                     l1350:
  3959     0E66  1C78               	btfss	__Umul8_16@multiplier,0
  3960     0E67  2E69               	goto	u1111
  3961     0E68  2E6A               	goto	u1110
  3962     0E69                     u1111:
  3963     0E69  2E70               	goto	l690
  3964     0E6A                     u1110:
  3965     0E6A                     l1352:
  3966     0E6A  0876               	movf	__Umul8_16@word_mpld,w
  3967     0E6B  07F4               	addwf	__Umul8_16@product,f
  3968     0E6C  1803               	skipnc
  3969     0E6D  0AF5               	incf	__Umul8_16@product+1,f
  3970     0E6E  0877               	movf	__Umul8_16@word_mpld+1,w
  3971     0E6F  07F5               	addwf	__Umul8_16@product+1,f
  3972     0E70                     l690:
  3973     0E70  3001               	movlw	1
  3974     0E71                     u1125:
  3975     0E71  1003               	clrc
  3976     0E72  0DF6               	rlf	__Umul8_16@word_mpld,f
  3977     0E73  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3978     0E74  3EFF               	addlw	-1
  3979     0E75  1D03               	skipz
  3980     0E76  2E71               	goto	u1125
  3981     0E77  1003               	clrc
  3982     0E78  0CF8               	rrf	__Umul8_16@multiplier,f
  3983     0E79                     l1354:
  3984     0E79  0878               	movf	__Umul8_16@multiplier,w
  3985     0E7A  1D03               	btfss	3,2
  3986     0E7B  2E7D               	goto	u1131
  3987     0E7C  2E7E               	goto	u1130
  3988     0E7D                     u1131:
  3989     0E7D  2E66               	goto	l1350
  3990     0E7E                     u1130:
  3991     0E7E                     l1356:
  3992     0E7E  0875               	movf	__Umul8_16@product+1,w
  3993     0E7F  00F1               	movwf	?__Umul8_16+1
  3994     0E80  0874               	movf	__Umul8_16@product,w
  3995     0E81  00F0               	movwf	?__Umul8_16
  3996     0E82                     l692:
  3997     0E82  0008               	return
  3998     0E83                     __end_of__Umul8_16:
  3999                           
  4000                           	psect	text12
  4001     0DF7                     __ptext12:	
  4002 ;; *************** function _config_TCS230 *****************
  4003 ;; Defined at:
  4004 ;;		line 8 in file "TCS230.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4018 ;;      Params:         0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0
  4021 ;;      Totals:         0       0       0       0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031     0DF7                     _config_TCS230:	
  4032                           ;psect for function _config_TCS230
  4033                           
  4034     0DF7                     l1676:	
  4035                           ;incstack = 0
  4036                           ; Regs used in _config_TCS230: [wreg+status,2+status,0]
  4037                           
  4038                           
  4039                           ;TCS230.c: 9:     T1CONbits.TMR1CS = 0;
  4040     0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  4041     0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  4042     0DF9  1090               	bcf	16,1	;volatile
  4043     0DFA                     l1678:
  4044                           
  4045                           ;TCS230.c: 10:     T1CONbits.T1CKPS = 0b01;
  4046     0DFA  0810               	movf	16,w	;volatile
  4047     0DFB  39CF               	andlw	-49
  4048     0DFC  3810               	iorlw	16
  4049     0DFD  0090               	movwf	16	;volatile
  4050     0DFE                     l1680:
  4051                           
  4052                           ;TCS230.c: 11:     T1CONbits.nT1SYNC = 1;
  4053     0DFE  1510               	bsf	16,2	;volatile
  4054     0DFF                     l1682:
  4055                           
  4056                           ;TCS230.c: 12:     T1CONbits.TMR1ON = 0;
  4057     0DFF  1010               	bcf	16,0	;volatile
  4058     0E00                     l131:
  4059     0E00  0008               	return
  4060     0E01                     __end_of_config_TCS230:
  4061                           
  4062                           	psect	text13
  4063     0EB8                     __ptext13:	
  4064 ;; *************** function _Lcd_Write_String *****************
  4065 ;; Defined at:
  4066 ;;		line 98 in file "LCD.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  a               2    5[COMMON] PTR unsigned char 
  4069 ;;		 -> verde(4), azul(4), rojo(4), STR_1(16), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  i               2   10[COMMON] int 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4081 ;;      Params:         2       0       0       0       0
  4082 ;;      Locals:         2       0       0       0       0
  4083 ;;      Temps:          3       0       0       0       0
  4084 ;;      Totals:         7       0       0       0       0
  4085 ;;Total ram usage:        7 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 2
  4088 ;; This function calls:
  4089 ;;		_Lcd_Write_Char
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095     0EB8                     _Lcd_Write_String:	
  4096                           ;psect for function _Lcd_Write_String
  4097                           
  4098     0EB8                     l1706:	
  4099                           ;incstack = 0
  4100                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4101                           
  4102                           
  4103                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4104     0EB8  01FA               	clrf	Lcd_Write_String@i
  4105     0EB9  01FB               	clrf	Lcd_Write_String@i+1
  4106     0EBA  2EDD               	goto	l1712
  4107     0EBB                     l1708:
  4108                           
  4109                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4110     0EBB  087A               	movf	Lcd_Write_String@i,w
  4111     0EBC  0775               	addwf	Lcd_Write_String@a,w
  4112     0EBD  00F8               	movwf	??_Lcd_Write_String+1
  4113     0EBE  0876               	movf	Lcd_Write_String@a+1,w
  4114     0EBF  00F7               	movwf	??_Lcd_Write_String
  4115     0EC0  1803               	skipnc
  4116     0EC1  0AF7               	incf	??_Lcd_Write_String,f
  4117     0EC2  1FFA               	btfss	Lcd_Write_String@i,7
  4118     0EC3  2EC5               	goto	u1930
  4119     0EC4  03F7               	decf	??_Lcd_Write_String,f
  4120     0EC5                     u1930:
  4121     0EC5  0877               	movf	??_Lcd_Write_String,w
  4122     0EC6  00F9               	movwf	??_Lcd_Write_String+2
  4123     0EC7  0879               	movf	??_Lcd_Write_String+2,w
  4124     0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  4125     0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  4126     0ECA  00FF               	movwf	btemp+1
  4127     0ECB  0878               	movf	??_Lcd_Write_String+1,w
  4128     0ECC  0084               	movwf	4
  4129     0ECD  120A  158A  2000  120A  158A  	fcall	stringtab
  4130     0ED2  120A  158A  2683  120A  158A  	fcall	_Lcd_Write_Char
  4131     0ED7                     l1710:
  4132     0ED7  3001               	movlw	1
  4133     0ED8  07FA               	addwf	Lcd_Write_String@i,f
  4134     0ED9  1803               	skipnc
  4135     0EDA  0AFB               	incf	Lcd_Write_String@i+1,f
  4136     0EDB  3000               	movlw	0
  4137     0EDC  07FB               	addwf	Lcd_Write_String@i+1,f
  4138     0EDD                     l1712:
  4139     0EDD  087A               	movf	Lcd_Write_String@i,w
  4140     0EDE  0775               	addwf	Lcd_Write_String@a,w
  4141     0EDF  00F8               	movwf	??_Lcd_Write_String+1
  4142     0EE0  0876               	movf	Lcd_Write_String@a+1,w
  4143     0EE1  00F7               	movwf	??_Lcd_Write_String
  4144     0EE2  1803               	skipnc
  4145     0EE3  0AF7               	incf	??_Lcd_Write_String,f
  4146     0EE4  1FFA               	btfss	Lcd_Write_String@i,7
  4147     0EE5  2EE7               	goto	u1940
  4148     0EE6  03F7               	decf	??_Lcd_Write_String,f
  4149     0EE7                     u1940:
  4150     0EE7  0877               	movf	??_Lcd_Write_String,w
  4151     0EE8  00F9               	movwf	??_Lcd_Write_String+2
  4152     0EE9  0879               	movf	??_Lcd_Write_String+2,w
  4153     0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  4154     0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  4155     0EEC  00FF               	movwf	btemp+1
  4156     0EED  0878               	movf	??_Lcd_Write_String+1,w
  4157     0EEE  0084               	movwf	4
  4158     0EEF  120A  158A  2000  120A  158A  	fcall	stringtab
  4159     0EF4  3A00               	xorlw	0
  4160     0EF5  1D03               	skipz
  4161     0EF6  2EF8               	goto	u1951
  4162     0EF7  2EF9               	goto	u1950
  4163     0EF8                     u1951:
  4164     0EF8  2EBB               	goto	l1708
  4165     0EF9                     u1950:
  4166     0EF9                     l110:
  4167     0EF9  0008               	return
  4168     0EFA                     __end_of_Lcd_Write_String:
  4169                           
  4170                           	psect	text14
  4171     0E83                     __ptext14:	
  4172 ;; *************** function _Lcd_Write_Char *****************
  4173 ;; Defined at:
  4174 ;;		line 83 in file "LCD.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  a               1    wreg     unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  a               1    4[COMMON] unsigned char 
  4179 ;;  y               1    3[COMMON] unsigned char 
  4180 ;;  temp            1    2[COMMON] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         0       0       0       0       0
  4191 ;;      Locals:         3       0       0       0       0
  4192 ;;      Temps:          1       0       0       0       0
  4193 ;;      Totals:         4       0       0       0       0
  4194 ;;Total ram usage:        4 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 1
  4197 ;; This function calls:
  4198 ;;		_Lcd_Port
  4199 ;; This function is called by:
  4200 ;;		_Lcd_Write_String
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204     0E83                     _Lcd_Write_Char:	
  4205                           ;psect for function _Lcd_Write_Char
  4206                           
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4210                           ;Lcd_Write_Char@a stored from wreg
  4211     0E83  00F4               	movwf	Lcd_Write_Char@a
  4212     0E84                     l1370:
  4213                           
  4214                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4215     0E84  0874               	movf	Lcd_Write_Char@a,w
  4216     0E85  390F               	andlw	15
  4217     0E86  00F2               	movwf	Lcd_Write_Char@temp
  4218                           
  4219                           ;LCD.c: 86:     y = a & 0xF0;
  4220     0E87  0874               	movf	Lcd_Write_Char@a,w
  4221     0E88  39F0               	andlw	240
  4222     0E89  00F3               	movwf	Lcd_Write_Char@y
  4223     0E8A                     l1372:
  4224                           
  4225                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  4226     0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  4227     0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  4228     0E8C  1508               	bsf	8,2	;volatile
  4229     0E8D                     l1374:
  4230                           
  4231                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4232     0E8D  0873               	movf	Lcd_Write_Char@y,w
  4233     0E8E  00F1               	movwf	??_Lcd_Write_Char
  4234     0E8F  3004               	movlw	4
  4235     0E90                     u1145:
  4236     0E90  1003               	clrc
  4237     0E91  0CF1               	rrf	??_Lcd_Write_Char,f
  4238     0E92  3EFF               	addlw	-1
  4239     0E93  1D03               	skipz
  4240     0E94  2E90               	goto	u1145
  4241     0E95  0871               	movf	??_Lcd_Write_Char,w
  4242     0E96  120A  158A  263A  120A  158A  	fcall	_Lcd_Port
  4243     0E9B                     l1376:
  4244                           
  4245                           ;LCD.c: 89:     RD3 = 1;
  4246     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  4247     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  4248     0E9D  1588               	bsf	8,3	;volatile
  4249     0E9E                     l1378:
  4250                           
  4251                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4252     0E9E  301A               	movlw	26
  4253     0E9F  00F1               	movwf	??_Lcd_Write_Char
  4254     0EA0                     u2177:
  4255     0EA0  0BF1               	decfsz	??_Lcd_Write_Char,f
  4256     0EA1  2EA0               	goto	u2177
  4257     0EA2  0000               	nop
  4258     0EA3                     l1380:
  4259                           
  4260                           ;LCD.c: 91:     RD3 = 0;
  4261     0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  4262     0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  4263     0EA5  1188               	bcf	8,3	;volatile
  4264     0EA6                     l1382:
  4265                           
  4266                           ;LCD.c: 92:     Lcd_Port(temp);
  4267     0EA6  0872               	movf	Lcd_Write_Char@temp,w
  4268     0EA7  120A  158A  263A  120A  158A  	fcall	_Lcd_Port
  4269     0EAC                     l1384:
  4270                           
  4271                           ;LCD.c: 93:     RD3 = 1;
  4272     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  4273     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  4274     0EAE  1588               	bsf	8,3	;volatile
  4275     0EAF                     l1386:
  4276                           
  4277                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4278     0EAF  301A               	movlw	26
  4279     0EB0  00F1               	movwf	??_Lcd_Write_Char
  4280     0EB1                     u2187:
  4281     0EB1  0BF1               	decfsz	??_Lcd_Write_Char,f
  4282     0EB2  2EB1               	goto	u2187
  4283     0EB3  0000               	nop
  4284     0EB4                     l1388:
  4285                           
  4286                           ;LCD.c: 95:     RD3 = 0;
  4287     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4288     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4289     0EB6  1188               	bcf	8,3	;volatile
  4290     0EB7                     l104:
  4291     0EB7  0008               	return
  4292     0EB8                     __end_of_Lcd_Write_Char:
  4293                           
  4294                           	psect	text15
  4295     0EFA                     __ptext15:	
  4296 ;; *************** function _Lcd_Set_Cursor *****************
  4297 ;; Defined at:
  4298 ;;		line 48 in file "LCD.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  a               1    wreg     unsigned char 
  4301 ;;  b               1    4[COMMON] unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  a               1    6[COMMON] unsigned char 
  4304 ;;  temp            1    9[COMMON] unsigned char 
  4305 ;;  y               1    8[COMMON] unsigned char 
  4306 ;;  z               1    7[COMMON] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4316 ;;      Params:         1       0       0       0       0
  4317 ;;      Locals:         4       0       0       0       0
  4318 ;;      Temps:          1       0       0       0       0
  4319 ;;      Totals:         6       0       0       0       0
  4320 ;;Total ram usage:        6 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 2
  4323 ;; This function calls:
  4324 ;;		_Lcd_Cmd
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330     0EFA                     _Lcd_Set_Cursor:	
  4331                           ;psect for function _Lcd_Set_Cursor
  4332                           
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4336                           ;Lcd_Set_Cursor@a stored from wreg
  4337     0EFA  00F6               	movwf	Lcd_Set_Cursor@a
  4338     0EFB                     l1686:
  4339                           
  4340                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4341     0EFB  0376               	decf	Lcd_Set_Cursor@a,w
  4342     0EFC  1D03               	btfss	3,2
  4343     0EFD  2EFF               	goto	u1891
  4344     0EFE  2F00               	goto	u1890
  4345     0EFF                     u1891:
  4346     0EFF  2F1D               	goto	l1696
  4347     0F00                     u1890:
  4348     0F00                     l1688:
  4349                           
  4350                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4351     0F00  0874               	movf	Lcd_Set_Cursor@b,w
  4352     0F01  3E7F               	addlw	127
  4353     0F02  00F9               	movwf	Lcd_Set_Cursor@temp
  4354                           
  4355                           ;LCD.c: 52:         z = temp >> 4;
  4356     0F03  0879               	movf	Lcd_Set_Cursor@temp,w
  4357     0F04  00F5               	movwf	??_Lcd_Set_Cursor
  4358     0F05  3004               	movlw	4
  4359     0F06                     u1905:
  4360     0F06  1003               	clrc
  4361     0F07  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4362     0F08  3EFF               	addlw	-1
  4363     0F09  1D03               	skipz
  4364     0F0A  2F06               	goto	u1905
  4365     0F0B  0875               	movf	??_Lcd_Set_Cursor,w
  4366     0F0C  00F7               	movwf	Lcd_Set_Cursor@z
  4367     0F0D                     l1690:
  4368                           
  4369                           ;LCD.c: 53:         y = temp & 0x0F;
  4370     0F0D  0879               	movf	Lcd_Set_Cursor@temp,w
  4371     0F0E  390F               	andlw	15
  4372     0F0F  00F8               	movwf	Lcd_Set_Cursor@y
  4373     0F10                     l1692:
  4374                           
  4375                           ;LCD.c: 54:         Lcd_Cmd(z);
  4376     0F10  0877               	movf	Lcd_Set_Cursor@z,w
  4377     0F11  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4378     0F16                     l1694:
  4379                           
  4380                           ;LCD.c: 55:         Lcd_Cmd(y);
  4381     0F16  0878               	movf	Lcd_Set_Cursor@y,w
  4382     0F17  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4383                           
  4384                           ;LCD.c: 56:     } else if (a == 2) {
  4385     0F1C  2F3F               	goto	l98
  4386     0F1D                     l1696:
  4387     0F1D  3002               	movlw	2
  4388     0F1E  0676               	xorwf	Lcd_Set_Cursor@a,w
  4389     0F1F  1D03               	btfss	3,2
  4390     0F20  2F22               	goto	u1911
  4391     0F21  2F23               	goto	u1910
  4392     0F22                     u1911:
  4393     0F22  2F3F               	goto	l98
  4394     0F23                     u1910:
  4395     0F23                     l1698:
  4396                           
  4397                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4398     0F23  0874               	movf	Lcd_Set_Cursor@b,w
  4399     0F24  3EBF               	addlw	191
  4400     0F25  00F9               	movwf	Lcd_Set_Cursor@temp
  4401                           
  4402                           ;LCD.c: 58:         z = temp >> 4;
  4403     0F26  0879               	movf	Lcd_Set_Cursor@temp,w
  4404     0F27  00F5               	movwf	??_Lcd_Set_Cursor
  4405     0F28  3004               	movlw	4
  4406     0F29                     u1925:
  4407     0F29  1003               	clrc
  4408     0F2A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4409     0F2B  3EFF               	addlw	-1
  4410     0F2C  1D03               	skipz
  4411     0F2D  2F29               	goto	u1925
  4412     0F2E  0875               	movf	??_Lcd_Set_Cursor,w
  4413     0F2F  00F7               	movwf	Lcd_Set_Cursor@z
  4414     0F30                     l1700:
  4415                           
  4416                           ;LCD.c: 59:         y = temp & 0x0F;
  4417     0F30  0879               	movf	Lcd_Set_Cursor@temp,w
  4418     0F31  390F               	andlw	15
  4419     0F32  00F8               	movwf	Lcd_Set_Cursor@y
  4420     0F33                     l1702:
  4421                           
  4422                           ;LCD.c: 60:         Lcd_Cmd(z);
  4423     0F33  0877               	movf	Lcd_Set_Cursor@z,w
  4424     0F34  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4425     0F39                     l1704:
  4426                           
  4427                           ;LCD.c: 61:         Lcd_Cmd(y);
  4428     0F39  0878               	movf	Lcd_Set_Cursor@y,w
  4429     0F3A  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4430     0F3F                     l98:
  4431     0F3F  0008               	return
  4432     0F40                     __end_of_Lcd_Set_Cursor:
  4433                           
  4434                           	psect	text16
  4435     0F40                     __ptext16:	
  4436 ;; *************** function _Lcd_Init *****************
  4437 ;; Defined at:
  4438 ;;		line 65 in file "LCD.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, pclath, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0
  4454 ;;      Temps:          2       0       0       0       0
  4455 ;;      Totals:         2       0       0       0       0
  4456 ;;Total ram usage:        2 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 2
  4459 ;; This function calls:
  4460 ;;		_Lcd_Cmd
  4461 ;;		_Lcd_Port
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467     0F40                     _Lcd_Init:	
  4468                           ;psect for function _Lcd_Init
  4469                           
  4470     0F40                     l1666:	
  4471                           ;incstack = 0
  4472                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4473                           
  4474                           
  4475                           ;LCD.c: 66:     Lcd_Port(0x00);
  4476     0F40  3000               	movlw	0
  4477     0F41  120A  158A  263A  120A  158A  	fcall	_Lcd_Port
  4478     0F46                     l1668:
  4479                           
  4480                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4481     0F46  3034               	movlw	52
  4482     0F47  00F5               	movwf	??_Lcd_Init+1
  4483     0F48  30F1               	movlw	241
  4484     0F49  00F4               	movwf	??_Lcd_Init
  4485     0F4A                     u2197:
  4486     0F4A  0BF4               	decfsz	??_Lcd_Init,f
  4487     0F4B  2F4A               	goto	u2197
  4488     0F4C  0BF5               	decfsz	??_Lcd_Init+1,f
  4489     0F4D  2F4A               	goto	u2197
  4490     0F4E  2F4F               	nop2
  4491     0F4F                     l1670:
  4492                           
  4493                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4494     0F4F  3003               	movlw	3
  4495     0F50  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4496                           
  4497                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4498     0F55  300D               	movlw	13
  4499     0F56  00F5               	movwf	??_Lcd_Init+1
  4500     0F57  30FB               	movlw	251
  4501     0F58  00F4               	movwf	??_Lcd_Init
  4502     0F59                     u2207:
  4503     0F59  0BF4               	decfsz	??_Lcd_Init,f
  4504     0F5A  2F59               	goto	u2207
  4505     0F5B  0BF5               	decfsz	??_Lcd_Init+1,f
  4506     0F5C  2F59               	goto	u2207
  4507     0F5D  2F5E               	nop2
  4508     0F5E                     l1672:
  4509                           
  4510                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4511     0F5E  3003               	movlw	3
  4512     0F5F  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4513     0F64                     l1674:
  4514                           
  4515                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4516     0F64  301D               	movlw	29
  4517     0F65  00F5               	movwf	??_Lcd_Init+1
  4518     0F66  3091               	movlw	145
  4519     0F67  00F4               	movwf	??_Lcd_Init
  4520     0F68                     u2217:
  4521     0F68  0BF4               	decfsz	??_Lcd_Init,f
  4522     0F69  2F68               	goto	u2217
  4523     0F6A  0BF5               	decfsz	??_Lcd_Init+1,f
  4524     0F6B  2F68               	goto	u2217
  4525                           
  4526                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4527     0F6C  3003               	movlw	3
  4528     0F6D  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4529                           
  4530                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4531     0F72  3002               	movlw	2
  4532     0F73  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4533                           
  4534                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  4535     0F78  3002               	movlw	2
  4536     0F79  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4537                           
  4538                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  4539     0F7E  3008               	movlw	8
  4540     0F7F  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4541                           
  4542                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  4543     0F84  3000               	movlw	0
  4544     0F85  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4545                           
  4546                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  4547     0F8A  300C               	movlw	12
  4548     0F8B  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4549                           
  4550                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  4551     0F90  3000               	movlw	0
  4552     0F91  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4553                           
  4554                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  4555     0F96  3006               	movlw	6
  4556     0F97  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4557     0F9C                     l101:
  4558     0F9C  0008               	return
  4559     0F9D                     __end_of_Lcd_Init:
  4560                           
  4561                           	psect	text17
  4562     0E01                     __ptext17:	
  4563 ;; *************** function _Lcd_Clear *****************
  4564 ;; Defined at:
  4565 ;;		line 43 in file "LCD.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 2
  4586 ;; This function calls:
  4587 ;;		_Lcd_Cmd
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593     0E01                     _Lcd_Clear:	
  4594                           ;psect for function _Lcd_Clear
  4595                           
  4596     0E01                     l1684:	
  4597                           ;incstack = 0
  4598                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4599                           
  4600                           
  4601                           ;LCD.c: 44:     Lcd_Cmd(0);
  4602     0E01  3000               	movlw	0
  4603     0E02  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4604                           
  4605                           ;LCD.c: 45:     Lcd_Cmd(1);
  4606     0E07  3001               	movlw	1
  4607     0E08  120A  158A  2620  120A  158A  	fcall	_Lcd_Cmd
  4608     0E0D                     l92:
  4609     0E0D  0008               	return
  4610     0E0E                     __end_of_Lcd_Clear:
  4611                           
  4612                           	psect	text18
  4613     0E20                     __ptext18:	
  4614 ;; *************** function _Lcd_Cmd *****************
  4615 ;; Defined at:
  4616 ;;		line 35 in file "LCD.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  a               1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  a               1    3[COMMON] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         1       0       0       0       0
  4632 ;;      Temps:          2       0       0       0       0
  4633 ;;      Totals:         3       0       0       0       0
  4634 ;;Total ram usage:        3 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 1
  4637 ;; This function calls:
  4638 ;;		_Lcd_Port
  4639 ;; This function is called by:
  4640 ;;		_Lcd_Clear
  4641 ;;		_Lcd_Set_Cursor
  4642 ;;		_Lcd_Init
  4643 ;;		_Lcd_Shift_Right
  4644 ;;		_Lcd_Shift_Left
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648     0E20                     _Lcd_Cmd:	
  4649                           ;psect for function _Lcd_Cmd
  4650                           
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4654                           ;Lcd_Cmd@a stored from wreg
  4655     0E20  00F3               	movwf	Lcd_Cmd@a
  4656     0E21                     l1360:
  4657                           
  4658                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4659     0E21  1283               	bcf	3,5	;RP0=0, select bank0
  4660     0E22  1303               	bcf	3,6	;RP1=0, select bank0
  4661     0E23  1108               	bcf	8,2	;volatile
  4662     0E24                     l1362:
  4663                           
  4664                           ;LCD.c: 37:     Lcd_Port(a);
  4665     0E24  0873               	movf	Lcd_Cmd@a,w
  4666     0E25  120A  158A  263A  120A  158A  	fcall	_Lcd_Port
  4667     0E2A                     l1364:
  4668                           
  4669                           ;LCD.c: 38:     RD3 = 1;
  4670     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4671     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4672     0E2C  1588               	bsf	8,3	;volatile
  4673     0E2D                     l1366:
  4674                           
  4675                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4676     0E2D  300B               	movlw	11
  4677     0E2E  00F2               	movwf	??_Lcd_Cmd+1
  4678     0E2F  3062               	movlw	98
  4679     0E30  00F1               	movwf	??_Lcd_Cmd
  4680     0E31                     u2227:
  4681     0E31  0BF1               	decfsz	??_Lcd_Cmd,f
  4682     0E32  2E31               	goto	u2227
  4683     0E33  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4684     0E34  2E31               	goto	u2227
  4685     0E35  0000               	nop
  4686     0E36                     l1368:
  4687                           
  4688                           ;LCD.c: 40:     RD3 = 0;
  4689     0E36  1283               	bcf	3,5	;RP0=0, select bank0
  4690     0E37  1303               	bcf	3,6	;RP1=0, select bank0
  4691     0E38  1188               	bcf	8,3	;volatile
  4692     0E39                     l89:
  4693     0E39  0008               	return
  4694     0E3A                     __end_of_Lcd_Cmd:
  4695                           
  4696                           	psect	text19
  4697     0E3A                     __ptext19:	
  4698 ;; *************** function _Lcd_Port *****************
  4699 ;; Defined at:
  4700 ;;		line 13 in file "LCD.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  a               1    wreg     unsigned char 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;  a               1    0[COMMON] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4714 ;;      Params:         0       0       0       0       0
  4715 ;;      Locals:         1       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0
  4717 ;;      Totals:         1       0       0       0       0
  4718 ;;Total ram usage:        1 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_Lcd_Cmd
  4724 ;;		_Lcd_Init
  4725 ;;		_Lcd_Write_Char
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729     0E3A                     _Lcd_Port:	
  4730                           ;psect for function _Lcd_Port
  4731                           
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _Lcd_Port: [wreg]
  4735                           ;Lcd_Port@a stored from wreg
  4736     0E3A  00F0               	movwf	Lcd_Port@a
  4737     0E3B                     l1336:
  4738                           
  4739                           ;LCD.c: 14:     if (a & 1)
  4740     0E3B  1C70               	btfss	Lcd_Port@a,0
  4741     0E3C  2E3E               	goto	u1071
  4742     0E3D  2E3F               	goto	u1070
  4743     0E3E                     u1071:
  4744     0E3E  2E43               	goto	l78
  4745     0E3F                     u1070:
  4746     0E3F                     l1338:
  4747                           
  4748                           ;LCD.c: 15:         RD4 = 1;
  4749     0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  4750     0E40  1303               	bcf	3,6	;RP1=0, select bank0
  4751     0E41  1608               	bsf	8,4	;volatile
  4752     0E42  2E46               	goto	l79
  4753     0E43                     l78:	
  4754                           ;LCD.c: 16:     else
  4755                           
  4756                           
  4757                           ;LCD.c: 17:         RD4 = 0;
  4758     0E43  1283               	bcf	3,5	;RP0=0, select bank0
  4759     0E44  1303               	bcf	3,6	;RP1=0, select bank0
  4760     0E45  1208               	bcf	8,4	;volatile
  4761     0E46                     l79:
  4762                           
  4763                           ;LCD.c: 19:     if (a & 2)
  4764     0E46  1CF0               	btfss	Lcd_Port@a,1
  4765     0E47  2E49               	goto	u1081
  4766     0E48  2E4A               	goto	u1080
  4767     0E49                     u1081:
  4768     0E49  2E4C               	goto	l80
  4769     0E4A                     u1080:
  4770     0E4A                     l1340:
  4771                           
  4772                           ;LCD.c: 20:         RD5 = 1;
  4773     0E4A  1688               	bsf	8,5	;volatile
  4774     0E4B  2E4D               	goto	l81
  4775     0E4C                     l80:	
  4776                           ;LCD.c: 21:     else
  4777                           
  4778                           
  4779                           ;LCD.c: 22:         RD5 = 0;
  4780     0E4C  1288               	bcf	8,5	;volatile
  4781     0E4D                     l81:
  4782                           
  4783                           ;LCD.c: 24:     if (a & 4)
  4784     0E4D  1D70               	btfss	Lcd_Port@a,2
  4785     0E4E  2E50               	goto	u1091
  4786     0E4F  2E51               	goto	u1090
  4787     0E50                     u1091:
  4788     0E50  2E53               	goto	l82
  4789     0E51                     u1090:
  4790     0E51                     l1342:
  4791                           
  4792                           ;LCD.c: 25:         RD6 = 1;
  4793     0E51  1708               	bsf	8,6	;volatile
  4794     0E52  2E54               	goto	l83
  4795     0E53                     l82:	
  4796                           ;LCD.c: 26:     else
  4797                           
  4798                           
  4799                           ;LCD.c: 27:         RD6 = 0;
  4800     0E53  1308               	bcf	8,6	;volatile
  4801     0E54                     l83:
  4802                           
  4803                           ;LCD.c: 29:     if (a & 8)
  4804     0E54  1DF0               	btfss	Lcd_Port@a,3
  4805     0E55  2E57               	goto	u1101
  4806     0E56  2E58               	goto	u1100
  4807     0E57                     u1101:
  4808     0E57  2E5A               	goto	l84
  4809     0E58                     u1100:
  4810     0E58                     l1344:
  4811                           
  4812                           ;LCD.c: 30:         RD7 = 1;
  4813     0E58  1788               	bsf	8,7	;volatile
  4814     0E59  2E5B               	goto	l86
  4815     0E5A                     l84:	
  4816                           ;LCD.c: 31:     else
  4817                           
  4818                           
  4819                           ;LCD.c: 32:         RD7 = 0;
  4820     0E5A  1388               	bcf	8,7	;volatile
  4821     0E5B                     l86:
  4822     0E5B  0008               	return
  4823     0E5C                     __end_of_Lcd_Port:
  4824     007E                     btemp	set	126	;btemp
  4825     007E                     wtemp0	set	126
  4826                           
  4827                           	psect	idloc
  4828                           
  4829                           ;Config register IDLOC0 @ 0x2000
  4830                           ;	unspecified, using default values
  4831     2000                     	org	8192
  4832     2000  3FFF               	dw	16383
  4833                           
  4834                           ;Config register IDLOC1 @ 0x2001
  4835                           ;	unspecified, using default values
  4836     2001                     	org	8193
  4837     2001  3FFF               	dw	16383
  4838                           
  4839                           ;Config register IDLOC2 @ 0x2002
  4840                           ;	unspecified, using default values
  4841     2002                     	org	8194
  4842     2002  3FFF               	dw	16383
  4843                           
  4844                           ;Config register IDLOC3 @ 0x2003
  4845                           ;	unspecified, using default values
  4846     2003                     	org	8195
  4847     2003  3FFF               	dw	16383
  4848                           
  4849                           	psect	config
  4850                           
  4851                           ;Config register CONFIG1 @ 0x2007
  4852                           ;	Oscillator Selection bits
  4853                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4854                           ;	Watchdog Timer Enable bit
  4855                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4856                           ;	Power-up Timer Enable bit
  4857                           ;	PWRTE = OFF, PWRT disabled
  4858                           ;	RE3/MCLR pin function select bit
  4859                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4860                           ;	Code Protection bit
  4861                           ;	CP = OFF, Program memory code protection is disabled
  4862                           ;	Data Code Protection bit
  4863                           ;	CPD = OFF, Data memory code protection is disabled
  4864                           ;	Brown Out Reset Selection bits
  4865                           ;	BOREN = OFF, BOR disabled
  4866                           ;	Internal External Switchover bit
  4867                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4868                           ;	Fail-Safe Clock Monitor Enabled bit
  4869                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4870                           ;	Low Voltage Programming Enable bit
  4871                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4872                           ;	In-Circuit Debugger Mode bit
  4873                           ;	DEBUG = 0x1, unprogramme  4874     2007                     	org	8199
  4875     2007  20D4               	dw	8404
  4876                           
  4877                           ;Config register CONFIG2 @ 0x2008
  4878                           ;	Brown-out Reset Selection bit
  4879                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4880                           ;	Flash Program Memory Self Write Enable bits
  4881                           ;	WRT = OFF, Write protection off
  4882     2008                     	org	8200
  4883     2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    40
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> verde(BANK0[4]), azul(BANK0[4]), rojo(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> verde(BANK0[4]), azul(BANK0[4]), rojo(BANK0[4]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___llmod->___lldiv
    _read_red->___xxtofl
    _read_green->___xxtofl
    _read_blue->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_read_blue
    _main->_read_green
    _main->_read_red
    _sprintf->___llmod
    _read_red->___fltol
    _read_green->___fltol
    _read_blue->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14203
                                             45 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _config_TCS230
                          _read_blue
                         _read_green
                           _read_red
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    23      5    1386
                                             10 BANK0     20    15      5
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_red                                             9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_green                                           9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _read_blue                                            9     5      4    3751
                                             36 BANK0      9     5      4
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _config_TCS230                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _config_TCS230
   _read_blue
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _read_green
     ___flmul
     ___fltol
     ___xxtofl
   _read_red
     ___flmul
     ___fltol
     ___xxtofl
   _setup
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 09:24:44 2023

                       pc 0002                        l61 0E1F                        l80 0E4C  
                      l81 0E4D                        l82 0E53                        l83 0E54  
                      l84 0E5A                        l92 0E0D                        l86 0E5B  
                      l78 0E43                        l79 0E46                        l89 0E39  
                      l98 0F3F                        fsr 0004       __Umul8_16@word_mpld 0076  
                     l101 0F9C                       l110 0EF9                       l104 0EB7  
                     l131 0E00                       l140 00D4                       l142 00D8  
                     l134 00C7                       l143 011F                       l152 0071  
                     l161 0FAD                       l137 00CD                       l154 0075  
                     l146 0064                       l155 00BC                       l164 0FB4  
                     l149 006A                       l158 0FA7                       l318 0185  
                     l167 0FFF                       l504 0059                       l265 039D  
                     l268 03C1                       l278 04AD                       l721 0263  
                     l475 01E8                       l715 0220                       l468 01FD  
                     l717 02B5                       l478 01FD                       l671 07F2  
                     l728 027F                       l729 028B                       l690 0E70  
                     l683 07E6                       l692 0E82                       l677 0762  
                     _RD0 0040                       _RD1 0041                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0032              ___flmul@bexp 0033              ___flmul@sign 002D  
            ___flmul@temp 0038              ___flmul@prod 0034              ___fltol@exp1 0043  
                    l1400 014D                      l1402 015F                      l1410 017D  
                    l1340 0E4A                      l1500 04F0                      l1420 019A  
                    l1404 016D                      l1342 0E51                      l1350 0E66  
                    l1510 050C                      l1502 04F8                      l1430 01BC  
                    l1422 01AD                      l1414 0186                      l1406 016E  
                    l1344 0E58                      l1336 0E3B                      l1360 0E21  
                    l1352 0E6A                      l1600 07DC                      l1520 054B  
                    l1504 04FA                      l1424 01AE                      l1416 0191  
                    l1408 0177                      l1338 0E3F                      l1362 0E24  
                    l1370 0E84                      l1354 0E79                      l1346 0E5D  
                    l1602 07E0                      l1530 05D2                      l1522 0567  
                    l1514 0515                      l1506 0502                      l1426 01B6  
                    l1610 01FF                      l1450 0004                      l1364 0E2A  
                    l1700 0F30                      l1380 0EA3                      l1372 0E8A  
                    l1356 0E7E                      l1348 0E5F                      l1604 07E1  
                    l1540 063F                      l1532 05E0                      l1524 0591  
                    l1516 0523                      l1508 0507                      l1444 01DD  
                    l1436 01C4                      l1428 01B8                      l1612 0204  
                    l1460 0034                      l1452 000E                      l1366 0E2D  
                    l1702 0F33                      l1382 0EA6                      l1374 0E8D  
                    l1710 0ED7                      l1606 07EA                      l1550 06E6  
                    l1542 065C                      l1534 05FD                      l1526 05AD  
                    l1518 0530                      l1470 04AE                      l1446 01ED  
                    l1438 01D6                      l1630 024C                      l1622 0231  
                    l1614 0208                      l1390 0120                      l1462 0042  
                    l1454 0011                      l1368 0E36                      l1704 0F39  
                    l1384 0EAC                      l1376 0E9B                      l1712 0EDD  
                    l1560 0732                      l1552 070E                      l1544 0687  
                    l1536 060B                      l1528 05C9                      l1480 04C1  
                    l1472 04B3                      l1448 01F2                      l1640 0283  
                    l1632 025A                      l1624 0234                      l1616 0218  
                    l1720 00D3                      l1392 0130                      l1464 004B  
                    l1456 001E                      l1800 042D                      l1386 0EAF  
                    l1378 0E9E                      l1706 0EB8                      l1570 0747  
                    l1562 0733                      l1554 0717                      l1546 0695  
                    l1538 0628                      l1490 04DD                      l1482 04C6  
                    l1474 04B7                      l1650 02AD                      l1642 028D  
                    l1634 026A                      l1626 0241                      l1618 0228  
                    l1730 005A                      l1722 00D9                      l1714 00BD  
                    l1394 0133                      l1458 0022                      l1466 0051  
                    l1802 0435                      l1810 0499                      l1388 0EB4  
                    l1708 0EBB                      l1580 076C                      l1572 074B  
                    l1564 073C                      l1556 0725                      l1548 06C0  
                    l1492 04E1                      l1484 04CE                      l1476 04BB  
                    l1644 02A3                      l1636 0275                      l1628 0248  
                    l1740 007C                      l1732 005E                      l1724 00DF  
                    l1716 00C1                      l1660 0E17                      l1396 0140  
                    l1804 0482                      l1812 04A9                      l1820 02B6  
                    l1670 0F4F                      l1590 07AA                      l1582 077A  
                    l1574 075F                      l1558 072E                      l1566 0742  
                    l1494 04E5                      l1486 04D0                      l1478 04BC  
                    l1646 02A8                      l1638 0279                      l1750 0FB1  
                    l1742 007E                      l1734 006E                      l1726 00E1  
                    l1718 00D1                      l1662 0E1A                      l1654 0E0E  
                    l1398 0144                      l1806 0487                      l1830 02CD  
                    l1822 02BB                      l1672 0F5E                      l1680 0DFE  
                    l1592 07B5                      l1584 077E                      l1568 0746  
                    l1496 04E6                      l1488 04D8                      l1648 02AC  
                    l1760 0FC1                      l1752 0FB3                      l1736 0070  
                    l1664 0E1E                      l1656 0E12                      l1808 048B  
                    l1840 030B                      l1832 02D5                      l1824 02BE  
                    l1674 0F64                      l1666 0F40                      l1690 0F0D  
                    l1682 0DFF                      l1594 07C4                      l1586 0797  
                    l1578 0767                      l1498 04EB                      l1754 0FB8  
                    l1746 0F9D                      l1738 0076                      l1658 0E16  
                    l1770 0396                      l1850 0350                      l1842 031B  
                    l1834 02DE                      l1826 02C3                      l1684 0E01  
                    l1668 0F46                      l1692 0F10                      l1676 0DF7  
                    l1596 07CE                      l1588 079D                      l1756 0FBE  
                    l1748 0FA1                      l1780 03C5                      l1772 039B  
                    l1764 0388                      l1852 0358                      l1844 032D  
                    l1836 02ED                      l1828 02C8                      l1694 0F16  
                    l1686 0EFB                      l1678 0DFA                      l1598 07D0  
                    l1758 0FBF                      l1782 03D3                      l1774 039F  
                    l1766 038B                      l1854 0361                      l1846 033F  
                    l1838 02FC                      l1688 0F00                      l1696 0F1D  
                    l1784 03D8                      l1768 0391                      l1856 0369  
                    l1848 0347                      l1698 0F23                      l1794 03EC  
                    l1786 03E6                      l1778 03A4                      l1858 0372  
                    l1788 03EA                      l1884 03B6                      l1798 0423  
                    STR_1 0838                      STR_2 0848                      STR_3 0848  
                    STR_4 0848                      u1100 0E58                      u1101 0E57  
                    u1110 0E6A                      u1111 0E69                      u2000 006E  
                    u2001 006D                      u1130 0E7E                      u2010 0075  
                    u1210 017D                      u1131 0E7D                      u2011 0074  
                    u1211 017C                      u1300 01ED                      u1220 0191  
                    u2020 0FAD                      u1125 0E71                      u1301 01EC  
                    u1221 0190                      u2021 0FAC                      u1205 016F  
                    u1070 0E3F                      u1310 01F2                      u1230 01A8  
                    u2030 0FB1                      u1150 0130                      u2110 0499  
                    u1071 0E3E                      u1311 01F1                      u2031 0FB0  
                    u1151 012F                      u2111 0498                      u1080 0E4A  
                    u1400 04C6                      u1240 01BC                      u2040 0FB8  
                    u1320 000E                      u2120 04A9                      u1081 0E49  
                    u1145 0E90                      u1401 04C5                      u1241 01BB  
                    u2041 0FB7                      u1321 000D                      u2121 04A8  
                    u2105 0440                      u1090 0E51                      u1410 04E5  
                    u1250 01C3                      u1170 0144                      u2050 0391  
                    u1091 0E50                      u1411 04E4                      u1251 01C2  
                    u1235 01A3                      u1171 0143                      u2051 0390  
                    u1420 04EB                      u1340 0022                      u2060 03C5  
                    u1421 04EA                      u1165 0135                      u1341 0021  
                    u2061 03C4                      u1430 04F0                      u1270 01D5  
                    u1190 015F                      u1350 0034                      u2207 0F59  
                    u1511 05EF                      u1431 04EF                      u1271 01D4  
                    u1191 015E                      u1351 0033                      u1335 0013  
                    u1512 05F6                      u1440 0507                      u1280 01DC  
                    u2080 0422                      u2217 0F68                      u1601 0700  
                    u1521 061A                      u1513 05FD                      u1505 05CB  
                    u1441 0506                      u1281 01DB                      u1265 01C5  
                    u1185 0146                      u2081 0421                      u2137 037A  
                    u1602 0707                      u1522 0621                      u1450 050C  
                    u1370 0051                      u2090 042D                      u2227 0E31  
                    u1603 070E                      u1523 0628                      u1451 050B  
                    u2147 00C5                      u1195 015B                      u1371 0050  
                    u1355 0030                      u2091 042C                      u2075 03EF  
                    u1700 077E                      u1380 04BB                      u1701 077D  
                    u1541 064E                      u1461 0559                      u1381 04BA  
                    u2157 0062                      u1365 0043                      u2085 041E  
                    u1710 078D                      u1630 0732                      u1542 0655  
                    u1462 0560                      u1390 04C1                      u1631 0731  
                    u1615 0710                      u1551 0679                      u1543 065C  
                    u1535 062A                      u1471 0575                      u1463 0567  
                    u1391 04C0                      u1295 01DF                      u2167 0FA5  
                    u1720 07AA                      u1552 0680                      u1472 057C  
                    u2177 0EA0                      u1721 07A9                      u1625 0727  
                    u1561 06A4                      u1553 0687                      u1481 059F  
                    u1473 0583                      u1730 07C4                      u1650 0746  
                    u1570 06CC                      u1562 06AB                      u1482 05A6  
                    u1810 0269                      u2187 0EB1                      u1731 07C3  
                    u1715 0788                      u1651 0745                      u1563 06B2  
                    u1491 05BB                      u1483 05AD                      u1811 0268  
                    u1740 07E0                      u1660 074B                      u1492 05C2  
                    u2197 0F4A                      u1741 07DF                      u1725 07A6  
                    u1661 074A                      u1645 0735                      u1581 06D8  
                    u1493 05C9                      u1805 025B                      u1910 0F23  
                    u1670 075F                      u1590 06F4                      u1582 06DF  
                    u1830 0279                      u1750 0204                      u1911 0F22  
                    u1735 07C0                      u1671 075E                      u1583 06E6  
                    u1575 06C7                      u1831 0278                      u1751 0203  
                    u1680 0766                      u1840 027F                      u1760 0208  
                    u1905 0F06                      u1681 0765                      u1841 027E  
                    u1825 026E                      u1761 0207                      u1930 0EC5  
                    u1690 076C                      u1850 0283                      u1770 0228  
                    u1691 076B                      u1595 06EF                      u1851 0282  
                    u1771 0227                      u1940 0EE7                      u1860 0298  
                    u1925 0F29                      u1950 0EF9                      u1870 02A8  
                    u1790 0247                      u1951 0EF8                      u1871 02A7  
                    u1791 0246                      u1880 02AC                      u1960 00CD  
                    u1881 02AB                      u1865 0293                      u1785 0239  
                    u1961 00CC                      u1890 0F00                      u1970 00D1  
                    u1891 0EFF                      u1971 00D0                      u1980 00D8  
                    u1981 00D7                      u1990 006A                      u1991 0069  
                    _TMR1 000E         ?_Lcd_Write_String 0075                      _cont 005C  
                    _main 02B6                      _azul 0065                      _rojo 0069  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         __end_of_Lcd_Cmd 0E3A           ??_config_TCS230 0070             ___fltol@sign1 0042  
                   ?_main 0070           __end_of___flmul 07F3           __end_of___fltol 01FE  
                   _ANSEL 0188           __end_of___lldiv 0186           __end_of___llmod 005A  
                   _PORTD 0008                     _TRISA 0085                     _TRISD 0088  
         __end_of_dpowers 0838                     _verde 0061                     _setup 0E0E  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 04AE          __end_of_Lcd_Init 0F9D          __end_of_Lcd_Port 0E5C  
         __initialization 07F3              __end_of_main 0385                    ??_main 004D  
        ___llmod@dividend 0024                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071          __end_of___xxtofl 02B6                 ??___flmul 0028  
               ??___fltol 003E                 ??___lldiv 0078                 ??___llmod 0028  
        __end_of_read_red 0120         read_red@temp_freq 0049                 ??_sprintf 002F  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070   __end_of__initialization 07FC         __end_of_Lcd_Clear 0E0E  
              ___fltol@f1 003A            __pcstackCOMMON 0070             __end_of_setup 0E20  
          _Lcd_Set_Cursor 0EFA                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0070                __pbssBANK0 0050         __end_of__Umul8_16 0E83  
              __pmaintext 02B6    __end_of_Lcd_Set_Cursor 0F40                 ?___xxtofl 0070  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                __stringtab 0800  
          _Lcd_Write_Char 0E83                   _Lcd_Cmd 0E20                 ?_read_red 0044  
              _green_freq 0050                   ___flmul 04AE                   ___fltol 0186  
                 ___lldiv 0120                   ___llmod 0004           ?_Lcd_Set_Cursor 0074  
              _read_green 005A                   __ptext1 0385                   __ptext2 0004  
                 __ptext3 0120                   __ptext4 0E0E                   __ptext5 00BD  
                 __ptext6 005A                   __ptext7 0F9D                   __ptext8 01FE  
                 __ptext9 0186                 _T1CONbits 0010     __end_of_config_TCS230 0E01  
                 _dpowers 0810                ??___xxtofl 0074         __end_of_read_blue 1000  
                 _sprintf 0385                   clrloop0 0DF0    __end_of_Lcd_Write_Char 0EB8  
    end_of_initialization 07FC                ??_read_red 0048           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                 Lcd_Port@a 0070                 _PORTAbits 0005  
               _PORTDbits 0008             ___xxtofl@sign 0078           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A               ___flmul@grs 002E  
               _Lcd_Clear 0E01          _Lcd_Write_String 0EB8               ?_read_green 0044  
     start_initialization 07F3        read_blue@temp_freq 0049           ___llmod@divisor 0020  
         ___llmod@counter 0029                ?_Lcd_Clear 0070       read_green@temp_freq 0049  
               __Umul8_16 0E5C           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___flmul@a 0024                 ___flmul@b 0020                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070               sprintf@flag 0034  
             sprintf@prec 0035          ??_Lcd_Set_Cursor 0075                  ?___flmul 0020  
                ?___fltol 003A                  ?___lldiv 0070                  ?___llmod 0020  
              ?__Umul8_16 0070                 _blue_freq 0054                 __pstrings 0800  
                ?_sprintf 002A                 _read_blue 0F9D                 clear_ram0 0DEF  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 080F  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 0F40                  _Lcd_Port 0E3A  
              ?_read_blue 0044  __end_of_Lcd_Write_String 0EFA               ??__Umul8_16 0072  
            ??_read_green 0048        __end_of__stringtab 0810                sprintf@val 0037  
                ___xxtofl 01FE                  __ptext10 04AE                  __ptext11 0E5C  
                __ptext12 0DF7                  __ptext13 0EB8                  __ptext14 0E83  
                __ptext15 0EFA                  __ptext16 0F40                  __ptext17 0E01  
                __ptext18 0E20                  __ptext19 0E3A                  _contador 005F  
                _read_red 00BD                  _red_freq 0058        __end_of_read_green 00BD  
           _config_TCS230 0DF7               ??_read_blue 0048        Lcd_Write_Char@temp 0072  
               sprintf@ap 003B                 sprintf@sp 003C          ___lldiv@dividend 0074  
               stringcode 080A                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
  __Umul8_16@multiplicand 0070                  sprintf@c 003D                  sprintf@f 002A  
          ?_config_TCS230 0070          ___lldiv@quotient 0079                  stringdir 080A  
                stringtab 0800      __Umul8_16@multiplier 0078         __Umul8_16@product 0074  

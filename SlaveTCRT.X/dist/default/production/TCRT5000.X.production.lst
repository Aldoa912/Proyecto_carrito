

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 23:06:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 04/07/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0008                     _PORTDbits	set	8
   291     0006                     _PORTB	set	6
   292     0008                     _PORTD	set	8
   293     0006                     _PORTBbits	set	6
   294     0043                     _RD3	set	67
   295     0047                     _RD7	set	71
   296     0046                     _RD6	set	70
   297     0045                     _RD5	set	69
   298     0044                     _RD4	set	68
   299     008F                     _OSCCONbits	set	143
   300     0086                     _TRISB	set	134
   301     0088                     _TRISD	set	136
   302     0189                     _ANSELH	set	393
   303     0188                     _ANSEL	set	392
   304                           
   305                           	psect	strings
   306     0003                     __pstrings:
   307     0003                     stringtab:
   308     0003                     __stringtab:
   309     0003                     stringcode:	
   310                           ;	String table - string pointers are 1 byte each
   311                           
   312     0003                     stringdir:
   313     0003  3000               	movlw	high stringdir
   314     0004  008A               	movwf	10
   315     0005  0804               	movf	4,w
   316     0006  0A84               	incf	4,f
   317     0007  0782               	addwf	2,f
   318     0008                     __stringbase:
   319     0008  3400               	retlw	0
   320     0009                     __end_of__stringtab:
   321     0009                     STR_2:
   322     0009  3445               	retlw	69	;'E'
   323     000A  344E               	retlw	78	;'N'
   324     000B  3443               	retlw	67	;'C'
   325     000C  3445               	retlw	69	;'E'
   326     000D  344E               	retlw	78	;'N'
   327     000E  3444               	retlw	68	;'D'
   328     000F  3449               	retlw	73	;'I'
   329     0010  3444               	retlw	68	;'D'
   330     0011  344F               	retlw	79	;'O'
   331     0012  3400               	retlw	0
   332     0013                     STR_3:
   333     0013  3441               	retlw	65	;'A'
   334     0014  3450               	retlw	80	;'P'
   335     0015  3441               	retlw	65	;'A'
   336     0016  3447               	retlw	71	;'G'
   337     0017  3441               	retlw	65	;'A'
   338     0018  3444               	retlw	68	;'D'
   339     0019  344F               	retlw	79	;'O'
   340     001A  3400               	retlw	0
   341     001B                     STR_1:
   342     001B  3445               	retlw	69	;'E'
   343     001C  3453               	retlw	83	;'S'
   344     001D  3454               	retlw	84	;'T'
   345     001E  3441               	retlw	65	;'A'
   346     001F  3444               	retlw	68	;'D'
   347     0020  344F               	retlw	79	;'O'
   348     0021  3400               	retlw	0
   349                           
   350                           	psect	cinit
   351     07F4                     start_initialization:	
   352                           ; #config settings
   353                           
   354     07F4                     __initialization:
   355                           
   356                           ; Clear objects allocated to BANK0
   357     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   358     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   359     07F6  01A0               	clrf	__pbssBANK0& (0+127)
   360     07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   361     07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   362     07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   363     07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   364     07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   365     07FC                     end_of_initialization:	
   366                           ;End of C runtime variable initialization code
   367                           
   368     07FC                     __end_of__initialization:
   369     07FC  0183               	clrf	3
   370     07FD  120A  118A  2F82   	ljmp	_main	;jump to C main() function
   371                           
   372                           	psect	bssBANK0
   373     0020                     __pbssBANK0:
   374     0020                     _lectura2:
   375     0020                     	ds	2
   376     0022                     _lectura1:
   377     0022                     	ds	2
   378     0024                     _estado:
   379     0024                     	ds	2
   380                           
   381                           	psect	cstackCOMMON
   382     0070                     __pcstackCOMMON:
   383     0070                     ?_setup:
   384     0070                     ??_setup:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ?_Lcd_Init:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ?_Lcd_Clear:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ?_Lcd_Write_String:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ?_main:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ?_Lcd_Port:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ??_Lcd_Port:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_Lcd_Cmd:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_Lcd_Write_Char:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     Lcd_Port@a:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           ; 1 bytes @ 0x0
   416     0070                     	ds	1
   417     0071                     ??_Lcd_Cmd:
   418     0071                     ??_Lcd_Write_Char:	
   419                           ; 1 bytes @ 0x1
   420                           
   421                           
   422                           ; 1 bytes @ 0x1
   423     0071                     	ds	1
   424     0072                     Lcd_Write_Char@temp:
   425                           
   426                           ; 1 bytes @ 0x2
   427     0072                     	ds	1
   428     0073                     Lcd_Cmd@a:
   429     0073                     Lcd_Write_Char@y:	
   430                           ; 1 bytes @ 0x3
   431                           
   432                           
   433                           ; 1 bytes @ 0x3
   434     0073                     	ds	1
   435     0074                     ??_Lcd_Init:
   436     0074                     ??_Lcd_Clear:	
   437                           ; 1 bytes @ 0x4
   438                           
   439     0074                     ?_Lcd_Set_Cursor:	
   440                           ; 1 bytes @ 0x4
   441                           
   442     0074                     Lcd_Set_Cursor@b:	
   443                           ; 1 bytes @ 0x4
   444                           
   445     0074                     Lcd_Write_Char@a:	
   446                           ; 1 bytes @ 0x4
   447                           
   448                           
   449                           ; 1 bytes @ 0x4
   450     0074                     	ds	1
   451     0075                     ??_Lcd_Set_Cursor:
   452     0075                     ??_Lcd_Write_String:	
   453                           ; 1 bytes @ 0x5
   454                           
   455     0075                     Lcd_Write_String@i:	
   456                           ; 1 bytes @ 0x5
   457                           
   458                           
   459                           ; 2 bytes @ 0x5
   460     0075                     	ds	1
   461     0076                     Lcd_Set_Cursor@a:
   462                           
   463                           ; 1 bytes @ 0x6
   464     0076                     	ds	1
   465     0077                     Lcd_Set_Cursor@z:
   466     0077                     Lcd_Write_String@a:	
   467                           ; 1 bytes @ 0x7
   468                           
   469                           
   470                           ; 1 bytes @ 0x7
   471     0077                     	ds	1
   472     0078                     Lcd_Set_Cursor@y:
   473                           
   474                           ; 1 bytes @ 0x8
   475     0078                     	ds	1
   476     0079                     Lcd_Set_Cursor@temp:
   477                           
   478                           ; 1 bytes @ 0x9
   479     0079                     	ds	1
   480     007A                     ??_main:
   481                           
   482                           ; 1 bytes @ 0xA
   483     007A                     	ds	3
   484                           
   485                           	psect	maintext
   486     0782                     __pmaintext:	
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 45 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : B00/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          3       0       0       0       0
   509 ;;      Totals:         3       0       0       0       0
   510 ;;Total ram usage:        3 bytes
   511 ;; Hardware stack levels required when called: 3
   512 ;; This function calls:
   513 ;;		_Lcd_Clear
   514 ;;		_Lcd_Init
   515 ;;		_Lcd_Set_Cursor
   516 ;;		_Lcd_Write_String
   517 ;;		_setup
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523     0782                     _main:	
   524                           ;psect for function _main
   525                           
   526     0782                     l921:	
   527                           ;incstack = 0
   528                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   529                           
   530                           
   531                           ;main.c: 46:     setup();
   532     0782  120A  118A  2636  120A  118A  	fcall	_setup
   533     0787                     l923:
   534                           
   535                           ;main.c: 47:     TRISD = 0x00;
   536     0787  1683               	bsf	3,5	;RP0=1, select bank1
   537     0788  1303               	bcf	3,6	;RP1=0, select bank1
   538     0789  0188               	clrf	8	;volatile
   539     078A                     l925:
   540                           
   541                           ;main.c: 48:     Lcd_Init();
   542     078A  120A  118A  2725  120A  118A  	fcall	_Lcd_Init
   543     078F                     l927:
   544                           
   545                           ;main.c: 51:   {;main.c: 53:     Lcd_Clear();
   546     078F  120A  118A  2629  120A  118A  	fcall	_Lcd_Clear
   547     0794                     l929:
   548                           
   549                           ;main.c: 54:     Lcd_Set_Cursor(1,1);
   550     0794  01F4               	clrf	Lcd_Set_Cursor@b
   551     0795  0AF4               	incf	Lcd_Set_Cursor@b,f
   552     0796  3001               	movlw	1
   553     0797  120A  118A  26DF  120A  118A  	fcall	_Lcd_Set_Cursor
   554     079C                     l931:
   555                           
   556                           ;main.c: 55:     Lcd_Write_String("ESTADO");
   557     079C  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   558     079D  120A  118A  2685  120A  118A  	fcall	_Lcd_Write_String
   559     07A2                     l933:
   560                           
   561                           ;main.c: 57:     lectura1 = PORTBbits.RB0;
   562     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   563     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   564     07A4  0806               	movf	6,w	;volatile
   565     07A5  3901               	andlw	1
   566     07A6  00FA               	movwf	??_main
   567     07A7  01FB               	clrf	??_main+1
   568     07A8  087A               	movf	??_main,w
   569     07A9  00A2               	movwf	_lectura1
   570     07AA  087B               	movf	??_main+1,w
   571     07AB  00A3               	movwf	_lectura1+1
   572     07AC                     l935:
   573                           
   574                           ;main.c: 58:     lectura2 = PORTBbits.RB1;
   575     07AC  0C06               	rrf	6,w	;volatile
   576     07AD  3901               	andlw	1
   577     07AE  00FA               	movwf	??_main
   578     07AF  01FB               	clrf	??_main+1
   579     07B0  087A               	movf	??_main,w
   580     07B1  00A0               	movwf	_lectura2
   581     07B2  087B               	movf	??_main+1,w
   582     07B3  00A1               	movwf	_lectura2+1
   583     07B4                     l937:
   584                           
   585                           ;main.c: 60:     if (lectura1 == 0){
   586     07B4  0822               	movf	_lectura1,w
   587     07B5  0423               	iorwf	_lectura1+1,w
   588     07B6  1D03               	btfss	3,2
   589     07B7  2FB9               	goto	u231
   590     07B8  2FBA               	goto	u230
   591     07B9                     u231:
   592     07B9  2FCD               	goto	l945
   593     07BA                     u230:
   594     07BA                     l939:
   595                           
   596                           ;main.c: 61:         estado = 1;
   597     07BA  3001               	movlw	1
   598     07BB  00A4               	movwf	_estado
   599     07BC  3000               	movlw	0
   600     07BD  00A5               	movwf	_estado+1
   601     07BE                     l941:
   602                           
   603                           ;main.c: 62:        Lcd_Set_Cursor(2,1);
   604     07BE  01F4               	clrf	Lcd_Set_Cursor@b
   605     07BF  0AF4               	incf	Lcd_Set_Cursor@b,f
   606     07C0  3002               	movlw	2
   607     07C1  120A  118A  26DF  120A  118A  	fcall	_Lcd_Set_Cursor
   608     07C6                     l943:
   609                           
   610                           ;main.c: 63:        Lcd_Write_String("ENCENDIDO");
   611     07C6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   612     07C7  120A  118A  2685  120A  118A  	fcall	_Lcd_Write_String
   613                           
   614                           ;main.c: 64:     }
   615     07CC  2FE3               	goto	l953
   616     07CD                     l945:
   617     07CD  0322               	decf	_lectura1,w
   618     07CE  0423               	iorwf	_lectura1+1,w
   619     07CF  1D03               	btfss	3,2
   620     07D0  2FD2               	goto	u241
   621     07D1  2FD3               	goto	u240
   622     07D2                     u241:
   623     07D2  2FE3               	goto	l953
   624     07D3                     u240:
   625     07D3                     l947:
   626                           
   627                           ;main.c: 66:         estado = 0;
   628     07D3  01A4               	clrf	_estado
   629     07D4  01A5               	clrf	_estado+1
   630     07D5                     l949:
   631                           
   632                           ;main.c: 67:         Lcd_Set_Cursor(2,1);
   633     07D5  01F4               	clrf	Lcd_Set_Cursor@b
   634     07D6  0AF4               	incf	Lcd_Set_Cursor@b,f
   635     07D7  3002               	movlw	2
   636     07D8  120A  118A  26DF  120A  118A  	fcall	_Lcd_Set_Cursor
   637     07DD                     l951:
   638                           
   639                           ;main.c: 68:         Lcd_Write_String("APAGADO");
   640     07DD  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   641     07DE  120A  118A  2685  120A  118A  	fcall	_Lcd_Write_String
   642     07E3                     l953:
   643                           
   644                           ;main.c: 74:     _delay((unsigned long)((500)*(8000000/4000.0)));
   645     07E3  3006               	movlw	6
   646     07E4  00FC               	movwf	??_main+2
   647     07E5  3013               	movlw	19
   648     07E6  00FB               	movwf	??_main+1
   649     07E7  30AD               	movlw	173
   650     07E8  00FA               	movwf	??_main
   651     07E9                     u257:
   652     07E9  0BFA               	decfsz	??_main,f
   653     07EA  2FE9               	goto	u257
   654     07EB  0BFB               	decfsz	??_main+1,f
   655     07EC  2FE9               	goto	u257
   656     07ED  0BFC               	decfsz	??_main+2,f
   657     07EE  2FE9               	goto	u257
   658     07EF  2FF0               	nop2
   659     07F0  2F8F               	goto	l927
   660     07F1  120A  118A  2800   	ljmp	start
   661     07F4                     __end_of_main:
   662                           
   663                           	psect	text1
   664     0636                     __ptext1:	
   665 ;; *************** function _setup *****************
   666 ;; Defined at:
   667 ;;		line 80 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694     0636                     _setup:	
   695                           ;psect for function _setup
   696                           
   697     0636                     l867:	
   698                           ;incstack = 0
   699                           ; Regs used in _setup: [wreg+status,2+status,0]
   700                           
   701                           
   702                           ;main.c: 81:     ANSEL = 0;
   703     0636  1683               	bsf	3,5	;RP0=1, select bank3
   704     0637  1703               	bsf	3,6	;RP1=1, select bank3
   705     0638  0188               	clrf	8	;volatile
   706                           
   707                           ;main.c: 82:     ANSELH = 0;
   708     0639  0189               	clrf	9	;volatile
   709     063A                     l869:
   710                           
   711                           ;main.c: 83:     TRISB = 0b00000011;
   712     063A  3003               	movlw	3
   713     063B  1683               	bsf	3,5	;RP0=1, select bank1
   714     063C  1303               	bcf	3,6	;RP1=0, select bank1
   715     063D  0086               	movwf	6	;volatile
   716     063E                     l871:
   717                           
   718                           ;main.c: 84:     TRISD = 0;
   719     063E  0188               	clrf	8	;volatile
   720     063F                     l873:
   721                           
   722                           ;main.c: 85:     PORTD = 0;
   723     063F  1283               	bcf	3,5	;RP0=0, select bank0
   724     0640  1303               	bcf	3,6	;RP1=0, select bank0
   725     0641  0188               	clrf	8	;volatile
   726     0642                     l875:
   727                           
   728                           ;main.c: 86:     PORTB = 0;
   729     0642  0186               	clrf	6	;volatile
   730     0643                     l877:
   731                           
   732                           ;main.c: 87:     OSCCONbits.IRCF = 0b111;
   733     0643  3070               	movlw	112
   734     0644  1683               	bsf	3,5	;RP0=1, select bank1
   735     0645  1303               	bcf	3,6	;RP1=0, select bank1
   736     0646  048F               	iorwf	15,f	;volatile
   737     0647                     l879:
   738                           
   739                           ;main.c: 88:     OSCCONbits.SCS = 1;
   740     0647  140F               	bsf	15,0	;volatile
   741     0648                     l48:
   742     0648  0008               	return
   743     0649                     __end_of_setup:
   744                           
   745                           	psect	text2
   746     0685                     __ptext2:	
   747 ;; *************** function _Lcd_Write_String *****************
   748 ;; Defined at:
   749 ;;		line 98 in file "LCD.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  a               1    wreg     PTR unsigned char 
   752 ;;		 -> STR_3(8), STR_2(10), STR_1(7), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  a               1    7[COMMON] PTR unsigned char 
   755 ;;		 -> STR_3(8), STR_2(10), STR_1(7), 
   756 ;;  i               2    5[COMMON] int 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         3       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         3       0       0       0       0
   770 ;;Total ram usage:        3 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 2
   773 ;; This function calls:
   774 ;;		_Lcd_Write_Char
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780     0685                     _Lcd_Write_String:	
   781                           ;psect for function _Lcd_Write_String
   782                           
   783                           
   784                           ;incstack = 0
   785                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786                           ;Lcd_Write_String@a stored from wreg
   787     0685  00F7               	movwf	Lcd_Write_String@a
   788     0686                     l913:
   789                           
   790                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
   791     0686  01F5               	clrf	Lcd_Write_String@i
   792     0687  01F6               	clrf	Lcd_Write_String@i+1
   793     0688  2E9C               	goto	l919
   794     0689                     l915:
   795                           
   796                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
   797     0689  0875               	movf	Lcd_Write_String@i,w
   798     068A  0777               	addwf	Lcd_Write_String@a,w
   799     068B  0084               	movwf	4
   800     068C  120A  118A  2003  120A  118A  	fcall	stringdir
   801     0691  120A  118A  26AA  120A  118A  	fcall	_Lcd_Write_Char
   802     0696                     l917:
   803     0696  3001               	movlw	1
   804     0697  07F5               	addwf	Lcd_Write_String@i,f
   805     0698  1803               	skipnc
   806     0699  0AF6               	incf	Lcd_Write_String@i+1,f
   807     069A  3000               	movlw	0
   808     069B  07F6               	addwf	Lcd_Write_String@i+1,f
   809     069C                     l919:
   810     069C  0875               	movf	Lcd_Write_String@i,w
   811     069D  0777               	addwf	Lcd_Write_String@a,w
   812     069E  0084               	movwf	4
   813     069F  120A  118A  2003  120A  118A  	fcall	stringdir
   814     06A4  3A00               	xorlw	0
   815     06A5  1D03               	skipz
   816     06A6  2EA8               	goto	u221
   817     06A7  2EA9               	goto	u220
   818     06A8                     u221:
   819     06A8  2E89               	goto	l915
   820     06A9                     u220:
   821     06A9                     l97:
   822     06A9  0008               	return
   823     06AA                     __end_of_Lcd_Write_String:
   824                           
   825                           	psect	text3
   826     06AA                     __ptext3:	
   827 ;; *************** function _Lcd_Write_Char *****************
   828 ;; Defined at:
   829 ;;		line 83 in file "LCD.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  a               1    wreg     unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  a               1    4[COMMON] unsigned char 
   834 ;;  y               1    3[COMMON] unsigned char 
   835 ;;  temp            1    2[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         3       0       0       0       0
   847 ;;      Temps:          1       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 1
   852 ;; This function calls:
   853 ;;		_Lcd_Port
   854 ;; This function is called by:
   855 ;;		_Lcd_Write_String
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859     06AA                     _Lcd_Write_Char:	
   860                           ;psect for function _Lcd_Write_Char
   861                           
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   865                           ;Lcd_Write_Char@a stored from wreg
   866     06AA  00F4               	movwf	Lcd_Write_Char@a
   867     06AB                     l847:
   868                           
   869                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
   870     06AB  0874               	movf	Lcd_Write_Char@a,w
   871     06AC  390F               	andlw	15
   872     06AD  00F2               	movwf	Lcd_Write_Char@temp
   873                           
   874                           ;LCD.c: 86:     y = a & 0xF0;
   875     06AE  0874               	movf	Lcd_Write_Char@a,w
   876     06AF  39F0               	andlw	240
   877     06B0  00F3               	movwf	Lcd_Write_Char@y
   878     06B1                     l849:
   879                           
   880                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
   881     06B1  1283               	bcf	3,5	;RP0=0, select bank0
   882     06B2  1303               	bcf	3,6	;RP1=0, select bank0
   883     06B3  1508               	bsf	8,2	;volatile
   884     06B4                     l851:
   885                           
   886                           ;LCD.c: 88:     Lcd_Port(y >> 4);
   887     06B4  0873               	movf	Lcd_Write_Char@y,w
   888     06B5  00F1               	movwf	??_Lcd_Write_Char
   889     06B6  3004               	movlw	4
   890     06B7                     u175:
   891     06B7  1003               	clrc
   892     06B8  0CF1               	rrf	??_Lcd_Write_Char,f
   893     06B9  3EFF               	addlw	-1
   894     06BA  1D03               	skipz
   895     06BB  2EB7               	goto	u175
   896     06BC  0871               	movf	??_Lcd_Write_Char,w
   897     06BD  120A  118A  2663  120A  118A  	fcall	_Lcd_Port
   898     06C2                     l853:
   899                           
   900                           ;LCD.c: 89:     RD3 = 1;
   901     06C2  1283               	bcf	3,5	;RP0=0, select bank0
   902     06C3  1303               	bcf	3,6	;RP1=0, select bank0
   903     06C4  1588               	bsf	8,3	;volatile
   904     06C5                     l855:
   905                           
   906                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   907     06C5  301A               	movlw	26
   908     06C6  00F1               	movwf	??_Lcd_Write_Char
   909     06C7                     u267:
   910     06C7  0BF1               	decfsz	??_Lcd_Write_Char,f
   911     06C8  2EC7               	goto	u267
   912     06C9  0000               	nop
   913     06CA                     l857:
   914                           
   915                           ;LCD.c: 91:     RD3 = 0;
   916     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   917     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   918     06CC  1188               	bcf	8,3	;volatile
   919     06CD                     l859:
   920                           
   921                           ;LCD.c: 92:     Lcd_Port(temp);
   922     06CD  0872               	movf	Lcd_Write_Char@temp,w
   923     06CE  120A  118A  2663  120A  118A  	fcall	_Lcd_Port
   924     06D3                     l861:
   925                           
   926                           ;LCD.c: 93:     RD3 = 1;
   927     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   928     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   929     06D5  1588               	bsf	8,3	;volatile
   930     06D6                     l863:
   931                           
   932                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   933     06D6  301A               	movlw	26
   934     06D7  00F1               	movwf	??_Lcd_Write_Char
   935     06D8                     u277:
   936     06D8  0BF1               	decfsz	??_Lcd_Write_Char,f
   937     06D9  2ED8               	goto	u277
   938     06DA  0000               	nop
   939     06DB                     l865:
   940                           
   941                           ;LCD.c: 95:     RD3 = 0;
   942     06DB  1283               	bcf	3,5	;RP0=0, select bank0
   943     06DC  1303               	bcf	3,6	;RP1=0, select bank0
   944     06DD  1188               	bcf	8,3	;volatile
   945     06DE                     l91:
   946     06DE  0008               	return
   947     06DF                     __end_of_Lcd_Write_Char:
   948                           
   949                           	psect	text4
   950     06DF                     __ptext4:	
   951 ;; *************** function _Lcd_Set_Cursor *****************
   952 ;; Defined at:
   953 ;;		line 48 in file "LCD.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  a               1    wreg     unsigned char 
   956 ;;  b               1    4[COMMON] unsigned char 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  a               1    6[COMMON] unsigned char 
   959 ;;  temp            1    9[COMMON] unsigned char 
   960 ;;  y               1    8[COMMON] unsigned char 
   961 ;;  z               1    7[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         1       0       0       0       0
   972 ;;      Locals:         4       0       0       0       0
   973 ;;      Temps:          1       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 2
   978 ;; This function calls:
   979 ;;		_Lcd_Cmd
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     06DF                     _Lcd_Set_Cursor:	
   986                           ;psect for function _Lcd_Set_Cursor
   987                           
   988                           
   989                           ;incstack = 0
   990                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   991                           ;Lcd_Set_Cursor@a stored from wreg
   992     06DF  00F6               	movwf	Lcd_Set_Cursor@a
   993     06E0                     l893:
   994                           
   995                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
   996     06E0  0376               	decf	Lcd_Set_Cursor@a,w
   997     06E1  1D03               	btfss	3,2
   998     06E2  2EE4               	goto	u181
   999     06E3  2EE5               	goto	u180
  1000     06E4                     u181:
  1001     06E4  2F02               	goto	l903
  1002     06E5                     u180:
  1003     06E5                     l895:
  1004                           
  1005                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1006     06E5  0874               	movf	Lcd_Set_Cursor@b,w
  1007     06E6  3E7F               	addlw	127
  1008     06E7  00F9               	movwf	Lcd_Set_Cursor@temp
  1009                           
  1010                           ;LCD.c: 52:         z = temp >> 4;
  1011     06E8  0879               	movf	Lcd_Set_Cursor@temp,w
  1012     06E9  00F5               	movwf	??_Lcd_Set_Cursor
  1013     06EA  3004               	movlw	4
  1014     06EB                     u195:
  1015     06EB  1003               	clrc
  1016     06EC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1017     06ED  3EFF               	addlw	-1
  1018     06EE  1D03               	skipz
  1019     06EF  2EEB               	goto	u195
  1020     06F0  0875               	movf	??_Lcd_Set_Cursor,w
  1021     06F1  00F7               	movwf	Lcd_Set_Cursor@z
  1022     06F2                     l897:
  1023                           
  1024                           ;LCD.c: 53:         y = temp & 0x0F;
  1025     06F2  0879               	movf	Lcd_Set_Cursor@temp,w
  1026     06F3  390F               	andlw	15
  1027     06F4  00F8               	movwf	Lcd_Set_Cursor@y
  1028     06F5                     l899:
  1029                           
  1030                           ;LCD.c: 54:         Lcd_Cmd(z);
  1031     06F5  0877               	movf	Lcd_Set_Cursor@z,w
  1032     06F6  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1033     06FB                     l901:
  1034                           
  1035                           ;LCD.c: 55:         Lcd_Cmd(y);
  1036     06FB  0878               	movf	Lcd_Set_Cursor@y,w
  1037     06FC  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1038                           
  1039                           ;LCD.c: 56:     } else if (a == 2) {
  1040     0701  2F24               	goto	l85
  1041     0702                     l903:
  1042     0702  3002               	movlw	2
  1043     0703  0676               	xorwf	Lcd_Set_Cursor@a,w
  1044     0704  1D03               	btfss	3,2
  1045     0705  2F07               	goto	u201
  1046     0706  2F08               	goto	u200
  1047     0707                     u201:
  1048     0707  2F24               	goto	l85
  1049     0708                     u200:
  1050     0708                     l905:
  1051                           
  1052                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1053     0708  0874               	movf	Lcd_Set_Cursor@b,w
  1054     0709  3EBF               	addlw	191
  1055     070A  00F9               	movwf	Lcd_Set_Cursor@temp
  1056                           
  1057                           ;LCD.c: 58:         z = temp >> 4;
  1058     070B  0879               	movf	Lcd_Set_Cursor@temp,w
  1059     070C  00F5               	movwf	??_Lcd_Set_Cursor
  1060     070D  3004               	movlw	4
  1061     070E                     u215:
  1062     070E  1003               	clrc
  1063     070F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1064     0710  3EFF               	addlw	-1
  1065     0711  1D03               	skipz
  1066     0712  2F0E               	goto	u215
  1067     0713  0875               	movf	??_Lcd_Set_Cursor,w
  1068     0714  00F7               	movwf	Lcd_Set_Cursor@z
  1069     0715                     l907:
  1070                           
  1071                           ;LCD.c: 59:         y = temp & 0x0F;
  1072     0715  0879               	movf	Lcd_Set_Cursor@temp,w
  1073     0716  390F               	andlw	15
  1074     0717  00F8               	movwf	Lcd_Set_Cursor@y
  1075     0718                     l909:
  1076                           
  1077                           ;LCD.c: 60:         Lcd_Cmd(z);
  1078     0718  0877               	movf	Lcd_Set_Cursor@z,w
  1079     0719  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1080     071E                     l911:
  1081                           
  1082                           ;LCD.c: 61:         Lcd_Cmd(y);
  1083     071E  0878               	movf	Lcd_Set_Cursor@y,w
  1084     071F  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1085     0724                     l85:
  1086     0724  0008               	return
  1087     0725                     __end_of_Lcd_Set_Cursor:
  1088                           
  1089                           	psect	text5
  1090     0725                     __ptext5:	
  1091 ;; *************** function _Lcd_Init *****************
  1092 ;; Defined at:
  1093 ;;		line 65 in file "LCD.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          2       0       0       0       0
  1110 ;;      Totals:         2       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 2
  1114 ;; This function calls:
  1115 ;;		_Lcd_Cmd
  1116 ;;		_Lcd_Port
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122     0725                     _Lcd_Init:	
  1123                           ;psect for function _Lcd_Init
  1124                           
  1125     0725                     l881:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1128                           
  1129                           
  1130                           ;LCD.c: 66:     Lcd_Port(0x00);
  1131     0725  3000               	movlw	0
  1132     0726  120A  118A  2663  120A  118A  	fcall	_Lcd_Port
  1133     072B                     l883:
  1134                           
  1135                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1136     072B  3034               	movlw	52
  1137     072C  00F5               	movwf	??_Lcd_Init+1
  1138     072D  30F1               	movlw	241
  1139     072E  00F4               	movwf	??_Lcd_Init
  1140     072F                     u287:
  1141     072F  0BF4               	decfsz	??_Lcd_Init,f
  1142     0730  2F2F               	goto	u287
  1143     0731  0BF5               	decfsz	??_Lcd_Init+1,f
  1144     0732  2F2F               	goto	u287
  1145     0733  2F34               	nop2
  1146     0734                     l885:
  1147                           
  1148                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1149     0734  3003               	movlw	3
  1150     0735  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1151                           
  1152                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1153     073A  300D               	movlw	13
  1154     073B  00F5               	movwf	??_Lcd_Init+1
  1155     073C  30FB               	movlw	251
  1156     073D  00F4               	movwf	??_Lcd_Init
  1157     073E                     u297:
  1158     073E  0BF4               	decfsz	??_Lcd_Init,f
  1159     073F  2F3E               	goto	u297
  1160     0740  0BF5               	decfsz	??_Lcd_Init+1,f
  1161     0741  2F3E               	goto	u297
  1162     0742  2F43               	nop2
  1163     0743                     l887:
  1164                           
  1165                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1166     0743  3003               	movlw	3
  1167     0744  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1168     0749                     l889:
  1169                           
  1170                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1171     0749  301D               	movlw	29
  1172     074A  00F5               	movwf	??_Lcd_Init+1
  1173     074B  3091               	movlw	145
  1174     074C  00F4               	movwf	??_Lcd_Init
  1175     074D                     u307:
  1176     074D  0BF4               	decfsz	??_Lcd_Init,f
  1177     074E  2F4D               	goto	u307
  1178     074F  0BF5               	decfsz	??_Lcd_Init+1,f
  1179     0750  2F4D               	goto	u307
  1180                           
  1181                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1182     0751  3003               	movlw	3
  1183     0752  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1184                           
  1185                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1186     0757  3002               	movlw	2
  1187     0758  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1188                           
  1189                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1190     075D  3002               	movlw	2
  1191     075E  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1192                           
  1193                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1194     0763  3008               	movlw	8
  1195     0764  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1196                           
  1197                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1198     0769  3000               	movlw	0
  1199     076A  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1200                           
  1201                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1202     076F  300C               	movlw	12
  1203     0770  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1204                           
  1205                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1206     0775  3000               	movlw	0
  1207     0776  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1208                           
  1209                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1210     077B  3006               	movlw	6
  1211     077C  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1212     0781                     l88:
  1213     0781  0008               	return
  1214     0782                     __end_of_Lcd_Init:
  1215                           
  1216                           	psect	text6
  1217     0629                     __ptext6:	
  1218 ;; *************** function _Lcd_Clear *****************
  1219 ;; Defined at:
  1220 ;;		line 43 in file "LCD.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 2
  1241 ;; This function calls:
  1242 ;;		_Lcd_Cmd
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248     0629                     _Lcd_Clear:	
  1249                           ;psect for function _Lcd_Clear
  1250                           
  1251     0629                     l891:	
  1252                           ;incstack = 0
  1253                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1254                           
  1255                           
  1256                           ;LCD.c: 44:     Lcd_Cmd(0);
  1257     0629  3000               	movlw	0
  1258     062A  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1259                           
  1260                           ;LCD.c: 45:     Lcd_Cmd(1);
  1261     062F  3001               	movlw	1
  1262     0630  120A  118A  2649  120A  118A  	fcall	_Lcd_Cmd
  1263     0635                     l79:
  1264     0635  0008               	return
  1265     0636                     __end_of_Lcd_Clear:
  1266                           
  1267                           	psect	text7
  1268     0649                     __ptext7:	
  1269 ;; *************** function _Lcd_Cmd *****************
  1270 ;; Defined at:
  1271 ;;		line 35 in file "LCD.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  a               1    wreg     unsigned char 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  a               1    3[COMMON] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         0       0       0       0       0
  1286 ;;      Locals:         1       0       0       0       0
  1287 ;;      Temps:          2       0       0       0       0
  1288 ;;      Totals:         3       0       0       0       0
  1289 ;;Total ram usage:        3 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		_Lcd_Port
  1294 ;; This function is called by:
  1295 ;;		_Lcd_Clear
  1296 ;;		_Lcd_Set_Cursor
  1297 ;;		_Lcd_Init
  1298 ;;		_Lcd_Shift_Right
  1299 ;;		_Lcd_Shift_Left
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303     0649                     _Lcd_Cmd:	
  1304                           ;psect for function _Lcd_Cmd
  1305                           
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1309                           ;Lcd_Cmd@a stored from wreg
  1310     0649  00F3               	movwf	Lcd_Cmd@a
  1311     064A                     l837:
  1312                           
  1313                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  1314     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1315     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1316     064C  1108               	bcf	8,2	;volatile
  1317     064D                     l839:
  1318                           
  1319                           ;LCD.c: 37:     Lcd_Port(a);
  1320     064D  0873               	movf	Lcd_Cmd@a,w
  1321     064E  120A  118A  2663  120A  118A  	fcall	_Lcd_Port
  1322     0653                     l841:
  1323                           
  1324                           ;LCD.c: 38:     RD3 = 1;
  1325     0653  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0654  1303               	bcf	3,6	;RP1=0, select bank0
  1327     0655  1588               	bsf	8,3	;volatile
  1328     0656                     l843:
  1329                           
  1330                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1331     0656  300B               	movlw	11
  1332     0657  00F2               	movwf	??_Lcd_Cmd+1
  1333     0658  3062               	movlw	98
  1334     0659  00F1               	movwf	??_Lcd_Cmd
  1335     065A                     u317:
  1336     065A  0BF1               	decfsz	??_Lcd_Cmd,f
  1337     065B  2E5A               	goto	u317
  1338     065C  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1339     065D  2E5A               	goto	u317
  1340     065E  0000               	nop
  1341     065F                     l845:
  1342                           
  1343                           ;LCD.c: 40:     RD3 = 0;
  1344     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0661  1188               	bcf	8,3	;volatile
  1347     0662                     l76:
  1348     0662  0008               	return
  1349     0663                     __end_of_Lcd_Cmd:
  1350                           
  1351                           	psect	text8
  1352     0663                     __ptext8:	
  1353 ;; *************** function _Lcd_Port *****************
  1354 ;; Defined at:
  1355 ;;		line 13 in file "LCD.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  a               1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  a               1    0[COMMON] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         1       0       0       0       0
  1373 ;;Total ram usage:        1 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_Lcd_Cmd
  1379 ;;		_Lcd_Init
  1380 ;;		_Lcd_Write_Char
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     0663                     _Lcd_Port:	
  1385                           ;psect for function _Lcd_Port
  1386                           
  1387                           
  1388                           ;incstack = 0
  1389                           ; Regs used in _Lcd_Port: [wreg]
  1390                           ;Lcd_Port@a stored from wreg
  1391     0663  00F0               	movwf	Lcd_Port@a
  1392     0664                     l827:
  1393                           
  1394                           ;LCD.c: 14:     if (a & 1)
  1395     0664  1C70               	btfss	Lcd_Port@a,0
  1396     0665  2E67               	goto	u131
  1397     0666  2E68               	goto	u130
  1398     0667                     u131:
  1399     0667  2E6C               	goto	l65
  1400     0668                     u130:
  1401     0668                     l829:
  1402                           
  1403                           ;LCD.c: 15:         RD4 = 1;
  1404     0668  1283               	bcf	3,5	;RP0=0, select bank0
  1405     0669  1303               	bcf	3,6	;RP1=0, select bank0
  1406     066A  1608               	bsf	8,4	;volatile
  1407     066B  2E6F               	goto	l66
  1408     066C                     l65:	
  1409                           ;LCD.c: 16:     else
  1410                           
  1411                           
  1412                           ;LCD.c: 17:         RD4 = 0;
  1413     066C  1283               	bcf	3,5	;RP0=0, select bank0
  1414     066D  1303               	bcf	3,6	;RP1=0, select bank0
  1415     066E  1208               	bcf	8,4	;volatile
  1416     066F                     l66:
  1417                           
  1418                           ;LCD.c: 19:     if (a & 2)
  1419     066F  1CF0               	btfss	Lcd_Port@a,1
  1420     0670  2E72               	goto	u141
  1421     0671  2E73               	goto	u140
  1422     0672                     u141:
  1423     0672  2E75               	goto	l67
  1424     0673                     u140:
  1425     0673                     l831:
  1426                           
  1427                           ;LCD.c: 20:         RD5 = 1;
  1428     0673  1688               	bsf	8,5	;volatile
  1429     0674  2E76               	goto	l68
  1430     0675                     l67:	
  1431                           ;LCD.c: 21:     else
  1432                           
  1433                           
  1434                           ;LCD.c: 22:         RD5 = 0;
  1435     0675  1288               	bcf	8,5	;volatile
  1436     0676                     l68:
  1437                           
  1438                           ;LCD.c: 24:     if (a & 4)
  1439     0676  1D70               	btfss	Lcd_Port@a,2
  1440     0677  2E79               	goto	u151
  1441     0678  2E7A               	goto	u150
  1442     0679                     u151:
  1443     0679  2E7C               	goto	l69
  1444     067A                     u150:
  1445     067A                     l833:
  1446                           
  1447                           ;LCD.c: 25:         RD6 = 1;
  1448     067A  1708               	bsf	8,6	;volatile
  1449     067B  2E7D               	goto	l70
  1450     067C                     l69:	
  1451                           ;LCD.c: 26:     else
  1452                           
  1453                           
  1454                           ;LCD.c: 27:         RD6 = 0;
  1455     067C  1308               	bcf	8,6	;volatile
  1456     067D                     l70:
  1457                           
  1458                           ;LCD.c: 29:     if (a & 8)
  1459     067D  1DF0               	btfss	Lcd_Port@a,3
  1460     067E  2E80               	goto	u161
  1461     067F  2E81               	goto	u160
  1462     0680                     u161:
  1463     0680  2E83               	goto	l71
  1464     0681                     u160:
  1465     0681                     l835:
  1466                           
  1467                           ;LCD.c: 30:         RD7 = 1;
  1468     0681  1788               	bsf	8,7	;volatile
  1469     0682  2E84               	goto	l73
  1470     0683                     l71:	
  1471                           ;LCD.c: 31:     else
  1472                           
  1473                           
  1474                           ;LCD.c: 32:         RD7 = 0;
  1475     0683  1388               	bcf	8,7	;volatile
  1476     0684                     l73:
  1477     0684  0008               	return
  1478     0685                     __end_of_Lcd_Port:
  1479     007E                     btemp	set	126	;btemp
  1480     007E                     wtemp0	set	126
  1481                           
  1482                           	psect	idloc
  1483                           
  1484                           ;Config register IDLOC0 @ 0x2000
  1485                           ;	unspecified, using default values
  1486     2000                     	org	8192
  1487     2000  3FFF               	dw	16383
  1488                           
  1489                           ;Config register IDLOC1 @ 0x2001
  1490                           ;	unspecified, using default values
  1491     2001                     	org	8193
  1492     2001  3FFF               	dw	16383
  1493                           
  1494                           ;Config register IDLOC2 @ 0x2002
  1495                           ;	unspecified, using default values
  1496     2002                     	org	8194
  1497     2002  3FFF               	dw	16383
  1498                           
  1499                           ;Config register IDLOC3 @ 0x2003
  1500                           ;	unspecified, using default values
  1501     2003                     	org	8195
  1502     2003  3FFF               	dw	16383
  1503                           
  1504                           	psect	config
  1505                           
  1506                           ;Config register CONFIG1 @ 0x2007
  1507                           ;	Oscillator Selection bits
  1508                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1509                           ;	Watchdog Timer Enable bit
  1510                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1511                           ;	Power-up Timer Enable bit
  1512                           ;	PWRTE = OFF, PWRT disabled
  1513                           ;	RE3/MCLR pin function select bit
  1514                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1515                           ;	Code Protection bit
  1516                           ;	CP = OFF, Program memory code protection is disabled
  1517                           ;	Data Code Protection bit
  1518                           ;	CPD = OFF, Data memory code protection is disabled
  1519                           ;	Brown Out Reset Selection bits
  1520                           ;	BOREN = OFF, BOR disabled
  1521                           ;	Internal External Switchover bit
  1522                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1523                           ;	Fail-Safe Clock Monitor Enabled bit
  1524                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1525                           ;	Low Voltage Programming Enable bit
  1526                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1527                           ;	In-Circuit Debugger Mode bit
  1528                           ;	DEBUG = 0x1, unprogramme  1529     2007                     	org	8199
  1530     2007  20D4               	dw	8404
  1531                           
  1532                           ;Config register CONFIG2 @ 0x2008
  1533                           ;	Brown-out Reset Selection bit
  1534                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1535                           ;	Flash Program Memory Self Write Enable bits
  1536                           ;	WRT = OFF, Write protection off
  1537     2008                     	org	8200
  1538     2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[8]), STR_2(CODE[10]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1283
                                             10 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 23:06:54 2023

                       pc 0002                        l70 067D                        l71 0683  
                      l48 0648                        l73 0684                        l65 066C  
                      l66 066F                        l67 0675                        l91 06DE  
                      l68 0676                        l76 0662                        l69 067C  
                      l85 0724                        l79 0635                        l88 0781  
                      l97 06A9                        fsr 0004                       l901 06FB  
                     l831 0673                       l911 071E                       l903 0702  
                     l833 067A                       l841 0653                       l905 0708  
                     l913 0686                       l921 0782                       l835 0681  
                     l827 0664                       l843 0656                       l907 0715  
                     l851 06B4                       l915 0689                       l931 079C  
                     l923 0787                       l829 0668                       l845 065F  
                     l837 064A                       l909 0718                       l861 06D3  
                     l853 06C2                       l917 0696                       l941 07BE  
                     l933 07A2                       l925 078A                       l839 064D  
                     l863 06D6                       l855 06C5                       l847 06AB  
                     l919 069C                       l871 063E                       l951 07DD  
                     l943 07C6                       l935 07AC                       l927 078F  
                     l881 0725                       l865 06DB                       l857 06CA  
                     l849 06B1                       l873 063F                       l953 07E3  
                     l945 07CD                       l937 07B4                       l929 0794  
                     l891 0629                       l883 072B                       l859 06CD  
                     l875 0642                       l867 0636                       l947 07D3  
                     l939 07BA                       l885 0734                       l893 06E0  
                     l877 0643                       l869 063A                       l949 07D5  
                     l887 0743                       l895 06E5                       l879 0647  
                     l889 0749                       l897 06F2                       l899 06F5  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u200 0708  
                     u201 0707                       u130 0668                       u131 0667  
                     u140 0673                       u220 06A9                       u141 0672  
                     u221 06A8                       u150 067A                       u230 07BA  
                     u151 0679                       u215 070E                       u231 07B9  
                     u160 0681                       u240 07D3                       u161 0680  
                     u241 07D2                       u307 074D                       u180 06E5  
                     u317 065A                       u181 06E4                       u175 06B7  
                     u257 07E9                       u195 06EB                       u267 06C7  
                     u277 06D8                       u287 072F                       u297 073E  
                     fsr0 0004                      STR_1 001B                      STR_2 0009  
                    STR_3 0013         ?_Lcd_Write_String 0070                      _main 0782  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 0663                     ?_main 0070                     _ANSEL 0188  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _setup 0636                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 0782  
        __end_of_Lcd_Port 0685           __initialization 07F4              __end_of_main 07F4  
                  ??_main 007A                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _estado 0024           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0636            __pcstackCOMMON 0070  
           __end_of_setup 0649            _Lcd_Set_Cursor 06DF                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0070                __pbssBANK0 0020  
              __pmaintext 0782    __end_of_Lcd_Set_Cursor 0725                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                __stringtab 0003            _Lcd_Write_Char 06AA  
                 _Lcd_Cmd 0649           ?_Lcd_Set_Cursor 0074                   __ptext1 0636  
                 __ptext2 0685                   __ptext3 06AA                   __ptext4 06DF  
                 __ptext5 0725                   __ptext6 0629                   __ptext7 0649  
                 __ptext8 0663    __end_of_Lcd_Write_Char 06DF      end_of_initialization 07FC  
               Lcd_Port@a 0070                 _PORTBbits 0006                 _PORTDbits 0008  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077         Lcd_Write_String@i 0075  
               _Lcd_Clear 0629          _Lcd_Write_String 0685       start_initialization 07F4  
              ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___latbits 0002                  ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0075  
               __pstrings 0003                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 0725  
                _Lcd_Port 0663  __end_of_Lcd_Write_String 06AA        __end_of__stringtab 0009  
                _lectura1 0022                  _lectura2 0020        Lcd_Write_Char@temp 0072  
               stringcode 0003                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                stringdir 0003                  stringtab 0003  
